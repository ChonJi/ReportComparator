<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20190121 11:00:08.396" generator="Robot 3.0.2 (Python 3.5.3 on linux)">
<suite name="Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571" id="s1">
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/update-nad.robot" name="Update-Nad" id="s1-s1">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:00:13.990" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:00:13.985" endtime="20190121 11:00:13.993" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:00:14.004" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:00:14.006" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:00:16.027" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:00:13.996" endtime="20190121 11:00:16.028" status="PASS"></status>
</kw>
<status starttime="20190121 11:00:13.979" endtime="20190121 11:00:16.034" status="PASS"></status>
</kw>
<test name="SKTB-13351 FBUS test" id="s1-s1-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:00:16.065" endtime="20190121 11:00:16.123" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:00:16.130" endtime="20190121 11:00:16.180" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:00:16.183" endtime="20190121 11:00:16.230" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:00:18.238" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:00:16.234" endtime="20190121 11:00:18.241" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:00:18.243" endtime="20190121 11:00:18.294" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:00:18.297" endtime="20190121 11:00:18.344" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>45s</arg>
</arguments>
<msg timestamp="20190121 11:01:03.352" level="INFO">Slept 45 seconds</msg>
<status starttime="20190121 11:00:18.348" endtime="20190121 11:01:03.354" status="PASS"></status>
</kw>
<status starttime="20190121 11:00:16.058" endtime="20190121 11:01:03.361" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:01:03.388" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</msg>
<msg timestamp="20190121 11:01:03.433" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:01:07.718" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:01:07.721" level="INFO">${info} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:01:03.379" endtime="20190121 11:01:07.722" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status starttime="20190121 11:01:07.725" endtime="20190121 11:01:07.733" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:01:07.740" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</msg>
<msg timestamp="20190121 11:01:07.763" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:01:08.705" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:01:08.709" level="INFO">${info} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:01:07.736" endtime="20190121 11:01:08.710" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status starttime="20190121 11:01:08.714" endtime="20190121 11:01:08.721" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:01:08.729" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</msg>
<msg timestamp="20190121 11:01:08.753" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:01:09.645" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:01:09.648" level="INFO">${info} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:01:08.724" endtime="20190121 11:01:09.650" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status starttime="20190121 11:01:09.653" endtime="20190121 11:01:09.661" status="PASS"></status>
</kw>
<status starttime="20190121 11:01:03.364" endtime="20190121 11:01:09.663" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:01:09.673" endtime="20190121 11:01:09.723" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:01:09.730" endtime="20190121 11:01:09.783" status="PASS"></status>
</kw>
<status starttime="20190121 11:01:09.667" endtime="20190121 11:01:09.789" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-update-nad</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status critical="yes" starttime="20190121 11:00:16.037" endtime="20190121 11:01:09.790" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:01:11.542" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:01:11.578" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:01:10.084" endtime="20190121 11:01:11.587" status="PASS"></status>
</kw>
<status starttime="20190121 11:01:09.828" endtime="20190121 11:01:11.589" status="PASS"></status>
</kw>
<status starttime="20190121 11:01:09.815" endtime="20190121 11:01:11.591" status="PASS"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:00:08.850" endtime="20190121 11:01:11.592" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/CI_update_chorus.robot" name="CI update chorus" id="s1-s2">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:01:12.176" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:01:12.167" endtime="20190121 11:01:12.186" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:01:12.212" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:01:12.214" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:01:14.153" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:01:12.189" endtime="20190121 11:01:14.154" status="PASS"></status>
</kw>
<status starttime="20190121 11:01:12.161" endtime="20190121 11:01:14.160" status="PASS"></status>
</kw>
<test name="Ci_update_chorus Chorus SW Flashing" id="s1-s2-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:01:14.194" endtime="20190121 11:01:14.293" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:01:14.303" endtime="20190121 11:01:14.405" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:01:14.431" endtime="20190121 11:01:14.523" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:01:16.547" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:01:14.533" endtime="20190121 11:01:16.549" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:01:16.552" endtime="20190121 11:01:16.597" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status starttime="20190121 11:01:16.601" endtime="20190121 11:01:16.646" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:01:16.649" endtime="20190121 11:01:16.696" status="PASS"></status>
</kw>
<status starttime="20190121 11:01:14.188" endtime="20190121 11:01:16.699" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:01:18.711" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:01:16.707" endtime="20190121 11:01:18.714" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:02:55.335" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:01:18.717" endtime="20190121 11:02:55.337" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:02:55.344" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:02:55.340" endtime="20190121 11:02:55.346" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:02:55.350" endtime="20190121 11:02:55.355" status="PASS"></status>
</kw>
<status starttime="20190121 11:01:16.701" endtime="20190121 11:02:55.357" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:02:55.366" endtime="20190121 11:02:55.413" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:02:55.416" endtime="20190121 11:02:55.463" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:02:55.467" endtime="20190121 11:02:55.513" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:02:55.517" endtime="20190121 11:02:55.565" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:02:55.568" endtime="20190121 11:02:55.614" status="PASS"></status>
</kw>
<status starttime="20190121 11:02:55.360" endtime="20190121 11:02:55.617" status="PASS"></status>
</kw>
<doc>Implements Test Task Ci_update_chorus</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status critical="yes" starttime="20190121 11:01:14.162" endtime="20190121 11:02:55.618" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:02:57.134" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:02:57.168" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:02:55.655" endtime="20190121 11:02:57.177" status="PASS"></status>
</kw>
<status starttime="20190121 11:02:55.633" endtime="20190121 11:02:57.178" status="PASS"></status>
</kw>
<status starttime="20190121 11:02:55.628" endtime="20190121 11:02:57.181" status="PASS"></status>
</kw>
<doc>Serial flashing test fof CI</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:01:11.746" endtime="20190121 11:02:57.181" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-31396.robot" name="SKTB-31396" id="s1-s3">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:02:57.890" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:02:57.876" endtime="20190121 11:02:57.902" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:02:57.945" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:02:57.946" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:03:00.078" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:02:57.922" endtime="20190121 11:03:00.080" status="PASS"></status>
</kw>
<status starttime="20190121 11:02:57.870" endtime="20190121 11:03:00.103" status="PASS"></status>
</kw>
<test name="SKTB-31396 Chorus SW Flashing" id="s1-s3-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:03:00.155" endtime="20190121 11:03:00.247" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:03:00.250" endtime="20190121 11:03:00.389" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:03:00.395" endtime="20190121 11:03:00.491" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:03:02.518" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:03:00.493" endtime="20190121 11:03:02.520" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:03:02.523" endtime="20190121 11:03:02.568" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status starttime="20190121 11:03:02.571" endtime="20190121 11:03:02.617" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:03:02.621" endtime="20190121 11:03:02.667" status="PASS"></status>
</kw>
<status starttime="20190121 11:03:00.124" endtime="20190121 11:03:02.670" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:03:04.683" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:03:02.679" endtime="20190121 11:03:04.685" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:04:30.894" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:03:04.688" endtime="20190121 11:04:30.895" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:04:30.903" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:04:30.898" endtime="20190121 11:04:30.905" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:04:32.912" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:04:30.908" endtime="20190121 11:04:32.914" status="PASS"></status>
</kw>
<status starttime="20190121 11:03:02.673" endtime="20190121 11:04:32.917" status="PASS"></status>
</kw>
<kw name="Step_2">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:04:34.929" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:04:32.924" endtime="20190121 11:04:34.931" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:06:05.725" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:04:34.934" endtime="20190121 11:06:05.726" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:06:05.737" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:06:05.729" endtime="20190121 11:06:05.740" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:06:05.742" endtime="20190121 11:06:05.747" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:06:07.754" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:06:05.750" endtime="20190121 11:06:07.756" status="PASS"></status>
</kw>
<status starttime="20190121 11:04:32.918" endtime="20190121 11:06:07.758" status="PASS"></status>
</kw>
<kw name="Step_3">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:06:09.770" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:06:07.766" endtime="20190121 11:06:09.773" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH_PBL_CORRUPT}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:06:56.010" level="INFO">${RESULT} = Error transferring from pos: 122368</msg>
<status starttime="20190121 11:06:09.776" endtime="20190121 11:06:56.011" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:06:56.018" level="INFO">Error transferring from pos: 122368</msg>
<status starttime="20190121 11:06:56.014" endtime="20190121 11:06:56.021" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Contain">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:06:56.024" endtime="20190121 11:06:56.029" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:06:58.035" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:06:56.031" endtime="20190121 11:06:58.037" status="PASS"></status>
</kw>
<status starttime="20190121 11:06:07.760" endtime="20190121 11:06:58.039" status="PASS"></status>
</kw>
<kw name="Step_4">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:07:00.052" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:06:58.047" endtime="20190121 11:07:00.054" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH_APPL_CORRUPT}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:08:16.909" level="INFO">${RESULT} = Error transferring from pos: 383744</msg>
<status starttime="20190121 11:07:00.057" endtime="20190121 11:08:16.910" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:08:16.919" level="INFO">Error transferring from pos: 383744</msg>
<status starttime="20190121 11:08:16.913" endtime="20190121 11:08:16.921" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Contain">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:08:16.924" endtime="20190121 11:08:16.929" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:08:18.936" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:08:16.931" endtime="20190121 11:08:18.938" status="PASS"></status>
</kw>
<status starttime="20190121 11:06:58.041" endtime="20190121 11:08:18.941" status="PASS"></status>
</kw>
<kw name="Step_5">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:08:20.954" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:08:18.950" endtime="20190121 11:08:20.957" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:09:46.601" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:08:20.959" endtime="20190121 11:09:46.602" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:09:46.609" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:09:46.604" endtime="20190121 11:09:46.611" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:09:46.614" endtime="20190121 11:09:46.619" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:09:48.626" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:09:46.622" endtime="20190121 11:09:48.628" status="PASS"></status>
</kw>
<status starttime="20190121 11:08:18.943" endtime="20190121 11:09:48.630" status="PASS"></status>
</kw>
<kw name="Step_6">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:09:50.642" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:09:48.638" endtime="20190121 11:09:50.644" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:11:19.366" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:09:50.647" endtime="20190121 11:11:19.367" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:11:19.375" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:11:19.371" endtime="20190121 11:11:19.377" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:11:19.380" endtime="20190121 11:11:19.385" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:11:21.391" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:11:19.387" endtime="20190121 11:11:21.394" status="PASS"></status>
</kw>
<status starttime="20190121 11:09:48.632" endtime="20190121 11:11:21.396" status="PASS"></status>
</kw>
<kw name="Step_7">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:11:23.408" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:11:21.403" endtime="20190121 11:11:23.410" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:12:51.201" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:11:23.413" endtime="20190121 11:12:51.202" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:12:51.214" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:12:51.210" endtime="20190121 11:12:51.217" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:12:51.219" endtime="20190121 11:12:51.225" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:12:53.231" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:12:51.227" endtime="20190121 11:12:53.233" status="PASS"></status>
</kw>
<status starttime="20190121 11:11:21.398" endtime="20190121 11:12:53.236" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:12:53.245" endtime="20190121 11:12:53.297" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:12:53.301" endtime="20190121 11:12:53.346" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:12:53.350" endtime="20190121 11:12:53.396" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:12:53.399" endtime="20190121 11:12:53.446" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:12:53.450" endtime="20190121 11:12:53.507" status="PASS"></status>
</kw>
<status starttime="20190121 11:12:53.239" endtime="20190121 11:12:53.513" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-31396</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status critical="yes" starttime="20190121 11:03:00.105" endtime="20190121 11:12:53.515" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:12:55.059" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:12:55.094" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:12:53.576" endtime="20190121 11:12:55.096" status="PASS"></status>
</kw>
<status starttime="20190121 11:12:53.530" endtime="20190121 11:12:55.097" status="PASS"></status>
</kw>
<status starttime="20190121 11:12:53.525" endtime="20190121 11:12:55.099" status="PASS"></status>
</kw>
<doc>Serial flashing test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:02:57.394" endtime="20190121 11:12:55.100" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-31405.robot" name="SKTB-31405" id="s1-s4">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:12:55.696" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:12:55.675" endtime="20190121 11:12:55.723" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:12:55.737" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:12:55.739" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:12:57.821" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:12:55.726" endtime="20190121 11:12:57.823" status="PASS"></status>
</kw>
<status starttime="20190121 11:12:55.670" endtime="20190121 11:12:57.839" status="PASS"></status>
</kw>
<test name="SKTB-31405 GpioAdc testroutine" id="s1-s4-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:12:57.879" endtime="20190121 11:12:57.979" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:12:57.982" endtime="20190121 11:12:58.112" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:12:58.115" endtime="20190121 11:12:58.214" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:00.222" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:12:58.217" endtime="20190121 11:13:00.224" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:13:00.227" endtime="20190121 11:13:00.274" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:01.282" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:00.277" endtime="20190121 11:13:01.284" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:13:01.287" endtime="20190121 11:13:01.334" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:03.343" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:01.338" endtime="20190121 11:13:03.345" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:13:03.348" endtime="20190121 11:13:03.393" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:13:03.396" endtime="20190121 11:13:03.441" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:13:03.444" endtime="20190121 11:13:03.501" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:13:03.506" endtime="20190121 11:13:03.551" status="PASS"></status>
</kw>
<status starttime="20190121 11:12:57.873" endtime="20190121 11:13:03.554" status="PASS"></status>
</kw>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:03.625" level="INFO">${res_dict} = {'request': '41', 'result': '4153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:13:03.563" endtime="20190121 11:13:03.626" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:03.653" level="INFO">${value} = True</msg>
<status starttime="20190121 11:13:03.629" endtime="20190121 11:13:03.653" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:13:03.656" endtime="20190121 11:13:03.662" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:04.672" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:03.665" endtime="20190121 11:13:04.674" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:03.557" endtime="20190121 11:13:04.681" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:04.943" level="INFO">${res_dict} = {'request': '41', 'result': '4153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:13:04.718" endtime="20190121 11:13:04.943" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:05.061" level="INFO">${value} = True</msg>
<status starttime="20190121 11:13:04.954" endtime="20190121 11:13:05.062" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:13:05.065" endtime="20190121 11:13:05.070" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:06.090" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:05.072" endtime="20190121 11:13:06.093" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:04.683" endtime="20190121 11:13:06.095" status="PASS"></status>
</kw>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:13:06.201" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg timestamp="20190121 11:13:06.270" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:13:06.285" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:13:06.287" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:13:06.176" endtime="20190121 11:13:06.288" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:13:06.323" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:13:06.292" endtime="20190121 11:13:06.324" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:13:06.357" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:13:06.359" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status starttime="20190121 11:13:06.327" endtime="20190121 11:13:06.360" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:13:06.398" level="INFO">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:13:06.377" endtime="20190121 11:13:06.398" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:13:06.401" endtime="20190121 11:13:06.420" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190121 11:13:06.438" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:13:06.423" endtime="20190121 11:13:06.441" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:13:06.452" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:13:06.119" endtime="20190121 11:13:06.453" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:06.734" level="INFO">${res_dict} = {'request': '', 'response': 'TS', 'data': '0468781f', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:13:06.456" endtime="20190121 11:13:06.735" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:13:06.751" level="INFO">{'request': '', 'response': 'TS', 'data': '0468781f', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:13:06.738" endtime="20190121 11:13:06.762" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:08.778" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:06.765" endtime="20190121 11:13:08.785" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:08.922" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:13:08.788" endtime="20190121 11:13:08.923" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:13:08.926" endtime="20190121 11:13:08.944" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:06.097" endtime="20190121 11:13:08.947" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:09.105" level="INFO">${res_dict} = {'request': '49', 'result': '4953', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:13:08.982" endtime="20190121 11:13:09.106" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:09.162" level="INFO">${value} = True</msg>
<status starttime="20190121 11:13:09.118" endtime="20190121 11:13:09.163" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:13:09.191" endtime="20190121 11:13:09.196" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:10.226" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:09.218" endtime="20190121 11:13:10.228" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:08.963" endtime="20190121 11:13:10.231" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:10.314" level="INFO">${res_dict} = {'request': '4756', 'result': '475653', 'data': '0201', 'status': True}</msg>
<status starttime="20190121 11:13:10.248" endtime="20190121 11:13:10.314" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:11.322" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:10.318" endtime="20190121 11:13:11.324" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:10.242" endtime="20190121 11:13:11.327" status="PASS"></status>
</kw>
<kw name="Step_gpio_select">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:11.395" level="INFO">${res_dict} = {'request': '53460000006d', 'result': '534653', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:13:11.334" endtime="20190121 11:13:11.395" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:11.424" level="INFO">${value} = True</msg>
<status starttime="20190121 11:13:11.399" endtime="20190121 11:13:11.425" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:13:11.427" endtime="20190121 11:13:11.431" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:11.494" level="INFO">${res_dict} = {'request': '5201', 'result': '520153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:13:11.434" endtime="20190121 11:13:11.495" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:11.522" level="INFO">${value} = True</msg>
<status starttime="20190121 11:13:11.499" endtime="20190121 11:13:11.523" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:13:11.526" endtime="20190121 11:13:11.530" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:12.537" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:11.533" endtime="20190121 11:13:12.539" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:11.329" endtime="20190121 11:13:12.542" status="PASS"></status>
</kw>
<kw name="Step_gpio_write">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:12.624" level="INFO">${res_dict} = {'request': '534600000001', 'result': '1efd54', 'data': '', 'status': False}</msg>
<status starttime="20190121 11:13:12.550" endtime="20190121 11:13:12.625" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:12.651" level="INFO">${value} = False</msg>
<status starttime="20190121 11:13:12.628" endtime="20190121 11:13:12.652" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20190121 11:13:12.663" level="FAIL">'False' should be true.</msg>
<status starttime="20190121 11:13:12.655" endtime="20190121 11:13:12.665" status="FAIL"></status>
</kw>
<status starttime="20190121 11:13:12.544" endtime="20190121 11:13:12.668" status="FAIL"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:12.678" endtime="20190121 11:13:12.725" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:12.728" endtime="20190121 11:13:12.774" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:12.778" endtime="20190121 11:13:12.860" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:14.891" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:12.867" endtime="20190121 11:13:14.894" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:13:14.898" endtime="20190121 11:13:14.947" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:12.672" endtime="20190121 11:13:14.950" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-31405</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status critical="yes" starttime="20190121 11:12:57.841" endtime="20190121 11:13:14.951" status="FAIL">'False' should be true.</status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:13:16.440" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:13:16.465" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:13:14.996" endtime="20190121 11:13:16.490" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:14.969" endtime="20190121 11:13:16.491" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:14.963" endtime="20190121 11:13:16.493" status="PASS"></status>
</kw>
<doc>Chorus GpioAdc testing with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:12:55.246" endtime="20190121 11:13:16.494" status="FAIL"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-33244.robot" name="SKTB-33244" id="s1-s5">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:13:17.211" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:13:17.197" endtime="20190121 11:13:17.237" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:13:17.283" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:13:17.285" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:13:19.513" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:13:17.240" endtime="20190121 11:13:19.515" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:17.191" endtime="20190121 11:13:19.517" status="PASS"></status>
</kw>
<test name="SKTB-33244 Test ADC channels" id="s1-s5-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:19.626" endtime="20190121 11:13:19.714" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:19.721" endtime="20190121 11:13:19.853" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:19.856" endtime="20190121 11:13:19.940" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:21.971" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:19.943" endtime="20190121 11:13:21.974" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:13:21.977" endtime="20190121 11:13:22.026" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:23.034" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:22.030" endtime="20190121 11:13:23.036" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:13:23.039" endtime="20190121 11:13:23.086" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:25.121" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:23.089" endtime="20190121 11:13:25.128" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:13:25.131" endtime="20190121 11:13:25.268" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:13:25.277" endtime="20190121 11:13:25.395" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:13:25.398" endtime="20190121 11:13:25.478" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:13:25.481" endtime="20190121 11:13:25.574" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:19.598" endtime="20190121 11:13:25.577" status="PASS"></status>
</kw>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:25.730" level="INFO">${res_dict} = {'request': '41', 'result': '4153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:13:25.595" endtime="20190121 11:13:25.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:25.807" level="INFO">${value} = True</msg>
<status starttime="20190121 11:13:25.734" endtime="20190121 11:13:25.807" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:13:25.811" endtime="20190121 11:13:25.850" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:26.888" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:25.852" endtime="20190121 11:13:26.890" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:25.580" endtime="20190121 11:13:26.897" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:27.083" level="INFO">${res_dict} = {'request': '41', 'result': '4153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:13:26.919" endtime="20190121 11:13:27.084" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:27.210" level="INFO">${value} = True</msg>
<status starttime="20190121 11:13:27.091" endtime="20190121 11:13:27.211" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:13:27.215" endtime="20190121 11:13:27.231" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:28.245" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:27.238" endtime="20190121 11:13:28.247" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:26.900" endtime="20190121 11:13:28.250" status="PASS"></status>
</kw>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:13:28.343" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg timestamp="20190121 11:13:28.400" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:13:28.427" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:13:28.434" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:13:28.299" endtime="20190121 11:13:28.435" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:13:28.471" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:13:28.451" endtime="20190121 11:13:28.471" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:13:28.499" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:13:28.501" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status starttime="20190121 11:13:28.475" endtime="20190121 11:13:28.502" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:13:28.519" level="INFO">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:13:28.513" endtime="20190121 11:13:28.519" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:13:28.522" endtime="20190121 11:13:28.547" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190121 11:13:28.561" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:13:28.550" endtime="20190121 11:13:28.563" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:13:28.585" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:13:28.270" endtime="20190121 11:13:28.586" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:28.868" level="INFO">${res_dict} = {'request': '', 'response': 'TS', 'data': '0468781f', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:13:28.589" endtime="20190121 11:13:28.869" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:30.894" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:28.872" endtime="20190121 11:13:30.896" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:30.931" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:13:30.899" endtime="20190121 11:13:30.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:13:30.934" endtime="20190121 11:13:30.940" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:28.252" endtime="20190121 11:13:30.943" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:31.012" level="INFO">${res_dict} = {'request': '49', 'result': '4953', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:13:30.952" endtime="20190121 11:13:31.013" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:31.045" level="INFO">${value} = True</msg>
<status starttime="20190121 11:13:31.016" endtime="20190121 11:13:31.046" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:13:31.049" endtime="20190121 11:13:31.053" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:32.060" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:31.056" endtime="20190121 11:13:32.062" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:30.946" endtime="20190121 11:13:32.065" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:32.137" level="INFO">${res_dict} = {'request': '4756', 'result': '475653', 'data': '0201', 'status': True}</msg>
<status starttime="20190121 11:13:32.073" endtime="20190121 11:13:32.138" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:33.145" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:32.141" endtime="20190121 11:13:33.147" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:32.067" endtime="20190121 11:13:33.150" status="PASS"></status>
</kw>
<kw name="Step_gpio_select">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:33.218" level="INFO">${res_dict} = {'request': '53460000006d', 'result': '534653', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:13:33.158" endtime="20190121 11:13:33.219" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:33.251" level="INFO">${value} = True</msg>
<status starttime="20190121 11:13:33.222" endtime="20190121 11:13:33.252" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:13:33.257" endtime="20190121 11:13:33.261" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:33.325" level="INFO">${res_dict} = {'request': '5201', 'result': '520153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:13:33.264" endtime="20190121 11:13:33.326" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:33.358" level="INFO">${value} = True</msg>
<status starttime="20190121 11:13:33.329" endtime="20190121 11:13:33.359" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:13:33.362" endtime="20190121 11:13:33.366" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:13:34.373" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:33.369" endtime="20190121 11:13:34.376" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:33.151" endtime="20190121 11:13:34.378" status="PASS"></status>
</kw>
<kw name="Step_gpio_write">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:13:34.466" level="INFO">${res_dict} = {'request': '534600000001', 'result': '1efd54', 'data': '', 'status': False}</msg>
<status starttime="20190121 11:13:34.386" endtime="20190121 11:13:34.467" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:13:34.498" level="INFO">${value} = False</msg>
<status starttime="20190121 11:13:34.470" endtime="20190121 11:13:34.499" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20190121 11:13:34.508" level="FAIL">'False' should be true.</msg>
<status starttime="20190121 11:13:34.502" endtime="20190121 11:13:34.509" status="FAIL"></status>
</kw>
<status starttime="20190121 11:13:34.380" endtime="20190121 11:13:34.512" status="FAIL"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:34.523" endtime="20190121 11:13:34.569" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:34.573" endtime="20190121 11:13:34.624" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:34.627" endtime="20190121 11:13:34.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:36.700" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:34.677" endtime="20190121 11:13:36.702" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:13:36.705" endtime="20190121 11:13:36.781" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:34.516" endtime="20190121 11:13:36.783" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-33244</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status critical="yes" starttime="20190121 11:13:19.533" endtime="20190121 11:13:36.785" status="FAIL">'False' should be true.</status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:13:38.444" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:13:38.494" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:13:36.966" endtime="20190121 11:13:38.496" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:36.852" endtime="20190121 11:13:38.497" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:36.846" endtime="20190121 11:13:38.499" status="PASS"></status>
</kw>
<doc>Chorus GpioAdc's test with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:13:16.642" endtime="20190121 11:13:38.504" status="FAIL"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-13351.robot" name="SKTB-13351" id="s1-s6">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:13:39.037" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:13:39.032" endtime="20190121 11:13:39.058" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:13:39.086" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:13:39.088" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:13:41.163" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:13:39.061" endtime="20190121 11:13:41.165" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:39.017" endtime="20190121 11:13:41.177" status="PASS"></status>
</kw>
<test name="SKTB-13351 FBUS test" id="s1-s6-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:41.259" endtime="20190121 11:13:41.346" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:41.381" endtime="20190121 11:13:41.490" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:41.493" endtime="20190121 11:13:41.614" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:43.633" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:41.617" endtime="20190121 11:13:43.635" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:13:43.674" endtime="20190121 11:13:43.774" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:13:43.777" endtime="20190121 11:13:43.963" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:13:43.966" endtime="20190121 11:13:44.105" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:13:44.108" endtime="20190121 11:13:44.203" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:13:44.207" endtime="20190121 11:13:44.314" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status starttime="20190121 11:13:44.317" endtime="20190121 11:13:44.416" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:46.453" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:44.419" endtime="20190121 11:13:46.455" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:41.240" endtime="20190121 11:13:46.458" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${PN_POWER_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:13:46.775" level="INFO">${info} = 1E 14 54 8D 00 08 00 0C 01 01 00 00 01 43 4A DF</msg>
<status starttime="20190121 11:13:46.485" endtime="20190121 11:13:46.780" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:13:46.792" level="INFO">1E 14 54 8D 00 08 00 0C 01 01 00 00 01 43 4A DF</msg>
<status starttime="20190121 11:13:46.783" endtime="20190121 11:13:46.802" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_POWER_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:13:46.805" endtime="20190121 11:13:46.811" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:46.478" endtime="20190121 11:13:46.825" status="PASS"></status>
</kw>
<kw name="Step_2">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${PN_DIAG_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:13:47.129" level="INFO">${info} = 1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 46 4A DC</msg>
<status starttime="20190121 11:13:46.842" endtime="20190121 11:13:47.130" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:13:47.158" level="INFO">1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 46 4A DC</msg>
<status starttime="20190121 11:13:47.133" endtime="20190121 11:13:47.170" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_DIAG_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:13:47.173" endtime="20190121 11:13:47.179" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:46.827" endtime="20190121 11:13:47.198" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:47.218" endtime="20190121 11:13:47.381" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:47.384" endtime="20190121 11:13:47.489" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:47.491" endtime="20190121 11:13:47.574" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:13:49.607" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:47.578" endtime="20190121 11:13:49.609" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:13:49.612" endtime="20190121 11:13:49.659" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:13:49.663" endtime="20190121 11:13:49.707" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:47.201" endtime="20190121 11:13:49.710" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-13351</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status critical="yes" starttime="20190121 11:13:41.179" endtime="20190121 11:13:49.711" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:13:51.205" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:13:51.226" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:13:49.750" endtime="20190121 11:13:51.249" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:49.726" endtime="20190121 11:13:51.250" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:49.721" endtime="20190121 11:13:51.252" status="PASS"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:13:38.635" endtime="20190121 11:13:51.253" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-34994.robot" name="SKTB-34994" id="s1-s7">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:13:51.904" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:13:51.868" endtime="20190121 11:13:51.914" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:13:51.940" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:13:51.942" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:13:54.010" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:13:51.934" endtime="20190121 11:13:54.011" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:51.862" endtime="20190121 11:13:54.021" status="PASS"></status>
</kw>
<test name="SKTB-34994 CAN 3 testing" id="s1-s7-t1">
<kw type="setup" name="Test_precondition">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:13:54.081" level="INFO">"Test_precondition"</msg>
<status starttime="20190121 11:13:54.071" endtime="20190121 11:13:54.099" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:54.107" endtime="20190121 11:13:54.226" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:13:54.229" endtime="20190121 11:13:54.340" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:13:56.364" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:13:54.343" endtime="20190121 11:13:56.366" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:13:56.369" endtime="20190121 11:13:56.415" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:13:57.436" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:13:56.418" endtime="20190121 11:13:57.439" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:13:57.441" endtime="20190121 11:13:57.525" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20190121 11:14:00.542" level="INFO">Slept 3 seconds</msg>
<status starttime="20190121 11:13:57.528" endtime="20190121 11:14:00.544" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>ping ${HOST_IP}</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20190121 11:14:00.566" level="INFO">Starting process:
ping 192.168.1.101</msg>
<status starttime="20190121 11:14:00.547" endtime="20190121 11:14:00.627" status="PASS"></status>
</kw>
<kw name="WAIT_UNTIL_DEVICE_IS_READY">
<doc>Waiting for device to be ready, up to 90 seconds</doc>
<assign>
<var>${status}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Waiting for device to be ready, up to 90 seconds\n</arg>
<arg>console=true</arg>
</arguments>
<msg timestamp="20190121 11:14:00.659" level="INFO">Waiting for device to be ready, up to 90 seconds
</msg>
<status starttime="20190121 11:14:00.655" endtime="20190121 11:14:00.683" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Return Status">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait until keyword succeeds</arg>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:00.767" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:00.812" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:00.909" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:00.917" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:00.729" endtime="20190121 11:14:00.918" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:00.983" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:00.950" endtime="20190121 11:14:00.994" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:01.042" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:00.997" endtime="20190121 11:14:01.043" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:00.709" endtime="20190121 11:14:01.084" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:01.271" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:01.327" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:01.366" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:01.370" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:01.254" endtime="20190121 11:14:01.370" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:01.411" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:01.390" endtime="20190121 11:14:01.412" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:01.430" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:01.415" endtime="20190121 11:14:01.431" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:01.222" endtime="20190121 11:14:01.434" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:01.594" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:01.647" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:01.698" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:01.701" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:01.576" endtime="20190121 11:14:01.702" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:01.776" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:01.749" endtime="20190121 11:14:01.777" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:01.800" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:01.780" endtime="20190121 11:14:01.801" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:01.559" endtime="20190121 11:14:01.825" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:02.014" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:02.074" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:02.101" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:02.104" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:01.973" endtime="20190121 11:14:02.105" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:02.155" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:02.109" endtime="20190121 11:14:02.156" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:02.179" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:02.159" endtime="20190121 11:14:02.180" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:01.952" endtime="20190121 11:14:02.184" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:02.339" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:02.400" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:02.417" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:02.420" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:02.320" endtime="20190121 11:14:02.421" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:02.442" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:02.424" endtime="20190121 11:14:02.443" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:02.473" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:02.454" endtime="20190121 11:14:02.474" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:02.308" endtime="20190121 11:14:02.477" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:02.624" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:02.649" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:02.669" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:02.672" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:02.617" endtime="20190121 11:14:02.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:02.689" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:02.676" endtime="20190121 11:14:02.690" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:02.701" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:02.693" endtime="20190121 11:14:02.702" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:02.609" endtime="20190121 11:14:02.705" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:02.842" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:02.867" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:02.887" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:02.890" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:02.836" endtime="20190121 11:14:02.891" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:02.906" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:02.895" endtime="20190121 11:14:02.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:02.918" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:02.910" endtime="20190121 11:14:02.919" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:02.828" endtime="20190121 11:14:02.922" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:03.062" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:03.087" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:03.107" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:03.110" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:03.056" endtime="20190121 11:14:03.111" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:03.124" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:03.115" endtime="20190121 11:14:03.125" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:03.136" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:03.128" endtime="20190121 11:14:03.137" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:03.045" endtime="20190121 11:14:03.140" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:03.278" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:03.303" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:03.323" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:03.326" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:03.271" endtime="20190121 11:14:03.327" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:03.340" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:03.331" endtime="20190121 11:14:03.341" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:03.352" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:03.344" endtime="20190121 11:14:03.353" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:03.263" endtime="20190121 11:14:03.356" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:03.498" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:03.544" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:03.605" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:03.609" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:03.491" endtime="20190121 11:14:03.610" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:03.641" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:03.613" endtime="20190121 11:14:03.642" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:03.677" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:03.645" endtime="20190121 11:14:03.678" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:03.479" endtime="20190121 11:14:03.701" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:03.839" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:03.865" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:03.885" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:03.888" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:03.832" endtime="20190121 11:14:03.889" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:03.902" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:03.893" endtime="20190121 11:14:03.903" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:03.914" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:03.906" endtime="20190121 11:14:03.915" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:03.824" endtime="20190121 11:14:03.918" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:04.058" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:04.083" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:04.105" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:04.108" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:04.052" endtime="20190121 11:14:04.109" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:04.122" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:04.113" endtime="20190121 11:14:04.123" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:04.134" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:04.126" endtime="20190121 11:14:04.135" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:04.043" endtime="20190121 11:14:04.138" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:04.277" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:04.302" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:04.323" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:04.325" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:04.270" endtime="20190121 11:14:04.326" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:04.339" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:04.330" endtime="20190121 11:14:04.340" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:04.351" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:04.343" endtime="20190121 11:14:04.353" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:04.261" endtime="20190121 11:14:04.356" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:04.494" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:04.538" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:04.558" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:04.561" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:04.487" endtime="20190121 11:14:04.562" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:04.575" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:04.566" endtime="20190121 11:14:04.575" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:04.586" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:04.578" endtime="20190121 11:14:04.588" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:04.479" endtime="20190121 11:14:04.591" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:04.729" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:04.755" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:04.775" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:04.778" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:04.722" endtime="20190121 11:14:04.779" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:04.792" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:04.783" endtime="20190121 11:14:04.793" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:04.804" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:04.796" endtime="20190121 11:14:04.805" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:04.714" endtime="20190121 11:14:04.808" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:04.945" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:04.972" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:04.995" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:04.998" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:04.939" endtime="20190121 11:14:04.999" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:05.014" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:05.003" endtime="20190121 11:14:05.015" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:05.027" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:05.018" endtime="20190121 11:14:05.028" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:04.931" endtime="20190121 11:14:05.031" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:05.169" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:05.194" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:05.214" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:05.217" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:05.162" endtime="20190121 11:14:05.218" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:05.231" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:05.222" endtime="20190121 11:14:05.232" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:05.243" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:05.235" endtime="20190121 11:14:05.244" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:05.154" endtime="20190121 11:14:05.247" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:05.388" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:05.414" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:05.435" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:05.438" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:05.382" endtime="20190121 11:14:05.439" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:05.455" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:05.443" endtime="20190121 11:14:05.456" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:05.467" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:05.459" endtime="20190121 11:14:05.468" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:05.370" endtime="20190121 11:14:05.471" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:05.609" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:05.635" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:05.655" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:05.658" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:05.602" endtime="20190121 11:14:05.659" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:05.672" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:05.663" endtime="20190121 11:14:05.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:05.684" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:05.676" endtime="20190121 11:14:05.685" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:05.595" endtime="20190121 11:14:05.688" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:05.826" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:05.852" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:05.872" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:05.875" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:05.819" endtime="20190121 11:14:05.876" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:05.890" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:05.881" endtime="20190121 11:14:05.891" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:05.902" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:05.894" endtime="20190121 11:14:05.903" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:05.811" endtime="20190121 11:14:05.906" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:06.044" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:06.070" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:06.091" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:06.094" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:06.038" endtime="20190121 11:14:06.095" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:06.109" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:06.100" endtime="20190121 11:14:06.110" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:06.121" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:06.113" endtime="20190121 11:14:06.123" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:06.029" endtime="20190121 11:14:06.126" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:06.293" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:06.327" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:06.347" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:06.350" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:06.275" endtime="20190121 11:14:06.351" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:06.367" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:06.355" endtime="20190121 11:14:06.368" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:06.379" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:06.371" endtime="20190121 11:14:06.381" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:06.254" endtime="20190121 11:14:06.383" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:06.521" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:06.546" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:06.566" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:06.569" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:06.514" endtime="20190121 11:14:06.570" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:06.583" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:06.574" endtime="20190121 11:14:06.584" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:06.595" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:06.587" endtime="20190121 11:14:06.597" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:06.506" endtime="20190121 11:14:06.600" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:06.737" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:06.762" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:06.782" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:06.786" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:06.731" endtime="20190121 11:14:06.786" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:06.799" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:06.790" endtime="20190121 11:14:06.800" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:06.811" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:06.803" endtime="20190121 11:14:06.813" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:06.723" endtime="20190121 11:14:06.816" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:06.954" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:06.979" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:06.999" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:07.003" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:06.947" endtime="20190121 11:14:07.004" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:07.016" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:07.007" endtime="20190121 11:14:07.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:07.028" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:07.020" endtime="20190121 11:14:07.029" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:06.939" endtime="20190121 11:14:07.033" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:07.170" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:07.195" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:07.270" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:07.277" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:07.163" endtime="20190121 11:14:07.313" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:07.361" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:07.321" endtime="20190121 11:14:07.362" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:07.390" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:07.365" endtime="20190121 11:14:07.391" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:07.155" endtime="20190121 11:14:07.394" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:07.532" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:07.557" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:07.579" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:07.583" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:07.525" endtime="20190121 11:14:07.584" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:07.596" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:07.587" endtime="20190121 11:14:07.597" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:07.608" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:07.600" endtime="20190121 11:14:07.610" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:07.517" endtime="20190121 11:14:07.613" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:07.750" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:07.776" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:07.836" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:07.839" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:07.743" endtime="20190121 11:14:07.840" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:07.897" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:07.844" endtime="20190121 11:14:07.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:07.943" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:07.903" endtime="20190121 11:14:07.944" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:07.736" endtime="20190121 11:14:07.959" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:08.097" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:08.123" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:08.143" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:08.146" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:08.090" endtime="20190121 11:14:08.147" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:08.160" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:08.151" endtime="20190121 11:14:08.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:08.171" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:08.164" endtime="20190121 11:14:08.173" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:08.082" endtime="20190121 11:14:08.176" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:08.314" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:08.339" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:08.359" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:08.362" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:08.307" endtime="20190121 11:14:08.363" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:08.381" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:08.367" endtime="20190121 11:14:08.382" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:08.392" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:08.385" endtime="20190121 11:14:08.394" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:08.299" endtime="20190121 11:14:08.397" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:08.534" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:08.559" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:08.579" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:08.582" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:08.527" endtime="20190121 11:14:08.583" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:08.597" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:08.587" endtime="20190121 11:14:08.598" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:08.609" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:08.602" endtime="20190121 11:14:08.611" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:08.520" endtime="20190121 11:14:08.614" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:08.751" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:08.776" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:08.797" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:08.800" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:08.745" endtime="20190121 11:14:08.801" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:08.814" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:08.805" endtime="20190121 11:14:08.815" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:08.826" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:08.818" endtime="20190121 11:14:08.827" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:08.737" endtime="20190121 11:14:08.830" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:08.968" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:08.993" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:09.013" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:09.017" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:08.961" endtime="20190121 11:14:09.018" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:09.031" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:09.022" endtime="20190121 11:14:09.031" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:09.042" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:09.034" endtime="20190121 11:14:09.044" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:08.953" endtime="20190121 11:14:09.046" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:09.184" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:09.209" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:09.229" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:09.233" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:09.177" endtime="20190121 11:14:09.234" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:09.250" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:09.237" endtime="20190121 11:14:09.251" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:09.261" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:09.254" endtime="20190121 11:14:09.263" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:09.170" endtime="20190121 11:14:09.266" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:09.411" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:09.436" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:09.456" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:09.459" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:09.404" endtime="20190121 11:14:09.460" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:09.473" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:09.464" endtime="20190121 11:14:09.474" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:09.485" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:09.477" endtime="20190121 11:14:09.486" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:09.394" endtime="20190121 11:14:09.489" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:09.631" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:09.694" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:09.728" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:09.731" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:09.620" endtime="20190121 11:14:09.732" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:09.751" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:09.736" endtime="20190121 11:14:09.751" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:09.762" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:09.754" endtime="20190121 11:14:09.764" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:09.612" endtime="20190121 11:14:09.767" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:09.904" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:09.929" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:09.949" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:09.952" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:09.898" endtime="20190121 11:14:09.953" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:09.966" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:09.957" endtime="20190121 11:14:09.967" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:09.978" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:09.970" endtime="20190121 11:14:09.979" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:09.890" endtime="20190121 11:14:09.982" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:10.121" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:10.146" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:10.171" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:10.174" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:10.114" endtime="20190121 11:14:10.175" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:10.187" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:10.179" endtime="20190121 11:14:10.188" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:10.199" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:10.191" endtime="20190121 11:14:10.200" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:10.105" endtime="20190121 11:14:10.204" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:10.341" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:10.366" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:10.386" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:10.390" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:10.334" endtime="20190121 11:14:10.391" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:10.404" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:10.395" endtime="20190121 11:14:10.405" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:10.416" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:10.408" endtime="20190121 11:14:10.417" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:10.327" endtime="20190121 11:14:10.420" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:10.558" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:10.583" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:10.604" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:10.607" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:10.551" endtime="20190121 11:14:10.607" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:10.621" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:10.612" endtime="20190121 11:14:10.622" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:10.632" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:10.624" endtime="20190121 11:14:10.634" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:10.543" endtime="20190121 11:14:10.637" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:10.774" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:10.799" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:10.820" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:10.823" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:10.768" endtime="20190121 11:14:10.824" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:10.836" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:10.827" endtime="20190121 11:14:10.837" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:10.849" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:10.841" endtime="20190121 11:14:10.851" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:10.760" endtime="20190121 11:14:10.854" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:10.994" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:11.021" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:11.041" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:11.044" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:10.985" endtime="20190121 11:14:11.045" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:11.058" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:11.049" endtime="20190121 11:14:11.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:11.070" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:11.062" endtime="20190121 11:14:11.071" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:10.977" endtime="20190121 11:14:11.074" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:11.212" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:11.237" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:11.257" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:11.260" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:11.205" endtime="20190121 11:14:11.261" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:11.274" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:11.265" endtime="20190121 11:14:11.275" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:11.286" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:11.278" endtime="20190121 11:14:11.288" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:11.197" endtime="20190121 11:14:11.291" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:11.429" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:11.454" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:11.474" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:11.477" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:11.422" endtime="20190121 11:14:11.478" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:11.491" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:11.482" endtime="20190121 11:14:11.492" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:11.503" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:11.495" endtime="20190121 11:14:11.504" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:11.414" endtime="20190121 11:14:11.507" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:11.645" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:11.670" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:11.690" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:11.693" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:11.638" endtime="20190121 11:14:11.694" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:11.706" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:11.698" endtime="20190121 11:14:11.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:11.718" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:11.710" endtime="20190121 11:14:11.720" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:11.630" endtime="20190121 11:14:11.723" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:11.890" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:11.922" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:11.943" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:11.946" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:11.870" endtime="20190121 11:14:11.946" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:11.959" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:11.950" endtime="20190121 11:14:11.960" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:11.972" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:11.963" endtime="20190121 11:14:11.974" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:11.853" endtime="20190121 11:14:11.976" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:12.116" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:12.141" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:12.161" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:12.164" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:12.109" endtime="20190121 11:14:12.165" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:12.178" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:12.169" endtime="20190121 11:14:12.178" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:12.189" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:12.181" endtime="20190121 11:14:12.191" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:12.100" endtime="20190121 11:14:12.194" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:12.331" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:12.357" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:12.377" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:12.380" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:12.325" endtime="20190121 11:14:12.381" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:12.394" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:12.385" endtime="20190121 11:14:12.395" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:12.406" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:12.398" endtime="20190121 11:14:12.407" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:12.317" endtime="20190121 11:14:12.410" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:12.548" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:12.573" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:12.593" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:12.596" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:12.541" endtime="20190121 11:14:12.597" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:12.610" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:12.601" endtime="20190121 11:14:12.611" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:12.622" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:12.614" endtime="20190121 11:14:12.624" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:12.533" endtime="20190121 11:14:12.627" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:12.768" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:12.794" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:12.814" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:12.817" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:12.758" endtime="20190121 11:14:12.818" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:12.831" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:12.822" endtime="20190121 11:14:12.832" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:12.843" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:12.835" endtime="20190121 11:14:12.844" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:12.750" endtime="20190121 11:14:12.847" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:12.986" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:13.012" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:13.033" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:13.035" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:12.980" endtime="20190121 11:14:13.037" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:13.050" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:13.041" endtime="20190121 11:14:13.050" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:13.061" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:13.053" endtime="20190121 11:14:13.064" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:12.972" endtime="20190121 11:14:13.067" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:13.205" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:13.230" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:13.251" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:13.254" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:13.198" endtime="20190121 11:14:13.255" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:13.268" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:13.259" endtime="20190121 11:14:13.269" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:13.279" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:13.271" endtime="20190121 11:14:13.281" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:13.190" endtime="20190121 11:14:13.284" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:13.422" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:13.447" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:13.467" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:13.470" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:13.415" endtime="20190121 11:14:13.471" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:13.484" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:13.475" endtime="20190121 11:14:13.485" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:13.495" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:13.487" endtime="20190121 11:14:13.496" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:13.407" endtime="20190121 11:14:13.500" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:13.641" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:13.667" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:13.689" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:13.692" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:13.631" endtime="20190121 11:14:13.693" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:13.706" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:13.697" endtime="20190121 11:14:13.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:13.717" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:13.709" endtime="20190121 11:14:13.719" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:13.623" endtime="20190121 11:14:13.723" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:13.860" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:13.886" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:13.906" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:13.909" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:13.854" endtime="20190121 11:14:13.910" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:13.923" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:13.914" endtime="20190121 11:14:13.924" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:13.934" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:13.926" endtime="20190121 11:14:13.935" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:13.846" endtime="20190121 11:14:13.939" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:14.077" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:14.103" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:14.123" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:14.126" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:14.070" endtime="20190121 11:14:14.127" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:14.140" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:14.131" endtime="20190121 11:14:14.141" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:14.151" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:14.144" endtime="20190121 11:14:14.153" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:14.062" endtime="20190121 11:14:14.156" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:14.296" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:14.324" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:14.345" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:14.348" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:14.290" endtime="20190121 11:14:14.349" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:14.362" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:14.353" endtime="20190121 11:14:14.363" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:14.373" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:14.365" endtime="20190121 11:14:14.375" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:14.280" endtime="20190121 11:14:14.378" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:14.519" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:14.545" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:14.564" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:14.567" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:14.509" endtime="20190121 11:14:14.569" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:14.581" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:14.572" endtime="20190121 11:14:14.582" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:14.593" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:14.585" endtime="20190121 11:14:14.595" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:14.501" endtime="20190121 11:14:14.598" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:14.735" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:14.761" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:14.781" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:14.792" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:14.729" endtime="20190121 11:14:14.793" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:14.820" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:14.811" endtime="20190121 11:14:14.821" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:14.845" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:14.836" endtime="20190121 11:14:14.855" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:14.721" endtime="20190121 11:14:14.859" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:14.996" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:15.022" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:15.042" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:15.046" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:14.990" endtime="20190121 11:14:15.047" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:15.061" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:15.051" endtime="20190121 11:14:15.062" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:15.074" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:15.065" endtime="20190121 11:14:15.075" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:14.982" endtime="20190121 11:14:15.079" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:15.216" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:15.242" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:15.262" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:15.265" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:15.210" endtime="20190121 11:14:15.266" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:15.279" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:15.270" endtime="20190121 11:14:15.280" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:15.291" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:15.283" endtime="20190121 11:14:15.293" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:15.202" endtime="20190121 11:14:15.295" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:15.447" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:15.473" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:15.493" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:15.496" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:15.428" endtime="20190121 11:14:15.497" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:15.511" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:15.501" endtime="20190121 11:14:15.512" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:15.523" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:15.515" endtime="20190121 11:14:15.524" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:15.419" endtime="20190121 11:14:15.527" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:15.666" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:15.740" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:15.781" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:15.788" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:15.660" endtime="20190121 11:14:15.790" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:15.859" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:15.824" endtime="20190121 11:14:15.861" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:15.877" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:15.863" endtime="20190121 11:14:15.879" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:15.652" endtime="20190121 11:14:15.882" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:16.043" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:16.094" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:16.161" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:16.167" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:16.037" endtime="20190121 11:14:16.169" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:16.218" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:16.190" endtime="20190121 11:14:16.219" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:16.250" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:16.222" endtime="20190121 11:14:16.252" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:16.029" endtime="20190121 11:14:16.255" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:16.408" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:16.433" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:16.453" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:16.456" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:16.401" endtime="20190121 11:14:16.457" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:16.470" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:16.461" endtime="20190121 11:14:16.470" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:16.481" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:16.473" endtime="20190121 11:14:16.483" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:16.393" endtime="20190121 11:14:16.486" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:16.624" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:16.650" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:16.670" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:16.674" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:16.617" endtime="20190121 11:14:16.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:16.691" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:16.678" endtime="20190121 11:14:16.692" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:16.702" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:16.694" endtime="20190121 11:14:16.704" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:16.609" endtime="20190121 11:14:16.706" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:16.845" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:16.895" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:16.925" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:16.929" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:16.837" endtime="20190121 11:14:16.930" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:16.942" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:16.934" endtime="20190121 11:14:16.943" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:16.982" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:16.946" endtime="20190121 11:14:16.984" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:16.829" endtime="20190121 11:14:16.991" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:17.202" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:17.350" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:17.381" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:17.396" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:17.171" endtime="20190121 11:14:17.398" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:17.455" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:17.422" endtime="20190121 11:14:17.455" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:17.537" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:17.465" endtime="20190121 11:14:17.539" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:17.138" endtime="20190121 11:14:17.571" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:17.762" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:17.813" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:17.851" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:17.854" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:17.742" endtime="20190121 11:14:17.855" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:17.880" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:17.859" endtime="20190121 11:14:17.881" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:17.911" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:17.890" endtime="20190121 11:14:17.913" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:17.705" endtime="20190121 11:14:17.916" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:18.078" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:18.145" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:18.181" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:18.184" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:18.063" endtime="20190121 11:14:18.185" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:18.209" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:18.188" endtime="20190121 11:14:18.210" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:18.235" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:18.226" endtime="20190121 11:14:18.246" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:18.042" endtime="20190121 11:14:18.249" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:18.430" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:18.473" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:18.512" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:18.515" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:18.414" endtime="20190121 11:14:18.516" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:18.529" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:18.520" endtime="20190121 11:14:18.530" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:18.541" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:18.532" endtime="20190121 11:14:18.542" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:18.378" endtime="20190121 11:14:18.545" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:18.682" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:18.708" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:18.729" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:18.731" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:18.676" endtime="20190121 11:14:18.733" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:18.746" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:18.737" endtime="20190121 11:14:18.746" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:18.757" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:18.749" endtime="20190121 11:14:18.759" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:18.668" endtime="20190121 11:14:18.762" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:18.899" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:18.926" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:18.946" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:18.949" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:18.893" endtime="20190121 11:14:18.950" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:18.962" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:18.953" endtime="20190121 11:14:18.963" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:18.974" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:18.966" endtime="20190121 11:14:18.975" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:18.885" endtime="20190121 11:14:18.984" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:19.161" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:19.207" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:19.262" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:19.265" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:19.142" endtime="20190121 11:14:19.266" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:19.314" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:19.289" endtime="20190121 11:14:19.316" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:19.341" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:19.319" endtime="20190121 11:14:19.346" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:19.114" endtime="20190121 11:14:19.349" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:19.561" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:19.677" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:19.742" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:19.749" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:19.508" endtime="20190121 11:14:19.750" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:19.824" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:19.786" endtime="20190121 11:14:19.825" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:19.900" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:19.848" endtime="20190121 11:14:19.902" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:19.483" endtime="20190121 11:14:19.909" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:20.126" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:20.250" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:20.297" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:20.305" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:20.078" endtime="20190121 11:14:20.306" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:20.400" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:20.339" endtime="20190121 11:14:20.401" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:20.451" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:20.409" endtime="20190121 11:14:20.453" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:20.040" endtime="20190121 11:14:20.475" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:20.694" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:20.826" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:20.897" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:20.905" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:20.652" endtime="20190121 11:14:20.906" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:20.986" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:20.939" endtime="20190121 11:14:20.987" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:21.067" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:21.027" endtime="20190121 11:14:21.077" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:20.625" endtime="20190121 11:14:21.101" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:21.329" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:21.415" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:21.464" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:21.493" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:21.283" endtime="20190121 11:14:21.494" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:21.595" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:21.506" endtime="20190121 11:14:21.596" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:21.686" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:21.603" endtime="20190121 11:14:21.687" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:21.234" endtime="20190121 11:14:21.695" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:21.907" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:22.001" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:22.048" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:22.054" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:21.866" endtime="20190121 11:14:22.055" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:22.122" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:22.063" endtime="20190121 11:14:22.123" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:22.165" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:22.130" endtime="20190121 11:14:22.167" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:21.826" endtime="20190121 11:14:22.207" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:22.421" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:22.493" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:22.541" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:22.549" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:22.382" endtime="20190121 11:14:22.550" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:22.579" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:22.570" endtime="20190121 11:14:22.580" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:22.604" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:22.595" endtime="20190121 11:14:22.614" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:22.338" endtime="20190121 11:14:22.618" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:22.809" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:22.912" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:22.960" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:22.963" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:22.774" endtime="20190121 11:14:22.964" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:23.011" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:22.968" endtime="20190121 11:14:23.012" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:23.053" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:23.015" endtime="20190121 11:14:23.055" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:22.745" endtime="20190121 11:14:23.071" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:23.251" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:23.349" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:23.413" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:23.418" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:23.215" endtime="20190121 11:14:23.419" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:23.522" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:23.447" endtime="20190121 11:14:23.523" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:23.559" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:23.546" endtime="20190121 11:14:23.560" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:23.199" endtime="20190121 11:14:23.591" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:23.762" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:23.841" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:23.897" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:23.905" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:23.749" endtime="20190121 11:14:23.906" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:23.979" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:23.947" endtime="20190121 11:14:24.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:24.073" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:24.024" endtime="20190121 11:14:24.074" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:23.719" endtime="20190121 11:14:24.108" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:24.356" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:24.430" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:24.478" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:24.485" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:24.279" endtime="20190121 11:14:24.486" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:24.551" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:24.520" endtime="20190121 11:14:24.552" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:24.567" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:24.555" endtime="20190121 11:14:24.569" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:24.248" endtime="20190121 11:14:24.572" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:24.792" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:24.886" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:24.914" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:24.917" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:24.742" endtime="20190121 11:14:24.918" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:24.959" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:24.927" endtime="20190121 11:14:24.960" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:24.982" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:24.964" endtime="20190121 11:14:24.984" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:24.712" endtime="20190121 11:14:25.015" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:25.182" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:25.246" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:25.282" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:25.285" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:25.167" endtime="20190121 11:14:25.286" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:25.319" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:25.299" endtime="20190121 11:14:25.320" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:25.361" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:25.324" endtime="20190121 11:14:25.362" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:25.143" endtime="20190121 11:14:25.384" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:25.594" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:25.778" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:25.841" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:25.848" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:14:25.562" endtime="20190121 11:14:25.849" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:25.960" level="INFO">${resp} = </msg>
<status starttime="20190121 11:14:25.897" endtime="20190121 11:14:25.965" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:14:26.000" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:14:25.968" endtime="20190121 11:14:26.047" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:25.524" endtime="20190121 11:14:26.055" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:26.426" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:14:26.497" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:26.527" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:26.530" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:26.410" endtime="20190121 11:14:26.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:14:26.549" level="INFO">${resp} = 275: usb_max: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    inet 192.168.1.100/24 brd 192.168.1.255 scope global usb_max</msg>
<status starttime="20190121 11:14:26.535" endtime="20190121 11:14:26.550" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<status starttime="20190121 11:14:26.573" endtime="20190121 11:14:26.596" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:26.268" endtime="20190121 11:14:26.599" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:00.703" endtime="20190121 11:14:26.601" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:14:26.613" level="INFO">${STATUS} = True</msg>
<status starttime="20190121 11:14:00.686" endtime="20190121 11:14:26.614" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DUT ready status: ${STATUS}</arg>
</arguments>
<status starttime="20190121 11:14:26.617" endtime="20190121 11:14:26.631" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3 seconds</arg>
</arguments>
<msg timestamp="20190121 11:14:29.638" level="INFO">Slept 3 seconds</msg>
<status starttime="20190121 11:14:26.634" endtime="20190121 11:14:29.640" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:14:29.644" level="INFO">${status} = True</msg>
<status starttime="20190121 11:14:00.638" endtime="20190121 11:14:29.645" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Device does not exist</arg>
</arguments>
<status starttime="20190121 11:14:29.648" endtime="20190121 11:14:29.659" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:14:29.678" level="INFO">"Setup ssh"</msg>
<status starttime="20190121 11:14:29.662" endtime="20190121 11:14:29.681" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Open Ssh Connection">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg timestamp="20190121 11:14:29.702" level="INFO">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status starttime="20190121 11:14:29.695" endtime="20190121 11:14:32.038" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:29.684" endtime="20190121 11:14:32.040" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh done!"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:14:32.050" level="INFO">"Setup ssh done!"</msg>
<status starttime="20190121 11:14:32.043" endtime="20190121 11:14:32.052" status="PASS"></status>
</kw>
<status starttime="20190121 11:13:54.065" endtime="20190121 11:14:32.055" status="PASS"></status>
</kw>
<kw name="cansend_500k">
<doc>Can 3 send message test with baudrate 500k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:14:32.081" level="INFO">Start test with can2 and bitrate: 500000</msg>
<status starttime="20190121 11:14:32.075" endtime="20190121 11:14:32.084" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:14:32.095" endtime="20190121 11:14:32.104" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:32.114" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:14:32.142" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:32.215" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:32.218" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:32.106" endtime="20190121 11:14:32.219" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:32.223" endtime="20190121 11:14:32.231" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:32.242" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:14:32.271" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:32.330" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:32.333" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:32.234" endtime="20190121 11:14:32.334" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:32.337" endtime="20190121 11:14:32.347" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:32.357" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:14:32.385" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:32.469" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:32.473" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:32.351" endtime="20190121 11:14:32.474" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:32.477" endtime="20190121 11:14:32.486" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:14:32.086" endtime="20190121 11:14:32.489" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:14:32.502" endtime="20190121 11:14:32.508" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:32.521" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:14:32.618" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:32.621" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:32.511" endtime="20190121 11:14:32.622" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:33.138" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:32.625" endtime="20190121 11:14:33.141" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:33.171" level="INFO">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:14:33.258" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:33.261" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:33.144" endtime="20190121 11:14:33.262" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:33.778" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:33.265" endtime="20190121 11:14:33.780" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:33.790" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:14:33.835" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:33.838" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:33.783" endtime="20190121 11:14:33.839" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:34.353" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:33.841" endtime="20190121 11:14:34.358" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:32.491" endtime="20190121 11:14:34.361" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:14:34.365" endtime="20190121 11:14:34.572" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:14:34.575" endtime="20190121 11:14:34.622" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status starttime="20190121 11:14:34.626" endtime="20190121 11:14:34.632" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:14:34.636" endtime="20190121 11:14:34.688" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status starttime="20190121 11:14:34.691" endtime="20190121 11:14:34.706" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:14:35.218" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:34.709" endtime="20190121 11:14:35.220" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status starttime="20190121 11:14:35.223" endtime="20190121 11:14:35.242" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:14:35.260" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:14:35.335" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:14:35.245" endtime="20190121 11:14:35.345" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:14:35.373" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:14:35.459" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:14:35.348" endtime="20190121 11:14:35.466" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:14:35.500" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:14:35.579" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:14:35.487" endtime="20190121 11:14:35.589" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:14:36.115" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:35.606" endtime="20190121 11:14:36.117" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:14:36.176" level="INFO">${res_list} = [{'timestamp': '21-01-2019 - 11:14:35.341778', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:14:35.473340', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '...</msg>
<status starttime="20190121 11:14:36.124" endtime="20190121 11:14:36.178" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:14:36.187" level="INFO">[{'timestamp': '21-01-2019 - 11:14:35.341778', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:14:35.473340', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:14:35.584589', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status starttime="20190121 11:14:36.182" endtime="20190121 11:14:36.190" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:14:36.199" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:14:36.201" level="INFO">${MSG_LENGTH} = 3</msg>
<status starttime="20190121 11:14:36.194" endtime="20190121 11:14:36.202" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:36.213" endtime="20190121 11:14:36.219" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:36.205" endtime="20190121 11:14:36.221" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:36.245" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:14:36.247" level="INFO">${count} = 3</msg>
<status starttime="20190121 11:14:36.240" endtime="20190121 11:14:36.248" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:36.251" endtime="20190121 11:14:36.257" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:36.269" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:14:36.260" endtime="20190121 11:14:36.270" status="PASS"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:35.341778', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:36.285" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:14:36.279" endtime="20190121 11:14:36.286" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:36.297" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:14:36.289" endtime="20190121 11:14:36.298" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:36.308" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:14:36.300" endtime="20190121 11:14:36.309" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:36.276" endtime="20190121 11:14:36.309" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:35.473340', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:36.320" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:14:36.314" endtime="20190121 11:14:36.321" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:36.331" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:14:36.324" endtime="20190121 11:14:36.332" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:36.343" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:14:36.335" endtime="20190121 11:14:36.344" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:36.311" endtime="20190121 11:14:36.345" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:35.584589', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:36.355" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:14:36.349" endtime="20190121 11:14:36.356" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:36.367" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:14:36.359" endtime="20190121 11:14:36.369" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:36.380" level="INFO">${msgcount} = 3</msg>
<status starttime="20190121 11:14:36.372" endtime="20190121 11:14:36.380" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:36.346" endtime="20190121 11:14:36.381" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:36.271" endtime="20190121 11:14:36.382" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:36.385" endtime="20190121 11:14:36.391" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:14:36.395" endtime="20190121 11:14:36.402" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:36.231" endtime="20190121 11:14:36.406" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:36.224" endtime="20190121 11:14:36.407" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status starttime="20190121 11:14:32.065" endtime="20190121 11:14:36.409" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:32.059" endtime="20190121 11:14:36.411" status="PASS"></status>
</kw>
<kw name="can_loopback_500k">
<doc>Can 3 loopback test with baudrate 500k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:14:36.433" level="INFO">Can channel loopback: can2 with bitrate: 500000</msg>
<status starttime="20190121 11:14:36.428" endtime="20190121 11:14:36.436" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:14:36.447" endtime="20190121 11:14:36.467" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:36.486" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:14:36.542" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:36.635" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:36.638" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:36.470" endtime="20190121 11:14:36.639" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:36.643" endtime="20190121 11:14:36.652" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:36.662" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:14:36.690" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:36.746" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:36.749" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:36.655" endtime="20190121 11:14:36.750" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:36.754" endtime="20190121 11:14:36.762" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:36.772" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:14:36.801" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:36.903" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:36.906" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:36.766" endtime="20190121 11:14:36.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:36.911" endtime="20190121 11:14:36.922" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:14:36.438" endtime="20190121 11:14:36.925" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:14:36.937" endtime="20190121 11:14:36.943" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:36.952" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:14:37.018" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:37.021" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:36.946" endtime="20190121 11:14:37.022" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:37.536" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:37.025" endtime="20190121 11:14:37.538" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:37.551" level="INFO">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:14:37.601" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:37.604" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:37.541" endtime="20190121 11:14:37.605" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:38.119" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:37.608" endtime="20190121 11:14:38.122" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:38.131" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:14:38.186" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:38.188" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:38.125" endtime="20190121 11:14:38.189" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:38.699" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:38.192" endtime="20190121 11:14:38.701" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:36.927" endtime="20190121 11:14:38.703" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:38.714" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190121 11:14:38.741" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:38.753" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:38.756" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:38.707" endtime="20190121 11:14:38.757" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status starttime="20190121 11:14:38.761" endtime="20190121 11:14:38.770" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:38.780" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190121 11:14:38.865" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 500000 sample-point 0.875  	  tq 125 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190121 11:14:38.867" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 500000 sample-poi...</msg>
<status starttime="20190121 11:14:38.773" endtime="20190121 11:14:38.869" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:14:38.872" endtime="20190121 11:14:38.885" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:38.892" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:14:38.995" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:38.997" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:38.889" endtime="20190121 11:14:38.998" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status starttime="20190121 11:14:39.001" endtime="20190121 11:14:39.011" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:14:40.022" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:14:39.014" endtime="20190121 11:14:40.024" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:40.087" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190121 11:14:40.207" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:40.211" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:40.027" endtime="20190121 11:14:40.212" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status starttime="20190121 11:14:40.306" endtime="20190121 11:14:40.334" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:14:40.865" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:40.341" endtime="20190121 11:14:40.867" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:40.914" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:14:41.070" level="INFO">Returning data (538 root      0:00 candump -t a -D -B can2 can2   542 root      0:00 sh -c ps aux | grep candump   544 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:14:41.073" level="INFO">${ret} = ('538 root      0:00 candump -t a -D -B can2 can2   542 root      0:00 sh -c ps aux | grep candump   544 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:14:40.874" endtime="20190121 11:14:41.097" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:14:41.105" endtime="20190121 11:14:41.161" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:14:41.168" endtime="20190121 11:14:41.520" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:14:41.528" endtime="20190121 11:14:41.651" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:14:41.659" endtime="20190121 11:14:41.823" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:14:42.369" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:41.835" endtime="20190121 11:14:42.371" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:42.490" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190121 11:14:42.650" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:42.677" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:42.701" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:42.382" endtime="20190121 11:14:42.702" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:42.733" endtime="20190121 11:14:42.813" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:42.903" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:14:43.057" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:43.117" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:43.125" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:42.859" endtime="20190121 11:14:43.181" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:43.193" endtime="20190121 11:14:43.289" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:43.330" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190121 11:14:43.457" level="INFO">Returning data ((1548066115.332913)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548066115.749810)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190121 11:14:43.466" level="INFO">${ret} = ('(1548066115.332913)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548066115.749810)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status starttime="20190121 11:14:43.302" endtime="20190121 11:14:43.467" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:14:43.470" endtime="20190121 11:14:43.538" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:14:44.109" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:43.582" endtime="20190121 11:14:44.111" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:14:44.300" level="INFO">${res_list} = [{'timestamp': '21-01-2019 - 11:14:42.681143', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '21-01-2019 - 11:14:42.695530', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'t...</msg>
<status starttime="20190121 11:14:44.126" endtime="20190121 11:14:44.308" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:14:44.331" level="INFO">[{'timestamp': '21-01-2019 - 11:14:42.681143', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '21-01-2019 - 11:14:42.695530', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '21-01-2019 - 11:14:43.095654', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:14:43.113076', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status starttime="20190121 11:14:44.311" endtime="20190121 11:14:44.342" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:14:44.385" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:14:44.387" level="INFO">${MSG_LENGTH} = 4</msg>
<status starttime="20190121 11:14:44.351" endtime="20190121 11:14:44.387" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:44.440" endtime="20190121 11:14:44.482" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:44.411" endtime="20190121 11:14:44.484" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:44.642" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:14:44.645" level="INFO">${count} = 4</msg>
<status starttime="20190121 11:14:44.628" endtime="20190121 11:14:44.646" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:44.649" endtime="20190121 11:14:44.690" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:44.707" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:14:44.693" endtime="20190121 11:14:44.707" status="PASS"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:42.681143', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:44.733" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:14:44.727" endtime="20190121 11:14:44.733" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:44.749" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:14:44.736" endtime="20190121 11:14:44.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:44.786" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:14:44.770" endtime="20190121 11:14:44.787" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:44.712" endtime="20190121 11:14:44.788" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:42.695530', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:44.810" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:14:44.793" endtime="20190121 11:14:44.811" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:44.834" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:14:44.814" endtime="20190121 11:14:44.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:44.858" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:14:44.852" endtime="20190121 11:14:44.882" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:44.789" endtime="20190121 11:14:44.883" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:43.095654', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:44.923" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:14:44.913" endtime="20190121 11:14:44.928" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:44.979" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:14:44.947" endtime="20190121 11:14:44.984" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:45.031" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:14:44.987" endtime="20190121 11:14:45.031" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:44.889" endtime="20190121 11:14:45.058" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:43.113076', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:45.093" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:14:45.063" endtime="20190121 11:14:45.094" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:45.170" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:14:45.122" endtime="20190121 11:14:45.170" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:45.213" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:14:45.178" endtime="20190121 11:14:45.214" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:45.060" endtime="20190121 11:14:45.215" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:44.709" endtime="20190121 11:14:45.215" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:45.255" endtime="20190121 11:14:45.281" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:14:45.286" endtime="20190121 11:14:45.318" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:44.554" endtime="20190121 11:14:45.326" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:44.491" endtime="20190121 11:14:45.327" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:45.367" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:14:45.474" level="INFO">Returning data (538 root      0:00 candump -t a -D -B can2 can2   557 root      0:00 sh -c ps aux | grep candump   559 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:14:45.481" level="INFO">${ret} = ('538 root      0:00 candump -t a -D -B can2 can2   557 root      0:00 sh -c ps aux | grep candump   559 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:14:45.363" endtime="20190121 11:14:45.482" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status starttime="20190121 11:14:45.514" endtime="20190121 11:14:45.562" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:45.603" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:14:45.731" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:45.737" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:45.597" endtime="20190121 11:14:45.738" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:14:46.755" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:14:45.750" endtime="20190121 11:14:46.757" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:36.419" endtime="20190121 11:14:46.761" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:36.414" endtime="20190121 11:14:46.772" status="PASS"></status>
</kw>
<kw name="cansend_250k">
<doc>Can 3 send message test with baudrate 250k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:14:46.854" level="INFO">Start test with can2 and bitrate: 250000</msg>
<status starttime="20190121 11:14:46.839" endtime="20190121 11:14:46.871" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:14:46.901" endtime="20190121 11:14:46.919" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:46.946" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:14:47.013" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:47.135" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:47.138" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:46.922" endtime="20190121 11:14:47.139" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:47.153" endtime="20190121 11:14:47.186" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:47.221" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:14:47.267" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:47.319" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:47.322" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:47.196" endtime="20190121 11:14:47.323" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:47.327" endtime="20190121 11:14:47.335" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:47.345" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:14:47.373" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:47.458" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:47.461" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:47.339" endtime="20190121 11:14:47.462" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:47.466" endtime="20190121 11:14:47.475" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:14:46.873" endtime="20190121 11:14:47.478" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:14:47.490" endtime="20190121 11:14:47.497" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:47.506" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:14:47.546" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:47.550" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:47.500" endtime="20190121 11:14:47.551" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:48.067" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:47.561" endtime="20190121 11:14:48.069" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:48.079" level="INFO">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:14:48.130" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:48.132" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:48.072" endtime="20190121 11:14:48.133" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:48.646" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:48.136" endtime="20190121 11:14:48.648" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:48.657" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:14:48.710" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:48.712" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:48.651" endtime="20190121 11:14:48.714" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:49.229" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:48.717" endtime="20190121 11:14:49.231" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:47.480" endtime="20190121 11:14:49.234" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:14:49.237" endtime="20190121 11:14:49.397" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:14:49.401" endtime="20190121 11:14:49.447" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status starttime="20190121 11:14:49.451" endtime="20190121 11:14:49.457" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:14:49.460" endtime="20190121 11:14:49.518" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status starttime="20190121 11:14:49.526" endtime="20190121 11:14:49.541" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:14:50.049" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:49.544" endtime="20190121 11:14:50.051" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status starttime="20190121 11:14:50.058" endtime="20190121 11:14:50.073" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:14:50.091" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:14:50.142" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:14:50.080" endtime="20190121 11:14:50.150" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:14:50.179" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:14:50.263" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:14:50.154" endtime="20190121 11:14:50.272" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:14:50.308" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:14:50.389" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:14:50.279" endtime="20190121 11:14:50.391" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:14:50.920" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:50.398" endtime="20190121 11:14:50.922" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:14:50.983" level="INFO">${res_list} = [{'timestamp': '21-01-2019 - 11:14:50.155553', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:14:50.273318', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '...</msg>
<status starttime="20190121 11:14:50.929" endtime="20190121 11:14:50.985" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:14:50.993" level="INFO">[{'timestamp': '21-01-2019 - 11:14:50.155553', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:14:50.273318', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:14:50.404713', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status starttime="20190121 11:14:50.988" endtime="20190121 11:14:50.996" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:14:51.005" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:14:51.007" level="INFO">${MSG_LENGTH} = 3</msg>
<status starttime="20190121 11:14:50.999" endtime="20190121 11:14:51.008" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:51.017" endtime="20190121 11:14:51.023" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:51.011" endtime="20190121 11:14:51.025" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:51.053" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:14:51.055" level="INFO">${count} = 3</msg>
<status starttime="20190121 11:14:51.044" endtime="20190121 11:14:51.056" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:51.059" endtime="20190121 11:14:51.065" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:51.074" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:14:51.068" endtime="20190121 11:14:51.075" status="PASS"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:50.155553', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:51.089" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:14:51.082" endtime="20190121 11:14:51.089" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:51.100" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:14:51.092" endtime="20190121 11:14:51.101" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:51.111" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:14:51.104" endtime="20190121 11:14:51.112" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:51.079" endtime="20190121 11:14:51.113" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:50.273318', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:51.123" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:14:51.117" endtime="20190121 11:14:51.124" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:51.135" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:14:51.127" endtime="20190121 11:14:51.135" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:51.146" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:14:51.138" endtime="20190121 11:14:51.147" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:51.114" endtime="20190121 11:14:51.148" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:50.404713', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:51.159" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:14:51.153" endtime="20190121 11:14:51.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:51.171" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:14:51.164" endtime="20190121 11:14:51.172" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:51.182" level="INFO">${msgcount} = 3</msg>
<status starttime="20190121 11:14:51.175" endtime="20190121 11:14:51.183" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:51.150" endtime="20190121 11:14:51.184" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:51.076" endtime="20190121 11:14:51.184" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:51.187" endtime="20190121 11:14:51.193" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:14:51.196" endtime="20190121 11:14:51.203" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:51.035" endtime="20190121 11:14:51.207" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:51.028" endtime="20190121 11:14:51.208" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status starttime="20190121 11:14:46.781" endtime="20190121 11:14:51.210" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:46.775" endtime="20190121 11:14:51.213" status="PASS"></status>
</kw>
<kw name="can_loopback_250k">
<doc>Can 3 loopback test with baudrate 250k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:14:51.262" level="INFO">Can channel loopback: can2 with bitrate: 250000</msg>
<status starttime="20190121 11:14:51.248" endtime="20190121 11:14:51.265" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:14:51.289" endtime="20190121 11:14:51.305" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:51.328" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:14:51.390" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:51.498" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:51.501" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:51.309" endtime="20190121 11:14:51.502" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:51.506" endtime="20190121 11:14:51.538" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:51.558" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:14:51.626" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:51.715" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:51.718" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:51.542" endtime="20190121 11:14:51.719" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:51.728" endtime="20190121 11:14:51.770" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:14:51.790" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:14:51.847" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:51.928" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:51.931" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:51.774" endtime="20190121 11:14:51.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:51.951" endtime="20190121 11:14:51.961" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:14:51.267" endtime="20190121 11:14:51.963" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:14:51.976" endtime="20190121 11:14:51.982" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:51.992" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:14:52.041" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:52.044" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:51.985" endtime="20190121 11:14:52.045" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:52.560" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:52.055" endtime="20190121 11:14:52.562" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:52.574" level="INFO">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:14:52.619" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:52.622" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:52.567" endtime="20190121 11:14:52.623" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:53.147" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:52.626" endtime="20190121 11:14:53.149" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:53.158" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:14:53.208" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:53.210" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:53.152" endtime="20190121 11:14:53.211" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:14:53.738" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:53.214" endtime="20190121 11:14:53.740" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:14:51.966" endtime="20190121 11:14:53.742" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:53.786" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190121 11:14:53.854" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:53.880" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:53.883" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:53.746" endtime="20190121 11:14:53.884" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status starttime="20190121 11:14:53.888" endtime="20190121 11:14:53.939" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:53.969" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190121 11:14:54.061" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 250000 sample-point 0.875  	  tq 250 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190121 11:14:54.065" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 250000 sample-poi...</msg>
<status starttime="20190121 11:14:53.943" endtime="20190121 11:14:54.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:14:54.086" endtime="20190121 11:14:54.103" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:54.111" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:14:54.246" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:54.248" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:54.107" endtime="20190121 11:14:54.249" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status starttime="20190121 11:14:54.252" endtime="20190121 11:14:54.270" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:14:55.288" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:14:54.273" endtime="20190121 11:14:55.290" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:55.311" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190121 11:14:55.399" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:55.402" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:55.294" endtime="20190121 11:14:55.403" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status starttime="20190121 11:14:55.406" endtime="20190121 11:14:55.453" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:14:55.967" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:55.456" endtime="20190121 11:14:55.970" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:56.003" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:14:56.114" level="INFO">Returning data (586 root      0:00 candump -t a -D -B can2 can2   587 root      0:00 sh -c ps aux | grep candump   589 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:14:56.117" level="INFO">${ret} = ('586 root      0:00 candump -t a -D -B can2 can2   587 root      0:00 sh -c ps aux | grep candump   589 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:14:55.973" endtime="20190121 11:14:56.118" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:14:56.139" endtime="20190121 11:14:56.164" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:14:56.167" endtime="20190121 11:14:56.455" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:14:56.459" endtime="20190121 11:14:56.542" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:14:56.546" endtime="20190121 11:14:56.648" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:14:57.205" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:56.656" endtime="20190121 11:14:57.207" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:57.273" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190121 11:14:57.393" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:57.431" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:57.438" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:57.215" endtime="20190121 11:14:57.439" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:57.479" endtime="20190121 11:14:57.570" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:57.622" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:14:57.746" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:14:57.779" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:14:57.786" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:14:57.577" endtime="20190121 11:14:57.787" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:14:57.812" endtime="20190121 11:14:57.870" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:57.921" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190121 11:14:58.056" level="INFO">Returning data ((1548069297.390791)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548069297.733082)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190121 11:14:58.059" level="INFO">${ret} = ('(1548069297.390791)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548069297.733082)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status starttime="20190121 11:14:57.877" endtime="20190121 11:14:58.065" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:14:58.068" endtime="20190121 11:14:58.145" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:14:58.657" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:14:58.147" endtime="20190121 11:14:58.659" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:14:58.796" level="INFO">${res_list} = [{'timestamp': '21-01-2019 - 11:14:57.424481', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '21-01-2019 - 11:14:57.433961', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'t...</msg>
<status starttime="20190121 11:14:58.667" endtime="20190121 11:14:58.797" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:14:58.813" level="INFO">[{'timestamp': '21-01-2019 - 11:14:57.424481', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '21-01-2019 - 11:14:57.433961', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '21-01-2019 - 11:14:57.765842', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:14:57.776764', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status starttime="20190121 11:14:58.800" endtime="20190121 11:14:58.826" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:14:58.833" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:14:58.861" level="INFO">${MSG_LENGTH} = 4</msg>
<status starttime="20190121 11:14:58.829" endtime="20190121 11:14:58.862" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:58.903" endtime="20190121 11:14:58.919" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:58.865" endtime="20190121 11:14:58.920" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:58.972" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:14:58.974" level="INFO">${count} = 4</msg>
<status starttime="20190121 11:14:58.962" endtime="20190121 11:14:58.975" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:58.978" endtime="20190121 11:14:59.011" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:59.038" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:14:59.033" endtime="20190121 11:14:59.039" status="PASS"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:57.424481', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:59.070" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:14:59.056" endtime="20190121 11:14:59.071" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:59.093" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:14:59.074" endtime="20190121 11:14:59.094" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:59.119" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:14:59.111" endtime="20190121 11:14:59.145" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:59.053" endtime="20190121 11:14:59.146" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:57.433961', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:59.183" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:14:59.152" endtime="20190121 11:14:59.183" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:59.203" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:14:59.195" endtime="20190121 11:14:59.216" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:59.242" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:14:59.219" endtime="20190121 11:14:59.243" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:59.148" endtime="20190121 11:14:59.244" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:57.765842', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:59.263" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:14:59.249" endtime="20190121 11:14:59.264" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:59.288" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:14:59.267" endtime="20190121 11:14:59.289" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:59.314" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:14:59.302" endtime="20190121 11:14:59.315" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:59.245" endtime="20190121 11:14:59.316" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:14:57.776764', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:14:59.335" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:14:59.330" endtime="20190121 11:14:59.336" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:14:59.372" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:14:59.339" endtime="20190121 11:14:59.373" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:14:59.408" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:14:59.376" endtime="20190121 11:14:59.409" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:59.318" endtime="20190121 11:14:59.434" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:59.041" endtime="20190121 11:14:59.435" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:14:59.438" endtime="20190121 11:14:59.452" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:14:59.456" endtime="20190121 11:14:59.475" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:58.944" endtime="20190121 11:14:59.479" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:58.923" endtime="20190121 11:14:59.480" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:59.495" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:14:59.591" level="INFO">Returning data (586 root      0:00 candump -t a -D -B can2 can2   591 root      0:00 sh -c ps aux | grep candump   593 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:14:59.593" level="INFO">${ret} = ('586 root      0:00 candump -t a -D -B can2 can2   591 root      0:00 sh -c ps aux | grep candump   593 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:14:59.491" endtime="20190121 11:14:59.595" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status starttime="20190121 11:14:59.598" endtime="20190121 11:14:59.632" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:14:59.639" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:14:59.755" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:14:59.757" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:14:59.636" endtime="20190121 11:14:59.758" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:15:00.779" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:14:59.774" endtime="20190121 11:15:00.781" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:51.220" endtime="20190121 11:15:00.783" status="PASS"></status>
</kw>
<status starttime="20190121 11:14:51.215" endtime="20190121 11:15:00.786" status="PASS"></status>
</kw>
<kw name="cansend_125k">
<doc>Can 3 send message test with baudrate 125k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:15:00.811" level="INFO">Start test with can2 and bitrate: 125000</msg>
<status starttime="20190121 11:15:00.803" endtime="20190121 11:15:00.813" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:15:00.825" endtime="20190121 11:15:00.833" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:15:00.846" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:15:00.874" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:00.948" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:00.951" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:00.836" endtime="20190121 11:15:00.953" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:15:00.956" endtime="20190121 11:15:00.965" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:15:00.976" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:15:01.003" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:01.061" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:01.064" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:00.968" endtime="20190121 11:15:01.065" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:15:01.069" endtime="20190121 11:15:01.078" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:15:01.088" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:15:01.116" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:01.199" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:01.202" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:01.081" endtime="20190121 11:15:01.203" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:15:01.208" endtime="20190121 11:15:01.217" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:15:00.816" endtime="20190121 11:15:01.220" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:15:01.233" endtime="20190121 11:15:01.238" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:01.248" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:15:01.300" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:15:01.302" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:15:01.242" endtime="20190121 11:15:01.303" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:15:01.820" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:01.307" endtime="20190121 11:15:01.822" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:01.835" level="INFO">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:15:01.885" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:15:01.888" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:15:01.825" endtime="20190121 11:15:01.889" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:15:02.403" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:01.892" endtime="20190121 11:15:02.406" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:02.415" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:15:02.455" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:15:02.457" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:15:02.409" endtime="20190121 11:15:02.458" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:15:02.973" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:02.461" endtime="20190121 11:15:02.975" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:15:01.222" endtime="20190121 11:15:02.978" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:15:02.981" endtime="20190121 11:15:03.138" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:15:03.145" endtime="20190121 11:15:03.191" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status starttime="20190121 11:15:03.195" endtime="20190121 11:15:03.200" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:15:03.203" endtime="20190121 11:15:03.251" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status starttime="20190121 11:15:03.258" endtime="20190121 11:15:03.273" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:15:03.787" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:03.277" endtime="20190121 11:15:03.789" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status starttime="20190121 11:15:03.791" endtime="20190121 11:15:03.813" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:15:03.827" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:15:03.890" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:15:03.816" endtime="20190121 11:15:03.898" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:15:03.923" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:15:03.990" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:15:03.906" endtime="20190121 11:15:03.992" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:15:04.035" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:15:04.102" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:15:04.004" endtime="20190121 11:15:04.104" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:15:04.638" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:04.116" endtime="20190121 11:15:04.640" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:15:04.702" level="INFO">${res_list} = [{'timestamp': '21-01-2019 - 11:15:03.901093', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:15:03.997492', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '...</msg>
<status starttime="20190121 11:15:04.644" endtime="20190121 11:15:04.703" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:15:04.712" level="INFO">[{'timestamp': '21-01-2019 - 11:15:03.901093', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:15:03.997492', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:15:04.110502', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status starttime="20190121 11:15:04.706" endtime="20190121 11:15:04.715" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:15:04.723" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:15:04.726" level="INFO">${MSG_LENGTH} = 3</msg>
<status starttime="20190121 11:15:04.718" endtime="20190121 11:15:04.726" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:15:04.735" endtime="20190121 11:15:04.742" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:04.730" endtime="20190121 11:15:04.743" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:15:04.780" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:15:04.783" level="INFO">${count} = 3</msg>
<status starttime="20190121 11:15:04.774" endtime="20190121 11:15:04.783" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:15:04.786" endtime="20190121 11:15:04.793" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:15:04.802" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:15:04.796" endtime="20190121 11:15:04.803" status="PASS"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:15:03.901093', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:15:04.816" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:15:04.810" endtime="20190121 11:15:04.817" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:15:04.828" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:15:04.820" endtime="20190121 11:15:04.829" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:15:04.841" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:15:04.832" endtime="20190121 11:15:04.842" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:04.807" endtime="20190121 11:15:04.842" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:15:03.997492', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:15:04.854" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:15:04.847" endtime="20190121 11:15:04.855" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:15:04.866" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:15:04.859" endtime="20190121 11:15:04.867" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:15:04.878" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:15:04.871" endtime="20190121 11:15:04.879" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:04.844" endtime="20190121 11:15:04.880" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:15:04.110502', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:15:04.891" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:15:04.885" endtime="20190121 11:15:04.892" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:15:04.902" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:15:04.895" endtime="20190121 11:15:04.903" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:15:04.914" level="INFO">${msgcount} = 3</msg>
<status starttime="20190121 11:15:04.906" endtime="20190121 11:15:04.914" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:04.881" endtime="20190121 11:15:04.915" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:04.804" endtime="20190121 11:15:04.916" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:15:04.919" endtime="20190121 11:15:04.925" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:15:04.928" endtime="20190121 11:15:04.935" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:04.754" endtime="20190121 11:15:04.939" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:04.746" endtime="20190121 11:15:04.941" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status starttime="20190121 11:15:00.793" endtime="20190121 11:15:04.943" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:00.788" endtime="20190121 11:15:04.946" status="PASS"></status>
</kw>
<kw name="can_loopback_125k">
<doc>Can 3 loopback test with baudrate 125k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:15:04.967" level="INFO">Can channel loopback: can2 with bitrate: 125000</msg>
<status starttime="20190121 11:15:04.962" endtime="20190121 11:15:04.969" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:15:04.981" endtime="20190121 11:15:04.988" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:15:04.997" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:15:05.027" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:05.106" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:05.109" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:04.991" endtime="20190121 11:15:05.111" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:15:05.114" endtime="20190121 11:15:05.123" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:15:05.133" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:15:05.162" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:05.220" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:05.223" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:05.126" endtime="20190121 11:15:05.224" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:15:05.228" endtime="20190121 11:15:05.236" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:15:05.246" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:15:05.274" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:05.361" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:05.363" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:05.239" endtime="20190121 11:15:05.365" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:15:05.369" endtime="20190121 11:15:05.377" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:15:04.971" endtime="20190121 11:15:05.380" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:15:05.396" endtime="20190121 11:15:05.401" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:05.410" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:15:05.471" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:15:05.474" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:15:05.404" endtime="20190121 11:15:05.475" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:15:05.988" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:05.478" endtime="20190121 11:15:05.990" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:06.007" level="INFO">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:15:06.050" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:15:06.052" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:15:06.000" endtime="20190121 11:15:06.053" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:15:06.562" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:06.056" endtime="20190121 11:15:06.564" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:06.573" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:15:06.631" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:15:06.634" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:15:06.567" endtime="20190121 11:15:06.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:15:07.149" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:06.638" endtime="20190121 11:15:07.152" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:15:05.383" endtime="20190121 11:15:07.154" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:07.163" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190121 11:15:07.190" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:07.203" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:07.206" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:07.157" endtime="20190121 11:15:07.206" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status starttime="20190121 11:15:07.210" endtime="20190121 11:15:07.219" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:07.227" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190121 11:15:07.269" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 125000 sample-point 0.875  	  tq 500 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190121 11:15:07.272" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 125000 sample-poi...</msg>
<status starttime="20190121 11:15:07.222" endtime="20190121 11:15:07.273" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:15:07.276" endtime="20190121 11:15:07.289" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:07.296" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:15:07.405" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:15:07.407" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:15:07.292" endtime="20190121 11:15:07.408" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status starttime="20190121 11:15:07.411" endtime="20190121 11:15:07.440" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:15:08.448" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:15:07.443" endtime="20190121 11:15:08.450" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:08.459" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190121 11:15:08.506" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:15:08.508" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:15:08.453" endtime="20190121 11:15:08.509" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status starttime="20190121 11:15:08.512" endtime="20190121 11:15:08.520" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:15:09.026" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:08.523" endtime="20190121 11:15:09.028" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:09.035" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:15:09.125" level="INFO">Returning data (607 root      0:00 candump -t a -D -B can2 can2   608 root      0:00 sh -c ps aux | grep candump   610 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:15:09.127" level="INFO">${ret} = ('607 root      0:00 candump -t a -D -B can2 can2   608 root      0:00 sh -c ps aux | grep candump   610 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:15:09.031" endtime="20190121 11:15:09.128" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:15:09.131" endtime="20190121 11:15:09.145" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:15:09.149" endtime="20190121 11:15:09.307" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:15:09.311" endtime="20190121 11:15:09.357" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:15:09.360" endtime="20190121 11:15:09.406" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:15:09.927" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:09.414" endtime="20190121 11:15:09.929" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:09.963" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190121 11:15:10.070" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:10.079" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:10.092" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:09.932" endtime="20190121 11:15:10.093" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:15:10.118" endtime="20190121 11:15:10.156" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:10.209" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:15:10.294" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:10.338" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:10.345" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:10.159" endtime="20190121 11:15:10.346" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:15:10.370" endtime="20190121 11:15:10.412" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:10.449" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190121 11:15:10.550" level="INFO">Returning data ((1548069310.022910)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548069310.262071)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190121 11:15:10.561" level="INFO">${ret} = ('(1548069310.022910)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548069310.262071)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status starttime="20190121 11:15:10.415" endtime="20190121 11:15:10.562" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:15:10.589" endtime="20190121 11:15:10.620" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:15:11.132" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:15:10.623" endtime="20190121 11:15:11.134" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:15:11.194" level="INFO">${res_list} = [{'timestamp': '21-01-2019 - 11:15:10.084089', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '21-01-2019 - 11:15:10.095742', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'t...</msg>
<status starttime="20190121 11:15:11.141" endtime="20190121 11:15:11.195" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:15:11.202" level="INFO">[{'timestamp': '21-01-2019 - 11:15:10.084089', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '21-01-2019 - 11:15:10.095742', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '21-01-2019 - 11:15:10.322097', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '21-01-2019 - 11:15:10.328650', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status starttime="20190121 11:15:11.198" endtime="20190121 11:15:11.206" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:15:11.213" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:15:11.215" level="INFO">${MSG_LENGTH} = 4</msg>
<status starttime="20190121 11:15:11.209" endtime="20190121 11:15:11.216" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:15:11.225" endtime="20190121 11:15:11.234" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:11.219" endtime="20190121 11:15:11.236" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:15:11.259" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:15:11.261" level="INFO">${count} = 4</msg>
<status starttime="20190121 11:15:11.255" endtime="20190121 11:15:11.262" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:15:11.265" endtime="20190121 11:15:11.270" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:15:11.279" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:15:11.273" endtime="20190121 11:15:11.280" status="PASS"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:15:10.084089', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:15:11.293" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:15:11.288" endtime="20190121 11:15:11.294" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:15:11.305" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:15:11.297" endtime="20190121 11:15:11.306" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:15:11.315" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:15:11.309" endtime="20190121 11:15:11.316" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:11.285" endtime="20190121 11:15:11.317" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:15:10.095742', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:15:11.327" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:15:11.321" endtime="20190121 11:15:11.327" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:15:11.339" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:15:11.330" endtime="20190121 11:15:11.340" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:15:11.350" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:15:11.343" endtime="20190121 11:15:11.351" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:11.318" endtime="20190121 11:15:11.351" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:15:10.322097', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:15:11.361" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:15:11.356" endtime="20190121 11:15:11.362" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:15:11.372" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:15:11.365" endtime="20190121 11:15:11.373" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:15:11.382" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:15:11.376" endtime="20190121 11:15:11.383" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:11.353" endtime="20190121 11:15:11.384" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '21-01-2019 - 11:15:10.328650', 'payload': '11223344556677BB', 'id': '0x1a'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:15:11.393" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:15:11.388" endtime="20190121 11:15:11.394" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:15:11.405" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:15:11.397" endtime="20190121 11:15:11.405" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:15:11.414" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:15:11.408" endtime="20190121 11:15:11.415" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:11.385" endtime="20190121 11:15:11.416" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:11.281" endtime="20190121 11:15:11.417" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:15:11.419" endtime="20190121 11:15:11.425" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:15:11.428" endtime="20190121 11:15:11.433" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:11.246" endtime="20190121 11:15:11.437" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:11.239" endtime="20190121 11:15:11.438" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:11.445" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:15:11.543" level="INFO">Returning data (607 root      0:00 candump -t a -D -B can2 can2   612 root      0:00 sh -c ps aux | grep candump   614 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:15:11.545" level="INFO">${ret} = ('607 root      0:00 candump -t a -D -B can2 can2   612 root      0:00 sh -c ps aux | grep candump   614 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:15:11.442" endtime="20190121 11:15:11.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status starttime="20190121 11:15:11.549" endtime="20190121 11:15:11.562" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:11.570" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:15:11.673" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:15:11.675" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:15:11.566" endtime="20190121 11:15:11.676" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:15:12.690" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:15:11.679" endtime="20190121 11:15:12.692" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:04.953" endtime="20190121 11:15:12.694" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:04.948" endtime="20190121 11:15:12.697" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill ping</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:15:12.712" level="INFO">Starting process:
pkill ping</msg>
<msg timestamp="20190121 11:15:12.739" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:12.773" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:12.775" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:12.707" endtime="20190121 11:15:12.777" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_Teardown_Action"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:15:12.784" level="INFO">"Test_Teardown_Action"</msg>
<status starttime="20190121 11:15:12.781" endtime="20190121 11:15:12.787" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>systemctl poweroff</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:15:12.794" level="INFO">Sending command to DUT systemctl poweroff</msg>
<msg timestamp="20190121 11:15:12.898" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:15:12.900" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:15:12.790" endtime="20190121 11:15:12.901" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHUTDOWN_TIME}</arg>
</arguments>
<msg timestamp="20190121 11:15:27.926" level="INFO">Slept 15 seconds</msg>
<status starttime="20190121 11:15:12.916" endtime="20190121 11:15:27.928" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Close Ssh Connection">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190121 11:15:27.951" level="INFO">Closing SSH connection to 192.168.1.101</msg>
<status starttime="20190121 11:15:27.931" endtime="20190121 11:15:27.953" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:15:27.956" endtime="20190121 11:15:28.039" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:15:28.043" endtime="20190121 11:15:28.128" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:12.701" endtime="20190121 11:15:28.130" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-34994</doc>
<tags>
<tag>CAN 3 test</tag>
</tags>
<status critical="yes" starttime="20190121 11:13:54.023" endtime="20190121 11:15:28.132" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:15:29.761" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:15:29.800" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:15:28.271" endtime="20190121 11:15:29.835" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:28.190" endtime="20190121 11:15:29.836" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:28.184" endtime="20190121 11:15:29.839" status="PASS"></status>
</kw>
<doc>CAN 3 test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:13:51.387" endtime="20190121 11:15:29.840" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-40097.robot" name="SKTB-40097" id="s1-s8">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:15:30.514" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:15:30.497" endtime="20190121 11:15:30.517" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:15:30.536" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:15:30.538" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:15:32.781" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:15:30.520" endtime="20190121 11:15:32.783" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:30.485" endtime="20190121 11:15:32.785" status="PASS"></status>
</kw>
<test name="SKTB-40097 Read Write OTP Values" id="s1-s8-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:15:32.864" endtime="20190121 11:15:32.952" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:15:32.955" endtime="20190121 11:15:33.056" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:15:35.080" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:15:33.059" endtime="20190121 11:15:35.083" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:15:35.086" endtime="20190121 11:15:35.203" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:15:36.218" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:15:35.206" endtime="20190121 11:15:36.221" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:15:36.223" endtime="20190121 11:15:36.270" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:15:38.283" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:15:36.273" endtime="20190121 11:15:38.314" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:15:38.317" endtime="20190121 11:15:38.397" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:15:38.400" endtime="20190121 11:15:38.548" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:15:38.551" endtime="20190121 11:15:38.726" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:15:38.733" endtime="20190121 11:15:38.883" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:32.843" endtime="20190121 11:15:38.886" status="PASS"></status>
</kw>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:15:39.022" level="INFO">${res_dict} = {'request': '41', 'result': '4153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:15:38.915" endtime="20190121 11:15:39.023" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:15:39.086" level="INFO">${value} = True</msg>
<status starttime="20190121 11:15:39.034" endtime="20190121 11:15:39.087" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:15:39.090" endtime="20190121 11:15:39.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:15:40.138" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:15:39.118" endtime="20190121 11:15:40.140" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:38.889" endtime="20190121 11:15:40.142" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:15:40.210" level="INFO">${res_dict} = {'request': '41', 'result': '4153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:15:40.150" endtime="20190121 11:15:40.211" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:15:40.239" level="INFO">${value} = True</msg>
<status starttime="20190121 11:15:40.214" endtime="20190121 11:15:40.240" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:15:40.243" endtime="20190121 11:15:40.247" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:15:41.254" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:15:40.249" endtime="20190121 11:15:41.256" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:40.144" endtime="20190121 11:15:41.258" status="PASS"></status>
</kw>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${MEM_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:15:41.278" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineMemory_OLU_*.bin</msg>
<msg timestamp="20190121 11:15:41.307" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:41.322" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:41.325" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:41.273" endtime="20190121 11:15:41.326" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:15:41.335" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status starttime="20190121 11:15:41.329" endtime="20190121 11:15:41.335" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:15:41.342" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:15:41.345" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin']</msg>
<status starttime="20190121 11:15:41.338" endtime="20190121 11:15:41.345" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:15:41.353" level="INFO">${path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status starttime="20190121 11:15:41.348" endtime="20190121 11:15:41.354" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:15:41.357" endtime="20190121 11:15:41.362" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190121 11:15:41.373" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:15:41.365" endtime="20190121 11:15:41.374" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:15:41.378" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status starttime="20190121 11:15:41.265" endtime="20190121 11:15:41.379" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:15:41.639" level="INFO">${res_dict} = {'request': '', 'response': 'TS', 'data': 'dc15f69d', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:15:41.382" endtime="20190121 11:15:41.640" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${matched_path}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:15:41.654" level="INFO">/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status starttime="20190121 11:15:41.643" endtime="20190121 11:15:41.664" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:15:41.676" level="INFO">{'request': '', 'response': 'TS', 'data': 'dc15f69d', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:15:41.667" endtime="20190121 11:15:41.678" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:15:43.686" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:15:41.681" endtime="20190121 11:15:43.688" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:15:43.716" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:15:43.691" endtime="20190121 11:15:43.717" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:15:43.720" endtime="20190121 11:15:43.725" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:41.260" endtime="20190121 11:15:43.728" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:15:43.807" level="INFO">${res_dict} = {'request': '49', 'result': '4953', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:15:43.736" endtime="20190121 11:15:43.808" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:15:43.836" level="INFO">${value} = True</msg>
<status starttime="20190121 11:15:43.811" endtime="20190121 11:15:43.837" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:15:43.840" endtime="20190121 11:15:43.845" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:15:44.852" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:15:43.847" endtime="20190121 11:15:44.854" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:43.730" endtime="20190121 11:15:44.856" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:15:44.929" level="INFO">${res_dict} = {'request': '4756', 'result': '475653', 'data': '0202', 'status': True}</msg>
<status starttime="20190121 11:15:44.864" endtime="20190121 11:15:44.930" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:15:45.947" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:15:44.933" endtime="20190121 11:15:45.949" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:44.858" endtime="20190121 11:15:45.951" status="PASS"></status>
</kw>
<kw name="WRITE_OTP_CARIF_PSN_DEFAULT">
<doc>Write carif psn default value</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write carif psn default value</arg>
</arguments>
<status starttime="20190121 11:15:45.961" endtime="20190121 11:15:45.966" status="PASS"></status>
</kw>
<kw name="WRITE_OTP_VALUE">
<arguments>
<arg>${OTP_CARIF_PSN_ID}</arg>
<arg>${OTP_CARIF_PSN_DEFAULT}</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${OTP_ID}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:15:46.038" level="INFO">${res_dict} = {'request': '53460000fffe', 'result': '534653', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:15:45.976" endtime="20190121 11:15:46.039" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:15:46.067" level="INFO">${value} = True</msg>
<status starttime="20190121 11:15:46.041" endtime="20190121 11:15:46.067" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:15:46.130" level="INFO">${res_dict} = {'request': '534200104c616972642050534e20787878787878', 'result': '534253', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:15:46.070" endtime="20190121 11:15:46.131" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:15:46.160" level="INFO">${value} = True</msg>
<status starttime="20190121 11:15:46.135" endtime="20190121 11:15:46.161" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${Memory_WriteOtpIdent}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:15:46.236" level="INFO">${res_dict} = {'request': '5201', 'result': '520146', 'data': '', 'status': False}</msg>
<status starttime="20190121 11:15:46.164" endtime="20190121 11:15:46.238" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:15:46.266" level="INFO">${value} = False</msg>
<status starttime="20190121 11:15:46.241" endtime="20190121 11:15:46.267" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${value}\n</arg>
</arguments>
<status starttime="20190121 11:15:46.270" endtime="20190121 11:15:46.275" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20190121 11:15:46.284" level="FAIL">'False' should be true.</msg>
<status starttime="20190121 11:15:46.278" endtime="20190121 11:15:46.285" status="FAIL"></status>
</kw>
<status starttime="20190121 11:15:45.968" endtime="20190121 11:15:46.288" status="FAIL"></status>
</kw>
<status starttime="20190121 11:15:45.953" endtime="20190121 11:15:46.290" status="FAIL"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:15:46.302" endtime="20190121 11:15:46.348" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:15:46.351" endtime="20190121 11:15:46.398" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:15:47.407" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:15:46.403" endtime="20190121 11:15:47.409" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:15:47.412" endtime="20190121 11:15:47.457" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:46.295" endtime="20190121 11:15:47.459" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-40097 read and Write otp value with testroutine</doc>
<tags>
<tag>Eeprom OTP Value</tag>
</tags>
<status critical="yes" starttime="20190121 11:15:32.817" endtime="20190121 11:15:47.461" status="FAIL">'False' should be true.</status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:15:48.982" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:15:49.050" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:15:47.504" endtime="20190121 11:15:49.052" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:47.478" endtime="20190121 11:15:49.053" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:47.472" endtime="20190121 11:15:49.055" status="PASS"></status>
</kw>
<doc>Eeprom OTP Value write read test with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:15:29.964" endtime="20190121 11:15:49.070" status="FAIL"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41635.robot" name="SKTB-41635" id="s1-s9">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:15:49.741" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:15:49.712" endtime="20190121 11:15:49.754" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:15:49.785" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:15:49.786" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:15:51.893" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:15:49.757" endtime="20190121 11:15:51.907" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:49.706" endtime="20190121 11:15:51.909" status="PASS"></status>
</kw>
<test name="can_diag_test" id="s1-s9-t1">
<kw type="setup" name="Test_precondition">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:15:51.995" level="INFO">"Test_precondition"</msg>
<status starttime="20190121 11:15:51.978" endtime="20190121 11:15:52.008" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:15:52.011" endtime="20190121 11:15:52.117" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:15:52.120" endtime="20190121 11:15:52.233" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:15:53.252" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:15:52.245" endtime="20190121 11:15:53.255" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:15:53.258" endtime="20190121 11:15:53.355" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<msg timestamp="20190121 11:15:53.500" level="INFO">Slept 100 milliseconds</msg>
<status starttime="20190121 11:15:53.358" endtime="20190121 11:15:53.502" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:15:53.505" endtime="20190121 11:15:53.611" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:15:55.626" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:15:53.614" endtime="20190121 11:15:55.629" status="PASS"></status>
</kw>
<kw name="set_can_channels">
<doc>set bitrate for channels</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:15:55.647" level="INFO">Starting process:
sudo ip link set can0 down</msg>
<msg timestamp="20190121 11:15:55.675" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:55.745" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:55.748" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:55.641" endtime="20190121 11:15:55.749" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:15:55.761" level="INFO">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg timestamp="20190121 11:15:55.788" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:55.880" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:55.883" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:55.753" endtime="20190121 11:15:55.884" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:15:55.900" level="INFO">Starting process:
sudo ip link set can0 up</msg>
<msg timestamp="20190121 11:15:55.927" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:55.997" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:56.000" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:55.888" endtime="20190121 11:15:56.001" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status starttime="20190121 11:15:55.631" endtime="20190121 11:15:56.004" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:51.960" endtime="20190121 11:15:56.007" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:15:56.016" level="INFO">Start test</msg>
<status starttime="20190121 11:15:56.011" endtime="20190121 11:15:56.020" status="PASS"></status>
</kw>
<kw name="Req_1003">
<doc>Extended session</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Extended session</arg>
</arguments>
<status starttime="20190121 11:15:56.029" endtime="20190121 11:15:56.035" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:15:56.047" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:15:56.083" level="INFO">${candump_ID} = 127</msg>
<status starttime="20190121 11:15:56.038" endtime="20190121 11:15:56.087" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>10 03</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:15:56.112" level="INFO">Starting process:
echo 10 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:15:56.139" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:56.153" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:56.156" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:56.103" endtime="20190121 11:15:56.157" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:56.091" endtime="20190121 11:15:56.160" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:15:56.175" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:57.234" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:15:57.238" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:15:57.254" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:57.256" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:15:56.170" endtime="20190121 11:15:57.257" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:15:57.278" level="INFO">2 lines returned</msg>
<msg timestamp="20190121 11:15:57.281" level="INFO">${temp} = [' (1548069356.150456)  can0  7F8   [8]  02 10 03 00 00 00 00 00', ' (1548069356.159606)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA']</msg>
<status starttime="20190121 11:15:57.260" endtime="20190121 11:15:57.290" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:15:57.309" level="INFO">(1548069356.150456)  can0  7F8   [8]  02 10 03 00 00 00 00 00
 (1548069356.159606)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA</msg>
<msg timestamp="20190121 11:15:57.311" level="INFO">${ret_list} = [{'timestamp': '1548069356.150456', 'channel': 'can0', 'payload': '0210030000000000', 'id': '7F8'}, {'timestamp': '1548069356.159606', 'channel': 'can0', 'payload': '065003001400C8AA', 'id': '7F7'}]</msg>
<status starttime="20190121 11:15:57.293" endtime="20190121 11:15:57.313" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:15:57.322" endtime="20190121 11:15:57.341" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:15:57.377" level="INFO">${data} = True</msg>
<status starttime="20190121 11:15:57.344" endtime="20190121 11:15:57.378" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:15:57.392" level="INFO">${res} = True</msg>
<status starttime="20190121 11:15:56.163" endtime="20190121 11:15:57.393" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:15:57.396" endtime="20190121 11:15:57.418" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:56.022" endtime="20190121 11:15:57.420" status="PASS"></status>
</kw>
<kw name="Req_F100">
<doc>Active_DiagnosticInformation</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Active_DiagnosticInformation</arg>
</arguments>
<status starttime="20190121 11:15:57.445" endtime="20190121 11:15:57.463" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:15:57.502" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:15:57.569" level="INFO">${candump_ID} = 129</msg>
<status starttime="20190121 11:15:57.466" endtime="20190121 11:15:57.608" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 00</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:15:57.673" level="INFO">Starting process:
echo 22 F1 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:15:57.745" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:57.759" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:57.762" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:57.636" endtime="20190121 11:15:57.763" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:57.611" endtime="20190121 11:15:57.766" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:15:57.806" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:58.840" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:15:58.842" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:15:58.846" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:58.849" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:15:57.789" endtime="20190121 11:15:58.850" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:15:58.863" level="INFO">3 lines returned</msg>
<msg timestamp="20190121 11:15:58.865" level="INFO">${temp} = [' (1548069357.756293)  can0  7F8   [8]  03 22 F1 00 00 00 00 00', ' (1548069357.769590)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548069357.779602)  can0  7F7   [8]  07 62 F1 00 00 01 01 03']</msg>
<status starttime="20190121 11:15:58.853" endtime="20190121 11:15:58.866" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:15:58.875" level="INFO">(1548069357.756293)  can0  7F8   [8]  03 22 F1 00 00 00 00 00
 (1548069357.769590)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548069357.779602)  can0  7F7   [8]  07 62 F1 00 00 01 01 03</msg>
<msg timestamp="20190121 11:15:58.877" level="INFO">${ret_list} = [{'timestamp': '1548069357.756293', 'channel': 'can0', 'payload': '0322F10000000000', 'id': '7F8'}, {'timestamp': '1548069357.769590', 'channel': 'can0', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status starttime="20190121 11:15:58.869" endtime="20190121 11:15:58.878" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:15:58.884" endtime="20190121 11:15:58.891" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:15:58.901" level="INFO">None</msg>
<msg timestamp="20190121 11:15:58.903" level="INFO">${data} = True</msg>
<status starttime="20190121 11:15:58.894" endtime="20190121 11:15:58.904" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:15:58.908" level="INFO">${res} = True</msg>
<status starttime="20190121 11:15:57.769" endtime="20190121 11:15:58.909" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:15:58.912" endtime="20190121 11:15:58.917" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:57.423" endtime="20190121 11:15:58.920" status="PASS"></status>
</kw>
<kw name="Req_F10D">
<doc>DDS Package Release</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DDS Package Release</arg>
</arguments>
<status starttime="20190121 11:15:58.928" endtime="20190121 11:15:58.934" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:15:58.946" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:15:58.975" level="INFO">${candump_ID} = 131</msg>
<status starttime="20190121 11:15:58.937" endtime="20190121 11:15:58.980" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 0D</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:15:59.005" level="INFO">Starting process:
echo 22 F1 0D | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:15:59.032" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:15:59.045" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:15:59.048" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:15:58.995" endtime="20190121 11:15:59.049" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:58.983" endtime="20190121 11:15:59.052" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:15:59.068" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:00.073" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:00.075" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:00.079" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:00.081" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:15:59.062" endtime="20190121 11:16:00.082" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:00.092" level="INFO">3 lines returned</msg>
<msg timestamp="20190121 11:16:00.094" level="INFO">${temp} = [' (1548069359.042572)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00', ' (1548069359.059637)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548069359.069645)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA']</msg>
<status starttime="20190121 11:16:00.085" endtime="20190121 11:16:00.095" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:00.104" level="INFO">(1548069359.042572)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00
 (1548069359.059637)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548069359.069645)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA</msg>
<msg timestamp="20190121 11:16:00.106" level="INFO">${ret_list} = [{'timestamp': '1548069359.042572', 'channel': 'can0', 'payload': '0322F10D00000000', 'id': '7F8'}, {'timestamp': '1548069359.059637', 'channel': 'can0', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status starttime="20190121 11:16:00.098" endtime="20190121 11:16:00.107" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:00.110" endtime="20190121 11:16:00.120" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:16:00.130" level="INFO">${data} = True</msg>
<status starttime="20190121 11:16:00.123" endtime="20190121 11:16:00.131" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:00.135" level="INFO">${res} = True</msg>
<status starttime="20190121 11:15:59.054" endtime="20190121 11:16:00.136" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:16:00.139" endtime="20190121 11:16:00.144" status="PASS"></status>
</kw>
<status starttime="20190121 11:15:58.922" endtime="20190121 11:16:00.147" status="PASS"></status>
</kw>
<kw name="Req_F103">
<doc>Vedoc Relevant Information</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Vedoc Relevant Information</arg>
</arguments>
<status starttime="20190121 11:16:00.155" endtime="20190121 11:16:00.162" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:00.174" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:16:00.203" level="INFO">${candump_ID} = 133</msg>
<status starttime="20190121 11:16:00.165" endtime="20190121 11:16:00.208" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg timestamp="20190121 11:16:00.225" level="INFO">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:16:00.254" level="INFO">${isotprecv_ID} = 134</msg>
<status starttime="20190121 11:16:00.212" endtime="20190121 11:16:00.256" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 03</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:16:00.283" level="INFO">Starting process:
echo 22 F1 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:16:00.311" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:00.324" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:00.327" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:00.275" endtime="20190121 11:16:00.328" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:00.262" endtime="20190121 11:16:00.331" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:00.349" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:01.354" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:01.356" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:01.360" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:01.363" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:00.343" endtime="20190121 11:16:01.363" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:01.373" level="INFO">3 lines returned</msg>
<msg timestamp="20190121 11:16:01.375" level="INFO">${temp} = [' (1548069360.321784)  can0  7F8   [8]  03 22 F1 03 00 00 00 00', ' (1548069360.339685)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548069360.349699)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69']</msg>
<status starttime="20190121 11:16:01.366" endtime="20190121 11:16:01.376" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:01.385" level="INFO">(1548069360.321784)  can0  7F8   [8]  03 22 F1 03 00 00 00 00
 (1548069360.339685)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548069360.349699)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69</msg>
<msg timestamp="20190121 11:16:01.387" level="INFO">${ret_list} = [{'timestamp': '1548069360.321784', 'channel': 'can0', 'payload': '0322F10300000000', 'id': '7F8'}, {'timestamp': '1548069360.339685', 'channel': 'can0', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status starttime="20190121 11:16:01.379" endtime="20190121 11:16:01.388" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:01.391" endtime="20190121 11:16:01.398" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:16:01.409" level="INFO">${data} = True</msg>
<status starttime="20190121 11:16:01.401" endtime="20190121 11:16:01.410" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:01.413" level="INFO">${res} = True</msg>
<status starttime="20190121 11:16:00.333" endtime="20190121 11:16:01.414" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:16:01.417" endtime="20190121 11:16:01.422" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:00.149" endtime="20190121 11:16:01.425" status="PASS"></status>
</kw>
<kw name="Req_F1A0">
<doc>VIN Current</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current</arg>
</arguments>
<status starttime="20190121 11:16:01.433" endtime="20190121 11:16:01.439" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:01.451" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:16:01.481" level="INFO">${candump_ID} = 136</msg>
<status starttime="20190121 11:16:01.442" endtime="20190121 11:16:01.482" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg timestamp="20190121 11:16:01.503" level="INFO">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:16:01.533" level="INFO">${isotprecv_ID} = 137</msg>
<status starttime="20190121 11:16:01.494" endtime="20190121 11:16:01.534" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 A0</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:16:01.561" level="INFO">Starting process:
echo 22 F1 A0 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:16:01.588" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:01.601" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:01.604" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:01.552" endtime="20190121 11:16:01.605" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:01.544" endtime="20190121 11:16:01.608" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:01.625" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:02.661" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:02.663" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:02.667" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:02.670" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:01.619" endtime="20190121 11:16:02.671" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:02.715" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:16:02.718" level="INFO">${temp} = [' (1548069361.604120)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00']</msg>
<status starttime="20190121 11:16:02.674" endtime="20190121 11:16:02.718" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:02.728" level="INFO">(1548069361.604120)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00</msg>
<msg timestamp="20190121 11:16:02.730" level="INFO">${ret_list} = [{'timestamp': '1548069361.604120', 'channel': 'can0', 'payload': '0322F1A000000000', 'id': '7F8'}]</msg>
<status starttime="20190121 11:16:02.722" endtime="20190121 11:16:02.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:02.734" endtime="20190121 11:16:02.741" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:16:02.751" level="INFO">${data} = True</msg>
<status starttime="20190121 11:16:02.744" endtime="20190121 11:16:02.752" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:02.756" level="INFO">${res} = True</msg>
<status starttime="20190121 11:16:01.612" endtime="20190121 11:16:02.757" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:16:02.760" endtime="20190121 11:16:02.765" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:01.427" endtime="20190121 11:16:02.768" status="PASS"></status>
</kw>
<kw name="Req_F1A0_WRITE">
<doc>VIN Current</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current write</arg>
</arguments>
<status starttime="20190121 11:16:02.776" endtime="20190121 11:16:02.782" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:02.794" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:16:02.823" level="INFO">${candump_ID} = 139</msg>
<status starttime="20190121 11:16:02.785" endtime="20190121 11:16:02.828" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:16:02.852" level="INFO">Starting process:
echo 2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:16:02.880" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:02.915" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:02.918" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:02.843" endtime="20190121 11:16:02.919" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:02.831" endtime="20190121 11:16:02.924" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:16:03.933" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:16:02.928" endtime="20190121 11:16:03.936" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:03.950" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:04.956" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:04.957" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:04.962" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:04.965" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:03.945" endtime="20190121 11:16:04.966" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:04.977" level="INFO">5 lines returned</msg>
<msg timestamp="20190121 11:16:04.979" level="INFO">${temp} = [' (1548069362.891880)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00', ' (1548069362.892425)  can0  7F7   [8]  30 08 0A AA AA AA AA AA', ' (1548069362.902967)  can0  7F8   [8]  21 00 00 00 00 00 00 00', '...</msg>
<status starttime="20190121 11:16:04.970" endtime="20190121 11:16:04.981" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:04.991" level="INFO">(1548069362.891880)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00
 (1548069362.892425)  can0  7F7   [8]  30 08 0A AA AA AA AA AA
 (1548069362.902967)  can0  7F8   [8]  21 00 00 00 00 00 00 00
 (1548069362.912993)  can0  7F8   [8]  22 00 00 00 00 00 00 00
 (1548069362.920106)  can0  7F7   [8]  03 7F 2E 33 AA AA AA AA</msg>
<msg timestamp="20190121 11:16:04.994" level="INFO">${ret_list} = [{'timestamp': '1548069362.891880', 'channel': 'can0', 'payload': '10142EF1A0000000', 'id': '7F8'}, {'timestamp': '1548069362.892425', 'channel': 'can0', 'payload': '30080AAAAAAAAAAA', 'id': '7F7'}, {...</msg>
<status starttime="20190121 11:16:04.984" endtime="20190121 11:16:04.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:04.998" endtime="20190121 11:16:05.006" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:16:05.018" level="INFO">None</msg>
<msg timestamp="20190121 11:16:05.020" level="INFO">${data} = False</msg>
<status starttime="20190121 11:16:05.010" endtime="20190121 11:16:05.021" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:05.025" level="INFO">${res} = False</msg>
<status starttime="20190121 11:16:03.938" endtime="20190121 11:16:05.026" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:05.035" level="INFO">False</msg>
<status starttime="20190121 11:16:05.029" endtime="20190121 11:16:05.037" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:16:05.040" endtime="20190121 11:16:05.046" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:02.770" endtime="20190121 11:16:05.048" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg timestamp="20190121 11:16:05.064" level="INFO">Starting process:
pkill candump</msg>
<msg timestamp="20190121 11:16:05.094" level="INFO">${rm_res} = 141</msg>
<status starttime="20190121 11:16:05.059" endtime="20190121 11:16:05.095" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:05.107" endtime="20190121 11:16:05.182" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:05.186" endtime="20190121 11:16:05.234" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:05.052" endtime="20190121 11:16:05.237" status="PASS"></status>
</kw>
<doc>Can diagnose test</doc>
<tags>
<tag>CAN 1 diagnose test</tag>
</tags>
<timeout value="50 seconds"></timeout>
<status critical="yes" starttime="20190121 11:15:51.911" endtime="20190121 11:16:05.239" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:16:06.726" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:16:06.783" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:16:05.281" endtime="20190121 11:16:06.785" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:05.256" endtime="20190121 11:16:06.786" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:05.250" endtime="20190121 11:16:06.788" status="PASS"></status>
</kw>
<doc>CAN 1 diagnose test</doc>
<status starttime="20190121 11:15:49.247" endtime="20190121 11:16:06.789" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-46886.robot" name="SKTB-46886" id="s1-s10">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:16:07.464" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:16:07.444" endtime="20190121 11:16:07.472" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:16:07.532" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:16:07.534" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:16:09.704" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:16:07.475" endtime="20190121 11:16:09.721" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:07.439" endtime="20190121 11:16:09.723" status="PASS"></status>
</kw>
<test name="SKTB-GPIO FBUS test" id="s1-s10-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:09.767" endtime="20190121 11:16:09.898" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:09.901" endtime="20190121 11:16:10.023" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:10.031" endtime="20190121 11:16:10.177" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:16:12.212" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:16:10.198" endtime="20190121 11:16:12.214" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:16:12.217" endtime="20190121 11:16:12.337" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:16:12.340" endtime="20190121 11:16:12.489" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:16:12.492" endtime="20190121 11:16:12.577" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:16:12.580" endtime="20190121 11:16:12.694" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:16:12.698" endtime="20190121 11:16:12.813" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:16:12.816" endtime="20190121 11:16:12.913" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:16:14.945" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:16:12.916" endtime="20190121 11:16:14.948" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:09.761" endtime="20190121 11:16:14.951" status="PASS"></status>
</kw>
<kw name="Test_GPIO_00">
<doc>Test HI SIDE SWITCH 01</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 01</arg>
</arguments>
<status starttime="20190121 11:16:14.981" endtime="20190121 11:16:14.998" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:15.281" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 43 3D F5</msg>
<status starttime="20190121 11:16:15.001" endtime="20190121 11:16:15.282" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:15.298" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 43 3D F5</msg>
<status starttime="20190121 11:16:15.285" endtime="20190121 11:16:15.315" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:15.581" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 44 3D FE</msg>
<status starttime="20190121 11:16:15.320" endtime="20190121 11:16:15.582" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:15.598" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 44 3D FE</msg>
<status starttime="20190121 11:16:15.594" endtime="20190121 11:16:15.610" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:15.613" endtime="20190121 11:16:15.639" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:15.979" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 47 3D F1</msg>
<status starttime="20190121 11:16:15.642" endtime="20190121 11:16:15.980" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:16.010" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 47 3D F1</msg>
<status starttime="20190121 11:16:15.983" endtime="20190121 11:16:16.017" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:16.322" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 00 01 40 3D FB</msg>
<status starttime="20190121 11:16:16.019" endtime="20190121 11:16:16.323" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:16.338" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 00 01 40 3D FB</msg>
<status starttime="20190121 11:16:16.334" endtime="20190121 11:16:16.352" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:16.355" endtime="20190121 11:16:16.380" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:14.971" endtime="20190121 11:16:16.382" status="PASS"></status>
</kw>
<kw name="Test_GPIO_01">
<doc>Test HI SIDE SWITCH 02</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 02</arg>
</arguments>
<status starttime="20190121 11:16:16.431" endtime="20190121 11:16:16.468" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_2}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:16.799" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 01 01 43 3D F4</msg>
<status starttime="20190121 11:16:16.473" endtime="20190121 11:16:16.800" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:16.807" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 01 01 43 3D F4</msg>
<status starttime="20190121 11:16:16.803" endtime="20190121 11:16:16.836" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_2}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:17.243" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 01 01 44 3D FF</msg>
<status starttime="20190121 11:16:16.839" endtime="20190121 11:16:17.244" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:17.268" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 01 01 44 3D FF</msg>
<status starttime="20190121 11:16:17.247" endtime="20190121 11:16:17.290" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_2} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:17.294" endtime="20190121 11:16:17.319" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_2}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:17.596" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 01 01 45 3D F2</msg>
<status starttime="20190121 11:16:17.323" endtime="20190121 11:16:17.598" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:17.613" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 01 01 45 3D F2</msg>
<status starttime="20190121 11:16:17.601" endtime="20190121 11:16:17.642" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_2}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:17.919" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 00 01 46 3D FC</msg>
<status starttime="20190121 11:16:17.645" endtime="20190121 11:16:17.921" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:17.954" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 00 01 46 3D FC</msg>
<status starttime="20190121 11:16:17.924" endtime="20190121 11:16:17.966" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_2} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:17.969" endtime="20190121 11:16:17.998" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:16.389" endtime="20190121 11:16:18.001" status="PASS"></status>
</kw>
<kw name="Test_GPIO_02">
<doc>Test HI SIDE SWITCH 03</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 03</arg>
</arguments>
<status starttime="20190121 11:16:18.019" endtime="20190121 11:16:18.034" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_3}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:18.349" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 02 01 47 3D F3</msg>
<status starttime="20190121 11:16:18.049" endtime="20190121 11:16:18.350" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:18.378" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 02 01 47 3D F3</msg>
<status starttime="20190121 11:16:18.374" endtime="20190121 11:16:18.390" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_3}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:18.655" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 01 01 40 3D F8</msg>
<status starttime="20190121 11:16:18.393" endtime="20190121 11:16:18.656" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:18.676" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 01 01 40 3D F8</msg>
<status starttime="20190121 11:16:18.659" endtime="20190121 11:16:18.686" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_3} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:18.689" endtime="20190121 11:16:18.706" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_3}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:18.989" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 02 01 41 3D F5</msg>
<status starttime="20190121 11:16:18.709" endtime="20190121 11:16:18.990" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:19.004" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 02 01 41 3D F5</msg>
<status starttime="20190121 11:16:18.993" endtime="20190121 11:16:19.018" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_3}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:19.279" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 00 01 42 3D FB</msg>
<status starttime="20190121 11:16:19.021" endtime="20190121 11:16:19.279" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:19.299" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 00 01 42 3D FB</msg>
<status starttime="20190121 11:16:19.283" endtime="20190121 11:16:19.305" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_3} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:19.308" endtime="20190121 11:16:19.316" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:18.012" endtime="20190121 11:16:19.319" status="PASS"></status>
</kw>
<kw name="Test_GPIO_03">
<doc>Test HI SIDE SWITCH 03</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 03</arg>
</arguments>
<status starttime="20190121 11:16:19.327" endtime="20190121 11:16:19.332" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_4}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:19.537" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 03 01 41 3D F4</msg>
<status starttime="20190121 11:16:19.335" endtime="20190121 11:16:19.538" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:19.545" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 03 01 41 3D F4</msg>
<status starttime="20190121 11:16:19.541" endtime="20190121 11:16:19.547" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_4}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:19.750" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 01 01 42 3D FB</msg>
<status starttime="20190121 11:16:19.550" endtime="20190121 11:16:19.751" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:19.759" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 01 01 42 3D FB</msg>
<status starttime="20190121 11:16:19.755" endtime="20190121 11:16:19.761" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_4} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:19.764" endtime="20190121 11:16:19.773" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_4}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:19.978" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 03 01 43 3D F6</msg>
<status starttime="20190121 11:16:19.776" endtime="20190121 11:16:19.978" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:19.986" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 03 01 43 3D F6</msg>
<status starttime="20190121 11:16:19.981" endtime="20190121 11:16:19.990" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_4}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:20.213" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 00 01 44 3D FC</msg>
<status starttime="20190121 11:16:19.993" endtime="20190121 11:16:20.214" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:20.221" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 00 01 44 3D FC</msg>
<status starttime="20190121 11:16:20.217" endtime="20190121 11:16:20.225" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_4} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:20.228" endtime="20190121 11:16:20.237" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:19.321" endtime="20190121 11:16:20.239" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:20.249" endtime="20190121 11:16:20.296" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:20.299" endtime="20190121 11:16:20.345" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:20.349" endtime="20190121 11:16:20.394" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:16:22.403" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:16:20.398" endtime="20190121 11:16:22.405" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:16:22.408" endtime="20190121 11:16:22.454" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:16:22.458" endtime="20190121 11:16:22.503" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:20.242" endtime="20190121 11:16:22.506" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-46886</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status critical="yes" starttime="20190121 11:16:09.729" endtime="20190121 11:16:22.507" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:16:23.995" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:16:24.050" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:16:22.557" endtime="20190121 11:16:24.070" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:22.524" endtime="20190121 11:16:24.072" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:22.519" endtime="20190121 11:16:24.074" status="PASS"></status>
</kw>
<doc>Chorus Fbus GPIO Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:16:06.947" endtime="20190121 11:16:24.075" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-47669.robot" name="SKTB-47669" id="s1-s11">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:16:24.878" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:16:24.873" endtime="20190121 11:16:24.892" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:16:24.911" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:16:24.913" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:16:27.226" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:16:24.895" endtime="20190121 11:16:27.228" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:24.844" endtime="20190121 11:16:27.230" status="PASS"></status>
</kw>
<test name="SKTB-47669" id="s1-s11-t1">
<kw type="setup" name="Test_precondition">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status starttime="20190121 11:16:27.313" endtime="20190121 11:16:27.345" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:27.347" endtime="20190121 11:16:27.514" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:27.524" endtime="20190121 11:16:27.686" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:16:27.689" endtime="20190121 11:16:27.800" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status starttime="20190121 11:16:27.803" endtime="20190121 11:16:27.900" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:16:27.903" endtime="20190121 11:16:28.038" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:16:28.061" endtime="20190121 11:16:28.199" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:16:30.230" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:16:28.202" endtime="20190121 11:16:30.234" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:16:30.237" endtime="20190121 11:16:30.339" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:16:30.342" endtime="20190121 11:16:30.453" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${4}</arg>
</arguments>
<msg timestamp="20190121 11:16:34.479" level="INFO">Slept 4 seconds</msg>
<status starttime="20190121 11:16:30.456" endtime="20190121 11:16:34.482" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:27.265" endtime="20190121 11:16:34.484" status="PASS"></status>
</kw>
<kw name="cansend_500k">
<doc>Trigger to send can message on can with bitrate 500000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 500000</arg>
</arguments>
<status starttime="20190121 11:16:34.493" endtime="20190121 11:16:34.498" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:16:34.520" endtime="20190121 11:16:34.528" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:34.537" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:16:34.587" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:34.672" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:34.675" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:34.531" endtime="20190121 11:16:34.676" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:34.679" endtime="20190121 11:16:34.688" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:34.698" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:16:34.726" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:34.782" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:34.785" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:34.691" endtime="20190121 11:16:34.786" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:34.790" endtime="20190121 11:16:34.799" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:34.809" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:16:34.837" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:34.921" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:34.924" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:34.802" endtime="20190121 11:16:34.925" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:34.929" endtime="20190121 11:16:34.938" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:16:34.511" endtime="20190121 11:16:34.942" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:34.953" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190121 11:16:34.984" level="INFO">${candump_ID} = 145</msg>
<status starttime="20190121 11:16:34.945" endtime="20190121 11:16:34.989" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:16:35.013" endtime="20190121 11:16:35.022" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:35.033" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status starttime="20190121 11:16:35.025" endtime="20190121 11:16:35.034" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:35.037" endtime="20190121 11:16:35.042" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:35.250" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status starttime="20190121 11:16:35.045" endtime="20190121 11:16:35.251" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:35.260" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status starttime="20190121 11:16:35.255" endtime="20190121 11:16:35.262" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:35.265" endtime="20190121 11:16:35.272" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:34.991" endtime="20190121 11:16:35.276" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:16:35.286" endtime="20190121 11:16:35.291" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:35.301" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:16:35.294" endtime="20190121 11:16:35.302" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:35.305" endtime="20190121 11:16:35.310" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:35.513" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status starttime="20190121 11:16:35.313" endtime="20190121 11:16:35.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:35.522" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status starttime="20190121 11:16:35.518" endtime="20190121 11:16:35.525" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:35.528" endtime="20190121 11:16:35.536" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:35.278" endtime="20190121 11:16:35.538" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:16:35.541" endtime="20190121 11:16:35.547" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:35.566" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:35.558" endtime="20190121 11:16:35.567" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:35.570" endtime="20190121 11:16:35.576" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:35.766" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:35.579" endtime="20190121 11:16:35.767" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:35.549" endtime="20190121 11:16:35.770" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:35.782" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:36.788" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:36.789" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:36.794" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:36.796" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:35.778" endtime="20190121 11:16:36.797" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:36.805" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:16:36.807" level="INFO">${temp} = [' (1548069395.628072)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:16:36.800" endtime="20190121 11:16:36.808" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:36.816" level="INFO">(1548069395.628072)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:16:36.818" level="INFO">${ret_list} = [{'timestamp': '1548069395.628072', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:16:36.811" endtime="20190121 11:16:36.819" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:36.822" endtime="20190121 11:16:36.827" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:36.831" level="INFO">${resp_list} = [{'timestamp': '1548069395.628072', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:16:35.772" endtime="20190121 11:16:36.832" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:16:36.842" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:16:36.835" endtime="20190121 11:16:36.843" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:16:36.846" endtime="20190121 11:16:36.852" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:16:36.941" level="INFO">${value} = True</msg>
<status starttime="20190121 11:16:36.854" endtime="20190121 11:16:36.942" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:16:36.946" endtime="20190121 11:16:36.951" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:36.954" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:16:34.500" endtime="20190121 11:16:36.955" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:16:36.958" endtime="20190121 11:16:36.962" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:34.487" endtime="20190121 11:16:36.965" status="PASS"></status>
</kw>
<kw name="cansend_500k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 500000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 500000</arg>
</arguments>
<status starttime="20190121 11:16:36.973" endtime="20190121 11:16:36.978" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:16:37.003" endtime="20190121 11:16:37.011" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:37.021" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:16:37.049" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:37.122" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:37.125" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:37.014" endtime="20190121 11:16:37.126" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:37.130" endtime="20190121 11:16:37.138" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:37.149" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:16:37.176" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:37.233" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:37.237" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:37.141" endtime="20190121 11:16:37.238" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:37.242" endtime="20190121 11:16:37.251" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:37.260" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:16:37.288" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:37.395" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:37.402" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:37.254" endtime="20190121 11:16:37.403" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:37.441" endtime="20190121 11:16:37.497" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:16:36.994" endtime="20190121 11:16:37.502" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:37.544" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190121 11:16:37.613" level="INFO">${candump_ID} = 149</msg>
<status starttime="20190121 11:16:37.505" endtime="20190121 11:16:37.615" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:16:37.646" endtime="20190121 11:16:37.655" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:37.665" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status starttime="20190121 11:16:37.658" endtime="20190121 11:16:37.666" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:37.669" endtime="20190121 11:16:37.674" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:37.882" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status starttime="20190121 11:16:37.677" endtime="20190121 11:16:37.883" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:37.891" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status starttime="20190121 11:16:37.887" endtime="20190121 11:16:37.894" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:37.896" endtime="20190121 11:16:37.903" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:37.624" endtime="20190121 11:16:37.906" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:16:37.938" endtime="20190121 11:16:37.955" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:37.965" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:16:37.958" endtime="20190121 11:16:37.973" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:37.977" endtime="20190121 11:16:37.995" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:38.202" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status starttime="20190121 11:16:37.998" endtime="20190121 11:16:38.203" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:38.211" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status starttime="20190121 11:16:38.207" endtime="20190121 11:16:38.214" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:38.217" endtime="20190121 11:16:38.224" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:37.915" endtime="20190121 11:16:38.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:16:38.230" endtime="20190121 11:16:38.236" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:38.259" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:38.251" endtime="20190121 11:16:38.260" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:38.263" endtime="20190121 11:16:38.269" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:38.463" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:38.272" endtime="20190121 11:16:38.465" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:38.238" endtime="20190121 11:16:38.468" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:38.481" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:39.486" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:39.487" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:39.492" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:39.494" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:38.476" endtime="20190121 11:16:39.495" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:39.503" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:16:39.506" level="INFO">${temp} = [' (1548069398.325011)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:16:39.498" endtime="20190121 11:16:39.506" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:39.514" level="INFO">(1548069398.325011)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:16:39.516" level="INFO">${ret_list} = [{'timestamp': '1548069398.325011', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:16:39.509" endtime="20190121 11:16:39.517" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:39.520" endtime="20190121 11:16:39.525" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:39.529" level="INFO">${resp_list} = [{'timestamp': '1548069398.325011', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:16:38.470" endtime="20190121 11:16:39.530" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:16:39.540" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:16:39.533" endtime="20190121 11:16:39.541" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:16:39.544" endtime="20190121 11:16:39.549" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:16:39.584" level="INFO">${value} = True</msg>
<status starttime="20190121 11:16:39.552" endtime="20190121 11:16:39.585" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:16:39.588" endtime="20190121 11:16:39.593" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:39.596" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:16:36.980" endtime="20190121 11:16:39.597" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:16:39.600" endtime="20190121 11:16:39.605" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:36.967" endtime="20190121 11:16:39.607" status="PASS"></status>
</kw>
<kw name="cansend_250k">
<doc>Trigger to send can message on can with bitrate 250000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 250000</arg>
</arguments>
<status starttime="20190121 11:16:39.617" endtime="20190121 11:16:39.622" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:16:39.645" endtime="20190121 11:16:39.653" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:39.662" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:16:39.690" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:39.761" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:39.764" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:39.656" endtime="20190121 11:16:39.765" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:39.769" endtime="20190121 11:16:39.778" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:39.789" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:16:39.817" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:39.874" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:39.878" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:39.782" endtime="20190121 11:16:39.879" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:39.883" endtime="20190121 11:16:39.891" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:39.901" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:16:39.929" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:40.010" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:40.014" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:39.894" endtime="20190121 11:16:40.015" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:40.019" endtime="20190121 11:16:40.027" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:16:39.635" endtime="20190121 11:16:40.030" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:40.040" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190121 11:16:40.071" level="INFO">${candump_ID} = 153</msg>
<status starttime="20190121 11:16:40.033" endtime="20190121 11:16:40.072" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:16:40.099" endtime="20190121 11:16:40.108" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:40.118" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status starttime="20190121 11:16:40.111" endtime="20190121 11:16:40.119" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:40.122" endtime="20190121 11:16:40.128" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:40.330" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status starttime="20190121 11:16:40.130" endtime="20190121 11:16:40.331" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:40.339" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status starttime="20190121 11:16:40.334" endtime="20190121 11:16:40.341" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:40.344" endtime="20190121 11:16:40.351" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:40.078" endtime="20190121 11:16:40.354" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:16:40.365" endtime="20190121 11:16:40.370" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:40.379" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:16:40.373" endtime="20190121 11:16:40.380" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:40.383" endtime="20190121 11:16:40.389" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:40.591" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status starttime="20190121 11:16:40.392" endtime="20190121 11:16:40.592" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:40.599" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status starttime="20190121 11:16:40.595" endtime="20190121 11:16:40.603" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:40.606" endtime="20190121 11:16:40.613" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:40.356" endtime="20190121 11:16:40.615" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:16:40.618" endtime="20190121 11:16:40.624" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:40.644" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:40.635" endtime="20190121 11:16:40.645" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:40.648" endtime="20190121 11:16:40.654" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:40.846" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:40.657" endtime="20190121 11:16:40.847" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:40.626" endtime="20190121 11:16:40.849" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:40.862" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:41.867" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:41.869" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:41.873" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:41.876" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:40.858" endtime="20190121 11:16:41.877" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:41.885" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:16:41.887" level="INFO">${temp} = [' (1548069400.707315)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:16:41.880" endtime="20190121 11:16:41.888" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:41.895" level="INFO">(1548069400.707315)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:16:41.898" level="INFO">${ret_list} = [{'timestamp': '1548069400.707315', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:16:41.891" endtime="20190121 11:16:41.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:41.901" endtime="20190121 11:16:41.907" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:41.911" level="INFO">${resp_list} = [{'timestamp': '1548069400.707315', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:16:40.851" endtime="20190121 11:16:41.912" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:16:41.921" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:16:41.915" endtime="20190121 11:16:41.922" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:16:41.925" endtime="20190121 11:16:41.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:16:41.967" level="INFO">${value} = True</msg>
<status starttime="20190121 11:16:41.935" endtime="20190121 11:16:41.968" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:16:41.970" endtime="20190121 11:16:41.975" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:41.978" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:16:39.625" endtime="20190121 11:16:41.979" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:16:41.982" endtime="20190121 11:16:41.987" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:39.610" endtime="20190121 11:16:41.989" status="PASS"></status>
</kw>
<kw name="cansend_250k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 250000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 250000</arg>
</arguments>
<status starttime="20190121 11:16:41.997" endtime="20190121 11:16:42.002" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:16:42.040" endtime="20190121 11:16:42.048" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:42.057" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:16:42.085" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:42.155" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:42.159" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:42.051" endtime="20190121 11:16:42.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:42.164" endtime="20190121 11:16:42.173" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:42.183" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:16:42.211" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:42.267" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:42.270" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:42.176" endtime="20190121 11:16:42.271" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:42.276" endtime="20190121 11:16:42.285" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:42.294" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:16:42.322" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:42.406" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:42.409" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:42.288" endtime="20190121 11:16:42.410" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:42.414" endtime="20190121 11:16:42.422" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:16:42.030" endtime="20190121 11:16:42.426" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:42.436" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190121 11:16:42.471" level="INFO">${candump_ID} = 157</msg>
<status starttime="20190121 11:16:42.429" endtime="20190121 11:16:42.473" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:16:42.497" endtime="20190121 11:16:42.503" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:42.513" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status starttime="20190121 11:16:42.506" endtime="20190121 11:16:42.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:42.517" endtime="20190121 11:16:42.522" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:42.726" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status starttime="20190121 11:16:42.525" endtime="20190121 11:16:42.727" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:42.735" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status starttime="20190121 11:16:42.730" endtime="20190121 11:16:42.738" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:42.741" endtime="20190121 11:16:42.748" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:42.475" endtime="20190121 11:16:42.750" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:16:42.761" endtime="20190121 11:16:42.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:42.776" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:16:42.769" endtime="20190121 11:16:42.777" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:42.779" endtime="20190121 11:16:42.785" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:42.986" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status starttime="20190121 11:16:42.788" endtime="20190121 11:16:42.987" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:42.994" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status starttime="20190121 11:16:42.990" endtime="20190121 11:16:42.997" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:43.000" endtime="20190121 11:16:43.008" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:42.752" endtime="20190121 11:16:43.010" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:16:43.013" endtime="20190121 11:16:43.019" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:43.043" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:43.031" endtime="20190121 11:16:43.043" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:43.046" endtime="20190121 11:16:43.052" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:43.243" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:43.055" endtime="20190121 11:16:43.244" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:43.021" endtime="20190121 11:16:43.247" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:43.262" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:44.267" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:44.269" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:44.273" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:44.275" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:43.255" endtime="20190121 11:16:44.276" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:44.285" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:16:44.287" level="INFO">${temp} = [' (1548069403.106333)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:16:44.279" endtime="20190121 11:16:44.288" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:44.295" level="INFO">(1548069403.106333)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:16:44.297" level="INFO">${ret_list} = [{'timestamp': '1548069403.106333', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:16:44.290" endtime="20190121 11:16:44.298" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:44.301" endtime="20190121 11:16:44.307" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:44.311" level="INFO">${resp_list} = [{'timestamp': '1548069403.106333', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:16:43.249" endtime="20190121 11:16:44.312" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:16:44.322" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:16:44.315" endtime="20190121 11:16:44.323" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:16:44.326" endtime="20190121 11:16:44.332" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:16:44.366" level="INFO">${value} = True</msg>
<status starttime="20190121 11:16:44.335" endtime="20190121 11:16:44.367" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:16:44.370" endtime="20190121 11:16:44.375" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:44.378" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:16:42.004" endtime="20190121 11:16:44.379" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:16:44.382" endtime="20190121 11:16:44.386" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:41.991" endtime="20190121 11:16:44.389" status="PASS"></status>
</kw>
<kw name="cansend_125k">
<doc>Trigger to send can message on can with bitrate 125000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 125000</arg>
</arguments>
<status starttime="20190121 11:16:44.397" endtime="20190121 11:16:44.402" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:16:44.424" endtime="20190121 11:16:44.431" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:44.441" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:16:44.469" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:44.540" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:44.543" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:44.435" endtime="20190121 11:16:44.544" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:44.548" endtime="20190121 11:16:44.557" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:44.567" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:16:44.595" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:44.652" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:44.655" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:44.560" endtime="20190121 11:16:44.656" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:44.660" endtime="20190121 11:16:44.669" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:44.679" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:16:44.706" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:44.793" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:44.796" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:44.672" endtime="20190121 11:16:44.797" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:44.801" endtime="20190121 11:16:44.810" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:16:44.414" endtime="20190121 11:16:44.813" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:44.823" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190121 11:16:44.853" level="INFO">${candump_ID} = 161</msg>
<status starttime="20190121 11:16:44.816" endtime="20190121 11:16:44.854" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:16:44.881" endtime="20190121 11:16:44.886" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:44.900" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status starttime="20190121 11:16:44.890" endtime="20190121 11:16:44.901" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:44.904" endtime="20190121 11:16:44.911" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:45.118" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status starttime="20190121 11:16:44.914" endtime="20190121 11:16:45.119" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:45.127" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status starttime="20190121 11:16:45.122" endtime="20190121 11:16:45.129" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:45.132" endtime="20190121 11:16:45.139" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:44.864" endtime="20190121 11:16:45.142" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:16:45.153" endtime="20190121 11:16:45.158" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:45.168" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:16:45.161" endtime="20190121 11:16:45.169" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:45.172" endtime="20190121 11:16:45.177" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:45.379" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status starttime="20190121 11:16:45.180" endtime="20190121 11:16:45.381" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:45.389" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status starttime="20190121 11:16:45.384" endtime="20190121 11:16:45.391" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:45.394" endtime="20190121 11:16:45.402" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:45.144" endtime="20190121 11:16:45.404" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:16:45.407" endtime="20190121 11:16:45.413" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:45.432" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:45.423" endtime="20190121 11:16:45.433" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:45.437" endtime="20190121 11:16:45.445" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:45.634" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:45.448" endtime="20190121 11:16:45.635" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:45.415" endtime="20190121 11:16:45.638" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:45.652" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:46.668" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:46.670" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:46.674" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:46.676" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:45.647" endtime="20190121 11:16:46.677" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:46.686" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:16:46.688" level="INFO">${temp} = [' (1548069405.498173)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:16:46.680" endtime="20190121 11:16:46.689" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:46.696" level="INFO">(1548069405.498173)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:16:46.698" level="INFO">${ret_list} = [{'timestamp': '1548069405.498173', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:16:46.692" endtime="20190121 11:16:46.699" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:46.702" endtime="20190121 11:16:46.708" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:46.713" level="INFO">${resp_list} = [{'timestamp': '1548069405.498173', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:16:45.640" endtime="20190121 11:16:46.714" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:16:46.723" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:16:46.717" endtime="20190121 11:16:46.724" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:16:46.727" endtime="20190121 11:16:46.732" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:16:46.767" level="INFO">${value} = True</msg>
<status starttime="20190121 11:16:46.735" endtime="20190121 11:16:46.768" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:16:46.771" endtime="20190121 11:16:46.775" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:46.781" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:16:44.404" endtime="20190121 11:16:46.782" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:16:46.785" endtime="20190121 11:16:46.789" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:44.391" endtime="20190121 11:16:46.792" status="PASS"></status>
</kw>
<kw name="cansend_125k_ex">
<doc>Trigger to send can message on can with 29 ID and bitrate 125000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 ID and bitrate 125000</arg>
</arguments>
<status starttime="20190121 11:16:46.800" endtime="20190121 11:16:46.805" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:16:46.831" endtime="20190121 11:16:46.838" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:46.847" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:16:46.922" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:47.009" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:47.012" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:46.841" endtime="20190121 11:16:47.013" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:47.017" endtime="20190121 11:16:47.026" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:47.036" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:16:47.064" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:47.120" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:47.123" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:47.029" endtime="20190121 11:16:47.124" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:47.128" endtime="20190121 11:16:47.136" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:47.146" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:16:47.177" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:47.261" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:47.265" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:47.139" endtime="20190121 11:16:47.266" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:47.270" endtime="20190121 11:16:47.279" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:16:46.817" endtime="20190121 11:16:47.282" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:47.293" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190121 11:16:47.363" level="INFO">${candump_ID} = 165</msg>
<status starttime="20190121 11:16:47.286" endtime="20190121 11:16:47.369" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:16:47.425" endtime="20190121 11:16:47.442" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:47.467" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status starttime="20190121 11:16:47.445" endtime="20190121 11:16:47.468" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:47.471" endtime="20190121 11:16:47.489" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:47.722" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status starttime="20190121 11:16:47.492" endtime="20190121 11:16:47.723" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:47.731" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status starttime="20190121 11:16:47.726" endtime="20190121 11:16:47.733" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:47.736" endtime="20190121 11:16:47.743" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:47.389" endtime="20190121 11:16:47.746" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:16:47.756" endtime="20190121 11:16:47.761" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:47.771" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:16:47.764" endtime="20190121 11:16:47.772" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:47.775" endtime="20190121 11:16:47.781" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:47.984" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status starttime="20190121 11:16:47.784" endtime="20190121 11:16:47.985" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:47.993" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status starttime="20190121 11:16:47.988" endtime="20190121 11:16:47.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:47.998" endtime="20190121 11:16:48.006" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:47.748" endtime="20190121 11:16:48.009" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:16:48.012" endtime="20190121 11:16:48.017" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:48.041" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:48.029" endtime="20190121 11:16:48.043" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:48.045" endtime="20190121 11:16:48.051" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:48.241" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:48.054" endtime="20190121 11:16:48.242" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:48.020" endtime="20190121 11:16:48.245" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:48.257" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:49.262" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:49.264" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:49.269" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:49.271" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:48.253" endtime="20190121 11:16:49.272" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:49.281" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:16:49.283" level="INFO">${temp} = [' (1548069408.105071)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:16:49.275" endtime="20190121 11:16:49.284" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:49.292" level="INFO">(1548069408.105071)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:16:49.294" level="INFO">${ret_list} = [{'timestamp': '1548069408.105071', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:16:49.287" endtime="20190121 11:16:49.295" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:49.297" endtime="20190121 11:16:49.303" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:49.307" level="INFO">${resp_list} = [{'timestamp': '1548069408.105071', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:16:48.247" endtime="20190121 11:16:49.308" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:16:49.317" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:16:49.311" endtime="20190121 11:16:49.318" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:16:49.321" endtime="20190121 11:16:49.327" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:16:49.362" level="INFO">${value} = True</msg>
<status starttime="20190121 11:16:49.330" endtime="20190121 11:16:49.363" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:16:49.366" endtime="20190121 11:16:49.370" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:49.374" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:16:46.807" endtime="20190121 11:16:49.375" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:16:49.378" endtime="20190121 11:16:49.382" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:46.794" endtime="20190121 11:16:49.385" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate_1000k_negativtest">
<doc>Can setup channel and not supported bitrate 1000k negativtest</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and not supported bitrate 1000k negativtest</arg>
</arguments>
<status starttime="20190121 11:16:49.393" endtime="20190121 11:16:49.398" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate_negativtest">
<doc>Can setup channel and bitrate negativtest</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${1000_KBAUD}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate negativtest</arg>
</arguments>
<status starttime="20190121 11:16:49.409" endtime="20190121 11:16:49.413" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:49.423" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 03</msg>
<status starttime="20190121 11:16:49.416" endtime="20190121 11:16:49.424" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:49.426" endtime="20190121 11:16:49.432" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:49.635" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 04 00 01 45 E5 C3</msg>
<status starttime="20190121 11:16:49.435" endtime="20190121 11:16:49.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:49.643" level="INFO">1E 10 54 93 00 08 00 0E AA 03 04 00 01 45 E5 C3</msg>
<status starttime="20190121 11:16:49.639" endtime="20190121 11:16:49.646" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Contain">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:49.649" endtime="20190121 11:16:49.656" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:49.400" endtime="20190121 11:16:49.659" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:49.387" endtime="20190121 11:16:49.661" status="PASS"></status>
</kw>
<kw name="trigger_can_message_125k">
<doc>Trigger to send 5 can messages on specified can channel without change any settings</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send 5 can messages on specified can channel without change any settings</arg>
</arguments>
<status starttime="20190121 11:16:49.669" endtime="20190121 11:16:49.674" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:16:49.686" endtime="20190121 11:16:49.694" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:49.703" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:16:49.731" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:49.805" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:49.808" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:49.697" endtime="20190121 11:16:49.809" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:49.813" endtime="20190121 11:16:49.821" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:49.832" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:16:49.860" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:49.916" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:49.919" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:49.825" endtime="20190121 11:16:49.920" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:49.924" endtime="20190121 11:16:49.933" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:49.947" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:16:49.975" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:50.058" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:50.062" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:49.936" endtime="20190121 11:16:50.063" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:50.066" endtime="20190121 11:16:50.075" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:16:49.677" endtime="20190121 11:16:50.078" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:50.088" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190121 11:16:50.118" level="INFO">${candump_ID} = 169</msg>
<status starttime="20190121 11:16:50.081" endtime="20190121 11:16:50.119" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Repeat Keyword">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg timestamp="20190121 11:16:50.135" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:50.163" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:50.154" endtime="20190121 11:16:50.163" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:50.166" endtime="20190121 11:16:50.172" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:50.369" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:50.175" endtime="20190121 11:16:50.370" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:50.138" endtime="20190121 11:16:50.372" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:50.373" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:50.399" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:50.384" endtime="20190121 11:16:50.399" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:50.417" endtime="20190121 11:16:50.434" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:50.647" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:50.437" endtime="20190121 11:16:50.649" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:50.375" endtime="20190121 11:16:50.651" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:50.652" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:50.672" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:50.663" endtime="20190121 11:16:50.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:50.675" endtime="20190121 11:16:50.682" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:50.871" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:50.685" endtime="20190121 11:16:50.872" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:50.655" endtime="20190121 11:16:50.875" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:50.876" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:50.896" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:50.888" endtime="20190121 11:16:50.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:50.902" endtime="20190121 11:16:50.907" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:51.099" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:50.910" endtime="20190121 11:16:51.100" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:50.878" endtime="20190121 11:16:51.103" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:51.104" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:51.123" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:51.115" endtime="20190121 11:16:51.124" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:51.127" endtime="20190121 11:16:51.133" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:51.323" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:51.135" endtime="20190121 11:16:51.324" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:51.106" endtime="20190121 11:16:51.327" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:50.131" endtime="20190121 11:16:51.328" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:51.346" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:52.390" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:52.392" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:52.407" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:52.409" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:51.337" endtime="20190121 11:16:52.410" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:52.424" level="INFO">5 lines returned</msg>
<msg timestamp="20190121 11:16:52.427" level="INFO">${temp} = [' (1548069410.230955)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1548069410.510369)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1548069410.734911)  can2  18EF1B05   [8]  11 22 33 44 ...</msg>
<status starttime="20190121 11:16:52.413" endtime="20190121 11:16:52.428" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:52.461" level="INFO">(1548069410.230955)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548069410.510369)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548069410.734911)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548069410.960682)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548069411.186371)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:16:52.463" level="INFO">${ret_list} = [{'timestamp': '1548069410.230955', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}, {'timestamp': '1548069410.510369', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18E...</msg>
<status starttime="20190121 11:16:52.431" endtime="20190121 11:16:52.464" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:52.476" endtime="20190121 11:16:52.494" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:52.499" level="INFO">${resp_list} = [{'timestamp': '1548069410.230955', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}, {'timestamp': '1548069410.510369', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18E...</msg>
<status starttime="20190121 11:16:51.330" endtime="20190121 11:16:52.500" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:16:52.515" level="INFO">${res_dict} = {'count': 5, 'status': True}</msg>
<status starttime="20190121 11:16:52.503" endtime="20190121 11:16:52.516" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:16:52.519" endtime="20190121 11:16:52.558" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:16:52.638" level="INFO">${value} = True</msg>
<status starttime="20190121 11:16:52.561" endtime="20190121 11:16:52.639" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:16:52.660" endtime="20190121 11:16:52.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:16:52.732" level="INFO">${count} = 5</msg>
<status starttime="20190121 11:16:52.677" endtime="20190121 11:16:52.733" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${5}</arg>
<arg>${count}</arg>
</arguments>
<status starttime="20190121 11:16:52.736" endtime="20190121 11:16:52.742" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:49.663" endtime="20190121 11:16:52.745" status="PASS"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:16:52.762" endtime="20190121 11:16:52.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:52.776" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status starttime="20190121 11:16:52.769" endtime="20190121 11:16:52.777" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:52.780" endtime="20190121 11:16:52.786" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:52.989" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 46 E3 C6</msg>
<status starttime="20190121 11:16:52.789" endtime="20190121 11:16:52.990" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:52.997" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 46 E3 C6</msg>
<status starttime="20190121 11:16:52.993" endtime="20190121 11:16:53.000" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:53.003" endtime="20190121 11:16:53.011" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:52.752" endtime="20190121 11:16:53.014" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:52.747" endtime="20190121 11:16:53.016" status="PASS"></status>
</kw>
<kw name="channel_off_trigger_can_message_125k_negativtest">
<doc>Set the channel off and trigger to send 5 can messages on specified can channel</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the channel off and trigger to send 5 can messages on specified can channel</arg>
</arguments>
<status starttime="20190121 11:16:53.024" endtime="20190121 11:16:53.029" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:16:53.041" endtime="20190121 11:16:53.049" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:53.058" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:16:53.086" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:53.156" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:53.159" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:53.051" endtime="20190121 11:16:53.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:53.165" endtime="20190121 11:16:53.174" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:53.185" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:16:53.215" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:53.275" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:53.278" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:53.178" endtime="20190121 11:16:53.279" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:53.283" endtime="20190121 11:16:53.292" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:16:53.301" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:16:53.329" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:53.411" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:53.414" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:16:53.295" endtime="20190121 11:16:53.415" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:16:53.419" endtime="20190121 11:16:53.428" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:16:53.031" endtime="20190121 11:16:53.431" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:16:53.441" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190121 11:16:53.474" level="INFO">${candump_ID} = 173</msg>
<status starttime="20190121 11:16:53.434" endtime="20190121 11:16:53.475" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Repeat Keyword">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg timestamp="20190121 11:16:53.511" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:53.535" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:53.527" endtime="20190121 11:16:53.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:53.539" endtime="20190121 11:16:53.545" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:53.738" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:53.549" endtime="20190121 11:16:53.739" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:53.514" endtime="20190121 11:16:53.742" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:53.743" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:53.763" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:53.754" endtime="20190121 11:16:53.763" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:53.766" endtime="20190121 11:16:53.772" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:53.961" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:53.775" endtime="20190121 11:16:53.962" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:53.745" endtime="20190121 11:16:53.964" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:53.965" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:53.985" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:53.976" endtime="20190121 11:16:53.986" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:53.989" endtime="20190121 11:16:53.994" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:54.185" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:53.998" endtime="20190121 11:16:54.186" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:53.968" endtime="20190121 11:16:54.189" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:54.190" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:54.209" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:54.201" endtime="20190121 11:16:54.210" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:54.213" endtime="20190121 11:16:54.219" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:54.413" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:54.222" endtime="20190121 11:16:54.414" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:54.192" endtime="20190121 11:16:54.417" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:54.418" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:54.438" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:16:54.429" endtime="20190121 11:16:54.438" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:54.441" endtime="20190121 11:16:54.447" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:54.636" level="INFO">${info} = </msg>
<status starttime="20190121 11:16:54.450" endtime="20190121 11:16:54.638" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:54.420" endtime="20190121 11:16:54.640" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:53.501" endtime="20190121 11:16:54.641" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:16:54.654" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:16:55.659" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:16:55.661" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:16:55.665" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:16:55.667" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:16:54.650" endtime="20190121 11:16:55.668" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:16:55.677" level="INFO">0 lines returned</msg>
<msg timestamp="20190121 11:16:55.679" level="INFO">${temp} = []</msg>
<status starttime="20190121 11:16:55.671" endtime="20190121 11:16:55.680" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:16:55.690" level="INFO">${ret_list} = []</msg>
<status starttime="20190121 11:16:55.684" endtime="20190121 11:16:55.690" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:16:55.693" endtime="20190121 11:16:55.703" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:16:55.707" level="INFO">${resp_list} = []</msg>
<status starttime="20190121 11:16:54.643" endtime="20190121 11:16:55.708" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:16:55.717" level="INFO">${res_dict} = {'count': 0, 'status': False}</msg>
<status starttime="20190121 11:16:55.710" endtime="20190121 11:16:55.718" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:16:55.721" endtime="20190121 11:16:55.726" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:16:55.760" level="INFO">${value} = False</msg>
<status starttime="20190121 11:16:55.729" endtime="20190121 11:16:55.761" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:16:55.764" endtime="20190121 11:16:55.768" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:16:55.805" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:16:55.771" endtime="20190121 11:16:55.806" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${0}</arg>
<arg>${count}</arg>
</arguments>
<status starttime="20190121 11:16:55.808" endtime="20190121 11:16:55.814" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:53.018" endtime="20190121 11:16:55.817" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status starttime="20190121 11:16:55.827" endtime="20190121 11:16:55.832" status="PASS"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:16:55.849" endtime="20190121 11:16:55.853" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:16:55.863" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status starttime="20190121 11:16:55.856" endtime="20190121 11:16:55.864" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:16:55.867" endtime="20190121 11:16:55.872" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:16:56.075" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status starttime="20190121 11:16:55.875" endtime="20190121 11:16:56.076" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:16:56.084" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status starttime="20190121 11:16:56.079" endtime="20190121 11:16:56.086" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:16:56.089" endtime="20190121 11:16:56.097" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:55.840" endtime="20190121 11:16:56.099" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:55.834" endtime="20190121 11:16:56.101" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:56.104" endtime="20190121 11:16:56.151" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:16:56.154" endtime="20190121 11:16:56.201" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:16:56.205" endtime="20190121 11:16:56.253" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:55.821" endtime="20190121 11:16:56.256" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-47669 for can3 channel</doc>
<tags>
<tag>CAN 3 test TX</tag>
</tags>
<status critical="yes" starttime="20190121 11:16:27.232" endtime="20190121 11:16:56.257" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:16:57.727" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:16:57.812" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:16:56.305" endtime="20190121 11:16:57.831" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:56.274" endtime="20190121 11:16:57.833" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:56.268" endtime="20190121 11:16:57.835" status="PASS"></status>
</kw>
<doc>CAN 3 test TX with FBUS</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:16:24.252" endtime="20190121 11:16:57.836" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-48413.robot" name="SKTB-48413" id="s1-s12">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:16:58.611" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:16:58.606" endtime="20190121 11:16:58.630" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:16:58.639" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:16:58.655" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:17:00.805" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:16:58.633" endtime="20190121 11:17:00.807" status="PASS"></status>
</kw>
<status starttime="20190121 11:16:58.585" endtime="20190121 11:17:00.809" status="PASS"></status>
</kw>
<test name="SKTB-48413 FBUS test" id="s1-s12-t1">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:00.861" endtime="20190121 11:17:00.960" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:00.994" endtime="20190121 11:17:01.099" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:01.123" endtime="20190121 11:17:01.200" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:17:03.227" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:17:01.204" endtime="20190121 11:17:03.229" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:17:03.232" endtime="20190121 11:17:03.278" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:17:03.281" endtime="20190121 11:17:03.327" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:17:03.331" endtime="20190121 11:17:03.375" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:17:03.379" endtime="20190121 11:17:03.431" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:17:03.438" endtime="20190121 11:17:03.486" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:17:03.490" endtime="20190121 11:17:03.536" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status starttime="20190121 11:17:03.539" endtime="20190121 11:17:03.591" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:17:05.601" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:17:03.594" endtime="20190121 11:17:05.604" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:00.855" endtime="20190121 11:17:05.606" status="PASS"></status>
</kw>
<kw name="digit_out_led1_freq">
<doc>Toggle digital output led 1 with the supported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle digital output led 1 with the supported frequency</arg>
</arguments>
<status starttime="20190121 11:17:05.615" endtime="20190121 11:17:05.620" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:05.639" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 01</msg>
<status starttime="20190121 11:17:05.632" endtime="20190121 11:17:05.639" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:05.642" endtime="20190121 11:17:05.648" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:05.850" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 04 01 43 3D F5</msg>
<status starttime="20190121 11:17:05.651" endtime="20190121 11:17:05.851" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:05.855" endtime="20190121 11:17:05.860" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:05.863" endtime="20190121 11:17:05.871" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:05.622" endtime="20190121 11:17:05.873" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:17:05.876" endtime="20190121 11:17:05.881" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:05.898" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status starttime="20190121 11:17:05.892" endtime="20190121 11:17:05.899" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:05.902" endtime="20190121 11:17:05.907" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:06.111" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 44 3E FB</msg>
<status starttime="20190121 11:17:05.910" endtime="20190121 11:17:06.112" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:06.116" endtime="20190121 11:17:06.122" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:06.125" endtime="20190121 11:17:06.133" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:06.141" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '44', '3E', 'FB']</msg>
<status starttime="20190121 11:17:06.136" endtime="20190121 11:17:06.142" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:06.151" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:17:06.145" endtime="20190121 11:17:06.151" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:05.883" endtime="20190121 11:17:06.155" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:05.609" endtime="20190121 11:17:06.157" status="PASS"></status>
</kw>
<kw name="digit_out_led1_freq_negativtest">
<doc>Toggle the digital output led 1 with the notsupported frequency negativ test</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 1 with the notsupported frequency negativtest</arg>
</arguments>
<status starttime="20190121 11:17:06.165" endtime="20190121 11:17:06.170" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:06.189" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 0B</msg>
<status starttime="20190121 11:17:06.182" endtime="20190121 11:17:06.190" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:06.193" endtime="20190121 11:17:06.198" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:06.401" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 04 01 45 3C F3</msg>
<status starttime="20190121 11:17:06.201" endtime="20190121 11:17:06.402" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:06.405" endtime="20190121 11:17:06.410" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:06.413" endtime="20190121 11:17:06.421" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:06.173" endtime="20190121 11:17:06.424" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:17:06.426" endtime="20190121 11:17:06.431" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:06.460" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status starttime="20190121 11:17:06.454" endtime="20190121 11:17:06.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:06.463" endtime="20190121 11:17:06.469" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:06.671" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 40 3E FF</msg>
<status starttime="20190121 11:17:06.472" endtime="20190121 11:17:06.672" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:06.675" endtime="20190121 11:17:06.681" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:06.684" endtime="20190121 11:17:06.692" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:06.699" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '40', '3E', 'FF']</msg>
<status starttime="20190121 11:17:06.695" endtime="20190121 11:17:06.700" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:06.709" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:17:06.703" endtime="20190121 11:17:06.710" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:06.433" endtime="20190121 11:17:06.713" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:06.159" endtime="20190121 11:17:06.715" status="PASS"></status>
</kw>
<kw name="digit_out_led1_high">
<doc>Set the digital output led 1 high and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 high and test it</arg>
</arguments>
<status starttime="20190121 11:17:06.723" endtime="20190121 11:17:06.728" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:06.748" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 01</msg>
<status starttime="20190121 11:17:06.740" endtime="20190121 11:17:06.749" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:06.751" endtime="20190121 11:17:06.757" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:06.965" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 41 3D F3</msg>
<status starttime="20190121 11:17:06.760" endtime="20190121 11:17:06.966" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:06.969" endtime="20190121 11:17:06.974" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:06.977" endtime="20190121 11:17:06.985" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:06.730" endtime="20190121 11:17:06.987" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:07.005" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status starttime="20190121 11:17:06.999" endtime="20190121 11:17:07.006" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:07.009" endtime="20190121 11:17:07.014" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:07.217" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 01 01 42 3D FC</msg>
<status starttime="20190121 11:17:07.017" endtime="20190121 11:17:07.218" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:07.221" endtime="20190121 11:17:07.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:07.229" endtime="20190121 11:17:07.237" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:07.245" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '01', '01', '42', '3D', 'FC']</msg>
<status starttime="20190121 11:17:07.240" endtime="20190121 11:17:07.246" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:07.255" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:17:07.249" endtime="20190121 11:17:07.256" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:07.267" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:17:06.989" endtime="20190121 11:17:07.268" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:17:07.271" endtime="20190121 11:17:07.276" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:06.717" endtime="20190121 11:17:07.280" status="PASS"></status>
</kw>
<kw name="digit_out_led1_low">
<doc>Set the digital output led 1 low and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 low and test it</arg>
</arguments>
<status starttime="20190121 11:17:07.289" endtime="20190121 11:17:07.295" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:07.406" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 00</msg>
<status starttime="20190121 11:17:07.345" endtime="20190121 11:17:07.407" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:07.410" endtime="20190121 11:17:07.432" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:07.677" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 45 3D F7</msg>
<status starttime="20190121 11:17:07.435" endtime="20190121 11:17:07.678" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:07.682" endtime="20190121 11:17:07.687" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:07.690" endtime="20190121 11:17:07.698" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:07.298" endtime="20190121 11:17:07.700" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:07.718" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status starttime="20190121 11:17:07.712" endtime="20190121 11:17:07.719" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:07.723" endtime="20190121 11:17:07.729" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:07.931" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 00 01 46 3D F9</msg>
<status starttime="20190121 11:17:07.731" endtime="20190121 11:17:07.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:07.935" endtime="20190121 11:17:07.941" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:07.944" endtime="20190121 11:17:07.952" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:07.960" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '00', '01', '46', '3D', 'F9']</msg>
<status starttime="20190121 11:17:07.955" endtime="20190121 11:17:07.961" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:07.969" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:17:07.964" endtime="20190121 11:17:07.970" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:07.974" level="INFO">${res} = 00</msg>
<status starttime="20190121 11:17:07.702" endtime="20190121 11:17:07.974" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status starttime="20190121 11:17:07.977" endtime="20190121 11:17:07.982" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:07.282" endtime="20190121 11:17:07.985" status="PASS"></status>
</kw>
<kw name="digit_out_led2_freq">
<doc>Toggle the digital output led 2 with the supported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2</arg>
<arg>with the supported frequency</arg>
</arguments>
<status starttime="20190121 11:17:07.993" endtime="20190121 11:17:07.998" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:08.017" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 01</msg>
<status starttime="20190121 11:17:08.010" endtime="20190121 11:17:08.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:08.020" endtime="20190121 11:17:08.026" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:08.229" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 05 01 47 3D F0</msg>
<status starttime="20190121 11:17:08.029" endtime="20190121 11:17:08.230" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:08.234" endtime="20190121 11:17:08.239" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:08.242" endtime="20190121 11:17:08.249" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:08.000" endtime="20190121 11:17:08.252" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:17:08.254" endtime="20190121 11:17:08.259" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:08.276" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status starttime="20190121 11:17:08.271" endtime="20190121 11:17:08.277" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:08.283" endtime="20190121 11:17:08.289" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:08.498" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 40 3E FE</msg>
<status starttime="20190121 11:17:08.293" endtime="20190121 11:17:08.499" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:08.503" endtime="20190121 11:17:08.508" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:08.511" endtime="20190121 11:17:08.519" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:08.527" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '40', '3E', 'FE']</msg>
<status starttime="20190121 11:17:08.522" endtime="20190121 11:17:08.528" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:08.536" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:17:08.531" endtime="20190121 11:17:08.538" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:08.261" endtime="20190121 11:17:08.541" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:07.987" endtime="20190121 11:17:08.544" status="PASS"></status>
</kw>
<kw name="digit_out_led2_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status starttime="20190121 11:17:08.552" endtime="20190121 11:17:08.557" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:08.575" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 0B</msg>
<status starttime="20190121 11:17:08.568" endtime="20190121 11:17:08.576" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:08.580" endtime="20190121 11:17:08.585" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:08.789" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 05 01 41 3C F6</msg>
<status starttime="20190121 11:17:08.589" endtime="20190121 11:17:08.790" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:08.794" endtime="20190121 11:17:08.799" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:08.802" endtime="20190121 11:17:08.810" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:08.559" endtime="20190121 11:17:08.812" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:17:08.815" endtime="20190121 11:17:08.820" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:08.837" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status starttime="20190121 11:17:08.831" endtime="20190121 11:17:08.838" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:08.841" endtime="20190121 11:17:08.847" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:09.051" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 42 3E FC</msg>
<status starttime="20190121 11:17:08.850" endtime="20190121 11:17:09.051" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:09.055" endtime="20190121 11:17:09.061" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:09.063" endtime="20190121 11:17:09.071" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:09.079" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '42', '3E', 'FC']</msg>
<status starttime="20190121 11:17:09.074" endtime="20190121 11:17:09.080" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:09.089" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:17:09.083" endtime="20190121 11:17:09.090" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:08.822" endtime="20190121 11:17:09.093" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:08.546" endtime="20190121 11:17:09.095" status="PASS"></status>
</kw>
<kw name="digit_out_led2_high">
<doc>Set the digital output led 2 high and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 high and test it</arg>
</arguments>
<status starttime="20190121 11:17:09.103" endtime="20190121 11:17:09.108" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:09.128" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 01</msg>
<status starttime="20190121 11:17:09.121" endtime="20190121 11:17:09.129" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:09.131" endtime="20190121 11:17:09.137" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:09.344" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 43 3D F0</msg>
<status starttime="20190121 11:17:09.141" endtime="20190121 11:17:09.345" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:09.348" endtime="20190121 11:17:09.354" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:09.357" endtime="20190121 11:17:09.365" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:09.110" endtime="20190121 11:17:09.367" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:09.385" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status starttime="20190121 11:17:09.379" endtime="20190121 11:17:09.386" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:09.389" endtime="20190121 11:17:09.395" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:09.598" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 01 01 44 3D FB</msg>
<status starttime="20190121 11:17:09.398" endtime="20190121 11:17:09.599" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:09.602" endtime="20190121 11:17:09.608" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:09.610" endtime="20190121 11:17:09.619" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:09.627" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '01', '01', '44', '3D', 'FB']</msg>
<status starttime="20190121 11:17:09.622" endtime="20190121 11:17:09.628" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:09.637" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:17:09.631" endtime="20190121 11:17:09.638" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:09.641" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:17:09.370" endtime="20190121 11:17:09.642" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:17:09.645" endtime="20190121 11:17:09.650" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:09.097" endtime="20190121 11:17:09.652" status="PASS"></status>
</kw>
<kw name="digit_out_led2_low">
<doc>Set the digital output led 2 low and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 low and test it</arg>
</arguments>
<status starttime="20190121 11:17:09.661" endtime="20190121 11:17:09.665" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:09.686" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 00</msg>
<status starttime="20190121 11:17:09.678" endtime="20190121 11:17:09.687" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:09.690" endtime="20190121 11:17:09.695" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:09.898" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 45 3D F6</msg>
<status starttime="20190121 11:17:09.699" endtime="20190121 11:17:09.899" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:09.903" endtime="20190121 11:17:09.908" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:09.911" endtime="20190121 11:17:09.919" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:09.667" endtime="20190121 11:17:09.921" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:09.939" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status starttime="20190121 11:17:09.933" endtime="20190121 11:17:09.939" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:09.942" endtime="20190121 11:17:09.948" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:10.151" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 00 01 46 3D F8</msg>
<status starttime="20190121 11:17:09.951" endtime="20190121 11:17:10.153" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:10.156" endtime="20190121 11:17:10.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:10.164" endtime="20190121 11:17:10.172" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:10.181" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '00', '01', '46', '3D', 'F8']</msg>
<status starttime="20190121 11:17:10.175" endtime="20190121 11:17:10.182" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:10.191" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:17:10.185" endtime="20190121 11:17:10.191" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:10.195" level="INFO">${res} = 00</msg>
<status starttime="20190121 11:17:09.923" endtime="20190121 11:17:10.196" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status starttime="20190121 11:17:10.199" endtime="20190121 11:17:10.207" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:09.654" endtime="20190121 11:17:10.210" status="PASS"></status>
</kw>
<kw name="digit_out_crm_freq">
<doc>Toggle the digital output CRM with the supported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output CRM with the supported frequency</arg>
</arguments>
<status starttime="20190121 11:17:10.219" endtime="20190121 11:17:10.223" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:10.242" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 01</msg>
<status starttime="20190121 11:17:10.235" endtime="20190121 11:17:10.243" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:10.246" endtime="20190121 11:17:10.251" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:10.455" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 06 01 47 3D F3</msg>
<status starttime="20190121 11:17:10.254" endtime="20190121 11:17:10.456" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:10.459" endtime="20190121 11:17:10.465" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:10.468" endtime="20190121 11:17:10.475" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:10.225" endtime="20190121 11:17:10.478" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:17:10.481" endtime="20190121 11:17:10.485" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:10.503" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status starttime="20190121 11:17:10.497" endtime="20190121 11:17:10.503" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:10.506" endtime="20190121 11:17:10.512" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:10.714" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 46 3E FB</msg>
<status starttime="20190121 11:17:10.515" endtime="20190121 11:17:10.715" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:10.719" endtime="20190121 11:17:10.724" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:10.727" endtime="20190121 11:17:10.735" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:10.743" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '46', '3E', 'FB']</msg>
<status starttime="20190121 11:17:10.738" endtime="20190121 11:17:10.744" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:10.752" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:17:10.747" endtime="20190121 11:17:10.753" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:10.487" endtime="20190121 11:17:10.756" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:10.212" endtime="20190121 11:17:10.759" status="PASS"></status>
</kw>
<kw name="digit_out_crm_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status starttime="20190121 11:17:10.767" endtime="20190121 11:17:10.772" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:10.790" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 0B</msg>
<status starttime="20190121 11:17:10.783" endtime="20190121 11:17:10.792" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:10.796" endtime="20190121 11:17:10.801" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:11.007" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 06 01 47 3C F3</msg>
<status starttime="20190121 11:17:10.804" endtime="20190121 11:17:11.009" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:11.012" endtime="20190121 11:17:11.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:11.020" endtime="20190121 11:17:11.028" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:10.774" endtime="20190121 11:17:11.030" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:17:11.033" endtime="20190121 11:17:11.038" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:11.059" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status starttime="20190121 11:17:11.053" endtime="20190121 11:17:11.060" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:11.063" endtime="20190121 11:17:11.069" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:11.271" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 40 3E FD</msg>
<status starttime="20190121 11:17:11.071" endtime="20190121 11:17:11.272" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:11.275" endtime="20190121 11:17:11.281" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:11.284" endtime="20190121 11:17:11.292" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:11.300" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '40', '3E', 'FD']</msg>
<status starttime="20190121 11:17:11.295" endtime="20190121 11:17:11.301" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:11.313" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:17:11.307" endtime="20190121 11:17:11.313" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:11.040" endtime="20190121 11:17:11.317" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:10.761" endtime="20190121 11:17:11.319" status="PASS"></status>
</kw>
<kw name="digit_out_crm_high">
<doc>Set the digital output crm high and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm high and test it</arg>
</arguments>
<status starttime="20190121 11:17:11.330" endtime="20190121 11:17:11.335" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:11.354" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 01</msg>
<status starttime="20190121 11:17:11.348" endtime="20190121 11:17:11.355" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:11.358" endtime="20190121 11:17:11.363" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:11.566" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 41 3D F1</msg>
<status starttime="20190121 11:17:11.366" endtime="20190121 11:17:11.567" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:11.571" endtime="20190121 11:17:11.576" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:11.579" endtime="20190121 11:17:11.587" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:11.337" endtime="20190121 11:17:11.589" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:11.606" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status starttime="20190121 11:17:11.601" endtime="20190121 11:17:11.607" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:11.610" endtime="20190121 11:17:11.616" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:11.818" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 01 01 42 3D FE</msg>
<status starttime="20190121 11:17:11.619" endtime="20190121 11:17:11.818" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:11.821" endtime="20190121 11:17:11.827" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:11.830" endtime="20190121 11:17:11.838" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:11.846" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '01', '01', '42', '3D', 'FE']</msg>
<status starttime="20190121 11:17:11.841" endtime="20190121 11:17:11.847" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:11.855" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:17:11.850" endtime="20190121 11:17:11.856" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:11.860" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:17:11.591" endtime="20190121 11:17:11.861" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:17:11.864" endtime="20190121 11:17:11.869" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:11.323" endtime="20190121 11:17:11.871" status="PASS"></status>
</kw>
<kw name="digit_out_crm_low">
<doc>Set the digital output crm low and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm low and test it</arg>
</arguments>
<status starttime="20190121 11:17:11.879" endtime="20190121 11:17:11.884" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:11.907" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 00</msg>
<status starttime="20190121 11:17:11.900" endtime="20190121 11:17:11.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:11.910" endtime="20190121 11:17:11.916" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:12.119" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 43 3D F3</msg>
<status starttime="20190121 11:17:11.919" endtime="20190121 11:17:12.120" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:12.123" endtime="20190121 11:17:12.129" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:12.132" endtime="20190121 11:17:12.139" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:11.886" endtime="20190121 11:17:12.142" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:12.160" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status starttime="20190121 11:17:12.154" endtime="20190121 11:17:12.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:12.163" endtime="20190121 11:17:12.169" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:12.370" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 00 01 44 3D F9</msg>
<status starttime="20190121 11:17:12.172" endtime="20190121 11:17:12.371" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:12.374" endtime="20190121 11:17:12.380" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:12.383" endtime="20190121 11:17:12.392" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:12.400" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '00', '01', '44', '3D', 'F9']</msg>
<status starttime="20190121 11:17:12.395" endtime="20190121 11:17:12.400" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:12.409" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:17:12.403" endtime="20190121 11:17:12.410" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:12.414" level="INFO">${res} = 00</msg>
<status starttime="20190121 11:17:12.144" endtime="20190121 11:17:12.415" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status starttime="20190121 11:17:12.418" endtime="20190121 11:17:12.423" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:11.873" endtime="20190121 11:17:12.425" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:12.436" endtime="20190121 11:17:12.484" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:12.487" endtime="20190121 11:17:12.534" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:12.537" endtime="20190121 11:17:12.582" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:17:14.590" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:17:12.585" endtime="20190121 11:17:14.592" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:17:14.595" endtime="20190121 11:17:14.641" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:17:14.645" endtime="20190121 11:17:14.690" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:12.429" endtime="20190121 11:17:14.693" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-48413 toggle Digital Output Leds</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status critical="yes" starttime="20190121 11:17:00.829" endtime="20190121 11:17:14.694" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:17:16.222" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:17:16.278" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:17:14.745" endtime="20190121 11:17:16.279" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:14.710" endtime="20190121 11:17:16.281" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:14.705" endtime="20190121 11:17:16.324" status="PASS"></status>
</kw>
<doc>Chorus GPIO LED1, LED2, CRM test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:16:57.983" endtime="20190121 11:17:16.328" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49038.robot" name="SKTB-49038" id="s1-s13">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:17:17.293" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:17:17.247" endtime="20190121 11:17:17.317" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:17:17.349" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:17:17.351" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:17:19.488" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:17:17.324" endtime="20190121 11:17:19.490" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:17.241" endtime="20190121 11:17:19.492" status="PASS"></status>
</kw>
<test name="SKTB-GPIO FBUS test" id="s1-s13-t1">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:19.539" endtime="20190121 11:17:19.629" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:19.632" endtime="20190121 11:17:19.745" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:19.748" endtime="20190121 11:17:19.869" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Bidir Wake Up">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:17:19.872" endtime="20190121 11:17:20.489" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:17:22.523" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:17:20.492" endtime="20190121 11:17:22.525" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:17:22.528" endtime="20190121 11:17:22.575" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:17:22.578" endtime="20190121 11:17:22.625" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:17:22.628" endtime="20190121 11:17:22.674" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:17:22.677" endtime="20190121 11:17:22.722" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:17:22.726" endtime="20190121 11:17:22.799" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:17:22.802" endtime="20190121 11:17:22.875" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:17:24.892" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:17:22.878" endtime="20190121 11:17:24.895" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:19.520" endtime="20190121 11:17:24.897" status="PASS"></status>
</kw>
<kw name="digit_input_1">
<doc>Get digital input 1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 1</arg>
</arguments>
<status starttime="20190121 11:17:24.906" endtime="20190121 11:17:24.911" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_1_BUTTON_1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:24.929" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0A</msg>
<status starttime="20190121 11:17:24.923" endtime="20190121 11:17:24.930" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:24.932" endtime="20190121 11:17:24.939" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:25.146" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0A 00 01 01 43 3D F3</msg>
<status starttime="20190121 11:17:24.942" endtime="20190121 11:17:25.147" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:25.150" endtime="20190121 11:17:25.155" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:25.158" endtime="20190121 11:17:25.167" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:25.175" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0A', '00', '01', '01', '43', '3D', 'F3']</msg>
<status starttime="20190121 11:17:25.170" endtime="20190121 11:17:25.176" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:25.184" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:17:25.179" endtime="20190121 11:17:25.185" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:25.189" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:17:24.913" endtime="20190121 11:17:25.190" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:17:25.192" endtime="20190121 11:17:25.197" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:24.900" endtime="20190121 11:17:25.200" status="PASS"></status>
</kw>
<kw name="digit_input_2">
<doc>Get digital input 2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 2</arg>
</arguments>
<status starttime="20190121 11:17:25.208" endtime="20190121 11:17:25.213" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_2_BUTTON_2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:25.230" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0B</msg>
<status starttime="20190121 11:17:25.225" endtime="20190121 11:17:25.231" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:25.234" endtime="20190121 11:17:25.240" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:25.445" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0B 00 01 01 44 3D F5</msg>
<status starttime="20190121 11:17:25.243" endtime="20190121 11:17:25.446" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:25.449" endtime="20190121 11:17:25.455" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:25.458" endtime="20190121 11:17:25.466" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:25.474" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0B', '00', '01', '01', '44', '3D', 'F5']</msg>
<status starttime="20190121 11:17:25.469" endtime="20190121 11:17:25.475" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:25.483" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:17:25.478" endtime="20190121 11:17:25.484" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:25.487" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:17:25.215" endtime="20190121 11:17:25.488" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:17:25.491" endtime="20190121 11:17:25.497" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:25.202" endtime="20190121 11:17:25.499" status="PASS"></status>
</kw>
<kw name="digit_input_3">
<doc>Get digital input 3</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 3</arg>
</arguments>
<status starttime="20190121 11:17:25.507" endtime="20190121 11:17:25.512" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_3_AIRB_PWM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:25.533" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0C</msg>
<status starttime="20190121 11:17:25.527" endtime="20190121 11:17:25.534" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:25.537" endtime="20190121 11:17:25.543" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:25.745" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0C 00 01 01 45 3D F3</msg>
<status starttime="20190121 11:17:25.546" endtime="20190121 11:17:25.746" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:25.750" endtime="20190121 11:17:25.756" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:25.759" endtime="20190121 11:17:25.767" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:25.775" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0C', '00', '01', '01', '45', '3D', 'F3']</msg>
<status starttime="20190121 11:17:25.770" endtime="20190121 11:17:25.776" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:25.784" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:17:25.779" endtime="20190121 11:17:25.785" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:25.789" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:17:25.514" endtime="20190121 11:17:25.790" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:17:25.792" endtime="20190121 11:17:25.797" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:25.501" endtime="20190121 11:17:25.800" status="PASS"></status>
</kw>
<kw name="digit_input_bid">
<doc>Get digital input BIDR WUL</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input BIDR WUL</arg>
</arguments>
<status starttime="20190121 11:17:25.808" endtime="20190121 11:17:25.813" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${BIDIR_WUL_IN}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:25.830" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0E</msg>
<status starttime="20190121 11:17:25.824" endtime="20190121 11:17:25.831" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:25.834" endtime="20190121 11:17:25.840" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:17:26.095" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0E 00 01 01 40 3D F4</msg>
<status starttime="20190121 11:17:25.843" endtime="20190121 11:17:26.096" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:17:26.099" endtime="20190121 11:17:26.119" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:26.122" endtime="20190121 11:17:26.146" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:26.165" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0E', '00', '01', '01', '40', '3D', 'F4']</msg>
<status starttime="20190121 11:17:26.149" endtime="20190121 11:17:26.166" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:17:26.186" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:17:26.169" endtime="20190121 11:17:26.187" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:26.191" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:17:25.815" endtime="20190121 11:17:26.192" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<msg timestamp="20190121 11:17:26.213" level="FAIL">'01' does not contain '00'</msg>
<status starttime="20190121 11:17:26.207" endtime="20190121 11:17:26.215" status="FAIL"></status>
</kw>
<status starttime="20190121 11:17:25.802" endtime="20190121 11:17:26.226" status="FAIL"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:26.246" endtime="20190121 11:17:26.295" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:26.298" endtime="20190121 11:17:26.345" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:26.348" endtime="20190121 11:17:26.398" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:17:28.410" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:17:26.401" endtime="20190121 11:17:28.412" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:17:28.415" endtime="20190121 11:17:28.505" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:17:28.508" endtime="20190121 11:17:28.601" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:26.230" endtime="20190121 11:17:28.604" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-49038</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status critical="yes" starttime="20190121 11:17:19.494" endtime="20190121 11:17:28.605" status="FAIL">'01' does not contain '00'</status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:17:30.251" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:17:30.280" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:17:28.742" endtime="20190121 11:17:30.291" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:28.650" endtime="20190121 11:17:30.299" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:28.636" endtime="20190121 11:17:30.331" status="PASS"></status>
</kw>
<doc>Chorus GPIO input 1,2,3 BID_wul test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:17:16.558" endtime="20190121 11:17:30.332" status="FAIL"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49357.robot" name="SKTB-49357" id="s1-s14">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:17:31.143" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:17:31.126" endtime="20190121 11:17:31.161" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:17:31.182" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:17:31.183" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:17:33.505" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:17:31.169" endtime="20190121 11:17:33.506" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:31.104" endtime="20190121 11:17:33.509" status="PASS"></status>
</kw>
<test name="SKTB-49357 Gpio pwm test" id="s1-s14-t1">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:33.605" endtime="20190121 11:17:33.717" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:33.752" endtime="20190121 11:17:33.912" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:17:33.919" endtime="20190121 11:17:34.070" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:17:36.079" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:17:34.073" endtime="20190121 11:17:36.081" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:17:36.084" endtime="20190121 11:17:36.163" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:17:36.166" endtime="20190121 11:17:36.261" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:17:36.264" endtime="20190121 11:17:36.357" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:17:36.360" endtime="20190121 11:17:36.439" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:17:36.442" endtime="20190121 11:17:36.546" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:17:36.549" endtime="20190121 11:17:36.634" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status starttime="20190121 11:17:36.638" endtime="20190121 11:17:36.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:17:37.758" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:17:36.734" endtime="20190121 11:17:37.761" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:33.581" endtime="20190121 11:17:37.763" status="PASS"></status>
</kw>
<kw name="digit_out_hs_1">
<doc>Set pwm for the digital output hs 1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 1</arg>
</arguments>
<status starttime="20190121 11:17:37.772" endtime="20190121 11:17:37.777" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_1}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:37.787" endtime="20190121 11:17:37.791" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:37.812" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 20</msg>
<status starttime="20190121 11:17:37.805" endtime="20190121 11:17:37.813" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:37.816" endtime="20190121 11:17:37.822" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:38.065" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 43 3D F7</msg>
<status starttime="20190121 11:17:37.824" endtime="20190121 11:17:38.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:38.071" endtime="20190121 11:17:38.076" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:38.080" endtime="20190121 11:17:38.092" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:38.108" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '43', '3D', 'F7']</msg>
<status starttime="20190121 11:17:38.099" endtime="20190121 11:17:38.110" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:38.121" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:17:38.114" endtime="20190121 11:17:38.122" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:38.125" endtime="20190121 11:17:38.130" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:38.140" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:38.134" endtime="20190121 11:17:38.141" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:38.145" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:37.794" endtime="20190121 11:17:38.146" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:38.150" endtime="20190121 11:17:38.156" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:38.159" endtime="20190121 11:17:38.167" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:38.187" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0064 64</msg>
<status starttime="20190121 11:17:38.180" endtime="20190121 11:17:38.188" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:38.191" endtime="20190121 11:17:38.197" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:38.401" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 44 3D F0</msg>
<status starttime="20190121 11:17:38.200" endtime="20190121 11:17:38.402" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:38.406" endtime="20190121 11:17:38.411" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:38.414" endtime="20190121 11:17:38.420" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:38.428" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '44', '3D', 'F0']</msg>
<status starttime="20190121 11:17:38.423" endtime="20190121 11:17:38.429" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:38.437" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:17:38.431" endtime="20190121 11:17:38.438" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:38.441" endtime="20190121 11:17:38.447" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:38.456" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:38.450" endtime="20190121 11:17:38.457" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:38.460" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:38.169" endtime="20190121 11:17:38.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:38.464" endtime="20190121 11:17:38.469" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:38.477" endtime="20190121 11:17:38.486" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:38.530" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0001 01</msg>
<status starttime="20190121 11:17:38.513" endtime="20190121 11:17:38.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:38.536" endtime="20190121 11:17:38.549" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:38.776" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 45 3D F1</msg>
<status starttime="20190121 11:17:38.553" endtime="20190121 11:17:38.778" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:38.781" endtime="20190121 11:17:38.786" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:38.789" endtime="20190121 11:17:38.794" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:38.803" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '45', '3D', 'F1']</msg>
<status starttime="20190121 11:17:38.797" endtime="20190121 11:17:38.804" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:38.813" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:17:38.807" endtime="20190121 11:17:38.814" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:38.817" endtime="20190121 11:17:38.823" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:38.831" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:38.826" endtime="20190121 11:17:38.832" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:38.836" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:38.489" endtime="20190121 11:17:38.837" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:38.840" endtime="20190121 11:17:38.845" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:38.848" endtime="20190121 11:17:38.853" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:38.873" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0065 65</msg>
<status starttime="20190121 11:17:38.866" endtime="20190121 11:17:38.874" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:38.877" endtime="20190121 11:17:38.886" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:39.090" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 46 3C F2</msg>
<status starttime="20190121 11:17:38.889" endtime="20190121 11:17:39.091" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:39.094" endtime="20190121 11:17:39.100" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:39.103" endtime="20190121 11:17:39.109" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:39.116" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '46', '3C', 'F2']</msg>
<status starttime="20190121 11:17:39.111" endtime="20190121 11:17:39.117" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:39.126" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:17:39.120" endtime="20190121 11:17:39.126" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:39.129" endtime="20190121 11:17:39.135" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:39.143" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:39.138" endtime="20190121 11:17:39.144" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:39.148" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:38.855" endtime="20190121 11:17:39.149" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:39.151" endtime="20190121 11:17:39.157" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:39.160" endtime="20190121 11:17:39.164" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:39.184" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 65</msg>
<status starttime="20190121 11:17:39.177" endtime="20190121 11:17:39.185" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:39.188" endtime="20190121 11:17:39.194" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:39.397" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 47 3C F3</msg>
<status starttime="20190121 11:17:39.197" endtime="20190121 11:17:39.398" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:39.401" endtime="20190121 11:17:39.408" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:39.411" endtime="20190121 11:17:39.416" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:39.424" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '47', '3C', 'F3']</msg>
<status starttime="20190121 11:17:39.419" endtime="20190121 11:17:39.425" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:39.434" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:17:39.428" endtime="20190121 11:17:39.435" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:39.438" endtime="20190121 11:17:39.444" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:39.452" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:39.447" endtime="20190121 11:17:39.453" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:39.457" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:39.167" endtime="20190121 11:17:39.458" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:39.461" endtime="20190121 11:17:39.466" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:39.469" endtime="20190121 11:17:39.474" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:39.494" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0065 20</msg>
<status starttime="20190121 11:17:39.486" endtime="20190121 11:17:39.495" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:39.497" endtime="20190121 11:17:39.503" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:39.706" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 42 3C F6</msg>
<status starttime="20190121 11:17:39.506" endtime="20190121 11:17:39.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:39.710" endtime="20190121 11:17:39.716" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:39.719" endtime="20190121 11:17:39.724" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:39.732" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '42', '3C', 'F6']</msg>
<status starttime="20190121 11:17:39.727" endtime="20190121 11:17:39.733" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:39.746" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:17:39.736" endtime="20190121 11:17:39.746" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:39.749" endtime="20190121 11:17:39.755" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:39.763" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:39.758" endtime="20190121 11:17:39.764" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:39.768" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:39.476" endtime="20190121 11:17:39.769" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:39.772" endtime="20190121 11:17:39.778" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:39.781" endtime="20190121 11:17:39.785" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:39.806" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 00</msg>
<status starttime="20190121 11:17:39.799" endtime="20190121 11:17:39.807" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:39.810" endtime="20190121 11:17:39.816" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:40.018" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 43 3C F7</msg>
<status starttime="20190121 11:17:39.820" endtime="20190121 11:17:40.019" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:40.023" endtime="20190121 11:17:40.028" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:40.031" endtime="20190121 11:17:40.037" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:40.045" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '43', '3C', 'F7']</msg>
<status starttime="20190121 11:17:40.040" endtime="20190121 11:17:40.046" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:40.054" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:17:40.049" endtime="20190121 11:17:40.055" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:40.058" endtime="20190121 11:17:40.063" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:40.072" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:40.066" endtime="20190121 11:17:40.073" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:40.076" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:39.787" endtime="20190121 11:17:40.077" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:40.080" endtime="20190121 11:17:40.086" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:40.089" endtime="20190121 11:17:40.093" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:40.114" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0000 20</msg>
<status starttime="20190121 11:17:40.107" endtime="20190121 11:17:40.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:40.118" endtime="20190121 11:17:40.123" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:40.327" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 44 3C F0</msg>
<status starttime="20190121 11:17:40.126" endtime="20190121 11:17:40.328" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:40.331" endtime="20190121 11:17:40.337" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:40.339" endtime="20190121 11:17:40.356" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:40.382" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '44', '3C', 'F0']</msg>
<status starttime="20190121 11:17:40.360" endtime="20190121 11:17:40.383" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:40.394" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:17:40.388" endtime="20190121 11:17:40.395" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:40.398" endtime="20190121 11:17:40.403" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:40.412" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:40.407" endtime="20190121 11:17:40.413" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:40.417" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:40.096" endtime="20190121 11:17:40.417" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:40.420" endtime="20190121 11:17:40.426" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:40.429" endtime="20190121 11:17:40.434" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:40.459" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0000 00</msg>
<status starttime="20190121 11:17:40.450" endtime="20190121 11:17:40.460" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:40.463" endtime="20190121 11:17:40.468" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:40.672" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 47 3C F3</msg>
<status starttime="20190121 11:17:40.471" endtime="20190121 11:17:40.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:40.676" endtime="20190121 11:17:40.682" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:40.685" endtime="20190121 11:17:40.691" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:40.699" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '47', '3C', 'F3']</msg>
<status starttime="20190121 11:17:40.694" endtime="20190121 11:17:40.699" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:40.708" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:17:40.702" endtime="20190121 11:17:40.709" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:40.712" endtime="20190121 11:17:40.718" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:40.726" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:40.721" endtime="20190121 11:17:40.727" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:40.731" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:40.436" endtime="20190121 11:17:40.732" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:40.734" endtime="20190121 11:17:40.740" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:37.779" endtime="20190121 11:17:40.742" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:37.766" endtime="20190121 11:17:40.744" status="PASS"></status>
</kw>
<kw name="digit_out_hs_2">
<doc>Set pwm for the digital output hs 2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 2</arg>
</arguments>
<status starttime="20190121 11:17:40.753" endtime="20190121 11:17:40.758" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_2}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:40.767" endtime="20190121 11:17:40.772" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:40.793" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 20</msg>
<status starttime="20190121 11:17:40.785" endtime="20190121 11:17:40.794" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:40.797" endtime="20190121 11:17:40.802" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:41.006" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 40 3D F5</msg>
<status starttime="20190121 11:17:40.805" endtime="20190121 11:17:41.007" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:41.010" endtime="20190121 11:17:41.016" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:41.018" endtime="20190121 11:17:41.024" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:41.032" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '40', '3D', 'F5']</msg>
<status starttime="20190121 11:17:41.027" endtime="20190121 11:17:41.033" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:41.041" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:17:41.036" endtime="20190121 11:17:41.042" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:41.045" endtime="20190121 11:17:41.051" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:41.059" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:41.054" endtime="20190121 11:17:41.060" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:41.065" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:40.774" endtime="20190121 11:17:41.066" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:41.069" endtime="20190121 11:17:41.074" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:41.077" endtime="20190121 11:17:41.082" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:41.106" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0064 64</msg>
<status starttime="20190121 11:17:41.094" endtime="20190121 11:17:41.107" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:41.110" endtime="20190121 11:17:41.115" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:41.319" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 41 3D F4</msg>
<status starttime="20190121 11:17:41.118" endtime="20190121 11:17:41.320" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:41.323" endtime="20190121 11:17:41.329" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:41.332" endtime="20190121 11:17:41.338" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:41.346" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '41', '3D', 'F4']</msg>
<status starttime="20190121 11:17:41.341" endtime="20190121 11:17:41.347" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:41.355" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:17:41.350" endtime="20190121 11:17:41.356" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:41.359" endtime="20190121 11:17:41.365" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:41.373" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:41.368" endtime="20190121 11:17:41.374" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:41.378" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:41.084" endtime="20190121 11:17:41.378" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:41.381" endtime="20190121 11:17:41.387" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:41.390" endtime="20190121 11:17:41.395" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:41.415" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0001 01</msg>
<status starttime="20190121 11:17:41.408" endtime="20190121 11:17:41.416" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:41.419" endtime="20190121 11:17:41.425" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:41.677" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 42 3D F7</msg>
<status starttime="20190121 11:17:41.428" endtime="20190121 11:17:41.697" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:41.701" endtime="20190121 11:17:41.746" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:41.749" endtime="20190121 11:17:41.755" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:41.771" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '42', '3D', 'F7']</msg>
<status starttime="20190121 11:17:41.765" endtime="20190121 11:17:41.783" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:41.793" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:17:41.786" endtime="20190121 11:17:41.802" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:41.805" endtime="20190121 11:17:41.830" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:41.850" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:41.843" endtime="20190121 11:17:41.851" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:41.863" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:41.397" endtime="20190121 11:17:41.864" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:41.871" endtime="20190121 11:17:41.910" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:41.913" endtime="20190121 11:17:41.927" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:42.002" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0065 65</msg>
<status starttime="20190121 11:17:41.950" endtime="20190121 11:17:42.003" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:42.038" endtime="20190121 11:17:42.063" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:42.315" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 43 3C F6</msg>
<status starttime="20190121 11:17:42.066" endtime="20190121 11:17:42.316" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:42.319" endtime="20190121 11:17:42.337" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:42.340" endtime="20190121 11:17:42.362" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:42.375" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '43', '3C', 'F6']</msg>
<status starttime="20190121 11:17:42.365" endtime="20190121 11:17:42.376" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:42.385" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:17:42.379" endtime="20190121 11:17:42.386" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:42.389" endtime="20190121 11:17:42.394" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:42.403" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:42.398" endtime="20190121 11:17:42.404" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:42.408" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:41.929" endtime="20190121 11:17:42.409" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:42.412" endtime="20190121 11:17:42.417" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:42.420" endtime="20190121 11:17:42.425" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:42.445" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 65</msg>
<status starttime="20190121 11:17:42.438" endtime="20190121 11:17:42.446" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:42.449" endtime="20190121 11:17:42.455" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:42.658" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 44 3C F1</msg>
<status starttime="20190121 11:17:42.459" endtime="20190121 11:17:42.658" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:42.662" endtime="20190121 11:17:42.668" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:42.671" endtime="20190121 11:17:42.676" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:42.684" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '44', '3C', 'F1']</msg>
<status starttime="20190121 11:17:42.679" endtime="20190121 11:17:42.685" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:42.695" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:17:42.689" endtime="20190121 11:17:42.696" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:42.698" endtime="20190121 11:17:42.704" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:42.713" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:42.707" endtime="20190121 11:17:42.713" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:42.717" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:42.427" endtime="20190121 11:17:42.718" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:42.721" endtime="20190121 11:17:42.726" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:42.729" endtime="20190121 11:17:42.734" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:42.754" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0065 20</msg>
<status starttime="20190121 11:17:42.747" endtime="20190121 11:17:42.755" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:42.758" endtime="20190121 11:17:42.763" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:43.077" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 45 3C F0</msg>
<status starttime="20190121 11:17:42.766" endtime="20190121 11:17:43.078" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:43.106" endtime="20190121 11:17:43.133" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:43.140" endtime="20190121 11:17:43.170" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:43.233" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '45', '3C', 'F0']</msg>
<status starttime="20190121 11:17:43.188" endtime="20190121 11:17:43.234" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:43.280" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:17:43.246" endtime="20190121 11:17:43.285" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:43.288" endtime="20190121 11:17:43.347" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:43.380" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:43.350" endtime="20190121 11:17:43.381" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:43.389" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:42.736" endtime="20190121 11:17:43.390" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:43.407" endtime="20190121 11:17:43.413" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:43.415" endtime="20190121 11:17:43.429" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:43.489" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 00</msg>
<status starttime="20190121 11:17:43.453" endtime="20190121 11:17:43.502" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:43.505" endtime="20190121 11:17:43.527" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:43.787" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 44 3C F1</msg>
<status starttime="20190121 11:17:43.530" endtime="20190121 11:17:43.788" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:43.791" endtime="20190121 11:17:43.829" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:43.832" endtime="20190121 11:17:43.850" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:43.871" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '44', '3C', 'F1']</msg>
<status starttime="20190121 11:17:43.854" endtime="20190121 11:17:43.872" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:43.881" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:17:43.875" endtime="20190121 11:17:43.894" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:43.897" endtime="20190121 11:17:43.902" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:43.926" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:43.919" endtime="20190121 11:17:43.926" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:43.945" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:43.431" endtime="20190121 11:17:43.946" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:43.949" endtime="20190121 11:17:43.964" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:43.967" endtime="20190121 11:17:43.982" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:44.029" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0000 20</msg>
<status starttime="20190121 11:17:44.013" endtime="20190121 11:17:44.030" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:44.033" endtime="20190121 11:17:44.049" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:44.303" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 45 3C F0</msg>
<status starttime="20190121 11:17:44.052" endtime="20190121 11:17:44.304" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:44.307" endtime="20190121 11:17:44.319" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:44.323" endtime="20190121 11:17:44.329" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:44.338" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '45', '3C', 'F0']</msg>
<status starttime="20190121 11:17:44.333" endtime="20190121 11:17:44.339" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:44.348" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:17:44.342" endtime="20190121 11:17:44.349" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:44.352" endtime="20190121 11:17:44.357" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:44.365" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:44.360" endtime="20190121 11:17:44.366" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:44.370" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:43.985" endtime="20190121 11:17:44.371" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:44.374" endtime="20190121 11:17:44.379" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:44.382" endtime="20190121 11:17:44.387" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:44.427" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0000 00</msg>
<status starttime="20190121 11:17:44.415" endtime="20190121 11:17:44.428" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:44.431" endtime="20190121 11:17:44.437" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:44.726" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 46 3C F3</msg>
<status starttime="20190121 11:17:44.439" endtime="20190121 11:17:44.728" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:44.731" endtime="20190121 11:17:44.749" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:44.752" endtime="20190121 11:17:44.770" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:44.779" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '46', '3C', 'F3']</msg>
<status starttime="20190121 11:17:44.774" endtime="20190121 11:17:44.780" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:44.806" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:17:44.800" endtime="20190121 11:17:44.807" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:44.813" endtime="20190121 11:17:44.819" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:44.828" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:44.822" endtime="20190121 11:17:44.829" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:44.833" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:44.397" endtime="20190121 11:17:44.833" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:44.836" endtime="20190121 11:17:44.842" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:40.760" endtime="20190121 11:17:44.844" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:40.746" endtime="20190121 11:17:44.847" status="PASS"></status>
</kw>
<kw name="digit_out_hs_3">
<doc>Set pwm for the digital output hs 3</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 3</arg>
</arguments>
<status starttime="20190121 11:17:44.855" endtime="20190121 11:17:44.860" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_3}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:44.870" endtime="20190121 11:17:44.874" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:44.894" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 20</msg>
<status starttime="20190121 11:17:44.887" endtime="20190121 11:17:44.895" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:44.898" endtime="20190121 11:17:44.904" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:45.108" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 47 3D F1</msg>
<status starttime="20190121 11:17:44.907" endtime="20190121 11:17:45.109" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:45.112" endtime="20190121 11:17:45.118" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:45.121" endtime="20190121 11:17:45.127" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:45.134" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '47', '3D', 'F1']</msg>
<status starttime="20190121 11:17:45.130" endtime="20190121 11:17:45.135" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:45.144" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:17:45.138" endtime="20190121 11:17:45.144" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:45.147" endtime="20190121 11:17:45.153" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:45.161" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:45.156" endtime="20190121 11:17:45.162" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:45.166" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:44.877" endtime="20190121 11:17:45.167" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:45.169" endtime="20190121 11:17:45.175" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:45.178" endtime="20190121 11:17:45.182" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:45.203" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0064 64</msg>
<status starttime="20190121 11:17:45.196" endtime="20190121 11:17:45.204" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:45.207" endtime="20190121 11:17:45.216" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:45.419" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 40 3D F6</msg>
<status starttime="20190121 11:17:45.219" endtime="20190121 11:17:45.419" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:45.423" endtime="20190121 11:17:45.429" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:45.433" endtime="20190121 11:17:45.439" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:45.450" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '40', '3D', 'F6']</msg>
<status starttime="20190121 11:17:45.444" endtime="20190121 11:17:45.451" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:45.459" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:17:45.454" endtime="20190121 11:17:45.460" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:45.463" endtime="20190121 11:17:45.469" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:45.477" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:45.472" endtime="20190121 11:17:45.478" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:45.482" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:45.184" endtime="20190121 11:17:45.482" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:45.485" endtime="20190121 11:17:45.491" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:45.494" endtime="20190121 11:17:45.498" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:45.518" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0001 01</msg>
<status starttime="20190121 11:17:45.511" endtime="20190121 11:17:45.519" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:45.522" endtime="20190121 11:17:45.528" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:45.730" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 41 3D F7</msg>
<status starttime="20190121 11:17:45.531" endtime="20190121 11:17:45.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:45.735" endtime="20190121 11:17:45.740" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:45.743" endtime="20190121 11:17:45.749" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:45.757" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '41', '3D', 'F7']</msg>
<status starttime="20190121 11:17:45.752" endtime="20190121 11:17:45.758" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:45.766" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:17:45.761" endtime="20190121 11:17:45.767" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:45.770" endtime="20190121 11:17:45.775" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:45.784" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:45.778" endtime="20190121 11:17:45.785" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:45.788" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:45.501" endtime="20190121 11:17:45.789" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:45.793" endtime="20190121 11:17:45.799" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:45.802" endtime="20190121 11:17:45.807" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:45.827" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0065 65</msg>
<status starttime="20190121 11:17:45.820" endtime="20190121 11:17:45.828" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:45.831" endtime="20190121 11:17:45.837" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:46.083" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 42 3C F4</msg>
<status starttime="20190121 11:17:45.840" endtime="20190121 11:17:46.084" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:46.087" endtime="20190121 11:17:46.093" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:46.096" endtime="20190121 11:17:46.101" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:46.113" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '42', '3C', 'F4']</msg>
<status starttime="20190121 11:17:46.104" endtime="20190121 11:17:46.114" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:46.122" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:17:46.117" endtime="20190121 11:17:46.123" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:46.126" endtime="20190121 11:17:46.132" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:46.141" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:46.135" endtime="20190121 11:17:46.142" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:46.145" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:45.809" endtime="20190121 11:17:46.146" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:46.149" endtime="20190121 11:17:46.155" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:46.158" endtime="20190121 11:17:46.162" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:46.182" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 65</msg>
<status starttime="20190121 11:17:46.175" endtime="20190121 11:17:46.183" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:46.186" endtime="20190121 11:17:46.192" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:46.396" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 43 3C F5</msg>
<status starttime="20190121 11:17:46.194" endtime="20190121 11:17:46.397" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:46.401" endtime="20190121 11:17:46.409" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:46.412" endtime="20190121 11:17:46.417" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:46.425" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '43', '3C', 'F5']</msg>
<status starttime="20190121 11:17:46.420" endtime="20190121 11:17:46.426" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:46.435" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:17:46.429" endtime="20190121 11:17:46.436" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:46.438" endtime="20190121 11:17:46.444" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:46.454" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:46.447" endtime="20190121 11:17:46.455" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:46.458" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:46.164" endtime="20190121 11:17:46.459" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:46.462" endtime="20190121 11:17:46.479" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:46.496" endtime="20190121 11:17:46.518" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:46.599" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0065 20</msg>
<status starttime="20190121 11:17:46.561" endtime="20190121 11:17:46.600" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:46.603" endtime="20190121 11:17:46.634" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:46.876" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 44 3C F2</msg>
<status starttime="20190121 11:17:46.637" endtime="20190121 11:17:46.877" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:46.880" endtime="20190121 11:17:46.886" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:46.889" endtime="20190121 11:17:46.895" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:46.904" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '44', '3C', 'F2']</msg>
<status starttime="20190121 11:17:46.898" endtime="20190121 11:17:46.905" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:46.913" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:17:46.908" endtime="20190121 11:17:46.914" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:46.917" endtime="20190121 11:17:46.922" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:46.931" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:46.925" endtime="20190121 11:17:46.932" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:46.936" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:46.525" endtime="20190121 11:17:46.937" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:46.939" endtime="20190121 11:17:46.945" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:46.948" endtime="20190121 11:17:46.962" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:46.983" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 00</msg>
<status starttime="20190121 11:17:46.976" endtime="20190121 11:17:46.984" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:46.987" endtime="20190121 11:17:46.992" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:47.202" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 45 3C F3</msg>
<status starttime="20190121 11:17:46.995" endtime="20190121 11:17:47.202" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:47.205" endtime="20190121 11:17:47.236" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:47.239" endtime="20190121 11:17:47.270" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:47.307" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '45', '3C', 'F3']</msg>
<status starttime="20190121 11:17:47.290" endtime="20190121 11:17:47.308" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:47.332" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:17:47.311" endtime="20190121 11:17:47.344" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:47.348" endtime="20190121 11:17:47.353" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:47.378" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:47.367" endtime="20190121 11:17:47.379" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:47.383" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:46.964" endtime="20190121 11:17:47.384" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:47.387" endtime="20190121 11:17:47.392" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:47.395" endtime="20190121 11:17:47.400" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:47.420" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0000 20</msg>
<status starttime="20190121 11:17:47.413" endtime="20190121 11:17:47.421" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:47.424" endtime="20190121 11:17:47.430" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:47.633" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 40 3C F6</msg>
<status starttime="20190121 11:17:47.433" endtime="20190121 11:17:47.634" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:47.638" endtime="20190121 11:17:47.643" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:47.646" endtime="20190121 11:17:47.652" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:47.660" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '40', '3C', 'F6']</msg>
<status starttime="20190121 11:17:47.655" endtime="20190121 11:17:47.661" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:47.669" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:17:47.664" endtime="20190121 11:17:47.670" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:47.673" endtime="20190121 11:17:47.679" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:47.687" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:47.682" endtime="20190121 11:17:47.688" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:47.692" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:47.402" endtime="20190121 11:17:47.693" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:47.695" endtime="20190121 11:17:47.703" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:47.707" endtime="20190121 11:17:47.712" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:47.738" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0000 00</msg>
<status starttime="20190121 11:17:47.727" endtime="20190121 11:17:47.739" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:47.742" endtime="20190121 11:17:47.752" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:47.955" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 41 3C F7</msg>
<status starttime="20190121 11:17:47.755" endtime="20190121 11:17:47.957" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:47.960" endtime="20190121 11:17:47.965" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:47.968" endtime="20190121 11:17:47.974" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:47.983" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '41', '3C', 'F7']</msg>
<status starttime="20190121 11:17:47.977" endtime="20190121 11:17:47.984" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:47.994" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:17:47.987" endtime="20190121 11:17:47.994" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:47.997" endtime="20190121 11:17:48.003" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:48.012" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:48.006" endtime="20190121 11:17:48.013" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:48.016" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:47.714" endtime="20190121 11:17:48.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:48.020" endtime="20190121 11:17:48.026" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:44.862" endtime="20190121 11:17:48.028" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:44.849" endtime="20190121 11:17:48.031" status="PASS"></status>
</kw>
<kw name="digit_out_hs_4">
<doc>Set for the digital output hs 4</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set for the digital output hs 4</arg>
</arguments>
<status starttime="20190121 11:17:48.039" endtime="20190121 11:17:48.044" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_4}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:48.054" endtime="20190121 11:17:48.059" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:48.079" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 20</msg>
<status starttime="20190121 11:17:48.072" endtime="20190121 11:17:48.080" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:48.083" endtime="20190121 11:17:48.088" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:48.290" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 42 3D F5</msg>
<status starttime="20190121 11:17:48.091" endtime="20190121 11:17:48.291" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:48.294" endtime="20190121 11:17:48.300" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:48.303" endtime="20190121 11:17:48.308" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:48.316" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '42', '3D', 'F5']</msg>
<status starttime="20190121 11:17:48.311" endtime="20190121 11:17:48.317" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:48.326" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:17:48.320" endtime="20190121 11:17:48.327" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:48.330" endtime="20190121 11:17:48.335" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:48.344" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:48.338" endtime="20190121 11:17:48.345" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:48.349" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:48.061" endtime="20190121 11:17:48.349" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:48.352" endtime="20190121 11:17:48.358" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:48.361" endtime="20190121 11:17:48.365" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:48.386" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0064 64</msg>
<status starttime="20190121 11:17:48.378" endtime="20190121 11:17:48.386" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:48.389" endtime="20190121 11:17:48.395" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:48.603" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 43 3D F4</msg>
<status starttime="20190121 11:17:48.399" endtime="20190121 11:17:48.604" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:48.607" endtime="20190121 11:17:48.613" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:48.616" endtime="20190121 11:17:48.622" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:48.629" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '43', '3D', 'F4']</msg>
<status starttime="20190121 11:17:48.625" endtime="20190121 11:17:48.630" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:48.639" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:17:48.633" endtime="20190121 11:17:48.640" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:48.643" endtime="20190121 11:17:48.648" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:48.657" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:48.651" endtime="20190121 11:17:48.658" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:48.661" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:48.368" endtime="20190121 11:17:48.662" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:48.665" endtime="20190121 11:17:48.671" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:48.674" endtime="20190121 11:17:48.678" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:48.698" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0001 01</msg>
<status starttime="20190121 11:17:48.691" endtime="20190121 11:17:48.699" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:48.702" endtime="20190121 11:17:48.708" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:48.910" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 44 3D F3</msg>
<status starttime="20190121 11:17:48.711" endtime="20190121 11:17:48.911" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:48.914" endtime="20190121 11:17:48.920" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:48.923" endtime="20190121 11:17:48.929" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:48.937" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '44', '3D', 'F3']</msg>
<status starttime="20190121 11:17:48.932" endtime="20190121 11:17:48.938" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:48.946" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:17:48.941" endtime="20190121 11:17:48.947" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:48.950" endtime="20190121 11:17:48.955" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:48.964" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:48.958" endtime="20190121 11:17:48.965" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:48.968" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:48.680" endtime="20190121 11:17:48.969" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:48.972" endtime="20190121 11:17:48.978" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:48.980" endtime="20190121 11:17:48.985" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:49.007" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0065 65</msg>
<status starttime="20190121 11:17:48.998" endtime="20190121 11:17:49.008" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:49.011" endtime="20190121 11:17:49.017" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:49.218" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 45 3C F2</msg>
<status starttime="20190121 11:17:49.020" endtime="20190121 11:17:49.219" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:49.222" endtime="20190121 11:17:49.228" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:49.231" endtime="20190121 11:17:49.237" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:49.245" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '45', '3C', 'F2']</msg>
<status starttime="20190121 11:17:49.240" endtime="20190121 11:17:49.246" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:49.254" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:17:49.249" endtime="20190121 11:17:49.255" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:49.258" endtime="20190121 11:17:49.267" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:49.276" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:49.270" endtime="20190121 11:17:49.277" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:49.280" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:48.987" endtime="20190121 11:17:49.281" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:49.284" endtime="20190121 11:17:49.290" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:49.293" endtime="20190121 11:17:49.298" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:49.318" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 65</msg>
<status starttime="20190121 11:17:49.311" endtime="20190121 11:17:49.319" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:49.322" endtime="20190121 11:17:49.328" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:49.530" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 46 3C F1</msg>
<status starttime="20190121 11:17:49.331" endtime="20190121 11:17:49.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:49.535" endtime="20190121 11:17:49.540" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:49.543" endtime="20190121 11:17:49.549" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:49.557" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '46', '3C', 'F1']</msg>
<status starttime="20190121 11:17:49.552" endtime="20190121 11:17:49.558" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:49.566" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:17:49.561" endtime="20190121 11:17:49.567" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:49.570" endtime="20190121 11:17:49.575" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:49.584" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:49.578" endtime="20190121 11:17:49.585" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:49.588" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:49.300" endtime="20190121 11:17:49.589" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:49.592" endtime="20190121 11:17:49.598" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:49.601" endtime="20190121 11:17:49.605" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:49.626" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0065 20</msg>
<status starttime="20190121 11:17:49.619" endtime="20190121 11:17:49.627" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:49.630" endtime="20190121 11:17:49.636" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:49.859" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 47 3C F0</msg>
<status starttime="20190121 11:17:49.639" endtime="20190121 11:17:49.860" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:49.863" endtime="20190121 11:17:49.868" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:49.871" endtime="20190121 11:17:49.877" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:49.885" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '47', '3C', 'F0']</msg>
<status starttime="20190121 11:17:49.880" endtime="20190121 11:17:49.886" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:49.894" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:17:49.889" endtime="20190121 11:17:49.895" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:49.898" endtime="20190121 11:17:49.903" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:49.912" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:49.906" endtime="20190121 11:17:49.913" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:49.917" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:49.608" endtime="20190121 11:17:49.917" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:49.920" endtime="20190121 11:17:49.926" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:49.929" endtime="20190121 11:17:49.933" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:49.958" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 00</msg>
<status starttime="20190121 11:17:49.950" endtime="20190121 11:17:49.959" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:49.962" endtime="20190121 11:17:49.967" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:50.170" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 40 3C F7</msg>
<status starttime="20190121 11:17:49.970" endtime="20190121 11:17:50.171" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:50.174" endtime="20190121 11:17:50.180" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:50.183" endtime="20190121 11:17:50.189" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:50.196" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '40', '3C', 'F7']</msg>
<status starttime="20190121 11:17:50.192" endtime="20190121 11:17:50.197" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:50.206" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:17:50.200" endtime="20190121 11:17:50.207" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:50.209" endtime="20190121 11:17:50.215" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:50.223" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:50.218" endtime="20190121 11:17:50.224" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:50.228" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:49.936" endtime="20190121 11:17:50.229" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:50.231" endtime="20190121 11:17:50.238" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:50.242" endtime="20190121 11:17:50.247" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:50.267" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0000 20</msg>
<status starttime="20190121 11:17:50.260" endtime="20190121 11:17:50.268" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:50.271" endtime="20190121 11:17:50.276" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:50.479" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 41 3C F6</msg>
<status starttime="20190121 11:17:50.279" endtime="20190121 11:17:50.481" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:50.484" endtime="20190121 11:17:50.489" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:50.493" endtime="20190121 11:17:50.498" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:50.506" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '41', '3C', 'F6']</msg>
<status starttime="20190121 11:17:50.501" endtime="20190121 11:17:50.507" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:50.515" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:17:50.510" endtime="20190121 11:17:50.516" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:50.519" endtime="20190121 11:17:50.524" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:50.533" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:50.527" endtime="20190121 11:17:50.534" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:50.537" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:50.249" endtime="20190121 11:17:50.538" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:50.542" endtime="20190121 11:17:50.547" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:50.550" endtime="20190121 11:17:50.555" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:50.575" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0000 00</msg>
<status starttime="20190121 11:17:50.568" endtime="20190121 11:17:50.576" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:50.579" endtime="20190121 11:17:50.585" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:50.787" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 42 3C F5</msg>
<status starttime="20190121 11:17:50.588" endtime="20190121 11:17:50.789" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:50.792" endtime="20190121 11:17:50.797" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:50.801" endtime="20190121 11:17:50.810" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:50.818" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '42', '3C', 'F5']</msg>
<status starttime="20190121 11:17:50.813" endtime="20190121 11:17:50.819" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:50.828" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:17:50.822" endtime="20190121 11:17:50.829" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:50.831" endtime="20190121 11:17:50.837" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:50.847" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:50.840" endtime="20190121 11:17:50.848" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:50.851" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:50.557" endtime="20190121 11:17:50.852" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:50.855" endtime="20190121 11:17:50.860" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:48.046" endtime="20190121 11:17:50.863" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:48.033" endtime="20190121 11:17:50.865" status="PASS"></status>
</kw>
<kw name="digit_out_led1">
<doc>Set pwm for the digital output led1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output led1</arg>
</arguments>
<status starttime="20190121 11:17:50.873" endtime="20190121 11:17:50.878" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:50.887" endtime="20190121 11:17:50.892" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:50.912" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 20</msg>
<status starttime="20190121 11:17:50.905" endtime="20190121 11:17:50.913" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:50.916" endtime="20190121 11:17:50.921" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:51.126" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 43 3D F3</msg>
<status starttime="20190121 11:17:50.924" endtime="20190121 11:17:51.127" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:51.130" endtime="20190121 11:17:51.135" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:51.138" endtime="20190121 11:17:51.144" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:51.152" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '43', '3D', 'F3']</msg>
<status starttime="20190121 11:17:51.147" endtime="20190121 11:17:51.153" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:51.162" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:17:51.156" endtime="20190121 11:17:51.162" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:51.165" endtime="20190121 11:17:51.171" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:51.179" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:51.174" endtime="20190121 11:17:51.180" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:51.184" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:50.894" endtime="20190121 11:17:51.185" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:51.187" endtime="20190121 11:17:51.193" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:51.196" endtime="20190121 11:17:51.201" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:51.221" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0064 64</msg>
<status starttime="20190121 11:17:51.213" endtime="20190121 11:17:51.222" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:51.225" endtime="20190121 11:17:51.230" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:51.430" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 44 3D F4</msg>
<status starttime="20190121 11:17:51.233" endtime="20190121 11:17:51.431" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:51.435" endtime="20190121 11:17:51.440" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:51.443" endtime="20190121 11:17:51.449" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:51.458" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '44', '3D', 'F4']</msg>
<status starttime="20190121 11:17:51.452" endtime="20190121 11:17:51.459" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:51.471" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:17:51.462" endtime="20190121 11:17:51.472" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:51.475" endtime="20190121 11:17:51.481" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:51.489" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:51.484" endtime="20190121 11:17:51.490" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:51.494" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:51.203" endtime="20190121 11:17:51.495" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:51.498" endtime="20190121 11:17:51.503" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:51.506" endtime="20190121 11:17:51.511" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:51.531" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0001 01</msg>
<status starttime="20190121 11:17:51.523" endtime="20190121 11:17:51.532" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:51.535" endtime="20190121 11:17:51.540" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:51.743" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 45 3D F5</msg>
<status starttime="20190121 11:17:51.544" endtime="20190121 11:17:51.744" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:51.747" endtime="20190121 11:17:51.753" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:51.756" endtime="20190121 11:17:51.761" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:51.769" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '45', '3D', 'F5']</msg>
<status starttime="20190121 11:17:51.764" endtime="20190121 11:17:51.770" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:51.779" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:17:51.773" endtime="20190121 11:17:51.779" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:51.782" endtime="20190121 11:17:51.788" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:51.796" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:51.791" endtime="20190121 11:17:51.797" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:51.801" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:51.513" endtime="20190121 11:17:51.802" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:51.805" endtime="20190121 11:17:51.810" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:51.813" endtime="20190121 11:17:51.818" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:51.838" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0065 65</msg>
<status starttime="20190121 11:17:51.831" endtime="20190121 11:17:51.839" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:51.842" endtime="20190121 11:17:51.848" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:52.053" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 46 3C F6</msg>
<status starttime="20190121 11:17:51.851" endtime="20190121 11:17:52.054" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:52.057" endtime="20190121 11:17:52.063" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:52.066" endtime="20190121 11:17:52.072" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:52.080" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '46', '3C', 'F6']</msg>
<status starttime="20190121 11:17:52.075" endtime="20190121 11:17:52.081" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:52.089" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:17:52.083" endtime="20190121 11:17:52.090" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:52.093" endtime="20190121 11:17:52.098" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:52.107" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:52.102" endtime="20190121 11:17:52.108" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:52.112" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:51.820" endtime="20190121 11:17:52.113" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:52.115" endtime="20190121 11:17:52.121" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:52.124" endtime="20190121 11:17:52.129" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:52.154" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 65</msg>
<status starttime="20190121 11:17:52.146" endtime="20190121 11:17:52.154" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:52.157" endtime="20190121 11:17:52.163" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:52.365" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 47 3C F7</msg>
<status starttime="20190121 11:17:52.166" endtime="20190121 11:17:52.366" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:52.370" endtime="20190121 11:17:52.375" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:52.378" endtime="20190121 11:17:52.384" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:52.392" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '47', '3C', 'F7']</msg>
<status starttime="20190121 11:17:52.387" endtime="20190121 11:17:52.393" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:52.401" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:17:52.396" endtime="20190121 11:17:52.402" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:52.405" endtime="20190121 11:17:52.410" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:52.419" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:52.413" endtime="20190121 11:17:52.420" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:52.423" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:52.131" endtime="20190121 11:17:52.424" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:52.427" endtime="20190121 11:17:52.433" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:52.435" endtime="20190121 11:17:52.440" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:52.460" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0065 20</msg>
<status starttime="20190121 11:17:52.453" endtime="20190121 11:17:52.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:52.464" endtime="20190121 11:17:52.471" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:52.673" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 40 3C F0</msg>
<status starttime="20190121 11:17:52.474" endtime="20190121 11:17:52.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:52.678" endtime="20190121 11:17:52.683" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:52.686" endtime="20190121 11:17:52.692" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:52.700" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '40', '3C', 'F0']</msg>
<status starttime="20190121 11:17:52.695" endtime="20190121 11:17:52.701" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:52.710" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:17:52.704" endtime="20190121 11:17:52.710" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:52.713" endtime="20190121 11:17:52.719" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:52.727" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:52.722" endtime="20190121 11:17:52.728" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:52.732" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:52.442" endtime="20190121 11:17:52.733" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:52.736" endtime="20190121 11:17:52.741" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:52.744" endtime="20190121 11:17:52.749" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:52.769" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 00</msg>
<status starttime="20190121 11:17:52.762" endtime="20190121 11:17:52.770" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:52.773" endtime="20190121 11:17:52.779" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:52.981" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 41 3C F1</msg>
<status starttime="20190121 11:17:52.782" endtime="20190121 11:17:52.982" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:52.985" endtime="20190121 11:17:52.997" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:53.004" endtime="20190121 11:17:53.020" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:53.033" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '41', '3C', 'F1']</msg>
<status starttime="20190121 11:17:53.023" endtime="20190121 11:17:53.034" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:53.058" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:17:53.044" endtime="20190121 11:17:53.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:53.063" endtime="20190121 11:17:53.068" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:53.077" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:53.071" endtime="20190121 11:17:53.078" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:53.081" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:52.751" endtime="20190121 11:17:53.082" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:53.085" endtime="20190121 11:17:53.091" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:53.094" endtime="20190121 11:17:53.098" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:53.119" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0000 20</msg>
<status starttime="20190121 11:17:53.111" endtime="20190121 11:17:53.120" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:53.123" endtime="20190121 11:17:53.129" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:53.374" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 42 3C F2</msg>
<status starttime="20190121 11:17:53.132" endtime="20190121 11:17:53.374" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:53.378" endtime="20190121 11:17:53.384" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:53.387" endtime="20190121 11:17:53.393" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:53.400" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '42', '3C', 'F2']</msg>
<status starttime="20190121 11:17:53.396" endtime="20190121 11:17:53.401" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:53.410" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:17:53.404" endtime="20190121 11:17:53.412" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:53.415" endtime="20190121 11:17:53.426" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:53.467" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:53.436" endtime="20190121 11:17:53.468" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:53.483" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:53.100" endtime="20190121 11:17:53.484" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:53.487" endtime="20190121 11:17:53.493" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:53.505" endtime="20190121 11:17:53.523" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:53.554" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0000 00</msg>
<status starttime="20190121 11:17:53.545" endtime="20190121 11:17:53.555" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:53.558" endtime="20190121 11:17:53.563" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:53.815" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 43 3C F3</msg>
<status starttime="20190121 11:17:53.566" endtime="20190121 11:17:53.816" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:53.819" endtime="20190121 11:17:53.854" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:53.857" endtime="20190121 11:17:53.863" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:53.882" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '43', '3C', 'F3']</msg>
<status starttime="20190121 11:17:53.876" endtime="20190121 11:17:53.882" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:53.903" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:17:53.897" endtime="20190121 11:17:53.904" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:53.907" endtime="20190121 11:17:53.923" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:53.943" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:53.938" endtime="20190121 11:17:53.944" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:53.954" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:53.525" endtime="20190121 11:17:53.955" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:53.963" endtime="20190121 11:17:53.989" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:50.880" endtime="20190121 11:17:53.992" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:50.867" endtime="20190121 11:17:54.004" status="PASS"></status>
</kw>
<kw name="digit_out_led2">
<doc>Set pwm for the digital output led2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output led2</arg>
</arguments>
<status starttime="20190121 11:17:54.013" endtime="20190121 11:17:54.029" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:54.047" endtime="20190121 11:17:54.061" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:54.090" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 20</msg>
<status starttime="20190121 11:17:54.082" endtime="20190121 11:17:54.091" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:54.094" endtime="20190121 11:17:54.099" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:54.426" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 44 3D F5</msg>
<status starttime="20190121 11:17:54.102" endtime="20190121 11:17:54.427" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:54.434" endtime="20190121 11:17:54.501" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:54.504" endtime="20190121 11:17:54.544" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:54.609" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '44', '3D', 'F5']</msg>
<status starttime="20190121 11:17:54.551" endtime="20190121 11:17:54.610" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:54.651" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:17:54.619" endtime="20190121 11:17:54.652" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:54.686" endtime="20190121 11:17:54.696" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:54.753" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:54.728" endtime="20190121 11:17:54.754" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:54.763" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:54.063" endtime="20190121 11:17:54.763" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:54.786" endtime="20190121 11:17:54.837" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:54.861" endtime="20190121 11:17:54.902" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:55.038" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0064 64</msg>
<status starttime="20190121 11:17:54.971" endtime="20190121 11:17:55.038" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:55.064" endtime="20190121 11:17:55.099" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:55.625" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 45 3D F4</msg>
<status starttime="20190121 11:17:55.103" endtime="20190121 11:17:55.626" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:55.666" endtime="20190121 11:17:55.713" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:55.719" endtime="20190121 11:17:55.753" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:55.776" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '45', '3D', 'F4']</msg>
<status starttime="20190121 11:17:55.771" endtime="20190121 11:17:55.777" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:55.836" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:17:55.794" endtime="20190121 11:17:55.837" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:55.840" endtime="20190121 11:17:55.859" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:55.888" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:55.862" endtime="20190121 11:17:55.889" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:55.902" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:54.912" endtime="20190121 11:17:55.903" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:55.906" endtime="20190121 11:17:55.921" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:17:55.924" endtime="20190121 11:17:55.946" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:55.994" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0001 01</msg>
<status starttime="20190121 11:17:55.980" endtime="20190121 11:17:55.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:56.007" endtime="20190121 11:17:56.037" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:56.338" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 46 3D F7</msg>
<status starttime="20190121 11:17:56.040" endtime="20190121 11:17:56.339" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:56.342" endtime="20190121 11:17:56.366" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:56.373" endtime="20190121 11:17:56.401" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:56.436" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '46', '3D', 'F7']</msg>
<status starttime="20190121 11:17:56.404" endtime="20190121 11:17:56.437" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:56.467" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:17:56.441" endtime="20190121 11:17:56.468" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:56.471" endtime="20190121 11:17:56.483" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:56.513" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:17:56.486" endtime="20190121 11:17:56.514" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:56.518" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:17:55.949" endtime="20190121 11:17:56.518" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:56.537" endtime="20190121 11:17:56.543" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:56.558" endtime="20190121 11:17:56.574" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:56.629" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0065 65</msg>
<status starttime="20190121 11:17:56.597" endtime="20190121 11:17:56.630" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:56.633" endtime="20190121 11:17:56.657" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:57.173" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 47 3C F6</msg>
<status starttime="20190121 11:17:56.660" endtime="20190121 11:17:57.174" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:57.196" endtime="20190121 11:17:57.233" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:57.241" endtime="20190121 11:17:57.262" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:57.311" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '47', '3C', 'F6']</msg>
<status starttime="20190121 11:17:57.297" endtime="20190121 11:17:57.312" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:57.378" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:17:57.339" endtime="20190121 11:17:57.378" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:57.386" endtime="20190121 11:17:57.428" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:57.479" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:57.435" endtime="20190121 11:17:57.480" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:57.524" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:56.577" endtime="20190121 11:17:57.525" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:57.528" endtime="20190121 11:17:57.541" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:57.544" endtime="20190121 11:17:57.565" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:57.660" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 65</msg>
<status starttime="20190121 11:17:57.608" endtime="20190121 11:17:57.661" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:57.679" endtime="20190121 11:17:57.706" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:58.105" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 40 3C F1</msg>
<status starttime="20190121 11:17:57.709" endtime="20190121 11:17:58.106" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:58.144" endtime="20190121 11:17:58.159" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:58.163" endtime="20190121 11:17:58.175" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:58.193" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '40', '3C', 'F1']</msg>
<status starttime="20190121 11:17:58.178" endtime="20190121 11:17:58.194" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:58.237" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:17:58.203" endtime="20190121 11:17:58.238" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:58.303" endtime="20190121 11:17:58.313" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:58.345" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:58.339" endtime="20190121 11:17:58.346" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:58.361" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:57.568" endtime="20190121 11:17:58.362" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:58.365" endtime="20190121 11:17:58.391" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:58.394" endtime="20190121 11:17:58.437" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:58.548" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0065 20</msg>
<status starttime="20190121 11:17:58.505" endtime="20190121 11:17:58.549" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:58.552" endtime="20190121 11:17:58.570" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:58.941" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 41 3C F0</msg>
<status starttime="20190121 11:17:58.573" endtime="20190121 11:17:58.942" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:58.945" endtime="20190121 11:17:58.977" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:58.986" endtime="20190121 11:17:59.007" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:59.029" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '41', '3C', 'F0']</msg>
<status starttime="20190121 11:17:59.010" endtime="20190121 11:17:59.029" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:59.047" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:17:59.032" endtime="20190121 11:17:59.047" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:59.050" endtime="20190121 11:17:59.077" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:59.101" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:59.095" endtime="20190121 11:17:59.102" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:59.123" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:58.440" endtime="20190121 11:17:59.124" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:59.151" endtime="20190121 11:17:59.157" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:59.160" endtime="20190121 11:17:59.183" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:59.236" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 00</msg>
<status starttime="20190121 11:17:59.219" endtime="20190121 11:17:59.237" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:59.261" endtime="20190121 11:17:59.273" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:17:59.546" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 42 3C F3</msg>
<status starttime="20190121 11:17:59.276" endtime="20190121 11:17:59.547" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:17:59.550" endtime="20190121 11:17:59.589" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:59.592" endtime="20190121 11:17:59.607" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:17:59.649" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '42', '3C', 'F3']</msg>
<status starttime="20190121 11:17:59.610" endtime="20190121 11:17:59.649" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:17:59.673" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:17:59.653" endtime="20190121 11:17:59.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:59.677" endtime="20190121 11:17:59.707" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:17:59.722" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:17:59.716" endtime="20190121 11:17:59.723" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:17:59.740" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:59.185" endtime="20190121 11:17:59.741" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:17:59.744" endtime="20190121 11:17:59.767" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:17:59.770" endtime="20190121 11:17:59.793" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:17:59.850" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0000 20</msg>
<status starttime="20190121 11:17:59.819" endtime="20190121 11:17:59.851" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:17:59.864" endtime="20190121 11:17:59.879" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:00.128" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 43 3C F2</msg>
<status starttime="20190121 11:17:59.882" endtime="20190121 11:18:00.140" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:00.144" endtime="20190121 11:18:00.167" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:00.170" endtime="20190121 11:18:00.193" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:00.212" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '43', '3C', 'F2']</msg>
<status starttime="20190121 11:18:00.206" endtime="20190121 11:18:00.213" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:00.244" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:18:00.238" endtime="20190121 11:18:00.265" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:00.268" endtime="20190121 11:18:00.282" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:00.298" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:18:00.285" endtime="20190121 11:18:00.300" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:00.303" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:17:59.795" endtime="20190121 11:18:00.304" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:00.307" endtime="20190121 11:18:00.321" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:18:00.324" endtime="20190121 11:18:00.340" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:00.385" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0000 00</msg>
<status starttime="20190121 11:18:00.363" endtime="20190121 11:18:00.386" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:00.389" endtime="20190121 11:18:00.420" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:00.651" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 44 3C F5</msg>
<status starttime="20190121 11:18:00.423" endtime="20190121 11:18:00.652" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:00.655" endtime="20190121 11:18:00.677" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:00.680" endtime="20190121 11:18:00.701" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:00.717" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '44', '3C', 'F5']</msg>
<status starttime="20190121 11:18:00.704" endtime="20190121 11:18:00.718" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:00.739" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:18:00.721" endtime="20190121 11:18:00.740" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:00.743" endtime="20190121 11:18:00.757" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:00.785" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:18:00.760" endtime="20190121 11:18:00.786" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:00.790" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:18:00.343" endtime="20190121 11:18:00.790" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:00.806" endtime="20190121 11:18:00.811" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:54.031" endtime="20190121 11:18:00.814" status="PASS"></status>
</kw>
<status starttime="20190121 11:17:54.006" endtime="20190121 11:18:00.816" status="PASS"></status>
</kw>
<kw name="digit_out_crm">
<doc>Set pwm for the digital output crm</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output crm</arg>
</arguments>
<status starttime="20190121 11:18:00.850" endtime="20190121 11:18:00.874" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:18:00.892" endtime="20190121 11:18:00.907" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:00.989" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 20</msg>
<status starttime="20190121 11:18:00.971" endtime="20190121 11:18:00.990" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:00.993" endtime="20190121 11:18:01.018" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:01.227" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 45 3D F7</msg>
<status starttime="20190121 11:18:01.021" endtime="20190121 11:18:01.228" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:01.232" endtime="20190121 11:18:01.237" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:01.240" endtime="20190121 11:18:01.246" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:01.254" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '45', '3D', 'F7']</msg>
<status starttime="20190121 11:18:01.249" endtime="20190121 11:18:01.255" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:01.264" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:18:01.258" endtime="20190121 11:18:01.264" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:01.268" endtime="20190121 11:18:01.273" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:01.282" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:18:01.276" endtime="20190121 11:18:01.283" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:01.286" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:18:00.909" endtime="20190121 11:18:01.287" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:01.290" endtime="20190121 11:18:01.295" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:18:01.298" endtime="20190121 11:18:01.303" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:01.323" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0064 64</msg>
<status starttime="20190121 11:18:01.316" endtime="20190121 11:18:01.324" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:01.327" endtime="20190121 11:18:01.338" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:01.565" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 46 3D F4</msg>
<status starttime="20190121 11:18:01.341" endtime="20190121 11:18:01.566" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:01.569" endtime="20190121 11:18:01.579" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:01.582" endtime="20190121 11:18:01.588" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:01.596" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '46', '3D', 'F4']</msg>
<status starttime="20190121 11:18:01.591" endtime="20190121 11:18:01.597" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:01.605" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:18:01.600" endtime="20190121 11:18:01.606" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:01.609" endtime="20190121 11:18:01.618" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:01.628" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:18:01.622" endtime="20190121 11:18:01.628" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:01.632" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:18:01.305" endtime="20190121 11:18:01.633" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:01.636" endtime="20190121 11:18:01.642" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:18:01.645" endtime="20190121 11:18:01.650" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:01.670" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0001 01</msg>
<status starttime="20190121 11:18:01.663" endtime="20190121 11:18:01.671" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:01.674" endtime="20190121 11:18:01.680" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:01.863" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 47 3D F5</msg>
<status starttime="20190121 11:18:01.683" endtime="20190121 11:18:01.865" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:01.868" endtime="20190121 11:18:01.874" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:01.877" endtime="20190121 11:18:01.882" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:01.890" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '47', '3D', 'F5']</msg>
<status starttime="20190121 11:18:01.885" endtime="20190121 11:18:01.891" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:01.900" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:18:01.894" endtime="20190121 11:18:01.901" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:01.903" endtime="20190121 11:18:01.909" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:01.918" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:18:01.912" endtime="20190121 11:18:01.919" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:01.922" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:18:01.652" endtime="20190121 11:18:01.923" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:01.926" endtime="20190121 11:18:01.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:18:01.935" endtime="20190121 11:18:01.940" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:01.961" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0065 65</msg>
<status starttime="20190121 11:18:01.953" endtime="20190121 11:18:01.962" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:01.965" endtime="20190121 11:18:01.971" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:02.147" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 40 3C F2</msg>
<status starttime="20190121 11:18:01.974" endtime="20190121 11:18:02.149" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:02.152" endtime="20190121 11:18:02.157" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:02.160" endtime="20190121 11:18:02.166" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:02.174" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '40', '3C', 'F2']</msg>
<status starttime="20190121 11:18:02.169" endtime="20190121 11:18:02.175" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:02.183" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:18:02.178" endtime="20190121 11:18:02.184" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:02.187" endtime="20190121 11:18:02.193" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:02.202" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:18:02.195" endtime="20190121 11:18:02.203" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:02.207" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:18:01.942" endtime="20190121 11:18:02.207" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:02.210" endtime="20190121 11:18:02.216" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:18:02.219" endtime="20190121 11:18:02.223" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:02.247" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 65</msg>
<status starttime="20190121 11:18:02.236" endtime="20190121 11:18:02.248" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:02.251" endtime="20190121 11:18:02.257" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:02.433" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 41 3C F3</msg>
<status starttime="20190121 11:18:02.260" endtime="20190121 11:18:02.434" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:02.438" endtime="20190121 11:18:02.443" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:02.446" endtime="20190121 11:18:02.452" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:02.460" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '41', '3C', 'F3']</msg>
<status starttime="20190121 11:18:02.455" endtime="20190121 11:18:02.461" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:02.470" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:18:02.465" endtime="20190121 11:18:02.471" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:02.474" endtime="20190121 11:18:02.480" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:02.488" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:18:02.483" endtime="20190121 11:18:02.489" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:02.493" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:18:02.226" endtime="20190121 11:18:02.494" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:02.496" endtime="20190121 11:18:02.502" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:18:02.505" endtime="20190121 11:18:02.510" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:02.530" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0065 20</msg>
<status starttime="20190121 11:18:02.522" endtime="20190121 11:18:02.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:02.533" endtime="20190121 11:18:02.539" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:02.719" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 42 3C F0</msg>
<status starttime="20190121 11:18:02.542" endtime="20190121 11:18:02.720" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:02.724" endtime="20190121 11:18:02.745" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:02.752" endtime="20190121 11:18:02.763" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:02.783" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '42', '3C', 'F0']</msg>
<status starttime="20190121 11:18:02.773" endtime="20190121 11:18:02.783" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:02.804" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:18:02.791" endtime="20190121 11:18:02.809" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:02.817" endtime="20190121 11:18:02.830" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:02.855" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:18:02.842" endtime="20190121 11:18:02.856" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:02.860" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:18:02.512" endtime="20190121 11:18:02.866" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:02.869" endtime="20190121 11:18:02.886" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:18:02.893" endtime="20190121 11:18:02.902" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:02.943" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 00</msg>
<status starttime="20190121 11:18:02.927" endtime="20190121 11:18:02.944" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:02.950" endtime="20190121 11:18:02.965" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:03.169" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 43 3C F1</msg>
<status starttime="20190121 11:18:02.970" endtime="20190121 11:18:03.170" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:03.173" endtime="20190121 11:18:03.178" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:03.181" endtime="20190121 11:18:03.191" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:03.199" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '43', '3C', 'F1']</msg>
<status starttime="20190121 11:18:03.194" endtime="20190121 11:18:03.199" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:03.208" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:18:03.202" endtime="20190121 11:18:03.209" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:03.211" endtime="20190121 11:18:03.217" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:03.225" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:18:03.220" endtime="20190121 11:18:03.226" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:03.230" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:18:02.908" endtime="20190121 11:18:03.231" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:03.234" endtime="20190121 11:18:03.239" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:18:03.242" endtime="20190121 11:18:03.247" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:03.267" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0000 20</msg>
<status starttime="20190121 11:18:03.260" endtime="20190121 11:18:03.268" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:03.271" endtime="20190121 11:18:03.277" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:03.463" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 44 3C F6</msg>
<status starttime="20190121 11:18:03.280" endtime="20190121 11:18:03.466" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:03.469" endtime="20190121 11:18:03.474" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:03.479" endtime="20190121 11:18:03.487" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:03.495" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '44', '3C', 'F6']</msg>
<status starttime="20190121 11:18:03.490" endtime="20190121 11:18:03.497" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:03.505" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:18:03.500" endtime="20190121 11:18:03.506" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:03.509" endtime="20190121 11:18:03.515" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:03.523" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:18:03.518" endtime="20190121 11:18:03.524" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:03.528" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:18:03.249" endtime="20190121 11:18:03.529" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:03.531" endtime="20190121 11:18:03.539" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:18:03.542" endtime="20190121 11:18:03.547" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:03.567" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0000 00</msg>
<status starttime="20190121 11:18:03.560" endtime="20190121 11:18:03.568" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:03.571" endtime="20190121 11:18:03.577" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:03.803" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 45 3C F7</msg>
<status starttime="20190121 11:18:03.580" endtime="20190121 11:18:03.804" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:03.807" endtime="20190121 11:18:03.821" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:03.824" endtime="20190121 11:18:03.831" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:03.838" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '45', '3C', 'F7']</msg>
<status starttime="20190121 11:18:03.834" endtime="20190121 11:18:03.839" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:18:03.848" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:18:03.842" endtime="20190121 11:18:03.849" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:03.853" endtime="20190121 11:18:03.859" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:18:03.868" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:18:03.862" endtime="20190121 11:18:03.868" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:03.872" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:18:03.549" endtime="20190121 11:18:03.873" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:03.876" endtime="20190121 11:18:03.885" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:00.876" endtime="20190121 11:18:03.888" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:00.843" endtime="20190121 11:18:03.890" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:03.900" endtime="20190121 11:18:03.942" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:03.946" endtime="20190121 11:18:03.982" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:03.985" endtime="20190121 11:18:04.022" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:18:04.026" endtime="20190121 11:18:04.062" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:03.893" endtime="20190121 11:18:04.064" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-49357 set pwm on Digital Outputs</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status critical="yes" starttime="20190121 11:17:33.510" endtime="20190121 11:18:04.066" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:18:05.622" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:18:05.755" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:18:04.119" endtime="20190121 11:18:05.807" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:04.082" endtime="20190121 11:18:05.821" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:04.076" endtime="20190121 11:18:05.823" status="PASS"></status>
</kw>
<doc>Chorus GPIO outputs set pwm</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:17:30.440" endtime="20190121 11:18:05.829" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41553.robot" name="SKTB-41553" id="s1-s15">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:18:06.964" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:18:06.955" endtime="20190121 11:18:06.974" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:18:06.983" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:18:07.010" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:18:09.218" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:18:06.977" endtime="20190121 11:18:09.220" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:06.949" endtime="20190121 11:18:09.222" status="PASS"></status>
</kw>
<test name="SKTB-41553" id="s1-s15-t1">
<kw type="setup" name="Test_precondition">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status starttime="20190121 11:18:09.288" endtime="20190121 11:18:09.303" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:09.305" endtime="20190121 11:18:09.373" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:09.396" endtime="20190121 11:18:09.461" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:18:09.464" endtime="20190121 11:18:09.537" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status starttime="20190121 11:18:09.540" endtime="20190121 11:18:09.613" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:18:09.616" endtime="20190121 11:18:09.678" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:18:09.697" endtime="20190121 11:18:09.760" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:18:11.790" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:18:09.783" endtime="20190121 11:18:11.792" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:11.795" endtime="20190121 11:18:11.841" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:11.844" endtime="20190121 11:18:11.892" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:09.257" endtime="20190121 11:18:11.895" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_PSN">
<doc>Test PSN value, write default value and read it, then write new value and read it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test PSN value, write and read default value</arg>
</arguments>
<status starttime="20190121 11:18:11.905" endtime="20190121 11:18:11.909" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read default otp value</arg>
</arguments>
<status starttime="20190121 11:18:11.912" endtime="20190121 11:18:11.916" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_PSN}</arg>
<arg>${PSN_LEN}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:11.937" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FE 00 10</msg>
<status starttime="20190121 11:18:11.930" endtime="20190121 11:18:11.938" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:11.941" endtime="20190121 11:18:11.947" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:12.154" level="INFO">${resp} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 30 31 32 33 34 35 01 45 00 69 16</msg>
<status starttime="20190121 11:18:11.950" endtime="20190121 11:18:12.155" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:12.159" endtime="20190121 11:18:12.164" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:12.183" level="INFO">${temp1} = 1E105494001B000BEE04FFFE0010004C616972642050534E203031323334350145006916</msg>
<status starttime="20190121 11:18:12.177" endtime="20190121 11:18:12.184" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:12.193" level="INFO">${temp2} = EE04FFFE001000</msg>
<status starttime="20190121 11:18:12.187" endtime="20190121 11:18:12.193" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:12.196" endtime="20190121 11:18:12.202" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:12.166" endtime="20190121 11:18:12.204" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:12.209" level="INFO">${res} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 30 31 32 33 34 35 01 45 00 69 16</msg>
<status starttime="20190121 11:18:11.918" endtime="20190121 11:18:12.210" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:11.898" endtime="20190121 11:18:12.213" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_PART_NO">
<doc>READ_OTP_CARIF_HW_PART_NO</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read otp_carif_hw_part_no</arg>
</arguments>
<status starttime="20190121 11:18:12.221" endtime="20190121 11:18:12.229" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_PART_NO}</arg>
<arg>${HW_PART_NO_LEN}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:12.246" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FD 00 0A</msg>
<status starttime="20190121 11:18:12.240" endtime="20190121 11:18:12.247" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:12.250" endtime="20190121 11:18:12.256" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:12.497" level="INFO">${resp} = 1E 10 54 94 00 15 00 0B EE 04 FF FD 00 0A 00 4C 61 69 72 64 20 30 31 32 33 01 44 00 2E 2B</msg>
<status starttime="20190121 11:18:12.259" endtime="20190121 11:18:12.498" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:12.501" endtime="20190121 11:18:12.515" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:12.534" level="INFO">${temp1} = 1E1054940015000BEE04FFFD000A004C6169726420303132330144002E2B</msg>
<status starttime="20190121 11:18:12.528" endtime="20190121 11:18:12.535" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:12.543" level="INFO">${temp2} = EE04FFFD000A00</msg>
<status starttime="20190121 11:18:12.538" endtime="20190121 11:18:12.544" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:12.553" endtime="20190121 11:18:12.568" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:12.517" endtime="20190121 11:18:12.571" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:12.231" endtime="20190121 11:18:12.588" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:12.215" endtime="20190121 11:18:12.590" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_VERSION_INFO">
<doc>READ_OTP_CARIF_HW_VERSION_INFO</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_VERSION_INFO</arg>
</arguments>
<status starttime="20190121 11:18:12.609" endtime="20190121 11:18:12.619" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_VERSION_INFO}</arg>
<arg>${HW_VERSION_INFO_LEN}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:12.649" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FC 00 04</msg>
<status starttime="20190121 11:18:12.641" endtime="20190121 11:18:12.656" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:12.659" endtime="20190121 11:18:12.665" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:13.013" level="INFO">${resp} = 1E 10 54 94 00 0F 00 0B EE 04 FF FC 00 04 00 03 01 06 00 01 45 00 1F 78</msg>
<status starttime="20190121 11:18:12.686" endtime="20190121 11:18:13.014" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:13.053" endtime="20190121 11:18:13.098" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:13.186" level="INFO">${temp1} = 1E105494000F000BEE04FFFC000400030106000145001F78</msg>
<status starttime="20190121 11:18:13.148" endtime="20190121 11:18:13.187" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:13.212" level="INFO">${temp2} = EE04FFFC000400</msg>
<status starttime="20190121 11:18:13.206" endtime="20190121 11:18:13.213" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:13.253" endtime="20190121 11:18:13.267" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:13.100" endtime="20190121 11:18:13.294" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:12.621" endtime="20190121 11:18:13.298" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:12.593" endtime="20190121 11:18:13.355" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_SUPPLIER_INFO">
<doc>READ_OTP_CARIF_HW_SUPPLIER_INFO</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_SUPPLIER_INFO</arg>
</arguments>
<status starttime="20190121 11:18:13.396" endtime="20190121 11:18:13.473" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_SUPPLIER_INFO}</arg>
<arg>${HW_SUPPLIER_INFO_LEN}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:13.578" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FB 00 02</msg>
<status starttime="20190121 11:18:13.549" endtime="20190121 11:18:13.579" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:13.627" endtime="20190121 11:18:13.689" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:14.263" level="INFO">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF FB 00 02 00 30 31 01 46 00 2C 4E</msg>
<status starttime="20190121 11:18:13.696" endtime="20190121 11:18:14.264" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:14.275" endtime="20190121 11:18:14.333" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:14.470" level="INFO">${temp1} = 1E105494000D000BEE04FFFB00020030310146002C4E</msg>
<status starttime="20190121 11:18:14.423" endtime="20190121 11:18:14.471" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:14.512" level="INFO">${temp2} = EE04FFFB000200</msg>
<status starttime="20190121 11:18:14.478" endtime="20190121 11:18:14.553" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:14.561" endtime="20190121 11:18:14.599" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:14.336" endtime="20190121 11:18:14.606" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:13.479" endtime="20190121 11:18:14.628" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:13.358" endtime="20190121 11:18:14.631" status="PASS"></status>
</kw>
<kw name="TEST_EEPROM_SW_SPARE_PART_NUMBER">
<doc>Write and read the EEPROM_SW_SPARE_PART_NUMBER</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_SW_SPARE_PART_NUMBER</arg>
</arguments>
<status starttime="20190121 11:18:14.703" endtime="20190121 11:18:14.749" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write eeprom sw spare part number with default value</arg>
</arguments>
<status starttime="20190121 11:18:14.780" endtime="20190121 11:18:14.803" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:14.926" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 4e</msg>
<status starttime="20190121 11:18:14.887" endtime="20190121 11:18:14.927" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:15.041" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', '4e']</msg>
<status starttime="20190121 11:18:14.994" endtime="20190121 11:18:15.042" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:15.115" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:18:15.122" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:18:15.090" endtime="20190121 11:18:15.123" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:15.150" endtime="20190121 11:18:15.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:15.239" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:18:15.207" endtime="20190121 11:18:15.240" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:15.286" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:18:15.247" endtime="20190121 11:18:15.287" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:15.311" endtime="20190121 11:18:15.342" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:15.438" level="INFO">${res} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status starttime="20190121 11:18:15.350" endtime="20190121 11:18:15.439" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:15.447" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status starttime="20190121 11:18:14.951" endtime="20190121 11:18:15.448" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:15.471" endtime="20190121 11:18:15.499" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:16.074" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 43 5A 3A</msg>
<status starttime="20190121 11:18:15.505" endtime="20190121 11:18:16.113" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:16.122" endtime="20190121 11:18:16.173" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:16.321" level="INFO">${temp1} = 1E105494000A000BEE06FFFA000001435A3A</msg>
<status starttime="20190121 11:18:16.270" endtime="20190121 11:18:16.322" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:16.375" level="INFO">${temp2} = EE06FFFA00</msg>
<status starttime="20190121 11:18:16.333" endtime="20190121 11:18:16.376" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:16.383" endtime="20190121 11:18:16.410" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:16.176" endtime="20190121 11:18:16.417" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:14.813" endtime="20190121 11:18:16.419" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write eeprom sw spare part number with Different value</arg>
</arguments>
<status starttime="20190121 11:18:16.443" endtime="20190121 11:18:16.481" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:16.658" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 AA</msg>
<status starttime="20190121 11:18:16.578" endtime="20190121 11:18:16.659" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:16.769" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', 'AA']</msg>
<status starttime="20190121 11:18:16.715" endtime="20190121 11:18:16.770" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:16.822" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:18:16.824" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:18:16.792" endtime="20190121 11:18:16.829" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:16.836" endtime="20190121 11:18:16.882" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:16.924" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:18:16.890" endtime="20190121 11:18:16.929" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:16.978" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:18:16.932" endtime="20190121 11:18:16.979" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:17.007" endtime="20190121 11:18:17.049" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:17.104" level="INFO">${res} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status starttime="20190121 11:18:17.057" endtime="20190121 11:18:17.109" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:17.142" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status starttime="20190121 11:18:16.666" endtime="20190121 11:18:17.143" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:17.150" endtime="20190121 11:18:17.208" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:17.897" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 44 5A 3D</msg>
<status starttime="20190121 11:18:17.211" endtime="20190121 11:18:17.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:17.938" endtime="20190121 11:18:17.973" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:18.098" level="INFO">${temp1} = 1E105494000A000BEE06FFFA000001445A3D</msg>
<status starttime="20190121 11:18:18.068" endtime="20190121 11:18:18.099" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:18.148" level="INFO">${temp2} = EE06FFFA00</msg>
<status starttime="20190121 11:18:18.105" endtime="20190121 11:18:18.153" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:18.197" endtime="20190121 11:18:18.213" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:17.980" endtime="20190121 11:18:18.216" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:16.483" endtime="20190121 11:18:18.260" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:18.305" endtime="20190121 11:18:18.435" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:18.443" endtime="20190121 11:18:18.556" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:18:20.604" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:18:18.563" endtime="20190121 11:18:20.607" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:20.614" endtime="20190121 11:18:20.681" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:20.684" endtime="20190121 11:18:20.757" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:18.266" endtime="20190121 11:18:20.759" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:20.805" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FA 00 0C</msg>
<status starttime="20190121 11:18:20.790" endtime="20190121 11:18:20.806" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:20.817" endtime="20190121 11:18:20.823" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:22.588" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 43 00 85 3E</msg>
<status starttime="20190121 11:18:20.826" endtime="20190121 11:18:22.589" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:22.592" endtime="20190121 11:18:22.598" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:22.621" level="INFO">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014300853E</msg>
<status starttime="20190121 11:18:22.611" endtime="20190121 11:18:22.622" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:22.631" level="INFO">${temp2} = EE04FFFA000C00</msg>
<status starttime="20190121 11:18:22.625" endtime="20190121 11:18:22.631" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:22.634" endtime="20190121 11:18:22.640" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:22.600" endtime="20190121 11:18:22.642" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:22.646" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 43 00 85 3E</msg>
<status starttime="20190121 11:18:20.766" endtime="20190121 11:18:22.646" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN} ${EEPROM_APP_OK} ${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:22.665" level="INFO">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014300853E</msg>
<status starttime="20190121 11:18:22.659" endtime="20190121 11:18:22.666" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:22.674" level="INFO">${temp2} = 000C005370617265205061727420AA</msg>
<status starttime="20190121 11:18:22.669" endtime="20190121 11:18:22.675" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:22.678" endtime="20190121 11:18:22.683" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:22.649" endtime="20190121 11:18:22.686" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:14.669" endtime="20190121 11:18:22.688" status="PASS"></status>
</kw>
<kw name="TEST_PRODUCT_NAME">
<doc>Write and read the EEPROM_PRODUCT_NAME</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_PRODUCT_NAME</arg>
</arguments>
<status starttime="20190121 11:18:22.696" endtime="20190121 11:18:22.701" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write default value</arg>
</arguments>
<status starttime="20190121 11:18:22.703" endtime="20190121 11:18:22.708" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:22.727" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 69</msg>
<status starttime="20190121 11:18:22.720" endtime="20190121 11:18:22.728" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:22.744" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', '69']</msg>
<status starttime="20190121 11:18:22.739" endtime="20190121 11:18:22.745" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:22.751" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:18:22.754" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:18:22.748" endtime="20190121 11:18:22.754" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:22.757" endtime="20190121 11:18:22.762" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:22.771" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:18:22.765" endtime="20190121 11:18:22.772" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:22.781" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:18:22.775" endtime="20190121 11:18:22.781" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:22.784" endtime="20190121 11:18:22.789" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:22.799" level="INFO">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status starttime="20190121 11:18:22.793" endtime="20190121 11:18:22.800" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:22.804" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status starttime="20190121 11:18:22.730" endtime="20190121 11:18:22.805" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:22.808" endtime="20190121 11:18:22.813" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:23.228" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 44 5A 3E</msg>
<status starttime="20190121 11:18:22.816" endtime="20190121 11:18:23.229" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:23.232" endtime="20190121 11:18:23.237" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:23.255" level="INFO">${temp1} = 1E105494000A000BEE06FFF9000001445A3E</msg>
<status starttime="20190121 11:18:23.250" endtime="20190121 11:18:23.257" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:23.267" level="INFO">${temp2} = EE06FFF900</msg>
<status starttime="20190121 11:18:23.259" endtime="20190121 11:18:23.268" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:23.271" endtime="20190121 11:18:23.276" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:23.239" endtime="20190121 11:18:23.278" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:22.710" endtime="20190121 11:18:23.280" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:23.300" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 BB</msg>
<status starttime="20190121 11:18:23.293" endtime="20190121 11:18:23.301" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:23.327" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', 'BB']</msg>
<status starttime="20190121 11:18:23.322" endtime="20190121 11:18:23.328" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:23.335" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:18:23.337" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:18:23.331" endtime="20190121 11:18:23.337" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:23.341" endtime="20190121 11:18:23.346" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:23.355" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:18:23.349" endtime="20190121 11:18:23.355" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:23.365" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:18:23.358" endtime="20190121 11:18:23.366" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:23.369" endtime="20190121 11:18:23.374" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:23.383" level="INFO">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status starttime="20190121 11:18:23.377" endtime="20190121 11:18:23.384" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:23.388" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status starttime="20190121 11:18:23.303" endtime="20190121 11:18:23.389" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:23.391" endtime="20190121 11:18:23.397" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:23.945" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 47 5A 3D</msg>
<status starttime="20190121 11:18:23.400" endtime="20190121 11:18:23.946" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:23.949" endtime="20190121 11:18:23.954" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:23.974" level="INFO">${temp1} = 1E105494000A000BEE06FFF9000001475A3D</msg>
<status starttime="20190121 11:18:23.968" endtime="20190121 11:18:23.975" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:23.983" level="INFO">${temp2} = EE06FFF900</msg>
<status starttime="20190121 11:18:23.978" endtime="20190121 11:18:23.984" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:23.987" endtime="20190121 11:18:23.995" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:23.956" endtime="20190121 11:18:23.997" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:23.282" endtime="20190121 11:18:23.999" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:24.008" endtime="20190121 11:18:24.058" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:24.061" endtime="20190121 11:18:24.108" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:18:26.116" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:18:24.111" endtime="20190121 11:18:26.118" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:26.124" endtime="20190121 11:18:26.197" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:26.200" endtime="20190121 11:18:26.273" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:24.001" endtime="20190121 11:18:26.275" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:26.323" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F9 00 0C</msg>
<status starttime="20190121 11:18:26.304" endtime="20190121 11:18:26.324" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:26.327" endtime="20190121 11:18:26.342" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:28.054" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 43 00 AD 4E</msg>
<status starttime="20190121 11:18:26.345" endtime="20190121 11:18:28.055" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:28.063" endtime="20190121 11:18:28.077" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:28.118" level="INFO">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014300AD4E</msg>
<status starttime="20190121 11:18:28.103" endtime="20190121 11:18:28.118" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:28.137" level="INFO">${temp2} = EE04FFF9000C00</msg>
<status starttime="20190121 11:18:28.126" endtime="20190121 11:18:28.138" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:28.145" endtime="20190121 11:18:28.163" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:28.079" endtime="20190121 11:18:28.170" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:28.178" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 43 00 AD 4E</msg>
<status starttime="20190121 11:18:26.281" endtime="20190121 11:18:28.180" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN} ${EEPROM_APP_OK} ${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:28.223" level="INFO">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014300AD4E</msg>
<status starttime="20190121 11:18:28.213" endtime="20190121 11:18:28.227" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:28.245" level="INFO">${temp2} = 000C004f4c5520436f6e6e656374BB</msg>
<status starttime="20190121 11:18:28.231" endtime="20190121 11:18:28.246" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:28.253" endtime="20190121 11:18:28.263" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:28.186" endtime="20190121 11:18:28.270" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:22.690" endtime="20190121 11:18:28.272" status="PASS"></status>
</kw>
<kw name="TEST_LAST_POWER_STATE">
<doc>Write and read the EEPROM_LAST_POWER_STATE</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_LAST_POWER_STATE</arg>
</arguments>
<status starttime="20190121 11:18:28.293" endtime="20190121 11:18:28.302" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:28.344" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 FF</msg>
<status starttime="20190121 11:18:28.332" endtime="20190121 11:18:28.349" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:28.382" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'FF']</msg>
<status starttime="20190121 11:18:28.372" endtime="20190121 11:18:28.383" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:28.398" level="INFO">Length is 15</msg>
<msg timestamp="20190121 11:18:28.404" level="INFO">${length} = 15</msg>
<status starttime="20190121 11:18:28.390" endtime="20190121 11:18:28.405" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:28.412" endtime="20190121 11:18:28.422" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:28.439" level="INFO">${value} = 9</msg>
<status starttime="20190121 11:18:28.429" endtime="20190121 11:18:28.440" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:28.462" level="INFO">${res} = 09</msg>
<status starttime="20190121 11:18:28.447" endtime="20190121 11:18:28.462" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:28.478" endtime="20190121 11:18:28.508" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:28.546" level="INFO">${res} = 1E54109400090000EE05FFF80001FF</msg>
<status starttime="20190121 11:18:28.511" endtime="20190121 11:18:28.547" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:28.555" level="INFO">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001FF</msg>
<status starttime="20190121 11:18:28.351" endtime="20190121 11:18:28.576" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:28.580" endtime="20190121 11:18:28.627" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:29.171" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 44 5A 3F</msg>
<status starttime="20190121 11:18:28.637" endtime="20190121 11:18:29.172" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:29.184" endtime="20190121 11:18:29.198" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:29.238" level="INFO">${temp1} = 1E105494000A000BEE06FFF8000001445A3F</msg>
<status starttime="20190121 11:18:29.224" endtime="20190121 11:18:29.239" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:29.265" level="INFO">${temp2} = EE06FFF800</msg>
<status starttime="20190121 11:18:29.247" endtime="20190121 11:18:29.266" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:29.273" endtime="20190121 11:18:29.282" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:29.200" endtime="20190121 11:18:29.292" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:28.309" endtime="20190121 11:18:29.295" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:29.345" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 AA</msg>
<status starttime="20190121 11:18:29.324" endtime="20190121 11:18:29.346" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:29.386" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'AA']</msg>
<status starttime="20190121 11:18:29.373" endtime="20190121 11:18:29.387" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:29.403" level="INFO">Length is 15</msg>
<msg timestamp="20190121 11:18:29.407" level="INFO">${length} = 15</msg>
<status starttime="20190121 11:18:29.395" endtime="20190121 11:18:29.408" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:29.411" endtime="20190121 11:18:29.429" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:29.447" level="INFO">${value} = 9</msg>
<status starttime="20190121 11:18:29.433" endtime="20190121 11:18:29.448" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:29.469" level="INFO">${res} = 09</msg>
<status starttime="20190121 11:18:29.455" endtime="20190121 11:18:29.470" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:29.473" endtime="20190121 11:18:29.487" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:29.509" level="INFO">${res} = 1E54109400090000EE05FFF80001AA</msg>
<status starttime="20190121 11:18:29.494" endtime="20190121 11:18:29.510" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:29.518" level="INFO">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001AA</msg>
<status starttime="20190121 11:18:29.352" endtime="20190121 11:18:29.519" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:29.526" endtime="20190121 11:18:29.539" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:30.040" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 47 5A 3C</msg>
<status starttime="20190121 11:18:29.542" endtime="20190121 11:18:30.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:30.062" endtime="20190121 11:18:30.164" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:30.323" level="INFO">${temp1} = 1E105494000A000BEE06FFF8000001475A3C</msg>
<status starttime="20190121 11:18:30.313" endtime="20190121 11:18:30.401" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:30.469" level="INFO">${temp2} = EE06FFF800</msg>
<status starttime="20190121 11:18:30.407" endtime="20190121 11:18:30.470" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:30.491" endtime="20190121 11:18:30.497" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:30.167" endtime="20190121 11:18:30.500" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:29.305" endtime="20190121 11:18:30.537" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:30.623" endtime="20190121 11:18:30.786" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:30.794" endtime="20190121 11:18:30.948" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:18:32.993" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:18:30.954" endtime="20190121 11:18:32.995" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:33.002" endtime="20190121 11:18:33.074" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:33.082" endtime="20190121 11:18:33.151" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:30.539" endtime="20190121 11:18:33.157" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:33.201" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F8 00 01</msg>
<status starttime="20190121 11:18:33.183" endtime="20190121 11:18:33.202" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:33.209" endtime="20190121 11:18:33.218" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:34.814" level="INFO">${resp} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 43 5A 97</msg>
<status starttime="20190121 11:18:33.221" endtime="20190121 11:18:34.815" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:34.821" endtime="20190121 11:18:34.835" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:34.876" level="INFO">${temp1} = 1E105494000C000BEE04FFF8000100AA01435A97</msg>
<status starttime="20190121 11:18:34.861" endtime="20190121 11:18:34.877" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:34.894" level="INFO">${temp2} = EE04FFF8000100</msg>
<status starttime="20190121 11:18:34.880" endtime="20190121 11:18:34.895" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:34.918" endtime="20190121 11:18:34.941" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:34.837" endtime="20190121 11:18:34.950" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:34.954" level="INFO">${RESP} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 43 5A 97</msg>
<status starttime="20190121 11:18:33.159" endtime="20190121 11:18:34.955" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN} ${EEPROM_APP_OK} ${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:35.010" level="INFO">${temp1} = 1E105494000C000BEE04FFF8000100AA01435A97</msg>
<status starttime="20190121 11:18:34.986" endtime="20190121 11:18:35.011" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:35.033" level="INFO">${temp2} = 000100AA</msg>
<status starttime="20190121 11:18:35.023" endtime="20190121 11:18:35.034" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:35.042" endtime="20190121 11:18:35.058" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:34.961" endtime="20190121 11:18:35.064" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:28.278" endtime="20190121 11:18:35.067" status="PASS"></status>
</kw>
<kw name="TEST_WAKE_BARRIERS">
<doc>Write and read the EEPROM_WAKE_BARRIERS</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_WAKE_BARRIERS</arg>
</arguments>
<status starttime="20190121 11:18:35.085" endtime="20190121 11:18:35.098" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:35.135" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 FF FF</msg>
<status starttime="20190121 11:18:35.123" endtime="20190121 11:18:35.143" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:35.198" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'FF', 'FF']</msg>
<status starttime="20190121 11:18:35.189" endtime="20190121 11:18:35.199" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:35.215" level="INFO">Length is 16</msg>
<msg timestamp="20190121 11:18:35.221" level="INFO">${length} = 16</msg>
<status starttime="20190121 11:18:35.206" endtime="20190121 11:18:35.222" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:35.229" endtime="20190121 11:18:35.239" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:35.261" level="INFO">${value} = 10</msg>
<status starttime="20190121 11:18:35.246" endtime="20190121 11:18:35.262" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:35.282" level="INFO">${res} = 0A</msg>
<status starttime="20190121 11:18:35.267" endtime="20190121 11:18:35.283" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:35.290" endtime="20190121 11:18:35.304" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:35.323" level="INFO">${res} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status starttime="20190121 11:18:35.307" endtime="20190121 11:18:35.328" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:35.337" level="INFO">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status starttime="20190121 11:18:35.146" endtime="20190121 11:18:35.338" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:35.345" endtime="20190121 11:18:35.361" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:35.780" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 44 5A 30</msg>
<status starttime="20190121 11:18:35.364" endtime="20190121 11:18:35.781" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:35.789" endtime="20190121 11:18:35.798" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:35.839" level="INFO">${temp1} = 1E105494000A000BEE06FFF7000001445A30</msg>
<status starttime="20190121 11:18:35.828" endtime="20190121 11:18:35.840" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:35.862" level="INFO">${temp2} = EE06FFF700</msg>
<status starttime="20190121 11:18:35.847" endtime="20190121 11:18:35.863" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:35.870" endtime="20190121 11:18:35.884" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:35.801" endtime="20190121 11:18:35.887" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:35.100" endtime="20190121 11:18:35.893" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:35.939" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 AA BB</msg>
<status starttime="20190121 11:18:35.919" endtime="20190121 11:18:35.940" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:35.981" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'AA', 'BB']</msg>
<status starttime="20190121 11:18:35.967" endtime="20190121 11:18:35.982" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:35.999" level="INFO">Length is 16</msg>
<msg timestamp="20190121 11:18:36.002" level="INFO">${length} = 16</msg>
<status starttime="20190121 11:18:35.989" endtime="20190121 11:18:36.003" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:36.014" endtime="20190121 11:18:36.036" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:36.058" level="INFO">${value} = 10</msg>
<status starttime="20190121 11:18:36.039" endtime="20190121 11:18:36.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:36.081" level="INFO">${res} = 0A</msg>
<status starttime="20190121 11:18:36.066" endtime="20190121 11:18:36.082" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:36.090" endtime="20190121 11:18:36.104" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:36.132" level="INFO">${res} = 1E541094000A0000EE05FFF70002AABB</msg>
<status starttime="20190121 11:18:36.117" endtime="20190121 11:18:36.133" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:36.142" level="INFO">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002AABB</msg>
<status starttime="20190121 11:18:35.946" endtime="20190121 11:18:36.142" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:36.150" endtime="20190121 11:18:36.164" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:36.533" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 47 5A 33</msg>
<status starttime="20190121 11:18:36.167" endtime="20190121 11:18:36.534" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:36.541" endtime="20190121 11:18:36.558" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:36.594" level="INFO">${temp1} = 1E105494000A000BEE06FFF7000001475A33</msg>
<status starttime="20190121 11:18:36.580" endtime="20190121 11:18:36.600" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:36.618" level="INFO">${temp2} = EE06FFF700</msg>
<status starttime="20190121 11:18:36.604" endtime="20190121 11:18:36.619" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:36.626" endtime="20190121 11:18:36.641" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:36.560" endtime="20190121 11:18:36.643" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:35.896" endtime="20190121 11:18:36.650" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:36.667" endtime="20190121 11:18:36.737" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:36.744" endtime="20190121 11:18:36.880" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:18:38.920" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:18:36.891" endtime="20190121 11:18:38.922" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:38.925" endtime="20190121 11:18:39.006" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:39.009" endtime="20190121 11:18:39.085" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:36.653" endtime="20190121 11:18:39.087" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:39.105" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F7 00 02</msg>
<status starttime="20190121 11:18:39.098" endtime="20190121 11:18:39.106" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:39.109" endtime="20190121 11:18:39.118" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:39.440" level="INFO">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 43 00 A3 D8</msg>
<status starttime="20190121 11:18:39.121" endtime="20190121 11:18:39.442" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:39.446" endtime="20190121 11:18:39.452" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:39.472" level="INFO">${temp1} = 1E105494000D000BEE04FFF7000200AABB014300A3D8</msg>
<status starttime="20190121 11:18:39.465" endtime="20190121 11:18:39.473" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:39.481" level="INFO">${temp2} = EE04FFF7000200</msg>
<status starttime="20190121 11:18:39.475" endtime="20190121 11:18:39.482" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:39.485" endtime="20190121 11:18:39.490" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:39.454" endtime="20190121 11:18:39.493" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:39.496" level="INFO">${RESP} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 43 00 A3 D8</msg>
<status starttime="20190121 11:18:39.089" endtime="20190121 11:18:39.497" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN} ${EEPROM_APP_OK} ${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:39.515" level="INFO">${temp1} = 1E105494000D000BEE04FFF7000200AABB014300A3D8</msg>
<status starttime="20190121 11:18:39.509" endtime="20190121 11:18:39.516" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:39.524" level="INFO">${temp2} = 000200AABB</msg>
<status starttime="20190121 11:18:39.519" endtime="20190121 11:18:39.525" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:39.528" endtime="20190121 11:18:39.538" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:39.499" endtime="20190121 11:18:39.540" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:35.074" endtime="20190121 11:18:39.543" status="PASS"></status>
</kw>
<kw name="TEST_DIAG_CODING">
<doc>Write and read the EEPROM_DIAG_CODING</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_DIAG_CODING</arg>
</arguments>
<status starttime="20190121 11:18:39.552" endtime="20190121 11:18:39.557" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:39.576" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 00</msg>
<status starttime="20190121 11:18:39.569" endtime="20190121 11:18:39.578" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:39.593" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', '00']</msg>
<status starttime="20190121 11:18:39.588" endtime="20190121 11:18:39.594" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:39.600" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:18:39.603" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:18:39.597" endtime="20190121 11:18:39.603" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:39.606" endtime="20190121 11:18:39.611" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:39.620" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:18:39.614" endtime="20190121 11:18:39.621" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:39.630" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:18:39.624" endtime="20190121 11:18:39.631" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:39.634" endtime="20190121 11:18:39.639" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:39.648" level="INFO">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status starttime="20190121 11:18:39.642" endtime="20190121 11:18:39.649" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:39.652" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status starttime="20190121 11:18:39.580" endtime="20190121 11:18:39.653" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:39.656" endtime="20190121 11:18:39.662" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:40.902" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 44 5A 31</msg>
<status starttime="20190121 11:18:39.665" endtime="20190121 11:18:40.903" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:40.912" endtime="20190121 11:18:40.917" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:40.935" level="INFO">${temp1} = 1E105494000A000BEE06FFF6000001445A31</msg>
<status starttime="20190121 11:18:40.930" endtime="20190121 11:18:40.936" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:40.945" level="INFO">${temp2} = EE06FFF600</msg>
<status starttime="20190121 11:18:40.939" endtime="20190121 11:18:40.946" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:40.949" endtime="20190121 11:18:40.954" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:40.919" endtime="20190121 11:18:40.956" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:39.559" endtime="20190121 11:18:40.958" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:40.977" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 CC</msg>
<status starttime="20190121 11:18:40.970" endtime="20190121 11:18:40.978" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:40.993" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', 'CC']</msg>
<status starttime="20190121 11:18:40.988" endtime="20190121 11:18:40.994" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:41.001" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:18:41.003" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:18:40.997" endtime="20190121 11:18:41.004" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:41.007" endtime="20190121 11:18:41.016" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:41.025" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:18:41.019" endtime="20190121 11:18:41.026" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:41.035" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:18:41.029" endtime="20190121 11:18:41.036" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:41.039" endtime="20190121 11:18:41.044" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:41.053" level="INFO">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status starttime="20190121 11:18:41.047" endtime="20190121 11:18:41.054" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:41.058" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status starttime="20190121 11:18:40.981" endtime="20190121 11:18:41.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:41.061" endtime="20190121 11:18:41.067" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:41.485" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 45 5A 30</msg>
<status starttime="20190121 11:18:41.070" endtime="20190121 11:18:41.486" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:41.490" endtime="20190121 11:18:41.495" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:41.513" level="INFO">${temp1} = 1E105494000A000BEE06FFF6000001455A30</msg>
<status starttime="20190121 11:18:41.508" endtime="20190121 11:18:41.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:41.523" level="INFO">${temp2} = EE06FFF600</msg>
<status starttime="20190121 11:18:41.517" endtime="20190121 11:18:41.524" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:41.527" endtime="20190121 11:18:41.532" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:41.497" endtime="20190121 11:18:41.535" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:40.960" endtime="20190121 11:18:41.537" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:41.545" endtime="20190121 11:18:41.593" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:41.595" endtime="20190121 11:18:41.643" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:18:43.651" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:18:41.646" endtime="20190121 11:18:43.653" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:43.661" endtime="20190121 11:18:43.729" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:43.732" endtime="20190121 11:18:43.801" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:41.539" endtime="20190121 11:18:43.803" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:43.839" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F6 00 0C</msg>
<status starttime="20190121 11:18:43.830" endtime="20190121 11:18:43.852" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:43.855" endtime="20190121 11:18:43.864" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:45.486" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 43 00 D5 0E</msg>
<status starttime="20190121 11:18:43.867" endtime="20190121 11:18:45.487" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:45.490" endtime="20190121 11:18:45.496" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:45.514" level="INFO">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014300D50E</msg>
<status starttime="20190121 11:18:45.509" endtime="20190121 11:18:45.515" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:45.524" level="INFO">${temp2} = EE04FFF6000C00</msg>
<status starttime="20190121 11:18:45.518" endtime="20190121 11:18:45.525" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:45.528" endtime="20190121 11:18:45.534" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:45.498" endtime="20190121 11:18:45.537" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:45.540" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 43 00 D5 0E</msg>
<status starttime="20190121 11:18:43.810" endtime="20190121 11:18:45.542" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_DIAG_CODING_LEN} ${EEPROM_APP_OK} ${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:45.560" level="INFO">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014300D50E</msg>
<status starttime="20190121 11:18:45.554" endtime="20190121 11:18:45.561" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:45.569" level="INFO">${temp2} = 000C001115051501FF00017CFF00CC</msg>
<status starttime="20190121 11:18:45.564" endtime="20190121 11:18:45.570" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:45.573" endtime="20190121 11:18:45.583" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:45.544" endtime="20190121 11:18:45.585" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:39.546" endtime="20190121 11:18:45.587" status="PASS"></status>
</kw>
<kw name="TEST_RESET_BUFFER">
<doc>Write and read the EEPROM_RESET_BUFFER</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_RESET_BUFFER</arg>
</arguments>
<status starttime="20190121 11:18:45.596" endtime="20190121 11:18:45.601" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:45.620" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 00000000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:18:45.613" endtime="20190121 11:18:45.621" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:45.635" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', '00000000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status starttime="20190121 11:18:45.630" endtime="20190121 11:18:45.636" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:45.643" level="INFO">Length is 18</msg>
<msg timestamp="20190121 11:18:45.645" level="INFO">${length} = 18</msg>
<status starttime="20190121 11:18:45.639" endtime="20190121 11:18:45.646" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:45.649" endtime="20190121 11:18:45.654" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:45.663" level="INFO">${value} = 12</msg>
<status starttime="20190121 11:18:45.657" endtime="20190121 11:18:45.663" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:45.672" level="INFO">${res} = 0C</msg>
<status starttime="20190121 11:18:45.666" endtime="20190121 11:18:45.673" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:45.675" endtime="20190121 11:18:45.681" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:45.690" level="INFO">${res} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:18:45.684" endtime="20190121 11:18:45.691" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:45.694" level="INFO">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:18:45.623" endtime="20190121 11:18:45.695" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:45.698" endtime="20190121 11:18:45.704" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:46.127" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 44 5A 32</msg>
<status starttime="20190121 11:18:45.707" endtime="20190121 11:18:46.128" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:46.131" endtime="20190121 11:18:46.137" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:46.155" level="INFO">${temp1} = 1E105494000A000BEE06FFF5000001445A32</msg>
<status starttime="20190121 11:18:46.149" endtime="20190121 11:18:46.156" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:46.165" level="INFO">${temp2} = EE06FFF500</msg>
<status starttime="20190121 11:18:46.159" endtime="20190121 11:18:46.166" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:46.169" endtime="20190121 11:18:46.174" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:46.139" endtime="20190121 11:18:46.177" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:45.603" endtime="20190121 11:18:46.179" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:46.198" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 AABB0000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:18:46.191" endtime="20190121 11:18:46.199" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:18:46.214" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', 'AABB0000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status starttime="20190121 11:18:46.209" endtime="20190121 11:18:46.215" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:18:46.222" level="INFO">Length is 18</msg>
<msg timestamp="20190121 11:18:46.224" level="INFO">${length} = 18</msg>
<status starttime="20190121 11:18:46.218" endtime="20190121 11:18:46.225" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:18:46.227" endtime="20190121 11:18:46.236" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:18:46.245" level="INFO">${value} = 12</msg>
<status starttime="20190121 11:18:46.239" endtime="20190121 11:18:46.246" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:46.254" level="INFO">${res} = 0C</msg>
<status starttime="20190121 11:18:46.249" endtime="20190121 11:18:46.255" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:18:46.258" endtime="20190121 11:18:46.263" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:18:46.272" level="INFO">${res} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:18:46.266" endtime="20190121 11:18:46.273" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:46.277" level="INFO">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:18:46.201" endtime="20190121 11:18:46.278" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:18:46.281" endtime="20190121 11:18:46.287" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:46.711" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 45 5A 33</msg>
<status starttime="20190121 11:18:46.290" endtime="20190121 11:18:46.713" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:46.716" endtime="20190121 11:18:46.721" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:46.739" level="INFO">${temp1} = 1E105494000A000BEE06FFF5000001455A33</msg>
<status starttime="20190121 11:18:46.734" endtime="20190121 11:18:46.740" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:46.749" level="INFO">${temp2} = EE06FFF500</msg>
<status starttime="20190121 11:18:46.743" endtime="20190121 11:18:46.750" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:46.753" endtime="20190121 11:18:46.758" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:46.723" endtime="20190121 11:18:46.760" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:46.181" endtime="20190121 11:18:46.762" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:46.770" endtime="20190121 11:18:46.818" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:46.822" endtime="20190121 11:18:46.900" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:18:48.938" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:18:46.927" endtime="20190121 11:18:48.940" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:48.943" endtime="20190121 11:18:48.989" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:48.992" endtime="20190121 11:18:49.038" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:46.764" endtime="20190121 11:18:49.041" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:18:49.059" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F5 00 42</msg>
<status starttime="20190121 11:18:49.052" endtime="20190121 11:18:49.060" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:18:49.062" endtime="20190121 11:18:49.068" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:49.383" level="INFO">${resp} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status starttime="20190121 11:18:49.071" endtime="20190121 11:18:49.385" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:18:49.388" endtime="20190121 11:18:49.394" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:49.413" level="INFO">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014300A5DC</msg>
<status starttime="20190121 11:18:49.407" endtime="20190121 11:18:49.414" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:49.422" level="INFO">${temp2} = EE04FFF5004200</msg>
<status starttime="20190121 11:18:49.416" endtime="20190121 11:18:49.423" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:49.426" endtime="20190121 11:18:49.431" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:49.396" endtime="20190121 11:18:49.433" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:18:49.437" level="INFO">${RESP} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status starttime="20190121 11:18:49.043" endtime="20190121 11:18:49.438" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN} ${EEPROM_APP_OK} ${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:18:49.458" level="INFO">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014300A5DC</msg>
<status starttime="20190121 11:18:49.452" endtime="20190121 11:18:49.459" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:18:49.468" level="INFO">${temp2} = 004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:18:49.462" endtime="20190121 11:18:49.469" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:49.472" endtime="20190121 11:18:49.481" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:49.440" endtime="20190121 11:18:49.484" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:45.590" endtime="20190121 11:18:49.486" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status starttime="20190121 11:18:49.497" endtime="20190121 11:18:49.501" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:49.504" endtime="20190121 11:18:49.553" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:49.557" endtime="20190121 11:18:49.605" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:18:49.608" endtime="20190121 11:18:49.653" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:49.490" endtime="20190121 11:18:49.656" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-41553</doc>
<tags>
<tag>EEPROM</tag>
</tags>
<status critical="yes" starttime="20190121 11:18:09.224" endtime="20190121 11:18:49.665" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:18:51.181" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:18:51.224" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:18:49.727" endtime="20190121 11:18:51.226" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:49.685" endtime="20190121 11:18:51.227" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:49.679" endtime="20190121 11:18:51.229" status="PASS"></status>
</kw>
<doc>EEPROM write read test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:18:06.187" endtime="20190121 11:18:51.242" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56663.robot" name="SKTB-56663" id="s1-s16">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:18:51.912" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:18:51.903" endtime="20190121 11:18:51.922" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:18:51.939" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:18:51.941" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:18:54.609" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:18:51.926" endtime="20190121 11:18:54.611" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:51.897" endtime="20190121 11:18:54.616" status="PASS"></status>
</kw>
<test name="SKTB-56663" id="s1-s16-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:54.714" endtime="20190121 11:18:54.882" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:54.886" endtime="20190121 11:18:55.015" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:18:55.018" endtime="20190121 11:18:55.141" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:18:57.177" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:18:55.145" endtime="20190121 11:18:57.179" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:57.182" endtime="20190121 11:18:57.247" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:18:57.250" endtime="20190121 11:18:57.298" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:18:57.302" endtime="20190121 11:18:57.346" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:18:57.350" endtime="20190121 11:18:57.395" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:18:57.399" endtime="20190121 11:18:57.445" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status starttime="20190121 11:18:57.449" endtime="20190121 11:18:57.595" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:18:59.605" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:18:57.598" endtime="20190121 11:18:59.607" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:54.674" endtime="20190121 11:18:59.609" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:18:59.826" level="INFO">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F DE 01 43 65 03</msg>
<status starttime="20190121 11:18:59.618" endtime="20190121 11:18:59.827" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:18:59.834" level="INFO">1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F DE 01 43 65 03</msg>
<status starttime="20190121 11:18:59.830" endtime="20190121 11:18:59.836" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:18:59.839" endtime="20190121 11:18:59.846" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:59.612" endtime="20190121 11:18:59.849" status="PASS"></status>
</kw>
<kw name="Step_2">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} 00</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:19:00.101" level="INFO">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 44 B4 24</msg>
<status starttime="20190121 11:18:59.857" endtime="20190121 11:19:00.102" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:19:00.110" level="INFO">1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 44 B4 24</msg>
<status starttime="20190121 11:19:00.106" endtime="20190121 11:19:00.113" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:19:00.116" endtime="20190121 11:19:00.122" status="PASS"></status>
</kw>
<status starttime="20190121 11:18:59.851" endtime="20190121 11:19:00.125" status="PASS"></status>
</kw>
<kw name="Step_3">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:19:00.421" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 45 4A DF</msg>
<status starttime="20190121 11:19:00.133" endtime="20190121 11:19:00.422" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:19:00.438" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 45 4A DF</msg>
<status starttime="20190121 11:19:00.430" endtime="20190121 11:19:00.442" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:19:00.447" endtime="20190121 11:19:00.455" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:00.127" endtime="20190121 11:19:00.457" status="PASS"></status>
</kw>
<kw name="Step_4">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_EXCEED} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:19:00.701" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 40 4A DA</msg>
<status starttime="20190121 11:19:00.467" endtime="20190121 11:19:00.702" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:19:00.709" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 40 4A DA</msg>
<status starttime="20190121 11:19:00.705" endtime="20190121 11:19:00.712" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:19:00.715" endtime="20190121 11:19:00.722" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:00.459" endtime="20190121 11:19:00.725" status="PASS"></status>
</kw>
<kw name="Step_5">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_INVALID} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:19:01.023" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 01 01 41 4B DB</msg>
<status starttime="20190121 11:19:00.733" endtime="20190121 11:19:01.024" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:19:01.032" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 01 01 01 41 4B DB</msg>
<status starttime="20190121 11:19:01.027" endtime="20190121 11:19:01.041" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:19:01.044" endtime="20190121 11:19:01.050" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:00.726" endtime="20190121 11:19:01.053" status="PASS"></status>
</kw>
<kw name="Step_6">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} 00 ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:19:01.293" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 00 01 42 4B D9</msg>
<status starttime="20190121 11:19:01.061" endtime="20190121 11:19:01.294" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:19:01.304" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 01 00 01 42 4B D9</msg>
<status starttime="20190121 11:19:01.300" endtime="20190121 11:19:01.307" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:19:01.310" endtime="20190121 11:19:01.316" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:01.055" endtime="20190121 11:19:01.319" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:01.329" endtime="20190121 11:19:01.377" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:01.380" endtime="20190121 11:19:01.426" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:01.429" endtime="20190121 11:19:01.474" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:19:03.482" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:19:01.478" endtime="20190121 11:19:03.485" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:19:03.487" endtime="20190121 11:19:03.537" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:19:03.541" endtime="20190121 11:19:03.585" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:01.322" endtime="20190121 11:19:03.587" status="PASS"></status>
</kw>
<doc>Implements SW Test Case SKTB-56663</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status critical="yes" starttime="20190121 11:18:54.618" endtime="20190121 11:19:03.591" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:19:05.095" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:19:05.130" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:19:03.633" endtime="20190121 11:19:05.132" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:03.606" endtime="20190121 11:19:05.162" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:03.601" endtime="20190121 11:19:05.164" status="PASS"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:18:51.397" endtime="20190121 11:19:05.165" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56067.robot" name="SKTB-56067" id="s1-s17">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:19:05.859" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:19:05.846" endtime="20190121 11:19:05.870" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:19:05.879" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:19:05.906" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:19:08.128" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:19:05.873" endtime="20190121 11:19:08.129" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:05.841" endtime="20190121 11:19:08.132" status="PASS"></status>
</kw>
<test name="SKTB-SKTB-56067" id="s1-s17-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:08.205" endtime="20190121 11:19:08.329" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:08.332" endtime="20190121 11:19:08.424" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:08.427" endtime="20190121 11:19:08.594" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:19:10.612" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:19:08.597" endtime="20190121 11:19:10.615" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:19:10.618" endtime="20190121 11:19:10.705" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:11.712" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:10.708" endtime="20190121 11:19:11.714" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:19:11.717" endtime="20190121 11:19:11.763" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:19:13.771" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:19:11.767" endtime="20190121 11:19:13.774" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:19:13.776" endtime="20190121 11:19:13.821" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:19:13.824" endtime="20190121 11:19:13.869" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:19:13.872" endtime="20190121 11:19:13.917" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:19:13.921" endtime="20190121 11:19:13.971" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:08.177" endtime="20190121 11:19:13.974" status="PASS"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate</doc>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:14.064" level="INFO">${res_dict} = {'request': '41', 'result': '4153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:19:13.988" endtime="20190121 11:19:14.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:14.121" level="INFO">${value} = True</msg>
<status starttime="20190121 11:19:14.070" endtime="20190121 11:19:14.121" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:19:14.131" endtime="20190121 11:19:14.137" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:15.144" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:14.140" endtime="20190121 11:19:15.146" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:13.982" endtime="20190121 11:19:15.149" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:15.216" level="INFO">${res_dict} = {'request': '41', 'result': '4153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:19:15.157" endtime="20190121 11:19:15.217" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:15.242" level="INFO">${value} = True</msg>
<status starttime="20190121 11:19:15.220" endtime="20190121 11:19:15.243" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:19:15.246" endtime="20190121 11:19:15.250" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:16.258" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:15.253" endtime="20190121 11:19:16.260" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:15.151" endtime="20190121 11:19:16.262" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:13.977" endtime="20190121 11:19:16.264" status="PASS"></status>
</kw>
<kw name="POWER_ON_NAD">
<doc>Test the POWER_ON_NAD functionality</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the POWER_ON_NAD</arg>
<arg>functionality</arg>
</arguments>
<status starttime="20190121 11:19:16.272" endtime="20190121 11:19:16.277" status="PASS"></status>
</kw>
<kw name="POWERCYCLE">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:16.284" endtime="20190121 11:19:16.337" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:16.339" endtime="20190121 11:19:16.385" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:16.389" endtime="20190121 11:19:16.437" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:19:18.444" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:19:16.440" endtime="20190121 11:19:18.446" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:19:18.449" endtime="20190121 11:19:18.498" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:19.507" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:18.502" endtime="20190121 11:19:19.509" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:19:19.511" endtime="20190121 11:19:19.558" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:16.278" endtime="20190121 11:19:19.561" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:19:19.587" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190121 11:19:19.614" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:19:19.629" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:19:19.632" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:19:19.582" endtime="20190121 11:19:19.633" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:19:19.642" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:19:19.637" endtime="20190121 11:19:19.643" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:19:19.650" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:19:19.652" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status starttime="20190121 11:19:19.646" endtime="20190121 11:19:19.653" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:19:19.664" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:19:19.656" endtime="20190121 11:19:19.665" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:19:19.668" endtime="20190121 11:19:19.673" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190121 11:19:19.681" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:19:19.676" endtime="20190121 11:19:19.683" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:19:19.686" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:19:19.574" endtime="20190121 11:19:19.687" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:19.858" level="INFO">${res_dict} = {'request': '', 'response': 'TS', 'data': '2002e7cf', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:19:19.690" endtime="20190121 11:19:19.859" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:19:19.869" level="INFO">{'request': '', 'response': 'TS', 'data': '2002e7cf', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:19:19.862" endtime="20190121 11:19:19.871" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:19:21.879" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:19:19.875" endtime="20190121 11:19:21.881" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:21.906" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:19:21.884" endtime="20190121 11:19:21.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:19:21.910" endtime="20190121 11:19:21.915" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:19.569" endtime="20190121 11:19:21.918" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:21.987" level="INFO">${res_dict} = {'request': '49', 'result': '4953', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:19:21.925" endtime="20190121 11:19:21.989" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:22.013" level="INFO">${value} = True</msg>
<status starttime="20190121 11:19:21.992" endtime="20190121 11:19:22.014" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:19:22.017" endtime="20190121 11:19:22.021" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:23.033" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:22.024" endtime="20190121 11:19:23.035" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:21.919" endtime="20190121 11:19:23.038" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:23.125" level="INFO">${res_dict} = {'request': '4756', 'result': '475653', 'data': '0100', 'status': True}</msg>
<status starttime="20190121 11:19:23.058" endtime="20190121 11:19:23.126" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status starttime="20190121 11:19:23.130" endtime="20190121 11:19:23.137" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:24.144" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:23.140" endtime="20190121 11:19:24.146" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:23.040" endtime="20190121 11:19:24.149" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:19.564" endtime="20190121 11:19:24.151" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_POWERONNAD}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:24.222" level="INFO">${res_dict} = {'request': '5201', 'result': '520153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:19:24.161" endtime="20190121 11:19:24.223" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:19:24.226" endtime="20190121 11:19:24.232" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:24.257" level="INFO">${value} = True</msg>
<status starttime="20190121 11:19:24.235" endtime="20190121 11:19:24.258" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:19:24.262" level="INFO">${value} = True</msg>
<status starttime="20190121 11:19:24.153" endtime="20190121 11:19:24.262" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:19:24.266" endtime="20190121 11:19:24.271" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20190121 11:19:34.278" level="INFO">Slept 10 seconds</msg>
<status starttime="20190121 11:19:24.274" endtime="20190121 11:19:34.280" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:19:34.339" level="INFO">${KLEMME30} = [[12225, 129], [12300, 137]]</msg>
<status starttime="20190121 11:19:34.289" endtime="20190121 11:19:34.340" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:19:34.365" level="INFO">${CURR_VCARBAT} = 129</msg>
<status starttime="20190121 11:19:34.343" endtime="20190121 11:19:34.366" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:19:34.391" level="INFO">${CURR_KL30} = 137</msg>
<status starttime="20190121 11:19:34.369" endtime="20190121 11:19:34.392" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:19:34.399" level="INFO">${TIMENOW} = 1548069574</msg>
<status starttime="20190121 11:19:34.395" endtime="20190121 11:19:34.400" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:19:34.403" endtime="20190121 11:19:34.410" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:19:34.415" level="INFO">${TIMENOW} = 1548069574</msg>
<msg timestamp="20190121 11:19:34.416" level="INFO">${CURR_VCARBAT} = 129</msg>
<msg timestamp="20190121 11:19:34.417" level="INFO">${CURR_KL30} = 137</msg>
<status starttime="20190121 11:19:34.282" endtime="20190121 11:19:34.418" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<status starttime="20190121 11:19:34.427" endtime="20190121 11:19:34.433" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:19:34.434" level="INFO">${fbus_resp} = None</msg>
<status starttime="20190121 11:19:34.421" endtime="20190121 11:19:34.435" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:16.266" endtime="20190121 11:19:34.437" status="PASS"></status>
</kw>
<kw name="SHUTDOWNSYSTEM">
<doc>Test the shutdownsystem functionality</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the shutdownsystem functionality</arg>
</arguments>
<status starttime="20190121 11:19:34.446" endtime="20190121 11:19:34.451" status="PASS"></status>
</kw>
<kw name="POWERCYCLE">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:34.459" endtime="20190121 11:19:34.505" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:34.508" endtime="20190121 11:19:34.561" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:34.570" endtime="20190121 11:19:34.640" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:19:36.651" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:19:34.643" endtime="20190121 11:19:36.653" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:19:36.656" endtime="20190121 11:19:36.724" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:37.744" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:36.728" endtime="20190121 11:19:37.746" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:19:37.749" endtime="20190121 11:19:37.807" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:34.453" endtime="20190121 11:19:37.814" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:19:37.887" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190121 11:19:37.914" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:19:37.929" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:19:37.932" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:19:37.880" endtime="20190121 11:19:37.933" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:19:37.942" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:19:37.937" endtime="20190121 11:19:37.943" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:19:37.950" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:19:37.952" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status starttime="20190121 11:19:37.946" endtime="20190121 11:19:37.953" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:19:37.961" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:19:37.955" endtime="20190121 11:19:37.961" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:19:37.964" endtime="20190121 11:19:37.969" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190121 11:19:37.977" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:19:37.972" endtime="20190121 11:19:37.979" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:19:37.984" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:19:37.866" endtime="20190121 11:19:37.985" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:38.146" level="INFO">${res_dict} = {'request': '', 'response': 'TS', 'data': '2002e7cf', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:19:37.988" endtime="20190121 11:19:38.147" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:19:38.158" level="INFO">{'request': '', 'response': 'TS', 'data': '2002e7cf', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:19:38.153" endtime="20190121 11:19:38.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:19:40.168" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:19:38.163" endtime="20190121 11:19:40.170" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:40.196" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:19:40.173" endtime="20190121 11:19:40.197" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:19:40.200" endtime="20190121 11:19:40.205" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:37.845" endtime="20190121 11:19:40.208" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:40.275" level="INFO">${res_dict} = {'request': '49', 'result': '4953', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:19:40.216" endtime="20190121 11:19:40.277" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:40.301" level="INFO">${value} = True</msg>
<status starttime="20190121 11:19:40.280" endtime="20190121 11:19:40.302" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:19:40.305" endtime="20190121 11:19:40.309" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:41.316" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:40.312" endtime="20190121 11:19:41.318" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:40.210" endtime="20190121 11:19:41.320" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:41.391" level="INFO">${res_dict} = {'request': '4756', 'result': '475653', 'data': '0100', 'status': True}</msg>
<status starttime="20190121 11:19:41.328" endtime="20190121 11:19:41.393" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status starttime="20190121 11:19:41.396" endtime="20190121 11:19:41.402" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:42.409" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:41.405" endtime="20190121 11:19:42.411" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:41.322" endtime="20190121 11:19:42.414" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:37.837" endtime="20190121 11:19:42.416" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_SHUTDOWNSYSTEM}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:42.514" level="INFO">${res_dict} = {'request': '5202', 'result': '520246', 'data': '', 'status': False}</msg>
<status starttime="20190121 11:19:42.425" endtime="20190121 11:19:42.515" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:19:42.519" endtime="20190121 11:19:42.525" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:42.553" level="INFO">${value} = False</msg>
<status starttime="20190121 11:19:42.527" endtime="20190121 11:19:42.554" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:19:42.557" level="INFO">${value} = False</msg>
<status starttime="20190121 11:19:42.418" endtime="20190121 11:19:42.558" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:19:42.561" endtime="20190121 11:19:42.565" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20190121 11:19:47.572" level="INFO">Slept 5 seconds</msg>
<status starttime="20190121 11:19:42.568" endtime="20190121 11:19:47.575" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:19:47.637" level="INFO">${KLEMME30} = [[12250, 83], [12325, 92]]</msg>
<status starttime="20190121 11:19:47.584" endtime="20190121 11:19:47.638" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:19:47.663" level="INFO">${CURR_VCARBAT} = 83</msg>
<status starttime="20190121 11:19:47.641" endtime="20190121 11:19:47.664" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:19:47.688" level="INFO">${CURR_KL30} = 92</msg>
<status starttime="20190121 11:19:47.666" endtime="20190121 11:19:47.689" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:19:47.697" level="INFO">${TIMENOW} = 1548069587</msg>
<status starttime="20190121 11:19:47.692" endtime="20190121 11:19:47.697" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:19:47.700" endtime="20190121 11:19:47.707" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:19:47.712" level="INFO">${TIMENOW} = 1548069587</msg>
<msg timestamp="20190121 11:19:47.714" level="INFO">${CURR_VCARBAT} = 83</msg>
<msg timestamp="20190121 11:19:47.715" level="INFO">${CURR_KL30} = 92</msg>
<status starttime="20190121 11:19:47.578" endtime="20190121 11:19:47.715" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<msg timestamp="20190121 11:19:47.730" level="FAIL">'83 &lt; 5' should be true.</msg>
<status starttime="20190121 11:19:47.724" endtime="20190121 11:19:47.732" status="FAIL"></status>
</kw>
<msg timestamp="20190121 11:19:47.734" level="INFO">${fbus_resp} = None</msg>
<status starttime="20190121 11:19:47.718" endtime="20190121 11:19:47.735" status="FAIL"></status>
</kw>
<status starttime="20190121 11:19:34.440" endtime="20190121 11:19:47.738" status="FAIL"></status>
</kw>
<kw name="MCUSTANDBY">
<doc>Test the mcu stanby functionality</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the mcu stanby functionality</arg>
</arguments>
<status starttime="20190121 11:19:47.746" endtime="20190121 11:19:47.751" status="PASS"></status>
</kw>
<kw name="POWERCYCLE">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:47.759" endtime="20190121 11:19:47.805" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:47.809" endtime="20190121 11:19:47.869" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:19:47.872" endtime="20190121 11:19:47.938" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:19:49.946" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:19:47.941" endtime="20190121 11:19:49.948" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:19:49.951" endtime="20190121 11:19:49.998" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:51.007" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:50.002" endtime="20190121 11:19:51.009" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:19:51.012" endtime="20190121 11:19:51.064" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:47.753" endtime="20190121 11:19:51.066" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:19:51.092" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190121 11:19:51.120" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:19:51.135" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:19:51.138" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:19:51.087" endtime="20190121 11:19:51.138" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:19:51.151" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:19:51.142" endtime="20190121 11:19:51.152" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:19:51.161" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:19:51.164" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status starttime="20190121 11:19:51.156" endtime="20190121 11:19:51.165" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:19:51.173" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:19:51.168" endtime="20190121 11:19:51.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:19:51.176" endtime="20190121 11:19:51.181" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190121 11:19:51.189" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:19:51.184" endtime="20190121 11:19:51.191" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:19:51.194" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:19:51.079" endtime="20190121 11:19:51.195" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:51.361" level="INFO">${res_dict} = {'request': '', 'response': 'TS', 'data': '2002e7cf', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:19:51.198" endtime="20190121 11:19:51.362" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:19:51.377" level="INFO">{'request': '', 'response': 'TS', 'data': '2002e7cf', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:19:51.372" endtime="20190121 11:19:51.380" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:19:53.387" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:19:51.382" endtime="20190121 11:19:53.389" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:53.419" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:19:53.396" endtime="20190121 11:19:53.420" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:19:53.422" endtime="20190121 11:19:53.428" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:51.074" endtime="20190121 11:19:53.430" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:53.508" level="INFO">${res_dict} = {'request': '49', 'result': '4953', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:19:53.438" endtime="20190121 11:19:53.509" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:53.537" level="INFO">${value} = True</msg>
<status starttime="20190121 11:19:53.515" endtime="20190121 11:19:53.538" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:19:53.541" endtime="20190121 11:19:53.545" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:54.552" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:53.547" endtime="20190121 11:19:54.554" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:53.432" endtime="20190121 11:19:54.556" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:54.628" level="INFO">${res_dict} = {'request': '4756', 'result': '475653', 'data': '0100', 'status': True}</msg>
<status starttime="20190121 11:19:54.564" endtime="20190121 11:19:54.629" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status starttime="20190121 11:19:54.632" endtime="20190121 11:19:54.638" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:19:55.645" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:19:54.641" endtime="20190121 11:19:55.647" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:54.558" endtime="20190121 11:19:55.650" status="PASS"></status>
</kw>
<status starttime="20190121 11:19:51.068" endtime="20190121 11:19:55.652" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_MCUSTANDBY}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:19:55.733" level="INFO">${res_dict} = {'request': '5203', 'result': '520346', 'data': '', 'status': False}</msg>
<status starttime="20190121 11:19:55.661" endtime="20190121 11:19:55.734" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:19:55.738" endtime="20190121 11:19:55.743" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:19:55.767" level="INFO">${value} = False</msg>
<status starttime="20190121 11:19:55.746" endtime="20190121 11:19:55.768" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:19:55.772" level="INFO">${value} = False</msg>
<status starttime="20190121 11:19:55.654" endtime="20190121 11:19:55.773" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:19:55.775" endtime="20190121 11:19:55.780" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20190121 11:20:00.792" level="INFO">Slept 5 seconds</msg>
<status starttime="20190121 11:19:55.783" endtime="20190121 11:20:00.795" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:00.881" level="INFO">${KLEMME30} = [[12250, 79], [12325, 82]]</msg>
<status starttime="20190121 11:20:00.815" endtime="20190121 11:20:00.882" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:00.932" level="INFO">${CURR_VCARBAT} = 79</msg>
<status starttime="20190121 11:20:00.885" endtime="20190121 11:20:00.933" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:00.994" level="INFO">${CURR_KL30} = 82</msg>
<status starttime="20190121 11:20:00.947" endtime="20190121 11:20:00.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:01.009" level="INFO">${TIMENOW} = 1548069601</msg>
<status starttime="20190121 11:20:00.998" endtime="20190121 11:20:01.009" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:20:01.012" endtime="20190121 11:20:01.035" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:01.040" level="INFO">${TIMENOW} = 1548069601</msg>
<msg timestamp="20190121 11:20:01.041" level="INFO">${CURR_VCARBAT} = 79</msg>
<msg timestamp="20190121 11:20:01.042" level="INFO">${CURR_KL30} = 82</msg>
<status starttime="20190121 11:20:00.797" endtime="20190121 11:20:01.043" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<msg timestamp="20190121 11:20:01.058" level="FAIL">'79 &lt; 5' should be true.</msg>
<status starttime="20190121 11:20:01.051" endtime="20190121 11:20:01.059" status="FAIL"></status>
</kw>
<msg timestamp="20190121 11:20:01.061" level="INFO">${fbus_resp} = None</msg>
<status starttime="20190121 11:20:01.046" endtime="20190121 11:20:01.062" status="FAIL"></status>
</kw>
<status starttime="20190121 11:19:47.740" endtime="20190121 11:20:01.065" status="FAIL"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:01.080" endtime="20190121 11:20:01.254" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:01.257" endtime="20190121 11:20:01.328" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:01.331" endtime="20190121 11:20:01.431" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:20:02.445" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:01.435" endtime="20190121 11:20:02.447" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:20:02.454" endtime="20190121 11:20:02.623" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:01.070" endtime="20190121 11:20:02.630" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-SKTB-56067 Power testroutine</doc>
<tags>
<tag>Power testroutine</tag>
</tags>
<status critical="yes" starttime="20190121 11:19:08.134" endtime="20190121 11:20:02.631" status="FAIL">Several failures occurred:

1) '83 &lt; 5' should be true.

2) '79 &lt; 5' should be true.</status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:20:04.268" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:20:04.315" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:20:02.744" endtime="20190121 11:20:04.317" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:02.683" endtime="20190121 11:20:04.318" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:02.677" endtime="20190121 11:20:04.320" status="PASS"></status>
</kw>
<doc>Power testroutine testcase</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:19:05.332" endtime="20190121 11:20:04.321" status="FAIL"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56094.robot" name="SKTB-56094" id="s1-s18">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:20:04.993" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:20:04.961" endtime="20190121 11:20:04.999" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:20:05.029" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:20:05.031" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:20:07.219" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:20:05.002" endtime="20190121 11:20:07.221" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:04.955" endtime="20190121 11:20:07.224" status="PASS"></status>
</kw>
<test name="SKTB-SKTB-56094" id="s1-s18-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:07.261" endtime="20190121 11:20:07.376" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:07.379" endtime="20190121 11:20:07.494" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:07.497" endtime="20190121 11:20:07.625" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:20:09.655" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:20:07.640" endtime="20190121 11:20:09.657" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:20:09.660" endtime="20190121 11:20:09.706" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:20:10.714" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:09.710" endtime="20190121 11:20:10.716" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:20:10.719" endtime="20190121 11:20:10.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:20:12.774" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:20:10.770" endtime="20190121 11:20:12.776" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:20:12.779" endtime="20190121 11:20:12.823" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:20:12.827" endtime="20190121 11:20:12.872" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:20:12.875" endtime="20190121 11:20:12.922" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:20:12.926" endtime="20190121 11:20:12.971" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:07.255" endtime="20190121 11:20:12.974" status="PASS"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate if necessary</doc>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:13.130" level="INFO">${res_dict} = {'request': '41', 'result': '4153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:20:12.988" endtime="20190121 11:20:13.131" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:20:13.177" level="INFO">${value} = True</msg>
<status starttime="20190121 11:20:13.138" endtime="20190121 11:20:13.178" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:20:13.181" endtime="20190121 11:20:13.186" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:20:14.193" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:13.189" endtime="20190121 11:20:14.195" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:12.982" endtime="20190121 11:20:14.198" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:14.270" level="INFO">${res_dict} = {'request': '41', 'result': '4153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:20:14.206" endtime="20190121 11:20:14.271" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:20:14.298" level="INFO">${value} = True</msg>
<status starttime="20190121 11:20:14.274" endtime="20190121 11:20:14.299" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:20:14.301" endtime="20190121 11:20:14.306" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:20:15.313" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:14.308" endtime="20190121 11:20:15.315" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:14.199" endtime="20190121 11:20:15.317" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:12.977" endtime="20190121 11:20:15.319" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the rtestroutine and init it</doc>
<kw name="Step_load">
<arguments>
<arg>${VEHICLE_TR_PATH}</arg>
</arguments>
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${TESTROUTINE_FILEPATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:20:15.350" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_*.bin</msg>
<msg timestamp="20190121 11:20:15.378" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:20:15.393" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:20:15.395" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:20:15.344" endtime="20190121 11:20:15.396" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:20:15.406" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status starttime="20190121 11:20:15.400" endtime="20190121 11:20:15.406" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:20:15.413" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:20:15.415" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin']</msg>
<status starttime="20190121 11:20:15.409" endtime="20190121 11:20:15.416" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:20:15.425" level="INFO">${path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status starttime="20190121 11:20:15.419" endtime="20190121 11:20:15.426" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:20:15.430" endtime="20190121 11:20:15.435" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190121 11:20:15.443" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:20:15.438" endtime="20190121 11:20:15.444" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:15.448" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status starttime="20190121 11:20:15.336" endtime="20190121 11:20:15.449" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:16.200" level="INFO">${res_dict} = {'request': '', 'response': 'TS', 'data': 'd8dd0dd1', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:20:15.452" endtime="20190121 11:20:16.205" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:20:16.236" level="INFO">{'request': '', 'response': 'TS', 'data': 'd8dd0dd1', 'result': '5453', 'flowctrl': '', 'status': True}</msg>
<status starttime="20190121 11:20:16.220" endtime="20190121 11:20:16.241" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:20:18.261" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:20:16.244" endtime="20190121 11:20:18.263" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:20:18.291" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:20:18.266" endtime="20190121 11:20:18.291" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:20:18.295" endtime="20190121 11:20:18.301" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:15.327" endtime="20190121 11:20:18.303" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:18.375" level="INFO">${res_dict} = {'request': '49', 'result': '4953', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:20:18.315" endtime="20190121 11:20:18.377" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:20:18.403" level="INFO">${value} = True</msg>
<status starttime="20190121 11:20:18.380" endtime="20190121 11:20:18.404" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:20:18.407" endtime="20190121 11:20:18.412" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:20:19.419" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:18.414" endtime="20190121 11:20:19.421" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:18.307" endtime="20190121 11:20:19.423" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:19.495" level="INFO">${res_dict} = {'request': '4756', 'result': '475653', 'data': '0101', 'status': True}</msg>
<status starttime="20190121 11:20:19.431" endtime="20190121 11:20:19.496" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status starttime="20190121 11:20:19.499" endtime="20190121 11:20:19.505" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:20:20.512" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:19.508" endtime="20190121 11:20:20.514" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:19.425" endtime="20190121 11:20:20.517" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:15.322" endtime="20190121 11:20:20.519" status="PASS"></status>
</kw>
<kw name="CAN_SENDDATA_CAN1_TEST">
<doc>Test can send and receive data can 1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 1</arg>
</arguments>
<status starttime="20190121 11:20:20.527" endtime="20190121 11:20:20.531" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:20:20.543" endtime="20190121 11:20:20.550" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:20:20.560" level="INFO">Starting process:
sudo ip link set can0 down</msg>
<msg timestamp="20190121 11:20:20.587" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:20:20.658" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:20:20.661" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:20:20.553" endtime="20190121 11:20:20.662" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:20:20.666" endtime="20190121 11:20:20.674" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:20:20.684" level="INFO">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg timestamp="20190121 11:20:20.711" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:20:20.767" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:20:20.770" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:20:20.677" endtime="20190121 11:20:20.771" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:20:20.776" endtime="20190121 11:20:20.801" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:20:20.810" level="INFO">Starting process:
sudo ip link set can0 up</msg>
<msg timestamp="20190121 11:20:20.839" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:20:20.933" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:20:20.936" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:20:20.804" endtime="20190121 11:20:20.937" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:20:20.944" endtime="20190121 11:20:20.953" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:20:20.534" endtime="20190121 11:20:20.955" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:20:20.966" level="INFO">Starting process:
candump -t a can0,767:7FF,768:7FF</msg>
<msg timestamp="20190121 11:20:21.005" level="INFO">${candump_ID} = 181</msg>
<status starttime="20190121 11:20:20.959" endtime="20190121 11:20:21.006" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_0}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg timestamp="20190121 11:20:21.026" level="INFO">Starting process:
cangen can0 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg timestamp="20190121 11:20:21.055" level="INFO">${cangen_ID} = 182</msg>
<status starttime="20190121 11:20:21.014" endtime="20190121 11:20:21.060" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN1}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:21.154" level="INFO">${res_dict} = {'request': '53420008aabbccdd11223344', 'result': '534253', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:20:21.078" endtime="20190121 11:20:21.155" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:20:21.163" endtime="20190121 11:20:21.176" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:20:21.209" level="INFO">${value} = True</msg>
<status starttime="20190121 11:20:21.179" endtime="20190121 11:20:21.209" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status starttime="20190121 11:20:21.212" endtime="20190121 11:20:21.218" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:21.281" level="INFO">${res_dict} = {'request': '5201', 'result': '520153', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:20:21.221" endtime="20190121 11:20:21.282" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:20:21.286" endtime="20190121 11:20:21.291" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:20:21.319" level="INFO">${value} = True</msg>
<status starttime="20190121 11:20:21.294" endtime="20190121 11:20:21.319" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status starttime="20190121 11:20:21.322" endtime="20190121 11:20:21.328" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:21.413" level="INFO">${res_dict} = {'request': '4742', 'result': '474253', 'data': 'aabbccdd11223344', 'status': True}</msg>
<status starttime="20190121 11:20:21.331" endtime="20190121 11:20:21.414" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:20:21.422" endtime="20190121 11:20:21.436" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190121 11:20:21.497" level="INFO">${status} = True</msg>
<status starttime="20190121 11:20:21.439" endtime="20190121 11:20:21.498" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status starttime="20190121 11:20:21.501" endtime="20190121 11:20:21.506" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:20:21.533" level="INFO">${data} = aabbccdd11223344</msg>
<status starttime="20190121 11:20:21.509" endtime="20190121 11:20:21.534" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:21.539" level="INFO">${status} = True</msg>
<msg timestamp="20190121 11:20:21.540" level="INFO">${data} = aabbccdd11223344</msg>
<status starttime="20190121 11:20:21.063" endtime="20190121 11:20:21.541" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status starttime="20190121 11:20:21.543" endtime="20190121 11:20:21.548" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:20:21.550" endtime="20190121 11:20:21.557" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:20:21.572" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:20:22.076" level="INFO">Process did not complete in 500 milliseconds.</msg>
<msg timestamp="20190121 11:20:22.078" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:20:22.082" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:20:22.084" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:20:21.566" endtime="20190121 11:20:22.085" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:20:22.093" level="INFO">4 lines returned</msg>
<msg timestamp="20190121 11:20:22.096" level="INFO">${temp} = [' (1548069621.068085)  can0  768   [8]  AA BB CC DD 11 22 33 44', ' (1548069621.251797)  can0  767   [8]  AA BB CC DD 11 22 33 44', ' (1548069621.568337)  can0  768   [8]  AA BB CC DD 11 22 33 44', '...</msg>
<status starttime="20190121 11:20:22.088" endtime="20190121 11:20:22.096" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg timestamp="20190121 11:20:22.103" level="INFO">${FILTER} = ['withoutfilter']</msg>
<status starttime="20190121 11:20:22.099" endtime="20190121 11:20:22.104" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Set Canid Status And Filter">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status starttime="20190121 11:20:22.107" endtime="20190121 11:20:22.111" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:20:22.119" level="INFO">(1548069621.068085)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1548069621.251797)  can0  767   [8]  AA BB CC DD 11 22 33 44
 (1548069621.568337)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1548069622.068480)  can0  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg timestamp="20190121 11:20:22.122" level="INFO">${ret_list} = [{'timestamp': '1548069621.068085', 'channel': 'can0', 'payload': 'AABBCCDD11223344', 'id': '768'}, {'timestamp': '1548069621.251797', 'channel': 'can0', 'payload': 'AABBCCDD11223344', 'id': '767'}, {...</msg>
<status starttime="20190121 11:20:22.114" endtime="20190121 11:20:22.122" status="PASS"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:20:22.142" level="INFO">${RESULT} = False</msg>
<status starttime="20190121 11:20:22.134" endtime="20190121 11:20:22.143" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:20:22.150" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:20:22.152" level="INFO">${count} = 4</msg>
<status starttime="20190121 11:20:22.146" endtime="20190121 11:20:22.153" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:20:22.156" endtime="20190121 11:20:22.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:20:22.169" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:20:22.164" endtime="20190121 11:20:22.170" status="PASS"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '1548069621.068085', 'channel': 'can0', 'payload': 'AABBCCDD11223344', 'id': '768'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:20:22.182" level="INFO">${payload} = AABBCCDD11223344</msg>
<status starttime="20190121 11:20:22.177" endtime="20190121 11:20:22.183" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190121 11:20:22.191" level="INFO">${can_id} = 768</msg>
<status starttime="20190121 11:20:22.186" endtime="20190121 11:20:22.192" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190121 11:20:22.202" level="INFO">${count_msg} = 1</msg>
<status starttime="20190121 11:20:22.194" endtime="20190121 11:20:22.203" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190121 11:20:22.213" level="INFO">${count_id} = 0</msg>
<status starttime="20190121 11:20:22.206" endtime="20190121 11:20:22.214" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:20:22.223" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:20:22.217" endtime="20190121 11:20:22.224" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:20:22.234" level="INFO">${RESULT} = False</msg>
<status starttime="20190121 11:20:22.227" endtime="20190121 11:20:22.235" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status starttime="20190121 11:20:22.238" endtime="20190121 11:20:22.244" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:22.174" endtime="20190121 11:20:22.245" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '1548069621.251797', 'channel': 'can0', 'payload': 'AABBCCDD11223344', 'id': '767'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:20:22.254" level="INFO">${payload} = AABBCCDD11223344</msg>
<status starttime="20190121 11:20:22.249" endtime="20190121 11:20:22.256" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190121 11:20:22.264" level="INFO">${can_id} = 767</msg>
<status starttime="20190121 11:20:22.259" endtime="20190121 11:20:22.265" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190121 11:20:22.275" level="INFO">${count_msg} = 1</msg>
<status starttime="20190121 11:20:22.268" endtime="20190121 11:20:22.276" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190121 11:20:22.286" level="INFO">${count_id} = 1</msg>
<status starttime="20190121 11:20:22.279" endtime="20190121 11:20:22.287" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:20:22.296" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:20:22.290" endtime="20190121 11:20:22.297" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:20:22.307" level="INFO">${RESULT} = True</msg>
<status starttime="20190121 11:20:22.300" endtime="20190121 11:20:22.308" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg timestamp="20190121 11:20:22.317" level="INFO">Exiting for loop altogether.</msg>
<status starttime="20190121 11:20:22.311" endtime="20190121 11:20:22.319" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:22.246" endtime="20190121 11:20:22.320" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:22.171" endtime="20190121 11:20:22.321" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:22.325" level="INFO">${res} = True</msg>
<status starttime="20190121 11:20:22.124" endtime="20190121 11:20:22.325" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status starttime="20190121 11:20:22.328" endtime="20190121 11:20:22.334" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:22.338" level="INFO">${res} = True</msg>
<status starttime="20190121 11:20:21.559" endtime="20190121 11:20:22.339" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:20:22.341" endtime="20190121 11:20:22.346" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:20.521" endtime="20190121 11:20:22.348" status="PASS"></status>
</kw>
<kw name="CAN_SENDDATA_CAN3_TEST">
<doc>Test can send and receive data can 2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 2</arg>
</arguments>
<status starttime="20190121 11:20:22.356" endtime="20190121 11:20:22.361" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20190121 11:20:24.367" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:20:22.363" endtime="20190121 11:20:24.370" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:20:24.382" endtime="20190121 11:20:24.389" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:20:24.398" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:20:24.426" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:20:24.497" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:20:24.500" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:20:24.392" endtime="20190121 11:20:24.501" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:20:24.505" endtime="20190121 11:20:24.513" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:20:24.523" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:20:24.550" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:20:24.605" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:20:24.609" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:20:24.516" endtime="20190121 11:20:24.611" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:20:24.615" endtime="20190121 11:20:24.623" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:20:24.633" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:20:24.660" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:20:24.763" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:20:24.767" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:20:24.626" endtime="20190121 11:20:24.768" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:20:24.775" endtime="20190121 11:20:24.798" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:20:24.372" endtime="20190121 11:20:24.802" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_2},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:20:24.814" level="INFO">Starting process:
candump -t a can2,767:7FF,768:7FF</msg>
<msg timestamp="20190121 11:20:24.856" level="INFO">${candump_ID} = 186</msg>
<status starttime="20190121 11:20:24.805" endtime="20190121 11:20:24.860" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_2}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg timestamp="20190121 11:20:24.879" level="INFO">Starting process:
cangen can2 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg timestamp="20190121 11:20:24.909" level="INFO">${cangen_ID} = 187</msg>
<status starttime="20190121 11:20:24.868" endtime="20190121 11:20:24.910" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN3}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:25.035" level="INFO">${res_dict} = {'request': '53420008aabbccdd11223344', 'result': '1efd54', 'data': '', 'status': False}</msg>
<status starttime="20190121 11:20:24.930" endtime="20190121 11:20:25.035" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:20:25.043" endtime="20190121 11:20:25.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:20:25.093" level="INFO">${value} = False</msg>
<status starttime="20190121 11:20:25.062" endtime="20190121 11:20:25.094" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status starttime="20190121 11:20:25.096" endtime="20190121 11:20:25.102" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:25.165" level="INFO">${res_dict} = {'request': '5203', 'result': '520353', 'data': '', 'status': True}</msg>
<status starttime="20190121 11:20:25.105" endtime="20190121 11:20:25.166" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:20:25.169" endtime="20190121 11:20:25.175" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:20:25.202" level="INFO">${value} = True</msg>
<status starttime="20190121 11:20:25.177" endtime="20190121 11:20:25.203" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status starttime="20190121 11:20:25.206" endtime="20190121 11:20:25.211" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:20:25.314" level="INFO">${res_dict} = {'request': '4742', 'result': '474253', 'data': 'aabbccdd11223344', 'status': True}</msg>
<status starttime="20190121 11:20:25.214" endtime="20190121 11:20:25.314" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:20:25.321" endtime="20190121 11:20:25.334" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190121 11:20:25.371" level="INFO">${status} = True</msg>
<status starttime="20190121 11:20:25.343" endtime="20190121 11:20:25.372" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status starttime="20190121 11:20:25.375" endtime="20190121 11:20:25.380" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:20:25.409" level="INFO">${data} = aabbccdd11223344</msg>
<status starttime="20190121 11:20:25.383" endtime="20190121 11:20:25.409" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:25.414" level="INFO">${status} = True</msg>
<msg timestamp="20190121 11:20:25.415" level="INFO">${data} = aabbccdd11223344</msg>
<status starttime="20190121 11:20:24.920" endtime="20190121 11:20:25.416" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status starttime="20190121 11:20:25.419" endtime="20190121 11:20:25.425" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:20:25.428" endtime="20190121 11:20:25.434" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:20:25.448" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:20:25.952" level="INFO">Process did not complete in 500 milliseconds.</msg>
<msg timestamp="20190121 11:20:25.954" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:20:25.958" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:20:25.960" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:20:25.444" endtime="20190121 11:20:25.961" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:20:25.969" level="INFO">4 lines returned</msg>
<msg timestamp="20190121 11:20:25.971" level="INFO">${temp} = [' (1548069624.919051)  can2  768   [8]  AA BB CC DD 11 22 33 44', ' (1548069625.135732)  can2  767   [8]  AA BB CC DD 11 22 33 44', ' (1548069625.424901)  can2  768   [8]  AA BB CC DD 11 22 33 44', '...</msg>
<status starttime="20190121 11:20:25.964" endtime="20190121 11:20:25.972" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg timestamp="20190121 11:20:25.979" level="INFO">${FILTER} = ['withoutfilter']</msg>
<status starttime="20190121 11:20:25.975" endtime="20190121 11:20:25.980" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Set Canid Status And Filter">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status starttime="20190121 11:20:25.984" endtime="20190121 11:20:25.989" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:20:25.997" level="INFO">(1548069624.919051)  can2  768   [8]  AA BB CC DD 11 22 33 44
 (1548069625.135732)  can2  767   [8]  AA BB CC DD 11 22 33 44
 (1548069625.424901)  can2  768   [8]  AA BB CC DD 11 22 33 44
 (1548069625.925032)  can2  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg timestamp="20190121 11:20:25.999" level="INFO">${ret_list} = [{'timestamp': '1548069624.919051', 'channel': 'can2', 'payload': 'AABBCCDD11223344', 'id': '768'}, {'timestamp': '1548069625.135732', 'channel': 'can2', 'payload': 'AABBCCDD11223344', 'id': '767'}, {...</msg>
<status starttime="20190121 11:20:25.992" endtime="20190121 11:20:26.000" status="PASS"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:20:26.016" level="INFO">${RESULT} = False</msg>
<status starttime="20190121 11:20:26.011" endtime="20190121 11:20:26.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:20:26.024" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:20:26.026" level="INFO">${count} = 4</msg>
<status starttime="20190121 11:20:26.020" endtime="20190121 11:20:26.027" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:20:26.030" endtime="20190121 11:20:26.035" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:20:26.042" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:20:26.038" endtime="20190121 11:20:26.043" status="PASS"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'timestamp': '1548069624.919051', 'channel': 'can2', 'payload': 'AABBCCDD11223344', 'id': '768'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:20:26.059" level="INFO">${payload} = AABBCCDD11223344</msg>
<status starttime="20190121 11:20:26.054" endtime="20190121 11:20:26.060" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190121 11:20:26.067" level="INFO">${can_id} = 768</msg>
<status starttime="20190121 11:20:26.062" endtime="20190121 11:20:26.068" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190121 11:20:26.079" level="INFO">${count_msg} = 1</msg>
<status starttime="20190121 11:20:26.071" endtime="20190121 11:20:26.080" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190121 11:20:26.091" level="INFO">${count_id} = 0</msg>
<status starttime="20190121 11:20:26.083" endtime="20190121 11:20:26.092" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:20:26.102" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:20:26.095" endtime="20190121 11:20:26.103" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:20:26.113" level="INFO">${RESULT} = False</msg>
<status starttime="20190121 11:20:26.106" endtime="20190121 11:20:26.114" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status starttime="20190121 11:20:26.117" endtime="20190121 11:20:26.123" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:26.050" endtime="20190121 11:20:26.124" status="PASS"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'timestamp': '1548069625.135732', 'channel': 'can2', 'payload': 'AABBCCDD11223344', 'id': '767'}">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:20:26.134" level="INFO">${payload} = AABBCCDD11223344</msg>
<status starttime="20190121 11:20:26.129" endtime="20190121 11:20:26.134" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190121 11:20:26.142" level="INFO">${can_id} = 767</msg>
<status starttime="20190121 11:20:26.137" endtime="20190121 11:20:26.143" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190121 11:20:26.153" level="INFO">${count_msg} = 1</msg>
<status starttime="20190121 11:20:26.146" endtime="20190121 11:20:26.154" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190121 11:20:26.164" level="INFO">${count_id} = 1</msg>
<status starttime="20190121 11:20:26.157" endtime="20190121 11:20:26.165" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:20:26.174" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:20:26.168" endtime="20190121 11:20:26.175" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:20:26.186" level="INFO">${RESULT} = True</msg>
<status starttime="20190121 11:20:26.178" endtime="20190121 11:20:26.187" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg timestamp="20190121 11:20:26.196" level="INFO">Exiting for loop altogether.</msg>
<status starttime="20190121 11:20:26.190" endtime="20190121 11:20:26.198" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:26.126" endtime="20190121 11:20:26.199" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:26.044" endtime="20190121 11:20:26.200" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:26.203" level="INFO">${res} = True</msg>
<status starttime="20190121 11:20:26.002" endtime="20190121 11:20:26.204" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status starttime="20190121 11:20:26.207" endtime="20190121 11:20:26.213" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:26.216" level="INFO">${res} = True</msg>
<status starttime="20190121 11:20:25.437" endtime="20190121 11:20:26.217" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:20:26.220" endtime="20190121 11:20:26.224" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:22.350" endtime="20190121 11:20:26.226" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:26.236" endtime="20190121 11:20:26.282" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:26.286" endtime="20190121 11:20:26.333" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:26.336" endtime="20190121 11:20:26.383" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:20:27.391" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:26.386" endtime="20190121 11:20:27.393" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:20:27.396" endtime="20190121 11:20:27.441" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg timestamp="20190121 11:20:27.449" level="INFO">Starting process:
pkill candump</msg>
<msg timestamp="20190121 11:20:27.476" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:20:27.509" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:20:27.512" level="INFO">${rm_res} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:20:27.444" endtime="20190121 11:20:27.513" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:26.230" endtime="20190121 11:20:27.516" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-56094 Vehicle buses testroutine</doc>
<tags>
<tag>Vehicle buses testroutine</tag>
</tags>
<status critical="yes" starttime="20190121 11:20:07.226" endtime="20190121 11:20:27.518" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:20:29.002" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:20:29.068" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:20:27.562" endtime="20190121 11:20:29.070" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:27.535" endtime="20190121 11:20:29.071" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:27.529" endtime="20190121 11:20:29.073" status="PASS"></status>
</kw>
<doc>Vehicle buses testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:20:04.432" endtime="20190121 11:20:29.074" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-55194.robot" name="SKTB-55194" id="s1-s19">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:20:29.933" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:20:29.920" endtime="20190121 11:20:29.946" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:20:29.955" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:20:29.971" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:20:32.649" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:20:29.949" endtime="20190121 11:20:32.652" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:29.915" endtime="20190121 11:20:32.654" status="PASS"></status>
</kw>
<test name="SKTB-55194" id="s1-s19-t1">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:32.722" endtime="20190121 11:20:32.819" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:32.822" endtime="20190121 11:20:32.933" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:32.936" endtime="20190121 11:20:33.079" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Bidir Wake Up">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:20:33.086" endtime="20190121 11:20:33.663" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:20:35.683" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:20:33.666" endtime="20190121 11:20:35.685" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:20:35.688" endtime="20190121 11:20:35.733" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:20:35.736" endtime="20190121 11:20:35.782" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:20:35.785" endtime="20190121 11:20:35.830" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:20:35.834" endtime="20190121 11:20:35.879" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${1000}</arg>
</arguments>
<status starttime="20190121 11:20:35.883" endtime="20190121 11:20:35.933" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:20:36.942" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:35.936" endtime="20190121 11:20:36.945" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:32.701" endtime="20190121 11:20:36.947" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Implements Test Task SKTB-55194 Powermanagement</arg>
</arguments>
<status starttime="20190121 11:20:36.950" endtime="20190121 11:20:36.955" status="PASS"></status>
</kw>
<kw name="STEP_1">
<doc>Start device without KL15 and wait til device goes to standby, then wakeup with kl15 on</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start device without KL15 and wait til device goes to standby, then wakeup with kl15 on</arg>
</arguments>
<status starttime="20190121 11:20:36.963" endtime="20190121 11:20:36.968" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:36.971" endtime="20190121 11:20:37.019" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:20:37.022" endtime="20190121 11:20:37.069" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:20:39.076" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:20:37.072" endtime="20190121 11:20:39.078" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:20:39.085" endtime="20190121 11:20:39.234" status="PASS"></status>
</kw>
<kw name="WAIT_FOR_POWER_STATE">
<doc>Wait for powerstate within a given time</doc>
<arguments>
<arg>10</arg>
<arg>${POWER_APP_POWER_STATE_CARIF_ONLY}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TIMEOUT}</arg>
</arguments>
<assign>
<var>${LOOPS}</var>
</assign>
<msg timestamp="20190121 11:20:39.275" level="INFO">${LOOPS} = 10</msg>
<status starttime="20190121 11:20:39.258" endtime="20190121 11:20:39.276" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:39.316" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:39.279" endtime="20190121 11:20:39.317" status="PASS"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ ${LOOPS} ]">
<kw type="foritem" name="${i} = 0">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:39.448" level="INFO">${KLEMME30} = [[12250, 30], [12325, 43]]</msg>
<status starttime="20190121 11:20:39.339" endtime="20190121 11:20:39.449" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:39.504" level="INFO">${CURR_VCARBAT} = 30</msg>
<status starttime="20190121 11:20:39.452" endtime="20190121 11:20:39.505" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:39.542" level="INFO">${CURR_KL30} = 43</msg>
<status starttime="20190121 11:20:39.508" endtime="20190121 11:20:39.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:39.550" level="INFO">${TIMENOW} = 1548069639</msg>
<status starttime="20190121 11:20:39.545" endtime="20190121 11:20:39.551" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:39.556" level="INFO">${TIMENOW} = 1548069639</msg>
<msg timestamp="20190121 11:20:39.557" level="INFO">${CURR_VCARBAT} = 30</msg>
<msg timestamp="20190121 11:20:39.558" level="INFO">${CURR_KL30} = 43</msg>
<status starttime="20190121 11:20:39.324" endtime="20190121 11:20:39.559" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:39.568" endtime="20190121 11:20:39.794" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:39.798" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:20:39.562" endtime="20190121 11:20:39.799" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:39.802" endtime="20190121 11:20:39.808" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:39.817" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:39.819" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:39.813" endtime="20190121 11:20:39.820" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:39.844" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:20:39.839" endtime="20190121 11:20:39.846" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:39.855" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:39.849" endtime="20190121 11:20:39.855" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:39.830" endtime="20190121 11:20:39.859" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:39.860" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:39.823" endtime="20190121 11:20:39.861" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:39.871" level="INFO">${STATUS} = True</msg>
<status starttime="20190121 11:20:39.864" endtime="20190121 11:20:39.872" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<msg timestamp="20190121 11:20:39.881" level="INFO">Exiting for loop altogether.</msg>
<status starttime="20190121 11:20:39.875" endtime="20190121 11:20:39.883" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:39.321" endtime="20190121 11:20:39.884" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:39.318" endtime="20190121 11:20:39.885" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:20:39.887" endtime="20190121 11:20:39.894" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:39.897" endtime="20190121 11:20:39.904" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:39.908" level="INFO">${STATUS} = True</msg>
<status starttime="20190121 11:20:39.236" endtime="20190121 11:20:39.909" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<status starttime="20190121 11:20:39.912" endtime="20190121 11:20:39.916" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait until power state power down is reached</arg>
</arguments>
<status starttime="20190121 11:20:39.919" endtime="20190121 11:20:39.924" status="PASS"></status>
</kw>
<kw name="WAIT_FOR_POWER_STATE">
<doc>Wait for powerstate within a given time</doc>
<arguments>
<arg>70</arg>
<arg>${POWER_APP_POWER_STATE_POWER_DOWN}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TIMEOUT}</arg>
</arguments>
<assign>
<var>${LOOPS}</var>
</assign>
<msg timestamp="20190121 11:20:39.944" level="INFO">${LOOPS} = 70</msg>
<status starttime="20190121 11:20:39.938" endtime="20190121 11:20:39.945" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:39.952" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:39.948" endtime="20190121 11:20:39.953" status="PASS"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ ${LOOPS} ]">
<kw type="foritem" name="${i} = 0">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:40.032" level="INFO">${KLEMME30} = [[12250, 52], [12325, 54]]</msg>
<status starttime="20190121 11:20:39.966" endtime="20190121 11:20:40.034" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:40.071" level="INFO">${CURR_VCARBAT} = 52</msg>
<status starttime="20190121 11:20:40.036" endtime="20190121 11:20:40.072" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:40.108" level="INFO">${CURR_KL30} = 54</msg>
<status starttime="20190121 11:20:40.075" endtime="20190121 11:20:40.109" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:40.117" level="INFO">${TIMENOW} = 1548069640</msg>
<status starttime="20190121 11:20:40.112" endtime="20190121 11:20:40.118" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:40.142" level="INFO">${TIMENOW} = 1548069640</msg>
<msg timestamp="20190121 11:20:40.144" level="INFO">${CURR_VCARBAT} = 52</msg>
<msg timestamp="20190121 11:20:40.145" level="INFO">${CURR_KL30} = 54</msg>
<status starttime="20190121 11:20:39.959" endtime="20190121 11:20:40.145" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:40.166" endtime="20190121 11:20:40.410" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:40.411" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:20:40.157" endtime="20190121 11:20:40.413" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:40.416" endtime="20190121 11:20:40.426" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:40.434" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:40.436" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:40.430" endtime="20190121 11:20:40.437" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:40.462" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:20:40.455" endtime="20190121 11:20:40.462" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:40.471" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:40.465" endtime="20190121 11:20:40.472" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:40.446" endtime="20190121 11:20:40.475" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:40.477" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:40.440" endtime="20190121 11:20:40.477" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:40.488" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:40.480" endtime="20190121 11:20:40.489" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:40.491" endtime="20190121 11:20:40.498" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:41.505" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:40.501" endtime="20190121 11:20:41.507" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:39.957" endtime="20190121 11:20:41.507" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:41.629" level="INFO">${KLEMME30} = [[12250, 72], [12325, 75]]</msg>
<status starttime="20190121 11:20:41.537" endtime="20190121 11:20:41.630" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:41.709" level="INFO">${CURR_VCARBAT} = 72</msg>
<status starttime="20190121 11:20:41.637" endtime="20190121 11:20:41.710" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:41.790" level="INFO">${CURR_KL30} = 75</msg>
<status starttime="20190121 11:20:41.717" endtime="20190121 11:20:41.790" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:41.807" level="INFO">${TIMENOW} = 1548069641</msg>
<status starttime="20190121 11:20:41.798" endtime="20190121 11:20:41.807" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:41.821" level="INFO">${TIMENOW} = 1548069641</msg>
<msg timestamp="20190121 11:20:41.822" level="INFO">${CURR_VCARBAT} = 72</msg>
<msg timestamp="20190121 11:20:41.823" level="INFO">${CURR_KL30} = 75</msg>
<status starttime="20190121 11:20:41.511" endtime="20190121 11:20:41.824" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:41.862" endtime="20190121 11:20:42.118" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:42.124" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:20:41.831" endtime="20190121 11:20:42.125" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:42.133" endtime="20190121 11:20:42.143" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:42.158" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:42.164" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:42.146" endtime="20190121 11:20:42.165" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:42.257" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:20:42.218" endtime="20190121 11:20:42.258" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:42.303" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:42.285" endtime="20190121 11:20:42.304" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:42.184" endtime="20190121 11:20:42.339" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:42.346" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:42.173" endtime="20190121 11:20:42.346" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:42.362" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:42.354" endtime="20190121 11:20:42.363" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:42.365" endtime="20190121 11:20:42.372" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:43.379" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:42.375" endtime="20190121 11:20:43.381" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:41.509" endtime="20190121 11:20:43.383" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:43.442" level="INFO">${KLEMME30} = [[12250, 75], [12325, 81]]</msg>
<status starttime="20190121 11:20:43.393" endtime="20190121 11:20:43.443" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:43.481" level="INFO">${CURR_VCARBAT} = 75</msg>
<status starttime="20190121 11:20:43.447" endtime="20190121 11:20:43.482" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:43.518" level="INFO">${CURR_KL30} = 81</msg>
<status starttime="20190121 11:20:43.485" endtime="20190121 11:20:43.519" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:43.527" level="INFO">${TIMENOW} = 1548069643</msg>
<status starttime="20190121 11:20:43.522" endtime="20190121 11:20:43.528" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:43.538" level="INFO">${TIMENOW} = 1548069643</msg>
<msg timestamp="20190121 11:20:43.542" level="INFO">${CURR_VCARBAT} = 75</msg>
<msg timestamp="20190121 11:20:43.545" level="INFO">${CURR_KL30} = 81</msg>
<status starttime="20190121 11:20:43.386" endtime="20190121 11:20:43.547" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:43.563" endtime="20190121 11:20:43.792" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:43.794" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:20:43.550" endtime="20190121 11:20:43.795" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:43.798" endtime="20190121 11:20:43.804" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:43.811" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:43.813" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:43.807" endtime="20190121 11:20:43.814" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:43.838" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:20:43.833" endtime="20190121 11:20:43.839" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:43.847" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:43.842" endtime="20190121 11:20:43.849" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:43.824" endtime="20190121 11:20:43.852" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:43.853" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:43.817" endtime="20190121 11:20:43.854" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:43.865" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:43.857" endtime="20190121 11:20:43.866" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:43.869" endtime="20190121 11:20:43.875" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:44.882" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:43.878" endtime="20190121 11:20:44.884" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:43.384" endtime="20190121 11:20:44.885" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:44.946" level="INFO">${KLEMME30} = [[12250, 95], [12300, 100]]</msg>
<status starttime="20190121 11:20:44.895" endtime="20190121 11:20:44.946" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:44.983" level="INFO">${CURR_VCARBAT} = 95</msg>
<status starttime="20190121 11:20:44.950" endtime="20190121 11:20:44.983" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:45.021" level="INFO">${CURR_KL30} = 100</msg>
<status starttime="20190121 11:20:44.986" endtime="20190121 11:20:45.021" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:45.029" level="INFO">${TIMENOW} = 1548069645</msg>
<status starttime="20190121 11:20:45.024" endtime="20190121 11:20:45.030" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:45.035" level="INFO">${TIMENOW} = 1548069645</msg>
<msg timestamp="20190121 11:20:45.037" level="INFO">${CURR_VCARBAT} = 95</msg>
<msg timestamp="20190121 11:20:45.039" level="INFO">${CURR_KL30} = 100</msg>
<status starttime="20190121 11:20:44.889" endtime="20190121 11:20:45.040" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:45.050" endtime="20190121 11:20:45.267" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:45.270" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:20:45.044" endtime="20190121 11:20:45.271" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:45.273" endtime="20190121 11:20:45.279" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:45.286" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:45.288" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:45.282" endtime="20190121 11:20:45.289" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:45.316" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:20:45.311" endtime="20190121 11:20:45.317" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:45.325" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:45.320" endtime="20190121 11:20:45.326" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:45.299" endtime="20190121 11:20:45.329" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:45.331" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:45.292" endtime="20190121 11:20:45.331" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:45.341" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:45.334" endtime="20190121 11:20:45.342" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:45.345" endtime="20190121 11:20:45.351" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:46.358" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:45.354" endtime="20190121 11:20:46.360" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:44.887" endtime="20190121 11:20:46.361" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:46.423" level="INFO">${KLEMME30} = [[12250, 72], [12325, 76]]</msg>
<status starttime="20190121 11:20:46.372" endtime="20190121 11:20:46.424" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:46.460" level="INFO">${CURR_VCARBAT} = 72</msg>
<status starttime="20190121 11:20:46.427" endtime="20190121 11:20:46.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:46.497" level="INFO">${CURR_KL30} = 76</msg>
<status starttime="20190121 11:20:46.464" endtime="20190121 11:20:46.498" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:46.505" level="INFO">${TIMENOW} = 1548069646</msg>
<status starttime="20190121 11:20:46.500" endtime="20190121 11:20:46.506" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:46.511" level="INFO">${TIMENOW} = 1548069646</msg>
<msg timestamp="20190121 11:20:46.512" level="INFO">${CURR_VCARBAT} = 72</msg>
<msg timestamp="20190121 11:20:46.513" level="INFO">${CURR_KL30} = 76</msg>
<status starttime="20190121 11:20:46.364" endtime="20190121 11:20:46.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:46.522" endtime="20190121 11:20:46.843" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:46.850" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:20:46.517" endtime="20190121 11:20:46.850" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:46.890" endtime="20190121 11:20:46.916" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:46.924" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:46.930" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:46.919" endtime="20190121 11:20:46.931" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:47.006" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:20:46.983" endtime="20190121 11:20:47.007" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:47.023" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:47.010" endtime="20190121 11:20:47.024" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:46.965" endtime="20190121 11:20:47.054" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:47.056" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:46.934" endtime="20190121 11:20:47.057" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:47.076" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:47.060" endtime="20190121 11:20:47.077" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:47.098" endtime="20190121 11:20:47.105" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:48.119" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:47.110" endtime="20190121 11:20:48.121" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:46.362" endtime="20190121 11:20:48.122" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:48.221" level="INFO">${KLEMME30} = [[12250, 77], [12325, 81]]</msg>
<status starttime="20190121 11:20:48.140" endtime="20190121 11:20:48.222" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:48.300" level="INFO">${CURR_VCARBAT} = 77</msg>
<status starttime="20190121 11:20:48.225" endtime="20190121 11:20:48.301" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:48.391" level="INFO">${CURR_KL30} = 81</msg>
<status starttime="20190121 11:20:48.323" endtime="20190121 11:20:48.392" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:48.420" level="INFO">${TIMENOW} = 1548069648</msg>
<status starttime="20190121 11:20:48.395" endtime="20190121 11:20:48.421" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:48.441" level="INFO">${TIMENOW} = 1548069648</msg>
<msg timestamp="20190121 11:20:48.443" level="INFO">${CURR_VCARBAT} = 77</msg>
<msg timestamp="20190121 11:20:48.444" level="INFO">${CURR_KL30} = 81</msg>
<status starttime="20190121 11:20:48.125" endtime="20190121 11:20:48.445" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:48.479" endtime="20190121 11:20:48.741" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:48.743" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:20:48.448" endtime="20190121 11:20:48.743" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:48.761" endtime="20190121 11:20:48.779" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:48.786" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:48.815" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:48.782" endtime="20190121 11:20:48.816" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:48.883" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:20:48.878" endtime="20190121 11:20:48.884" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:48.905" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:48.887" endtime="20190121 11:20:48.906" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:48.856" endtime="20190121 11:20:48.909" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:48.910" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:48.819" endtime="20190121 11:20:48.911" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:48.927" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:48.920" endtime="20190121 11:20:48.939" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:48.942" endtime="20190121 11:20:48.958" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:49.965" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:48.961" endtime="20190121 11:20:49.970" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:48.123" endtime="20190121 11:20:49.972" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:50.075" level="INFO">${KLEMME30} = [[12225, 140], [102300, 148]]</msg>
<status starttime="20190121 11:20:49.996" endtime="20190121 11:20:50.082" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:50.175" level="INFO">${CURR_VCARBAT} = 140</msg>
<status starttime="20190121 11:20:50.085" endtime="20190121 11:20:50.176" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:50.248" level="INFO">${CURR_KL30} = 148</msg>
<status starttime="20190121 11:20:50.179" endtime="20190121 11:20:50.256" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:50.276" level="INFO">${TIMENOW} = 1548069650</msg>
<status starttime="20190121 11:20:50.263" endtime="20190121 11:20:50.277" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:50.289" level="INFO">${TIMENOW} = 1548069650</msg>
<msg timestamp="20190121 11:20:50.290" level="INFO">${CURR_VCARBAT} = 140</msg>
<msg timestamp="20190121 11:20:50.300" level="INFO">${CURR_KL30} = 148</msg>
<status starttime="20190121 11:20:49.975" endtime="20190121 11:20:50.301" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:50.316" endtime="20190121 11:20:50.558" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:50.560" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:20:50.304" endtime="20190121 11:20:50.561" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:50.564" endtime="20190121 11:20:50.571" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:50.578" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:50.580" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:50.574" endtime="20190121 11:20:50.581" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:50.604" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:20:50.599" endtime="20190121 11:20:50.605" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:50.613" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:50.607" endtime="20190121 11:20:50.614" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:50.590" endtime="20190121 11:20:50.617" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:50.618" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:50.583" endtime="20190121 11:20:50.619" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:50.629" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:50.622" endtime="20190121 11:20:50.630" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:50.633" endtime="20190121 11:20:50.639" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:51.646" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:50.642" endtime="20190121 11:20:51.648" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:49.973" endtime="20190121 11:20:51.649" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:51.722" level="INFO">${KLEMME30} = [[12200, 168], [12275, 178]]</msg>
<status starttime="20190121 11:20:51.659" endtime="20190121 11:20:51.723" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:51.759" level="INFO">${CURR_VCARBAT} = 168</msg>
<status starttime="20190121 11:20:51.727" endtime="20190121 11:20:51.760" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:51.796" level="INFO">${CURR_KL30} = 178</msg>
<status starttime="20190121 11:20:51.763" endtime="20190121 11:20:51.797" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:51.805" level="INFO">${TIMENOW} = 1548069651</msg>
<status starttime="20190121 11:20:51.800" endtime="20190121 11:20:51.805" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:51.810" level="INFO">${TIMENOW} = 1548069651</msg>
<msg timestamp="20190121 11:20:51.811" level="INFO">${CURR_VCARBAT} = 168</msg>
<msg timestamp="20190121 11:20:51.813" level="INFO">${CURR_KL30} = 178</msg>
<status starttime="20190121 11:20:51.653" endtime="20190121 11:20:51.814" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:51.823" endtime="20190121 11:20:52.090" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:52.092" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:20:51.817" endtime="20190121 11:20:52.092" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:52.095" endtime="20190121 11:20:52.101" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:52.108" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:52.110" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:52.104" endtime="20190121 11:20:52.111" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:52.134" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:20:52.129" endtime="20190121 11:20:52.135" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:52.143" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:52.138" endtime="20190121 11:20:52.144" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:52.120" endtime="20190121 11:20:52.147" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:52.149" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:52.114" endtime="20190121 11:20:52.150" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:52.159" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:52.153" endtime="20190121 11:20:52.160" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:52.163" endtime="20190121 11:20:52.170" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:53.176" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:52.172" endtime="20190121 11:20:53.178" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:51.650" endtime="20190121 11:20:53.179" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:53.238" level="INFO">${KLEMME30} = [[12225, 133], [12300, 141]]</msg>
<status starttime="20190121 11:20:53.189" endtime="20190121 11:20:53.239" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:53.277" level="INFO">${CURR_VCARBAT} = 133</msg>
<status starttime="20190121 11:20:53.242" endtime="20190121 11:20:53.278" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:53.314" level="INFO">${CURR_KL30} = 141</msg>
<status starttime="20190121 11:20:53.281" endtime="20190121 11:20:53.315" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:53.322" level="INFO">${TIMENOW} = 1548069653</msg>
<status starttime="20190121 11:20:53.318" endtime="20190121 11:20:53.323" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:53.328" level="INFO">${TIMENOW} = 1548069653</msg>
<msg timestamp="20190121 11:20:53.329" level="INFO">${CURR_VCARBAT} = 133</msg>
<msg timestamp="20190121 11:20:53.330" level="INFO">${CURR_KL30} = 141</msg>
<status starttime="20190121 11:20:53.183" endtime="20190121 11:20:53.331" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:53.339" endtime="20190121 11:20:53.553" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:53.555" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:20:53.334" endtime="20190121 11:20:53.556" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:53.559" endtime="20190121 11:20:53.565" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:53.572" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:53.574" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:53.568" endtime="20190121 11:20:53.575" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:53.599" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:20:53.594" endtime="20190121 11:20:53.600" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:53.608" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:53.602" endtime="20190121 11:20:53.609" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:53.585" endtime="20190121 11:20:53.612" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:53.613" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:53.578" endtime="20190121 11:20:53.614" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:53.624" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:53.617" endtime="20190121 11:20:53.625" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:53.628" endtime="20190121 11:20:53.634" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:54.641" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:53.637" endtime="20190121 11:20:54.643" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:53.181" endtime="20190121 11:20:54.644" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:54.702" level="INFO">${KLEMME30} = [[12225, 192], [12375, 184]]</msg>
<status starttime="20190121 11:20:54.653" endtime="20190121 11:20:54.703" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:54.739" level="INFO">${CURR_VCARBAT} = 192</msg>
<status starttime="20190121 11:20:54.707" endtime="20190121 11:20:54.740" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:54.777" level="INFO">${CURR_KL30} = 184</msg>
<status starttime="20190121 11:20:54.743" endtime="20190121 11:20:54.777" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:54.785" level="INFO">${TIMENOW} = 1548069654</msg>
<status starttime="20190121 11:20:54.780" endtime="20190121 11:20:54.785" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:54.791" level="INFO">${TIMENOW} = 1548069654</msg>
<msg timestamp="20190121 11:20:54.792" level="INFO">${CURR_VCARBAT} = 192</msg>
<msg timestamp="20190121 11:20:54.793" level="INFO">${CURR_KL30} = 184</msg>
<status starttime="20190121 11:20:54.647" endtime="20190121 11:20:54.794" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:54.822" endtime="20190121 11:20:55.037" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:55.039" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:20:54.797" endtime="20190121 11:20:55.039" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:55.042" endtime="20190121 11:20:55.048" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:55.055" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:55.058" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:55.051" endtime="20190121 11:20:55.058" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:55.082" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:20:55.077" endtime="20190121 11:20:55.083" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:55.091" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:55.086" endtime="20190121 11:20:55.092" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:55.069" endtime="20190121 11:20:55.095" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:55.097" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:55.062" endtime="20190121 11:20:55.098" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:55.107" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:55.100" endtime="20190121 11:20:55.108" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:55.111" endtime="20190121 11:20:55.117" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:56.125" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:55.121" endtime="20190121 11:20:56.127" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:54.645" endtime="20190121 11:20:56.128" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:56.269" level="INFO">${KLEMME30} = [[12200, 192], [12250, 203]]</msg>
<status starttime="20190121 11:20:56.140" endtime="20190121 11:20:56.270" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:56.349" level="INFO">${CURR_VCARBAT} = 192</msg>
<status starttime="20190121 11:20:56.293" endtime="20190121 11:20:56.350" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:56.387" level="INFO">${CURR_KL30} = 203</msg>
<status starttime="20190121 11:20:56.353" endtime="20190121 11:20:56.388" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:56.395" level="INFO">${TIMENOW} = 1548069656</msg>
<status starttime="20190121 11:20:56.391" endtime="20190121 11:20:56.396" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:56.401" level="INFO">${TIMENOW} = 1548069656</msg>
<msg timestamp="20190121 11:20:56.402" level="INFO">${CURR_VCARBAT} = 192</msg>
<msg timestamp="20190121 11:20:56.403" level="INFO">${CURR_KL30} = 203</msg>
<status starttime="20190121 11:20:56.131" endtime="20190121 11:20:56.404" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:56.412" endtime="20190121 11:20:56.617" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:56.619" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:20:56.407" endtime="20190121 11:20:56.620" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:56.623" endtime="20190121 11:20:56.628" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:56.636" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:56.638" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:56.631" endtime="20190121 11:20:56.639" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:56.664" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:20:56.658" endtime="20190121 11:20:56.665" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:56.673" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:56.668" endtime="20190121 11:20:56.674" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:56.649" endtime="20190121 11:20:56.677" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:56.679" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:56.642" endtime="20190121 11:20:56.680" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:56.689" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:56.682" endtime="20190121 11:20:56.690" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:56.693" endtime="20190121 11:20:56.699" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:57.706" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:56.702" endtime="20190121 11:20:57.708" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:56.129" endtime="20190121 11:20:57.709" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:57.767" level="INFO">${KLEMME30} = [[12200, 192], [12250, 204]]</msg>
<status starttime="20190121 11:20:57.718" endtime="20190121 11:20:57.769" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:57.809" level="INFO">${CURR_VCARBAT} = 192</msg>
<status starttime="20190121 11:20:57.772" endtime="20190121 11:20:57.810" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:57.847" level="INFO">${CURR_KL30} = 204</msg>
<status starttime="20190121 11:20:57.813" endtime="20190121 11:20:57.847" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:57.859" level="INFO">${TIMENOW} = 1548069657</msg>
<status starttime="20190121 11:20:57.850" endtime="20190121 11:20:57.859" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:57.866" level="INFO">${TIMENOW} = 1548069657</msg>
<msg timestamp="20190121 11:20:57.867" level="INFO">${CURR_VCARBAT} = 192</msg>
<msg timestamp="20190121 11:20:57.868" level="INFO">${CURR_KL30} = 204</msg>
<status starttime="20190121 11:20:57.712" endtime="20190121 11:20:57.869" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:57.877" endtime="20190121 11:20:58.093" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:58.095" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:20:57.872" endtime="20190121 11:20:58.096" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:58.099" endtime="20190121 11:20:58.104" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:58.112" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:58.114" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:58.107" endtime="20190121 11:20:58.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:58.138" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:20:58.133" endtime="20190121 11:20:58.139" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:58.147" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:58.141" endtime="20190121 11:20:58.147" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:58.124" endtime="20190121 11:20:58.150" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:58.152" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:58.118" endtime="20190121 11:20:58.153" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:58.163" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:58.156" endtime="20190121 11:20:58.163" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:58.166" endtime="20190121 11:20:58.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:20:59.180" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:58.176" endtime="20190121 11:20:59.182" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:57.710" endtime="20190121 11:20:59.183" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:20:59.241" level="INFO">${KLEMME30} = [[12200, 162], [12275, 172]]</msg>
<status starttime="20190121 11:20:59.192" endtime="20190121 11:20:59.242" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:20:59.304" level="INFO">${CURR_VCARBAT} = 162</msg>
<status starttime="20190121 11:20:59.246" endtime="20190121 11:20:59.309" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:20:59.459" level="INFO">${CURR_KL30} = 172</msg>
<status starttime="20190121 11:20:59.311" endtime="20190121 11:20:59.460" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:20:59.481" level="INFO">${TIMENOW} = 1548069659</msg>
<status starttime="20190121 11:20:59.463" endtime="20190121 11:20:59.482" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:59.487" level="INFO">${TIMENOW} = 1548069659</msg>
<msg timestamp="20190121 11:20:59.488" level="INFO">${CURR_VCARBAT} = 162</msg>
<msg timestamp="20190121 11:20:59.502" level="INFO">${CURR_KL30} = 172</msg>
<status starttime="20190121 11:20:59.186" endtime="20190121 11:20:59.503" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:20:59.512" endtime="20190121 11:20:59.743" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:59.746" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:20:59.506" endtime="20190121 11:20:59.747" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:20:59.750" endtime="20190121 11:20:59.755" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:20:59.762" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:20:59.764" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:20:59.758" endtime="20190121 11:20:59.765" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:20:59.801" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:20:59.787" endtime="20190121 11:20:59.802" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:20:59.815" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:20:59.809" endtime="20190121 11:20:59.816" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:59.777" endtime="20190121 11:20:59.819" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:20:59.821" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:20:59.768" endtime="20190121 11:20:59.822" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:20:59.832" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:59.825" endtime="20190121 11:20:59.833" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:20:59.836" endtime="20190121 11:20:59.842" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:00.855" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:20:59.845" endtime="20190121 11:21:00.857" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:59.184" endtime="20190121 11:21:00.858" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:00.982" level="INFO">${KLEMME30} = [[12200, 167], [12275, 162]]</msg>
<status starttime="20190121 11:21:00.898" endtime="20190121 11:21:00.983" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:01.026" level="INFO">${CURR_VCARBAT} = 167</msg>
<status starttime="20190121 11:21:00.986" endtime="20190121 11:21:01.027" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:01.063" level="INFO">${CURR_KL30} = 162</msg>
<status starttime="20190121 11:21:01.030" endtime="20190121 11:21:01.064" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:01.072" level="INFO">${TIMENOW} = 1548069661</msg>
<status starttime="20190121 11:21:01.067" endtime="20190121 11:21:01.072" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:01.077" level="INFO">${TIMENOW} = 1548069661</msg>
<msg timestamp="20190121 11:21:01.078" level="INFO">${CURR_VCARBAT} = 167</msg>
<msg timestamp="20190121 11:21:01.079" level="INFO">${CURR_KL30} = 162</msg>
<status starttime="20190121 11:21:00.861" endtime="20190121 11:21:01.080" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:01.089" endtime="20190121 11:21:01.300" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:01.303" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:21:01.083" endtime="20190121 11:21:01.304" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:01.306" endtime="20190121 11:21:01.312" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:01.319" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:01.321" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:01.315" endtime="20190121 11:21:01.322" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:01.345" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:21:01.340" endtime="20190121 11:21:01.346" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:01.357" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:01.349" endtime="20190121 11:21:01.358" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:01.331" endtime="20190121 11:21:01.362" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:01.364" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:01.325" endtime="20190121 11:21:01.364" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:01.375" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:01.367" endtime="20190121 11:21:01.376" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:01.379" endtime="20190121 11:21:01.386" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:02.393" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:01.389" endtime="20190121 11:21:02.395" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:00.859" endtime="20190121 11:21:02.396" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:02.454" level="INFO">${KLEMME30} = [[12200, 200], [12275, 211]]</msg>
<status starttime="20190121 11:21:02.406" endtime="20190121 11:21:02.455" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:02.492" level="INFO">${CURR_VCARBAT} = 200</msg>
<status starttime="20190121 11:21:02.459" endtime="20190121 11:21:02.493" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:02.529" level="INFO">${CURR_KL30} = 211</msg>
<status starttime="20190121 11:21:02.496" endtime="20190121 11:21:02.530" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:02.538" level="INFO">${TIMENOW} = 1548069662</msg>
<status starttime="20190121 11:21:02.533" endtime="20190121 11:21:02.538" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:02.543" level="INFO">${TIMENOW} = 1548069662</msg>
<msg timestamp="20190121 11:21:02.545" level="INFO">${CURR_VCARBAT} = 200</msg>
<msg timestamp="20190121 11:21:02.546" level="INFO">${CURR_KL30} = 211</msg>
<status starttime="20190121 11:21:02.399" endtime="20190121 11:21:02.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:02.555" endtime="20190121 11:21:02.767" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:02.770" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:21:02.550" endtime="20190121 11:21:02.771" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:02.774" endtime="20190121 11:21:02.779" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:02.787" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:02.789" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:02.782" endtime="20190121 11:21:02.789" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:02.812" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:21:02.807" endtime="20190121 11:21:02.813" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:02.821" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:02.816" endtime="20190121 11:21:02.822" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:02.799" endtime="20190121 11:21:02.825" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:02.827" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:02.792" endtime="20190121 11:21:02.827" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:02.837" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:02.830" endtime="20190121 11:21:02.838" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:02.841" endtime="20190121 11:21:02.847" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:03.854" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:02.850" endtime="20190121 11:21:03.856" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:02.397" endtime="20190121 11:21:03.856" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:03.921" level="INFO">${KLEMME30} = [[12200, 193], [12275, 192]]</msg>
<status starttime="20190121 11:21:03.866" endtime="20190121 11:21:03.922" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:03.961" level="INFO">${CURR_VCARBAT} = 193</msg>
<status starttime="20190121 11:21:03.925" endtime="20190121 11:21:03.962" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:03.999" level="INFO">${CURR_KL30} = 192</msg>
<status starttime="20190121 11:21:03.964" endtime="20190121 11:21:04.000" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:04.009" level="INFO">${TIMENOW} = 1548069664</msg>
<status starttime="20190121 11:21:04.004" endtime="20190121 11:21:04.010" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:04.015" level="INFO">${TIMENOW} = 1548069664</msg>
<msg timestamp="20190121 11:21:04.016" level="INFO">${CURR_VCARBAT} = 193</msg>
<msg timestamp="20190121 11:21:04.017" level="INFO">${CURR_KL30} = 192</msg>
<status starttime="20190121 11:21:03.860" endtime="20190121 11:21:04.018" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:04.026" endtime="20190121 11:21:04.246" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:04.247" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:21:04.021" endtime="20190121 11:21:04.249" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:04.252" endtime="20190121 11:21:04.258" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:04.265" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:04.267" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:04.261" endtime="20190121 11:21:04.268" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:04.291" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:21:04.286" endtime="20190121 11:21:04.292" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:04.300" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:04.295" endtime="20190121 11:21:04.301" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:04.278" endtime="20190121 11:21:04.305" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:04.307" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:04.271" endtime="20190121 11:21:04.307" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:04.318" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:04.310" endtime="20190121 11:21:04.319" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:04.322" endtime="20190121 11:21:04.328" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:05.335" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:04.331" endtime="20190121 11:21:05.337" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:03.858" endtime="20190121 11:21:05.338" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:05.398" level="INFO">${KLEMME30} = [[12200, 160], [12275, 204]]</msg>
<status starttime="20190121 11:21:05.348" endtime="20190121 11:21:05.399" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:05.435" level="INFO">${CURR_VCARBAT} = 160</msg>
<status starttime="20190121 11:21:05.403" endtime="20190121 11:21:05.436" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:05.472" level="INFO">${CURR_KL30} = 204</msg>
<status starttime="20190121 11:21:05.439" endtime="20190121 11:21:05.473" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:05.481" level="INFO">${TIMENOW} = 1548069665</msg>
<status starttime="20190121 11:21:05.476" endtime="20190121 11:21:05.481" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:05.486" level="INFO">${TIMENOW} = 1548069665</msg>
<msg timestamp="20190121 11:21:05.487" level="INFO">${CURR_VCARBAT} = 160</msg>
<msg timestamp="20190121 11:21:05.488" level="INFO">${CURR_KL30} = 204</msg>
<status starttime="20190121 11:21:05.341" endtime="20190121 11:21:05.489" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:05.498" endtime="20190121 11:21:05.719" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:05.725" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:21:05.492" endtime="20190121 11:21:05.726" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:05.733" endtime="20190121 11:21:05.743" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:05.759" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:05.765" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:05.746" endtime="20190121 11:21:05.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:05.823" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:21:05.814" endtime="20190121 11:21:05.824" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:05.845" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:05.831" endtime="20190121 11:21:05.846" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:05.792" endtime="20190121 11:21:05.854" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:05.855" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:05.776" endtime="20190121 11:21:05.861" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:05.879" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:05.864" endtime="20190121 11:21:05.884" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:05.887" endtime="20190121 11:21:05.902" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:06.922" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:05.909" endtime="20190121 11:21:06.924" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:05.339" endtime="20190121 11:21:06.925" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:07.003" level="INFO">${KLEMME30} = [[12200, 184], [0, 0]]</msg>
<status starttime="20190121 11:21:06.935" endtime="20190121 11:21:07.005" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:07.041" level="INFO">${CURR_VCARBAT} = 184</msg>
<status starttime="20190121 11:21:07.008" endtime="20190121 11:21:07.042" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:07.077" level="INFO">${CURR_KL30} = 0</msg>
<status starttime="20190121 11:21:07.044" endtime="20190121 11:21:07.078" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:07.086" level="INFO">${TIMENOW} = 1548069667</msg>
<status starttime="20190121 11:21:07.081" endtime="20190121 11:21:07.086" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:07.091" level="INFO">${TIMENOW} = 1548069667</msg>
<msg timestamp="20190121 11:21:07.092" level="INFO">${CURR_VCARBAT} = 184</msg>
<msg timestamp="20190121 11:21:07.094" level="INFO">${CURR_KL30} = 0</msg>
<status starttime="20190121 11:21:06.928" endtime="20190121 11:21:07.094" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:07.103" endtime="20190121 11:21:07.353" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:07.355" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:21:07.098" endtime="20190121 11:21:07.386" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:07.401" endtime="20190121 11:21:07.447" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:07.493" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:07.495" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:07.477" endtime="20190121 11:21:07.517" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:07.631" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:21:07.614" endtime="20190121 11:21:07.635" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:07.656" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:07.638" endtime="20190121 11:21:07.657" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:07.572" endtime="20190121 11:21:07.661" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:07.662" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:07.520" endtime="20190121 11:21:07.663" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:07.690" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:07.670" endtime="20190121 11:21:07.690" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:07.698" endtime="20190121 11:21:07.753" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:08.776" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:07.759" endtime="20190121 11:21:08.778" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:06.926" endtime="20190121 11:21:08.779" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:08.936" level="INFO">${KLEMME30} = [[12200, 158], [12275, 162]]</msg>
<status starttime="20190121 11:21:08.803" endtime="20190121 11:21:08.940" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:09.074" level="INFO">${CURR_VCARBAT} = 158</msg>
<status starttime="20190121 11:21:08.943" endtime="20190121 11:21:09.075" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:09.208" level="INFO">${CURR_KL30} = 162</msg>
<status starttime="20190121 11:21:09.081" endtime="20190121 11:21:09.209" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:09.242" level="INFO">${TIMENOW} = 1548069669</msg>
<status starttime="20190121 11:21:09.212" endtime="20190121 11:21:09.243" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:09.279" level="INFO">${TIMENOW} = 1548069669</msg>
<msg timestamp="20190121 11:21:09.281" level="INFO">${CURR_VCARBAT} = 158</msg>
<msg timestamp="20190121 11:21:09.282" level="INFO">${CURR_KL30} = 162</msg>
<status starttime="20190121 11:21:08.796" endtime="20190121 11:21:09.282" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:09.349" endtime="20190121 11:21:09.626" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:09.628" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:21:09.288" endtime="20190121 11:21:09.629" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:09.632" endtime="20190121 11:21:09.664" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:09.672" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:09.683" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:09.667" endtime="20190121 11:21:09.684" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:09.738" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:21:09.734" endtime="20190121 11:21:09.739" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:09.761" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:09.755" endtime="20190121 11:21:09.762" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:09.707" endtime="20190121 11:21:09.774" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:09.776" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:09.687" endtime="20190121 11:21:09.778" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:09.829" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:09.781" endtime="20190121 11:21:09.830" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:09.833" endtime="20190121 11:21:09.860" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:10.880" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:09.871" endtime="20190121 11:21:10.883" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:08.781" endtime="20190121 11:21:10.883" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:11.013" level="INFO">${KLEMME30} = [[12225, 128], [12275, 129]]</msg>
<status starttime="20190121 11:21:10.912" endtime="20190121 11:21:11.014" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:11.111" level="INFO">${CURR_VCARBAT} = 128</msg>
<status starttime="20190121 11:21:11.041" endtime="20190121 11:21:11.112" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:11.201" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:11.123" endtime="20190121 11:21:11.202" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:11.211" level="INFO">${TIMENOW} = 1548069671</msg>
<status starttime="20190121 11:21:11.206" endtime="20190121 11:21:11.211" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:11.241" level="INFO">${TIMENOW} = 1548069671</msg>
<msg timestamp="20190121 11:21:11.243" level="INFO">${CURR_VCARBAT} = 128</msg>
<msg timestamp="20190121 11:21:11.244" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:10.904" endtime="20190121 11:21:11.245" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:11.267" endtime="20190121 11:21:11.534" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:11.537" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:21:11.262" endtime="20190121 11:21:11.538" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:11.582" endtime="20190121 11:21:11.594" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:11.602" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:11.615" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:11.598" endtime="20190121 11:21:11.616" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:11.666" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:21:11.661" endtime="20190121 11:21:11.688" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:11.707" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:11.691" endtime="20190121 11:21:11.708" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:11.646" endtime="20190121 11:21:11.711" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:11.713" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:11.619" endtime="20190121 11:21:11.714" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:11.730" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:11.723" endtime="20190121 11:21:11.741" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:11.746" endtime="20190121 11:21:11.762" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:12.774" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:11.764" endtime="20190121 11:21:12.776" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:10.885" endtime="20190121 11:21:12.777" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:12.877" level="INFO">${KLEMME30} = [[12225, 120], [12300, 132]]</msg>
<status starttime="20190121 11:21:12.795" endtime="20190121 11:21:12.878" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:12.969" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:12.881" endtime="20190121 11:21:12.977" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:13.096" level="INFO">${CURR_KL30} = 132</msg>
<status starttime="20190121 11:21:12.980" endtime="20190121 11:21:13.097" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:13.110" level="INFO">${TIMENOW} = 1548069673</msg>
<status starttime="20190121 11:21:13.106" endtime="20190121 11:21:13.111" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:13.128" level="INFO">${TIMENOW} = 1548069673</msg>
<msg timestamp="20190121 11:21:13.129" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:13.130" level="INFO">${CURR_KL30} = 132</msg>
<status starttime="20190121 11:21:12.781" endtime="20190121 11:21:13.131" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:13.161" endtime="20190121 11:21:13.451" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:13.476" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:21:13.154" endtime="20190121 11:21:13.478" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:13.481" endtime="20190121 11:21:13.501" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:13.509" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:13.538" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:13.505" endtime="20190121 11:21:13.539" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:13.655" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:21:13.650" endtime="20190121 11:21:13.657" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:13.686" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:13.680" endtime="20190121 11:21:13.686" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:13.602" endtime="20190121 11:21:13.694" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:13.695" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:13.593" endtime="20190121 11:21:13.696" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:13.727" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:13.699" endtime="20190121 11:21:13.727" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:13.730" endtime="20190121 11:21:13.743" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:14.776" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:13.746" endtime="20190121 11:21:14.778" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:12.779" endtime="20190121 11:21:14.779" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:14.909" level="INFO">${KLEMME30} = [[12225, 124], [12300, 130]]</msg>
<status starttime="20190121 11:21:14.806" endtime="20190121 11:21:14.910" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:15.064" level="INFO">${CURR_VCARBAT} = 124</msg>
<status starttime="20190121 11:21:14.913" endtime="20190121 11:21:15.066" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:15.161" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:21:15.099" endtime="20190121 11:21:15.162" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:15.176" level="INFO">${TIMENOW} = 1548069675</msg>
<status starttime="20190121 11:21:15.171" endtime="20190121 11:21:15.177" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:15.193" level="INFO">${TIMENOW} = 1548069675</msg>
<msg timestamp="20190121 11:21:15.194" level="INFO">${CURR_VCARBAT} = 124</msg>
<msg timestamp="20190121 11:21:15.195" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:21:14.783" endtime="20190121 11:21:15.196" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:15.231" endtime="20190121 11:21:15.503" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:15.505" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:21:15.199" endtime="20190121 11:21:15.506" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:15.509" endtime="20190121 11:21:15.534" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:15.575" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:15.583" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:15.537" endtime="20190121 11:21:15.583" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:15.649" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:21:15.638" endtime="20190121 11:21:15.650" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:15.669" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:15.653" endtime="20190121 11:21:15.670" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:15.609" endtime="20190121 11:21:15.673" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:15.675" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:15.602" endtime="20190121 11:21:15.693" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:15.712" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:15.696" endtime="20190121 11:21:15.713" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:15.729" endtime="20190121 11:21:15.736" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:16.751" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:15.746" endtime="20190121 11:21:16.753" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:14.781" endtime="20190121 11:21:16.754" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:16.812" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:21:16.763" endtime="20190121 11:21:16.813" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:16.849" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:16.816" endtime="20190121 11:21:16.850" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:16.904" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:16.852" endtime="20190121 11:21:16.905" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:16.913" level="INFO">${TIMENOW} = 1548069676</msg>
<status starttime="20190121 11:21:16.908" endtime="20190121 11:21:16.913" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:16.918" level="INFO">${TIMENOW} = 1548069676</msg>
<msg timestamp="20190121 11:21:16.919" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:16.921" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:16.757" endtime="20190121 11:21:16.922" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:16.930" endtime="20190121 11:21:17.125" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:17.127" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:21:16.925" endtime="20190121 11:21:17.128" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:17.131" endtime="20190121 11:21:17.136" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:17.143" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:17.145" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:17.139" endtime="20190121 11:21:17.146" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:17.170" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:21:17.165" endtime="20190121 11:21:17.171" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:17.179" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:17.174" endtime="20190121 11:21:17.180" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:17.156" endtime="20190121 11:21:17.183" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:17.185" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:17.149" endtime="20190121 11:21:17.186" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:17.195" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:17.188" endtime="20190121 11:21:17.196" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:17.201" endtime="20190121 11:21:17.207" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:18.214" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:17.210" endtime="20190121 11:21:18.216" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:16.755" endtime="20190121 11:21:18.217" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:18.281" level="INFO">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status starttime="20190121 11:21:18.227" endtime="20190121 11:21:18.282" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:18.321" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:18.286" endtime="20190121 11:21:18.321" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:18.358" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:18.324" endtime="20190121 11:21:18.359" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:18.367" level="INFO">${TIMENOW} = 1548069678</msg>
<status starttime="20190121 11:21:18.362" endtime="20190121 11:21:18.368" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:18.373" level="INFO">${TIMENOW} = 1548069678</msg>
<msg timestamp="20190121 11:21:18.374" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:18.375" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:18.221" endtime="20190121 11:21:18.376" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:18.384" endtime="20190121 11:21:18.609" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:18.612" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:21:18.379" endtime="20190121 11:21:18.613" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:18.616" endtime="20190121 11:21:18.621" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:18.629" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:18.630" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:18.624" endtime="20190121 11:21:18.631" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:18.654" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:21:18.649" endtime="20190121 11:21:18.655" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:18.663" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:18.658" endtime="20190121 11:21:18.664" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:18.641" endtime="20190121 11:21:18.667" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:18.669" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:18.634" endtime="20190121 11:21:18.670" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:18.679" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:18.672" endtime="20190121 11:21:18.680" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:18.683" endtime="20190121 11:21:18.689" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:19.696" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:18.692" endtime="20190121 11:21:19.698" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:18.218" endtime="20190121 11:21:19.699" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:19.758" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:21:19.709" endtime="20190121 11:21:19.759" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:19.797" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:19.762" endtime="20190121 11:21:19.797" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:19.834" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:19.800" endtime="20190121 11:21:19.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:19.842" level="INFO">${TIMENOW} = 1548069679</msg>
<status starttime="20190121 11:21:19.838" endtime="20190121 11:21:19.843" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:19.848" level="INFO">${TIMENOW} = 1548069679</msg>
<msg timestamp="20190121 11:21:19.849" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:19.850" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:19.702" endtime="20190121 11:21:19.851" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:19.859" endtime="20190121 11:21:20.082" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:20.085" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:21:19.854" endtime="20190121 11:21:20.086" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:20.089" endtime="20190121 11:21:20.094" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:20.103" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:20.105" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:20.098" endtime="20190121 11:21:20.106" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:20.129" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:21:20.125" endtime="20190121 11:21:20.130" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:20.138" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:20.133" endtime="20190121 11:21:20.139" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:20.116" endtime="20190121 11:21:20.142" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:20.144" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:20.109" endtime="20190121 11:21:20.145" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:20.154" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:20.147" endtime="20190121 11:21:20.155" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:20.158" endtime="20190121 11:21:20.164" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:21.171" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:20.167" endtime="20190121 11:21:21.173" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:19.700" endtime="20190121 11:21:21.174" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:21.255" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status starttime="20190121 11:21:21.184" endtime="20190121 11:21:21.256" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:21.329" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:21:21.259" endtime="20190121 11:21:21.330" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:21.439" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:21.333" endtime="20190121 11:21:21.450" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:21.457" level="INFO">${TIMENOW} = 1548069681</msg>
<status starttime="20190121 11:21:21.453" endtime="20190121 11:21:21.458" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:21.476" level="INFO">${TIMENOW} = 1548069681</msg>
<msg timestamp="20190121 11:21:21.477" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:21:21.478" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:21.177" endtime="20190121 11:21:21.479" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:21.500" endtime="20190121 11:21:21.739" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:21.743" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:21:21.482" endtime="20190121 11:21:21.744" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:21.747" endtime="20190121 11:21:21.752" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:21.759" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:21.761" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:21.755" endtime="20190121 11:21:21.762" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:21.785" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:21:21.780" endtime="20190121 11:21:21.786" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:21.804" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:21.789" endtime="20190121 11:21:21.809" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:21.772" endtime="20190121 11:21:21.812" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:21.817" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:21.765" endtime="20190121 11:21:21.818" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:21.838" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:21.826" endtime="20190121 11:21:21.839" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:21.842" endtime="20190121 11:21:21.848" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:22.861" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:21.851" endtime="20190121 11:21:22.863" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:21.175" endtime="20190121 11:21:22.864" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:22.931" level="INFO">${KLEMME30} = [[12225, 126], [12300, 132]]</msg>
<status starttime="20190121 11:21:22.878" endtime="20190121 11:21:22.933" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:22.976" level="INFO">${CURR_VCARBAT} = 126</msg>
<status starttime="20190121 11:21:22.936" endtime="20190121 11:21:22.977" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:23.050" level="INFO">${CURR_KL30} = 132</msg>
<status starttime="20190121 11:21:22.979" endtime="20190121 11:21:23.051" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:23.058" level="INFO">${TIMENOW} = 1548069683</msg>
<status starttime="20190121 11:21:23.054" endtime="20190121 11:21:23.059" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:23.068" level="INFO">${TIMENOW} = 1548069683</msg>
<msg timestamp="20190121 11:21:23.069" level="INFO">${CURR_VCARBAT} = 126</msg>
<msg timestamp="20190121 11:21:23.070" level="INFO">${CURR_KL30} = 132</msg>
<status starttime="20190121 11:21:22.871" endtime="20190121 11:21:23.071" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:23.092" endtime="20190121 11:21:23.333" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:23.335" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:21:23.082" endtime="20190121 11:21:23.336" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:23.339" endtime="20190121 11:21:23.344" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:23.351" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:23.354" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:23.347" endtime="20190121 11:21:23.354" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:23.378" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:21:23.373" endtime="20190121 11:21:23.379" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:23.387" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:23.382" endtime="20190121 11:21:23.388" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:23.364" endtime="20190121 11:21:23.391" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:23.393" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:23.357" endtime="20190121 11:21:23.394" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:23.403" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:23.397" endtime="20190121 11:21:23.404" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:23.407" endtime="20190121 11:21:23.413" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:24.420" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:23.416" endtime="20190121 11:21:24.422" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:22.869" endtime="20190121 11:21:24.423" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:24.522" level="INFO">${KLEMME30} = [[12225, 120], [12300, 132]]</msg>
<status starttime="20190121 11:21:24.445" endtime="20190121 11:21:24.523" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:24.582" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:24.534" endtime="20190121 11:21:24.583" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:24.631" level="INFO">${CURR_KL30} = 132</msg>
<status starttime="20190121 11:21:24.588" endtime="20190121 11:21:24.637" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:24.653" level="INFO">${TIMENOW} = 1548069684</msg>
<status starttime="20190121 11:21:24.640" endtime="20190121 11:21:24.654" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:24.663" level="INFO">${TIMENOW} = 1548069684</msg>
<msg timestamp="20190121 11:21:24.669" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:24.670" level="INFO">${CURR_KL30} = 132</msg>
<status starttime="20190121 11:21:24.431" endtime="20190121 11:21:24.672" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:24.692" endtime="20190121 11:21:24.929" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:24.931" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:21:24.679" endtime="20190121 11:21:24.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:24.935" endtime="20190121 11:21:24.941" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:24.948" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:24.950" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:24.944" endtime="20190121 11:21:24.951" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:24.975" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:21:24.969" endtime="20190121 11:21:24.976" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:24.984" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:24.979" endtime="20190121 11:21:24.985" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:24.960" endtime="20190121 11:21:24.988" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:24.990" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:24.954" endtime="20190121 11:21:24.992" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:25.002" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:24.995" endtime="20190121 11:21:25.003" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:25.006" endtime="20190121 11:21:25.013" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:26.020" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:25.016" endtime="20190121 11:21:26.022" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:24.429" endtime="20190121 11:21:26.023" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:26.114" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:21:26.039" endtime="20190121 11:21:26.114" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:26.165" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:26.118" endtime="20190121 11:21:26.165" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:26.201" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:26.168" endtime="20190121 11:21:26.202" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:26.210" level="INFO">${TIMENOW} = 1548069686</msg>
<status starttime="20190121 11:21:26.205" endtime="20190121 11:21:26.210" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:26.218" level="INFO">${TIMENOW} = 1548069686</msg>
<msg timestamp="20190121 11:21:26.220" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:26.222" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:26.031" endtime="20190121 11:21:26.223" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:26.249" endtime="20190121 11:21:26.487" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:26.490" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:21:26.230" endtime="20190121 11:21:26.491" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:26.493" endtime="20190121 11:21:26.500" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:26.507" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:26.509" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:26.503" endtime="20190121 11:21:26.510" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:26.534" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:21:26.529" endtime="20190121 11:21:26.534" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:26.543" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:26.537" endtime="20190121 11:21:26.543" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:26.520" endtime="20190121 11:21:26.546" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:26.548" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:26.513" endtime="20190121 11:21:26.549" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:26.559" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:26.552" endtime="20190121 11:21:26.559" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:26.562" endtime="20190121 11:21:26.569" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:27.575" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:26.571" endtime="20190121 11:21:27.578" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:26.028" endtime="20190121 11:21:27.578" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:27.641" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:21:27.588" endtime="20190121 11:21:27.642" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:27.678" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:27.645" endtime="20190121 11:21:27.679" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:27.714" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:27.682" endtime="20190121 11:21:27.715" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:27.723" level="INFO">${TIMENOW} = 1548069687</msg>
<status starttime="20190121 11:21:27.718" endtime="20190121 11:21:27.723" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:27.728" level="INFO">${TIMENOW} = 1548069687</msg>
<msg timestamp="20190121 11:21:27.729" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:27.730" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:27.582" endtime="20190121 11:21:27.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:27.740" endtime="20190121 11:21:27.961" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:27.963" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:21:27.734" endtime="20190121 11:21:27.965" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:27.968" endtime="20190121 11:21:27.973" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:27.981" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:27.984" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:27.977" endtime="20190121 11:21:27.985" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:28.010" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:21:28.005" endtime="20190121 11:21:28.011" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:28.019" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:28.014" endtime="20190121 11:21:28.020" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:27.995" endtime="20190121 11:21:28.023" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:28.026" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:27.989" endtime="20190121 11:21:28.027" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:28.037" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:28.030" endtime="20190121 11:21:28.038" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:28.040" endtime="20190121 11:21:28.047" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:29.053" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:28.049" endtime="20190121 11:21:29.055" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:27.580" endtime="20190121 11:21:29.056" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:29.115" level="INFO">${KLEMME30} = [[12225, 121], [12300, 129]]</msg>
<status starttime="20190121 11:21:29.066" endtime="20190121 11:21:29.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:29.153" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:21:29.119" endtime="20190121 11:21:29.154" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:29.190" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:29.157" endtime="20190121 11:21:29.191" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:29.198" level="INFO">${TIMENOW} = 1548069689</msg>
<status starttime="20190121 11:21:29.193" endtime="20190121 11:21:29.199" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:29.203" level="INFO">${TIMENOW} = 1548069689</msg>
<msg timestamp="20190121 11:21:29.205" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:21:29.206" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:29.060" endtime="20190121 11:21:29.206" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:29.215" endtime="20190121 11:21:29.439" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:29.441" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:21:29.210" endtime="20190121 11:21:29.442" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:29.445" endtime="20190121 11:21:29.451" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:29.458" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:29.460" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:29.454" endtime="20190121 11:21:29.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:29.484" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:21:29.479" endtime="20190121 11:21:29.484" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:29.493" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:29.487" endtime="20190121 11:21:29.494" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:29.470" endtime="20190121 11:21:29.497" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:29.498" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:29.464" endtime="20190121 11:21:29.499" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:29.509" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:29.502" endtime="20190121 11:21:29.510" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:29.512" endtime="20190121 11:21:29.519" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:30.525" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:29.521" endtime="20190121 11:21:30.527" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:29.058" endtime="20190121 11:21:30.528" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:30.591" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status starttime="20190121 11:21:30.538" endtime="20190121 11:21:30.593" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:30.629" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:21:30.596" endtime="20190121 11:21:30.630" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:30.666" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:30.633" endtime="20190121 11:21:30.667" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:30.674" level="INFO">${TIMENOW} = 1548069690</msg>
<status starttime="20190121 11:21:30.670" endtime="20190121 11:21:30.675" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:30.680" level="INFO">${TIMENOW} = 1548069690</msg>
<msg timestamp="20190121 11:21:30.681" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:21:30.682" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:30.532" endtime="20190121 11:21:30.683" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:30.691" endtime="20190121 11:21:30.917" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:30.919" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:21:30.686" endtime="20190121 11:21:30.922" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:30.925" endtime="20190121 11:21:30.930" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:30.938" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:30.940" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:30.933" endtime="20190121 11:21:30.941" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:30.964" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:21:30.959" endtime="20190121 11:21:30.965" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:30.973" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:30.968" endtime="20190121 11:21:30.974" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:30.951" endtime="20190121 11:21:30.977" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:30.979" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:30.944" endtime="20190121 11:21:30.979" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:30.989" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:30.982" endtime="20190121 11:21:30.990" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:30.993" endtime="20190121 11:21:30.999" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:32.006" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:31.002" endtime="20190121 11:21:32.009" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:30.530" endtime="20190121 11:21:32.010" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:32.069" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:21:32.019" endtime="20190121 11:21:32.070" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:32.105" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:32.073" endtime="20190121 11:21:32.105" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:32.141" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:32.108" endtime="20190121 11:21:32.142" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:32.149" level="INFO">${TIMENOW} = 1548069692</msg>
<status starttime="20190121 11:21:32.145" endtime="20190121 11:21:32.150" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:32.155" level="INFO">${TIMENOW} = 1548069692</msg>
<msg timestamp="20190121 11:21:32.156" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:32.157" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:32.013" endtime="20190121 11:21:32.158" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:32.166" endtime="20190121 11:21:32.361" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:32.363" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:21:32.161" endtime="20190121 11:21:32.365" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:32.369" endtime="20190121 11:21:32.374" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:32.382" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:32.384" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:32.377" endtime="20190121 11:21:32.385" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:32.409" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:21:32.403" endtime="20190121 11:21:32.410" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:32.418" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:32.413" endtime="20190121 11:21:32.419" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:32.395" endtime="20190121 11:21:32.422" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:32.424" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:32.388" endtime="20190121 11:21:32.425" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:32.434" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:32.427" endtime="20190121 11:21:32.435" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:32.438" endtime="20190121 11:21:32.445" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:33.451" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:32.447" endtime="20190121 11:21:33.453" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:32.011" endtime="20190121 11:21:33.454" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:33.520" level="INFO">${KLEMME30} = [[12225, 122], [12300, 133]]</msg>
<status starttime="20190121 11:21:33.464" endtime="20190121 11:21:33.521" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:33.567" level="INFO">${CURR_VCARBAT} = 122</msg>
<status starttime="20190121 11:21:33.524" endtime="20190121 11:21:33.568" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:33.607" level="INFO">${CURR_KL30} = 133</msg>
<status starttime="20190121 11:21:33.571" endtime="20190121 11:21:33.608" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:33.615" level="INFO">${TIMENOW} = 1548069693</msg>
<status starttime="20190121 11:21:33.611" endtime="20190121 11:21:33.616" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:33.621" level="INFO">${TIMENOW} = 1548069693</msg>
<msg timestamp="20190121 11:21:33.622" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190121 11:21:33.623" level="INFO">${CURR_KL30} = 133</msg>
<status starttime="20190121 11:21:33.458" endtime="20190121 11:21:33.624" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:33.633" endtime="20190121 11:21:33.853" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:33.855" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:21:33.627" endtime="20190121 11:21:33.856" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:33.859" endtime="20190121 11:21:33.865" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:33.872" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:33.874" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:33.868" endtime="20190121 11:21:33.875" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:33.898" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:21:33.893" endtime="20190121 11:21:33.898" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:33.908" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:33.901" endtime="20190121 11:21:33.909" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:33.884" endtime="20190121 11:21:33.912" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:33.913" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:33.878" endtime="20190121 11:21:33.914" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:33.924" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:33.917" endtime="20190121 11:21:33.925" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:33.928" endtime="20190121 11:21:33.934" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:34.941" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:33.937" endtime="20190121 11:21:34.943" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:33.456" endtime="20190121 11:21:34.943" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:35.002" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status starttime="20190121 11:21:34.954" endtime="20190121 11:21:35.003" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:35.039" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:21:35.007" endtime="20190121 11:21:35.040" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:35.079" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:35.043" endtime="20190121 11:21:35.081" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:35.088" level="INFO">${TIMENOW} = 1548069695</msg>
<status starttime="20190121 11:21:35.084" endtime="20190121 11:21:35.089" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:35.094" level="INFO">${TIMENOW} = 1548069695</msg>
<msg timestamp="20190121 11:21:35.095" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:21:35.096" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:34.947" endtime="20190121 11:21:35.097" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:35.106" endtime="20190121 11:21:35.327" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:35.329" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:21:35.100" endtime="20190121 11:21:35.330" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:35.333" endtime="20190121 11:21:35.338" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:35.346" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:35.348" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:35.341" endtime="20190121 11:21:35.349" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:35.372" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:21:35.367" endtime="20190121 11:21:35.373" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:35.382" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:35.376" endtime="20190121 11:21:35.383" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:35.359" endtime="20190121 11:21:35.386" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:35.387" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:35.352" endtime="20190121 11:21:35.388" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:35.398" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:35.391" endtime="20190121 11:21:35.399" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:35.402" endtime="20190121 11:21:35.408" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:36.414" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:35.410" endtime="20190121 11:21:36.417" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:34.945" endtime="20190121 11:21:36.417" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:36.482" level="INFO">${KLEMME30} = [[12225, 127], [12300, 129]]</msg>
<status starttime="20190121 11:21:36.428" endtime="20190121 11:21:36.483" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:36.519" level="INFO">${CURR_VCARBAT} = 127</msg>
<status starttime="20190121 11:21:36.486" endtime="20190121 11:21:36.520" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:36.555" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:36.523" endtime="20190121 11:21:36.556" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:36.564" level="INFO">${TIMENOW} = 1548069696</msg>
<status starttime="20190121 11:21:36.559" endtime="20190121 11:21:36.564" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:36.569" level="INFO">${TIMENOW} = 1548069696</msg>
<msg timestamp="20190121 11:21:36.570" level="INFO">${CURR_VCARBAT} = 127</msg>
<msg timestamp="20190121 11:21:36.572" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:36.421" endtime="20190121 11:21:36.573" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:36.581" endtime="20190121 11:21:36.847" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:36.849" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:21:36.576" endtime="20190121 11:21:36.850" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:36.853" endtime="20190121 11:21:36.890" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:36.898" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:36.900" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:36.893" endtime="20190121 11:21:36.901" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:36.949" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:21:36.944" endtime="20190121 11:21:36.970" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:36.990" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:36.973" endtime="20190121 11:21:36.991" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:36.923" endtime="20190121 11:21:36.994" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:36.996" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:36.916" endtime="20190121 11:21:36.997" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:37.027" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:37.008" endtime="20190121 11:21:37.028" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:37.031" endtime="20190121 11:21:37.076" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:38.083" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:37.079" endtime="20190121 11:21:38.085" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:36.419" endtime="20190121 11:21:38.086" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:38.148" level="INFO">${KLEMME30} = [[12225, 121], [12300, 129]]</msg>
<status starttime="20190121 11:21:38.096" endtime="20190121 11:21:38.149" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:38.189" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:21:38.152" endtime="20190121 11:21:38.190" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:38.239" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:38.193" endtime="20190121 11:21:38.240" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:38.259" level="INFO">${TIMENOW} = 1548069698</msg>
<status starttime="20190121 11:21:38.254" endtime="20190121 11:21:38.260" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:38.280" level="INFO">${TIMENOW} = 1548069698</msg>
<msg timestamp="20190121 11:21:38.281" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:21:38.282" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:38.089" endtime="20190121 11:21:38.284" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:38.321" endtime="20190121 11:21:38.599" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:38.605" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:21:38.287" endtime="20190121 11:21:38.606" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:38.609" endtime="20190121 11:21:38.640" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:38.648" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:38.662" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:38.643" endtime="20190121 11:21:38.663" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:38.719" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:21:38.714" endtime="20190121 11:21:38.720" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:38.735" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:38.723" endtime="20190121 11:21:38.736" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:38.684" endtime="20190121 11:21:38.746" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:38.748" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:38.666" endtime="20190121 11:21:38.749" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:38.772" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:38.752" endtime="20190121 11:21:38.773" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:38.777" endtime="20190121 11:21:38.824" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:39.833" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:38.827" endtime="20190121 11:21:39.835" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:38.087" endtime="20190121 11:21:39.836" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:39.901" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:21:39.846" endtime="20190121 11:21:39.902" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:39.937" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:39.904" endtime="20190121 11:21:39.938" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:39.973" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:39.940" endtime="20190121 11:21:39.974" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:39.981" level="INFO">${TIMENOW} = 1548069699</msg>
<status starttime="20190121 11:21:39.977" endtime="20190121 11:21:39.982" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:39.987" level="INFO">${TIMENOW} = 1548069699</msg>
<msg timestamp="20190121 11:21:39.988" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:39.990" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:39.839" endtime="20190121 11:21:39.991" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:39.999" endtime="20190121 11:21:40.221" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:40.223" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:21:39.994" endtime="20190121 11:21:40.223" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:40.227" endtime="20190121 11:21:40.235" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:40.242" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:40.244" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:40.238" endtime="20190121 11:21:40.245" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:40.271" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:21:40.266" endtime="20190121 11:21:40.271" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:40.281" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:40.274" endtime="20190121 11:21:40.282" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:40.257" endtime="20190121 11:21:40.285" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:40.286" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:40.248" endtime="20190121 11:21:40.287" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:40.297" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:40.290" endtime="20190121 11:21:40.298" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:40.301" endtime="20190121 11:21:40.307" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:41.314" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:40.310" endtime="20190121 11:21:41.316" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:39.837" endtime="20190121 11:21:41.317" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:41.386" level="INFO">${KLEMME30} = [[12225, 121], [0, 0]]</msg>
<status starttime="20190121 11:21:41.327" endtime="20190121 11:21:41.387" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:41.423" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:21:41.390" endtime="20190121 11:21:41.424" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:41.460" level="INFO">${CURR_KL30} = 0</msg>
<status starttime="20190121 11:21:41.427" endtime="20190121 11:21:41.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:41.469" level="INFO">${TIMENOW} = 1548069701</msg>
<status starttime="20190121 11:21:41.464" endtime="20190121 11:21:41.469" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:41.474" level="INFO">${TIMENOW} = 1548069701</msg>
<msg timestamp="20190121 11:21:41.475" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:21:41.477" level="INFO">${CURR_KL30} = 0</msg>
<status starttime="20190121 11:21:41.320" endtime="20190121 11:21:41.477" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:41.486" endtime="20190121 11:21:41.705" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:41.707" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:21:41.480" endtime="20190121 11:21:41.708" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:41.711" endtime="20190121 11:21:41.717" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:41.724" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:41.726" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:41.720" endtime="20190121 11:21:41.727" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:41.750" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:21:41.745" endtime="20190121 11:21:41.751" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:41.759" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:41.754" endtime="20190121 11:21:41.760" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:41.737" endtime="20190121 11:21:41.763" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:41.765" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:41.730" endtime="20190121 11:21:41.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:41.776" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:41.769" endtime="20190121 11:21:41.777" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:41.780" endtime="20190121 11:21:41.786" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:42.793" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:41.789" endtime="20190121 11:21:42.795" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:41.318" endtime="20190121 11:21:42.795" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:42.858" level="INFO">${KLEMME30} = [[12225, 123], [12300, 129]]</msg>
<status starttime="20190121 11:21:42.805" endtime="20190121 11:21:42.861" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:42.896" level="INFO">${CURR_VCARBAT} = 123</msg>
<status starttime="20190121 11:21:42.863" endtime="20190121 11:21:42.897" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:42.934" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:42.900" endtime="20190121 11:21:42.935" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:42.943" level="INFO">${TIMENOW} = 1548069702</msg>
<status starttime="20190121 11:21:42.938" endtime="20190121 11:21:42.943" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:42.948" level="INFO">${TIMENOW} = 1548069702</msg>
<msg timestamp="20190121 11:21:42.949" level="INFO">${CURR_VCARBAT} = 123</msg>
<msg timestamp="20190121 11:21:42.950" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:42.799" endtime="20190121 11:21:42.951" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:42.960" endtime="20190121 11:21:43.183" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:43.188" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:21:42.954" endtime="20190121 11:21:43.189" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:43.191" endtime="20190121 11:21:43.197" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:43.204" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:43.206" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:43.200" endtime="20190121 11:21:43.207" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:43.230" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:21:43.225" endtime="20190121 11:21:43.231" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:43.239" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:43.234" endtime="20190121 11:21:43.240" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:43.216" endtime="20190121 11:21:43.243" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:43.245" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:43.210" endtime="20190121 11:21:43.246" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:43.259" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:43.249" endtime="20190121 11:21:43.260" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:43.263" endtime="20190121 11:21:43.271" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:44.280" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:43.276" endtime="20190121 11:21:44.282" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:42.797" endtime="20190121 11:21:44.283" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:44.342" level="INFO">${KLEMME30} = [[12225, 122], [12300, 129]]</msg>
<status starttime="20190121 11:21:44.293" endtime="20190121 11:21:44.343" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:44.382" level="INFO">${CURR_VCARBAT} = 122</msg>
<status starttime="20190121 11:21:44.346" endtime="20190121 11:21:44.383" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:44.421" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:44.386" endtime="20190121 11:21:44.422" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:44.437" level="INFO">${TIMENOW} = 1548069704</msg>
<status starttime="20190121 11:21:44.432" endtime="20190121 11:21:44.438" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:44.470" level="INFO">${TIMENOW} = 1548069704</msg>
<msg timestamp="20190121 11:21:44.472" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190121 11:21:44.473" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:44.286" endtime="20190121 11:21:44.474" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:44.492" endtime="20190121 11:21:44.744" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:44.746" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:21:44.477" endtime="20190121 11:21:44.747" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:44.750" endtime="20190121 11:21:44.756" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:44.763" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:44.765" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:44.759" endtime="20190121 11:21:44.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:44.790" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:21:44.785" endtime="20190121 11:21:44.791" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:44.799" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:44.794" endtime="20190121 11:21:44.800" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:44.775" endtime="20190121 11:21:44.803" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:44.805" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:44.769" endtime="20190121 11:21:44.806" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:44.815" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:44.809" endtime="20190121 11:21:44.816" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:44.819" endtime="20190121 11:21:44.825" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:45.832" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:44.828" endtime="20190121 11:21:45.834" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:44.284" endtime="20190121 11:21:45.835" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:45.897" level="INFO">${KLEMME30} = [[12225, 120], [12300, 130]]</msg>
<status starttime="20190121 11:21:45.845" endtime="20190121 11:21:45.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:45.934" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:45.901" endtime="20190121 11:21:45.935" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:45.971" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:21:45.938" endtime="20190121 11:21:45.971" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:45.979" level="INFO">${TIMENOW} = 1548069705</msg>
<status starttime="20190121 11:21:45.974" endtime="20190121 11:21:45.980" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:45.984" level="INFO">${TIMENOW} = 1548069705</msg>
<msg timestamp="20190121 11:21:45.986" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:45.987" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:21:45.838" endtime="20190121 11:21:45.987" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:45.996" endtime="20190121 11:21:46.219" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:46.223" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:21:45.990" endtime="20190121 11:21:46.224" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:46.227" endtime="20190121 11:21:46.233" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:46.240" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:46.242" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:46.235" endtime="20190121 11:21:46.242" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:46.266" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:21:46.261" endtime="20190121 11:21:46.267" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:46.279" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:46.273" endtime="20190121 11:21:46.280" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:46.252" endtime="20190121 11:21:46.283" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:46.287" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:46.245" endtime="20190121 11:21:46.288" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:46.300" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:46.291" endtime="20190121 11:21:46.301" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:46.304" endtime="20190121 11:21:46.310" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:47.317" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:46.313" endtime="20190121 11:21:47.319" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:45.836" endtime="20190121 11:21:47.319" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:47.378" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:21:47.329" endtime="20190121 11:21:47.379" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:47.416" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:47.383" endtime="20190121 11:21:47.417" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:47.453" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:47.420" endtime="20190121 11:21:47.453" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:47.461" level="INFO">${TIMENOW} = 1548069707</msg>
<status starttime="20190121 11:21:47.456" endtime="20190121 11:21:47.462" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:47.467" level="INFO">${TIMENOW} = 1548069707</msg>
<msg timestamp="20190121 11:21:47.468" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:47.469" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:47.323" endtime="20190121 11:21:47.470" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:47.478" endtime="20190121 11:21:47.698" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:47.701" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:21:47.473" endtime="20190121 11:21:47.702" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:47.704" endtime="20190121 11:21:47.710" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:47.717" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:47.719" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:47.713" endtime="20190121 11:21:47.720" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:47.743" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:21:47.738" endtime="20190121 11:21:47.744" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:47.752" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:47.747" endtime="20190121 11:21:47.753" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:47.730" endtime="20190121 11:21:47.756" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:47.758" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:47.723" endtime="20190121 11:21:47.758" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:47.769" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:47.761" endtime="20190121 11:21:47.770" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:47.772" endtime="20190121 11:21:47.778" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:48.785" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:47.781" endtime="20190121 11:21:48.787" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:47.321" endtime="20190121 11:21:48.788" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:48.851" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:21:48.798" endtime="20190121 11:21:48.852" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:48.888" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:48.855" endtime="20190121 11:21:48.889" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:48.924" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:48.891" endtime="20190121 11:21:48.925" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:48.932" level="INFO">${TIMENOW} = 1548069708</msg>
<status starttime="20190121 11:21:48.928" endtime="20190121 11:21:48.933" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:48.938" level="INFO">${TIMENOW} = 1548069708</msg>
<msg timestamp="20190121 11:21:48.939" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:48.940" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:48.791" endtime="20190121 11:21:48.941" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:48.949" endtime="20190121 11:21:49.170" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:49.172" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:21:48.944" endtime="20190121 11:21:49.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:49.177" endtime="20190121 11:21:49.182" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:49.189" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:49.191" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:49.185" endtime="20190121 11:21:49.192" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:49.215" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:21:49.210" endtime="20190121 11:21:49.216" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:49.224" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:49.219" endtime="20190121 11:21:49.225" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:49.202" endtime="20190121 11:21:49.228" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:49.230" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:49.195" endtime="20190121 11:21:49.231" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:49.240" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:49.234" endtime="20190121 11:21:49.241" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:49.244" endtime="20190121 11:21:49.250" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:50.257" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:49.253" endtime="20190121 11:21:50.259" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:48.789" endtime="20190121 11:21:50.260" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:50.318" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:21:50.269" endtime="20190121 11:21:50.319" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:50.355" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:50.323" endtime="20190121 11:21:50.356" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:50.393" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:50.359" endtime="20190121 11:21:50.394" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:50.401" level="INFO">${TIMENOW} = 1548069710</msg>
<status starttime="20190121 11:21:50.397" endtime="20190121 11:21:50.402" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:50.407" level="INFO">${TIMENOW} = 1548069710</msg>
<msg timestamp="20190121 11:21:50.408" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:50.409" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:50.263" endtime="20190121 11:21:50.410" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:50.419" endtime="20190121 11:21:50.614" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:50.617" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:21:50.413" endtime="20190121 11:21:50.618" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:50.621" endtime="20190121 11:21:50.626" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:50.634" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:50.635" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:50.629" endtime="20190121 11:21:50.636" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:50.659" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:21:50.654" endtime="20190121 11:21:50.660" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:50.668" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:50.663" endtime="20190121 11:21:50.669" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:50.646" endtime="20190121 11:21:50.672" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:50.674" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:50.639" endtime="20190121 11:21:50.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:50.685" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:50.677" endtime="20190121 11:21:50.686" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:50.688" endtime="20190121 11:21:50.694" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:51.701" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:50.697" endtime="20190121 11:21:51.703" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:50.261" endtime="20190121 11:21:51.704" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:51.767" level="INFO">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status starttime="20190121 11:21:51.714" endtime="20190121 11:21:51.767" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:51.804" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:51.771" endtime="20190121 11:21:51.805" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:51.841" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:51.808" endtime="20190121 11:21:51.842" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:51.849" level="INFO">${TIMENOW} = 1548069711</msg>
<status starttime="20190121 11:21:51.845" endtime="20190121 11:21:51.850" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:51.855" level="INFO">${TIMENOW} = 1548069711</msg>
<msg timestamp="20190121 11:21:51.856" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:51.857" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:21:51.708" endtime="20190121 11:21:51.858" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:51.867" endtime="20190121 11:21:52.091" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:52.096" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:21:51.861" endtime="20190121 11:21:52.097" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:52.099" endtime="20190121 11:21:52.105" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:52.112" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:52.114" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:52.108" endtime="20190121 11:21:52.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:52.138" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:21:52.133" endtime="20190121 11:21:52.140" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:52.148" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:52.143" endtime="20190121 11:21:52.149" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:52.124" endtime="20190121 11:21:52.152" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:52.154" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:52.118" endtime="20190121 11:21:52.154" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:52.164" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:52.157" endtime="20190121 11:21:52.165" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:52.168" endtime="20190121 11:21:52.174" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:53.181" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:52.177" endtime="20190121 11:21:53.183" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:51.706" endtime="20190121 11:21:53.184" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:53.242" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status starttime="20190121 11:21:53.194" endtime="20190121 11:21:53.243" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:53.282" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:21:53.247" endtime="20190121 11:21:53.282" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:53.318" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:53.285" endtime="20190121 11:21:53.319" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:53.326" level="INFO">${TIMENOW} = 1548069713</msg>
<status starttime="20190121 11:21:53.322" endtime="20190121 11:21:53.327" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:53.332" level="INFO">${TIMENOW} = 1548069713</msg>
<msg timestamp="20190121 11:21:53.333" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:21:53.334" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:53.187" endtime="20190121 11:21:53.335" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:53.343" endtime="20190121 11:21:53.564" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:53.568" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:21:53.338" endtime="20190121 11:21:53.569" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:53.571" endtime="20190121 11:21:53.581" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:53.595" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:53.601" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:53.584" endtime="20190121 11:21:53.602" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:53.647" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:21:53.642" endtime="20190121 11:21:53.648" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:53.657" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:53.651" endtime="20190121 11:21:53.658" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:53.625" endtime="20190121 11:21:53.661" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:53.662" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:53.610" endtime="20190121 11:21:53.663" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:53.673" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:53.666" endtime="20190121 11:21:53.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:53.677" endtime="20190121 11:21:53.683" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:54.690" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:53.686" endtime="20190121 11:21:54.692" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:53.185" endtime="20190121 11:21:54.693" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:54.756" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status starttime="20190121 11:21:54.704" endtime="20190121 11:21:54.758" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:54.794" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:21:54.760" endtime="20190121 11:21:54.795" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:54.831" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:54.798" endtime="20190121 11:21:54.831" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:54.839" level="INFO">${TIMENOW} = 1548069714</msg>
<status starttime="20190121 11:21:54.834" endtime="20190121 11:21:54.840" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:54.845" level="INFO">${TIMENOW} = 1548069714</msg>
<msg timestamp="20190121 11:21:54.846" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:21:54.847" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:54.697" endtime="20190121 11:21:54.847" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:54.856" endtime="20190121 11:21:55.079" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:55.081" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:21:54.850" endtime="20190121 11:21:55.082" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:55.085" endtime="20190121 11:21:55.091" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:55.098" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:55.100" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:55.094" endtime="20190121 11:21:55.101" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:55.124" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:21:55.119" endtime="20190121 11:21:55.124" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:55.133" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:55.127" endtime="20190121 11:21:55.133" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:55.110" endtime="20190121 11:21:55.136" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:55.138" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:55.104" endtime="20190121 11:21:55.139" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:55.149" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:55.142" endtime="20190121 11:21:55.150" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:55.152" endtime="20190121 11:21:55.159" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:56.166" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:55.161" endtime="20190121 11:21:56.168" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:54.695" endtime="20190121 11:21:56.169" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:56.228" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status starttime="20190121 11:21:56.179" endtime="20190121 11:21:56.229" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:56.265" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:21:56.232" endtime="20190121 11:21:56.266" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:56.301" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:56.268" endtime="20190121 11:21:56.302" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:56.310" level="INFO">${TIMENOW} = 1548069716</msg>
<status starttime="20190121 11:21:56.305" endtime="20190121 11:21:56.310" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:56.315" level="INFO">${TIMENOW} = 1548069716</msg>
<msg timestamp="20190121 11:21:56.316" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:21:56.317" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:56.172" endtime="20190121 11:21:56.318" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:56.328" endtime="20190121 11:21:56.553" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:56.555" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:21:56.322" endtime="20190121 11:21:56.556" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:56.559" endtime="20190121 11:21:56.565" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:56.572" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:56.574" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:56.568" endtime="20190121 11:21:56.575" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:56.598" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:21:56.593" endtime="20190121 11:21:56.599" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:56.607" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:56.602" endtime="20190121 11:21:56.608" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:56.584" endtime="20190121 11:21:56.611" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:56.613" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:56.578" endtime="20190121 11:21:56.614" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:56.623" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:56.617" endtime="20190121 11:21:56.624" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:56.627" endtime="20190121 11:21:56.633" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:57.640" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:56.636" endtime="20190121 11:21:57.642" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:56.170" endtime="20190121 11:21:57.643" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:57.706" level="INFO">${KLEMME30} = [[12225, 120], [102300, 128]]</msg>
<status starttime="20190121 11:21:57.652" endtime="20190121 11:21:57.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:57.743" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:57.710" endtime="20190121 11:21:57.744" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:57.779" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:57.746" endtime="20190121 11:21:57.780" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:57.788" level="INFO">${TIMENOW} = 1548069717</msg>
<status starttime="20190121 11:21:57.783" endtime="20190121 11:21:57.789" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:57.794" level="INFO">${TIMENOW} = 1548069717</msg>
<msg timestamp="20190121 11:21:57.795" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:57.796" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:57.646" endtime="20190121 11:21:57.797" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:57.809" endtime="20190121 11:21:58.033" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:58.035" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:21:57.801" endtime="20190121 11:21:58.038" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:58.041" endtime="20190121 11:21:58.047" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:58.054" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:58.056" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:58.050" endtime="20190121 11:21:58.057" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:58.081" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:21:58.075" endtime="20190121 11:21:58.081" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:58.090" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:58.084" endtime="20190121 11:21:58.090" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:58.066" endtime="20190121 11:21:58.094" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:58.095" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:58.060" endtime="20190121 11:21:58.096" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:58.106" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:58.099" endtime="20190121 11:21:58.107" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:58.110" endtime="20190121 11:21:58.116" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:21:59.123" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:58.119" endtime="20190121 11:21:59.125" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:57.644" endtime="20190121 11:21:59.126" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:21:59.185" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:21:59.135" endtime="20190121 11:21:59.186" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:21:59.221" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:21:59.188" endtime="20190121 11:21:59.222" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:21:59.257" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:59.225" endtime="20190121 11:21:59.258" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:21:59.265" level="INFO">${TIMENOW} = 1548069719</msg>
<status starttime="20190121 11:21:59.261" endtime="20190121 11:21:59.266" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:59.271" level="INFO">${TIMENOW} = 1548069719</msg>
<msg timestamp="20190121 11:21:59.272" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:21:59.273" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:21:59.129" endtime="20190121 11:21:59.274" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:21:59.282" endtime="20190121 11:21:59.502" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:59.505" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:21:59.277" endtime="20190121 11:21:59.506" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:21:59.509" endtime="20190121 11:21:59.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:21:59.521" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:21:59.523" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:21:59.517" endtime="20190121 11:21:59.524" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:21:59.547" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:21:59.542" endtime="20190121 11:21:59.548" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:21:59.556" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:21:59.551" endtime="20190121 11:21:59.557" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:59.534" endtime="20190121 11:21:59.560" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:21:59.562" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:21:59.527" endtime="20190121 11:21:59.563" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:21:59.572" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:21:59.566" endtime="20190121 11:21:59.573" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:21:59.576" endtime="20190121 11:21:59.582" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:00.589" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:21:59.585" endtime="20190121 11:22:00.592" status="PASS"></status>
</kw>
<status starttime="20190121 11:21:59.127" endtime="20190121 11:22:00.593" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:00.654" level="INFO">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status starttime="20190121 11:22:00.604" endtime="20190121 11:22:00.655" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:00.700" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:22:00.658" endtime="20190121 11:22:00.701" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:00.753" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:22:00.716" endtime="20190121 11:22:00.754" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:00.762" level="INFO">${TIMENOW} = 1548069720</msg>
<status starttime="20190121 11:22:00.757" endtime="20190121 11:22:00.762" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:00.767" level="INFO">${TIMENOW} = 1548069720</msg>
<msg timestamp="20190121 11:22:00.769" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:22:00.770" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:22:00.597" endtime="20190121 11:22:00.771" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:00.779" endtime="20190121 11:22:01.002" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:01.004" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:22:00.774" endtime="20190121 11:22:01.005" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:01.008" endtime="20190121 11:22:01.014" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:01.021" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:01.023" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:01.017" endtime="20190121 11:22:01.023" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:01.047" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:22:01.042" endtime="20190121 11:22:01.047" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:01.056" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:01.050" endtime="20190121 11:22:01.057" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:01.033" endtime="20190121 11:22:01.060" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:01.061" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:01.026" endtime="20190121 11:22:01.062" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:01.072" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:01.065" endtime="20190121 11:22:01.073" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:01.076" endtime="20190121 11:22:01.082" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:02.088" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:01.085" endtime="20190121 11:22:02.091" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:00.594" endtime="20190121 11:22:02.091" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:02.150" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status starttime="20190121 11:22:02.101" endtime="20190121 11:22:02.151" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:02.187" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:22:02.154" endtime="20190121 11:22:02.187" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:02.224" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:02.190" endtime="20190121 11:22:02.225" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:02.232" level="INFO">${TIMENOW} = 1548069722</msg>
<status starttime="20190121 11:22:02.228" endtime="20190121 11:22:02.233" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:02.238" level="INFO">${TIMENOW} = 1548069722</msg>
<msg timestamp="20190121 11:22:02.239" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:22:02.241" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:02.095" endtime="20190121 11:22:02.242" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:02.250" endtime="20190121 11:22:02.470" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:02.472" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:22:02.245" endtime="20190121 11:22:02.473" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:02.476" endtime="20190121 11:22:02.481" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:02.489" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:02.490" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:02.484" endtime="20190121 11:22:02.491" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:02.514" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:22:02.510" endtime="20190121 11:22:02.515" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:02.523" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:02.518" endtime="20190121 11:22:02.524" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:02.501" endtime="20190121 11:22:02.527" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:02.529" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:02.494" endtime="20190121 11:22:02.530" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:02.539" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:02.533" endtime="20190121 11:22:02.540" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:02.543" endtime="20190121 11:22:02.553" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:03.560" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:02.556" endtime="20190121 11:22:03.562" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:02.093" endtime="20190121 11:22:03.563" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:03.622" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:22:03.572" endtime="20190121 11:22:03.623" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:03.660" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:22:03.627" endtime="20190121 11:22:03.661" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:03.696" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:03.664" endtime="20190121 11:22:03.697" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:03.704" level="INFO">${TIMENOW} = 1548069723</msg>
<status starttime="20190121 11:22:03.700" endtime="20190121 11:22:03.705" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:03.711" level="INFO">${TIMENOW} = 1548069723</msg>
<msg timestamp="20190121 11:22:03.712" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:22:03.713" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:03.566" endtime="20190121 11:22:03.714" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:03.723" endtime="20190121 11:22:03.946" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:03.948" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:22:03.717" endtime="20190121 11:22:03.951" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:03.954" endtime="20190121 11:22:03.960" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:03.968" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:03.970" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:03.963" endtime="20190121 11:22:03.971" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:03.995" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:22:03.990" endtime="20190121 11:22:03.996" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:04.005" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:03.999" endtime="20190121 11:22:04.006" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:03.982" endtime="20190121 11:22:04.009" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:04.011" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:03.974" endtime="20190121 11:22:04.011" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:04.021" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:04.014" endtime="20190121 11:22:04.022" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:04.025" endtime="20190121 11:22:04.032" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:05.038" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:04.034" endtime="20190121 11:22:05.040" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:03.564" endtime="20190121 11:22:05.041" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:05.099" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:22:05.051" endtime="20190121 11:22:05.101" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:05.138" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:22:05.105" endtime="20190121 11:22:05.139" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:05.175" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:05.142" endtime="20190121 11:22:05.176" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:05.183" level="INFO">${TIMENOW} = 1548069725</msg>
<status starttime="20190121 11:22:05.179" endtime="20190121 11:22:05.184" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:05.189" level="INFO">${TIMENOW} = 1548069725</msg>
<msg timestamp="20190121 11:22:05.190" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:22:05.191" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:05.045" endtime="20190121 11:22:05.192" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:05.200" endtime="20190121 11:22:05.423" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:05.425" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:22:05.195" endtime="20190121 11:22:05.426" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:05.429" endtime="20190121 11:22:05.435" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:05.442" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:05.444" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:05.438" endtime="20190121 11:22:05.444" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:05.467" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:22:05.462" endtime="20190121 11:22:05.468" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:05.480" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:05.471" endtime="20190121 11:22:05.481" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:05.454" endtime="20190121 11:22:05.484" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:05.486" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:05.447" endtime="20190121 11:22:05.487" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:05.497" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:05.489" endtime="20190121 11:22:05.498" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:05.500" endtime="20190121 11:22:05.507" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:06.516" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:05.510" endtime="20190121 11:22:06.518" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:05.043" endtime="20190121 11:22:06.519" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:06.577" level="INFO">${KLEMME30} = [[12225, 129], [12300, 136]]</msg>
<status starttime="20190121 11:22:06.528" endtime="20190121 11:22:06.578" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:06.614" level="INFO">${CURR_VCARBAT} = 129</msg>
<status starttime="20190121 11:22:06.581" endtime="20190121 11:22:06.615" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:06.652" level="INFO">${CURR_KL30} = 136</msg>
<status starttime="20190121 11:22:06.618" endtime="20190121 11:22:06.652" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:06.660" level="INFO">${TIMENOW} = 1548069726</msg>
<status starttime="20190121 11:22:06.655" endtime="20190121 11:22:06.661" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:06.666" level="INFO">${TIMENOW} = 1548069726</msg>
<msg timestamp="20190121 11:22:06.667" level="INFO">${CURR_VCARBAT} = 129</msg>
<msg timestamp="20190121 11:22:06.668" level="INFO">${CURR_KL30} = 136</msg>
<status starttime="20190121 11:22:06.522" endtime="20190121 11:22:06.669" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:06.677" endtime="20190121 11:22:06.872" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:06.874" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:22:06.672" endtime="20190121 11:22:06.875" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:06.878" endtime="20190121 11:22:06.883" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:06.890" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:06.892" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:06.886" endtime="20190121 11:22:06.893" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:06.916" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:22:06.911" endtime="20190121 11:22:06.917" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:06.925" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:06.920" endtime="20190121 11:22:06.926" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:06.903" endtime="20190121 11:22:06.930" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:06.931" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:06.896" endtime="20190121 11:22:06.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:06.942" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:06.935" endtime="20190121 11:22:06.943" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:06.946" endtime="20190121 11:22:06.952" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:07.959" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:06.955" endtime="20190121 11:22:07.961" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:06.520" endtime="20190121 11:22:07.962" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:08.021" level="INFO">${KLEMME30} = [[12225, 120], [12300, 127]]</msg>
<status starttime="20190121 11:22:07.972" endtime="20190121 11:22:08.022" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:08.059" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:22:08.025" endtime="20190121 11:22:08.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:08.098" level="INFO">${CURR_KL30} = 127</msg>
<status starttime="20190121 11:22:08.064" endtime="20190121 11:22:08.099" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:08.106" level="INFO">${TIMENOW} = 1548069728</msg>
<status starttime="20190121 11:22:08.102" endtime="20190121 11:22:08.107" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:08.113" level="INFO">${TIMENOW} = 1548069728</msg>
<msg timestamp="20190121 11:22:08.114" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:22:08.115" level="INFO">${CURR_KL30} = 127</msg>
<status starttime="20190121 11:22:07.965" endtime="20190121 11:22:08.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:08.125" endtime="20190121 11:22:08.347" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:08.349" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:22:08.119" endtime="20190121 11:22:08.350" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:08.353" endtime="20190121 11:22:08.359" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:08.366" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:08.368" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:08.362" endtime="20190121 11:22:08.368" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:08.399" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:22:08.387" endtime="20190121 11:22:08.399" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:08.408" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:08.402" endtime="20190121 11:22:08.409" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:08.378" endtime="20190121 11:22:08.412" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:08.413" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:08.371" endtime="20190121 11:22:08.414" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:08.425" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:08.417" endtime="20190121 11:22:08.426" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:08.428" endtime="20190121 11:22:08.435" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:09.441" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:08.437" endtime="20190121 11:22:09.443" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:07.963" endtime="20190121 11:22:09.444" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:09.502" level="INFO">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status starttime="20190121 11:22:09.454" endtime="20190121 11:22:09.503" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:09.539" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:22:09.506" endtime="20190121 11:22:09.540" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:09.576" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:22:09.543" endtime="20190121 11:22:09.576" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:09.584" level="INFO">${TIMENOW} = 1548069729</msg>
<status starttime="20190121 11:22:09.579" endtime="20190121 11:22:09.585" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:09.589" level="INFO">${TIMENOW} = 1548069729</msg>
<msg timestamp="20190121 11:22:09.590" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:22:09.591" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:22:09.448" endtime="20190121 11:22:09.592" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:09.601" endtime="20190121 11:22:09.835" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:09.837" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:22:09.595" endtime="20190121 11:22:09.838" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:09.841" endtime="20190121 11:22:09.863" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:09.870" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:09.882" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:09.866" endtime="20190121 11:22:09.883" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:09.913" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:22:09.909" endtime="20190121 11:22:09.914" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:09.950" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:09.918" endtime="20190121 11:22:09.951" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:09.900" endtime="20190121 11:22:09.954" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:09.956" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:09.886" endtime="20190121 11:22:09.957" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:09.979" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:09.959" endtime="20190121 11:22:09.979" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:09.982" endtime="20190121 11:22:09.994" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:11.035" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:09.997" endtime="20190121 11:22:11.038" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:09.446" endtime="20190121 11:22:11.038" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:11.137" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status starttime="20190121 11:22:11.062" endtime="20190121 11:22:11.138" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:11.221" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:22:11.141" endtime="20190121 11:22:11.231" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:11.303" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:11.234" endtime="20190121 11:22:11.314" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:11.322" level="INFO">${TIMENOW} = 1548069731</msg>
<status starttime="20190121 11:22:11.317" endtime="20190121 11:22:11.323" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:11.333" level="INFO">${TIMENOW} = 1548069731</msg>
<msg timestamp="20190121 11:22:11.334" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:22:11.336" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:11.042" endtime="20190121 11:22:11.336" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:11.354" endtime="20190121 11:22:11.570" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:11.571" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:22:11.339" endtime="20190121 11:22:11.573" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:11.576" endtime="20190121 11:22:11.581" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:11.588" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:11.590" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:11.584" endtime="20190121 11:22:11.591" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:11.618" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:22:11.613" endtime="20190121 11:22:11.619" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:11.628" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:11.622" endtime="20190121 11:22:11.629" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:11.601" endtime="20190121 11:22:11.632" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:11.633" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:11.594" endtime="20190121 11:22:11.634" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:11.644" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:11.637" endtime="20190121 11:22:11.645" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:11.648" endtime="20190121 11:22:11.655" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:12.662" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:11.658" endtime="20190121 11:22:12.664" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:11.040" endtime="20190121 11:22:12.665" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:12.723" level="INFO">${KLEMME30} = [[12225, 122], [12300, 128]]</msg>
<status starttime="20190121 11:22:12.674" endtime="20190121 11:22:12.724" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:12.760" level="INFO">${CURR_VCARBAT} = 122</msg>
<status starttime="20190121 11:22:12.727" endtime="20190121 11:22:12.761" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:12.797" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:12.764" endtime="20190121 11:22:12.797" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:12.805" level="INFO">${TIMENOW} = 1548069732</msg>
<status starttime="20190121 11:22:12.800" endtime="20190121 11:22:12.806" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:12.810" level="INFO">${TIMENOW} = 1548069732</msg>
<msg timestamp="20190121 11:22:12.812" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190121 11:22:12.813" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:12.668" endtime="20190121 11:22:12.813" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:12.822" endtime="20190121 11:22:13.045" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:13.047" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:22:12.816" endtime="20190121 11:22:13.048" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:13.050" endtime="20190121 11:22:13.056" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:13.063" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:13.065" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:13.059" endtime="20190121 11:22:13.066" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:13.089" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:22:13.084" endtime="20190121 11:22:13.090" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:13.098" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:13.092" endtime="20190121 11:22:13.099" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:13.075" endtime="20190121 11:22:13.102" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:13.103" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:13.069" endtime="20190121 11:22:13.104" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:13.114" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:13.107" endtime="20190121 11:22:13.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:13.118" endtime="20190121 11:22:13.124" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:14.130" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:13.126" endtime="20190121 11:22:14.133" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:12.666" endtime="20190121 11:22:14.134" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:14.193" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status starttime="20190121 11:22:14.144" endtime="20190121 11:22:14.194" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:14.232" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:22:14.197" endtime="20190121 11:22:14.233" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:14.271" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:14.236" endtime="20190121 11:22:14.272" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:14.280" level="INFO">${TIMENOW} = 1548069734</msg>
<status starttime="20190121 11:22:14.275" endtime="20190121 11:22:14.281" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:14.286" level="INFO">${TIMENOW} = 1548069734</msg>
<msg timestamp="20190121 11:22:14.287" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:22:14.288" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:14.138" endtime="20190121 11:22:14.289" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:14.297" endtime="20190121 11:22:14.517" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:14.519" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:22:14.292" endtime="20190121 11:22:14.520" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:14.523" endtime="20190121 11:22:14.529" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:14.536" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:14.538" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:14.531" endtime="20190121 11:22:14.539" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:14.566" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:22:14.561" endtime="20190121 11:22:14.567" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:14.575" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:14.570" endtime="20190121 11:22:14.576" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:14.549" endtime="20190121 11:22:14.579" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:14.581" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:14.542" endtime="20190121 11:22:14.582" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:14.592" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:14.585" endtime="20190121 11:22:14.593" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:14.596" endtime="20190121 11:22:14.602" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:15.609" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:14.605" endtime="20190121 11:22:15.611" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:14.135" endtime="20190121 11:22:15.612" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:15.670" level="INFO">${KLEMME30} = [[12225, 122], [12300, 140]]</msg>
<status starttime="20190121 11:22:15.622" endtime="20190121 11:22:15.671" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:15.707" level="INFO">${CURR_VCARBAT} = 122</msg>
<status starttime="20190121 11:22:15.675" endtime="20190121 11:22:15.708" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:15.744" level="INFO">${CURR_KL30} = 140</msg>
<status starttime="20190121 11:22:15.711" endtime="20190121 11:22:15.745" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:15.752" level="INFO">${TIMENOW} = 1548069735</msg>
<status starttime="20190121 11:22:15.748" endtime="20190121 11:22:15.753" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:15.758" level="INFO">${TIMENOW} = 1548069735</msg>
<msg timestamp="20190121 11:22:15.759" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190121 11:22:15.760" level="INFO">${CURR_KL30} = 140</msg>
<status starttime="20190121 11:22:15.615" endtime="20190121 11:22:15.761" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:15.769" endtime="20190121 11:22:15.989" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:15.991" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:22:15.764" endtime="20190121 11:22:15.991" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:15.994" endtime="20190121 11:22:16.000" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:16.007" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:16.009" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:16.003" endtime="20190121 11:22:16.010" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:16.034" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:22:16.030" endtime="20190121 11:22:16.035" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:16.044" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:16.038" endtime="20190121 11:22:16.044" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:16.021" endtime="20190121 11:22:16.047" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:16.049" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:16.014" endtime="20190121 11:22:16.050" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:16.060" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:16.053" endtime="20190121 11:22:16.061" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:16.063" endtime="20190121 11:22:16.070" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:17.076" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:16.072" endtime="20190121 11:22:17.078" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:15.613" endtime="20190121 11:22:17.079" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:17.137" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status starttime="20190121 11:22:17.089" endtime="20190121 11:22:17.138" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:17.174" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:22:17.141" endtime="20190121 11:22:17.175" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:17.212" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:17.178" endtime="20190121 11:22:17.212" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:17.220" level="INFO">${TIMENOW} = 1548069737</msg>
<status starttime="20190121 11:22:17.215" endtime="20190121 11:22:17.221" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:17.226" level="INFO">${TIMENOW} = 1548069737</msg>
<msg timestamp="20190121 11:22:17.227" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:22:17.228" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:17.083" endtime="20190121 11:22:17.229" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:17.237" endtime="20190121 11:22:17.465" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:17.467" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:22:17.232" endtime="20190121 11:22:17.467" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:17.475" endtime="20190121 11:22:17.481" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:17.488" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:17.490" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:17.484" endtime="20190121 11:22:17.491" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:17.519" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:22:17.513" endtime="20190121 11:22:17.519" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:17.529" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:17.522" endtime="20190121 11:22:17.530" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:17.501" endtime="20190121 11:22:17.533" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:17.535" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:17.494" endtime="20190121 11:22:17.535" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:17.546" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:17.538" endtime="20190121 11:22:17.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:17.550" endtime="20190121 11:22:17.557" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:18.566" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:17.559" endtime="20190121 11:22:18.568" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:17.081" endtime="20190121 11:22:18.569" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:18.665" level="INFO">${KLEMME30} = [[12225, 121], [12300, 129]]</msg>
<status starttime="20190121 11:22:18.585" endtime="20190121 11:22:18.666" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:18.756" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:22:18.669" endtime="20190121 11:22:18.762" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:18.845" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:22:18.765" endtime="20190121 11:22:18.846" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:18.862" level="INFO">${TIMENOW} = 1548069738</msg>
<status starttime="20190121 11:22:18.857" endtime="20190121 11:22:18.862" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:18.879" level="INFO">${TIMENOW} = 1548069738</msg>
<msg timestamp="20190121 11:22:18.880" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:22:18.881" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:22:18.572" endtime="20190121 11:22:18.882" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:18.896" endtime="20190121 11:22:19.113" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:19.115" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:22:18.885" endtime="20190121 11:22:19.116" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:19.119" endtime="20190121 11:22:19.125" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:19.132" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:19.134" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:19.128" endtime="20190121 11:22:19.134" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:19.158" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:22:19.153" endtime="20190121 11:22:19.159" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:19.167" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:19.162" endtime="20190121 11:22:19.168" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:19.144" endtime="20190121 11:22:19.171" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:19.173" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:19.138" endtime="20190121 11:22:19.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:19.184" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:19.177" endtime="20190121 11:22:19.185" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:19.187" endtime="20190121 11:22:19.194" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:20.200" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:19.197" endtime="20190121 11:22:20.202" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:18.570" endtime="20190121 11:22:20.203" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:20.262" level="INFO">${KLEMME30} = [[12225, 120], [12300, 127]]</msg>
<status starttime="20190121 11:22:20.213" endtime="20190121 11:22:20.263" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:20.299" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:22:20.266" endtime="20190121 11:22:20.300" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:20.335" level="INFO">${CURR_KL30} = 127</msg>
<status starttime="20190121 11:22:20.302" endtime="20190121 11:22:20.336" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:20.344" level="INFO">${TIMENOW} = 1548069740</msg>
<status starttime="20190121 11:22:20.340" endtime="20190121 11:22:20.345" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:20.350" level="INFO">${TIMENOW} = 1548069740</msg>
<msg timestamp="20190121 11:22:20.351" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:22:20.353" level="INFO">${CURR_KL30} = 127</msg>
<status starttime="20190121 11:22:20.207" endtime="20190121 11:22:20.353" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:20.362" endtime="20190121 11:22:20.583" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:20.585" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:22:20.356" endtime="20190121 11:22:20.586" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:20.589" endtime="20190121 11:22:20.594" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:20.602" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:20.604" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:20.597" endtime="20190121 11:22:20.605" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:20.632" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:22:20.627" endtime="20190121 11:22:20.633" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:20.641" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:20.636" endtime="20190121 11:22:20.642" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:20.614" endtime="20190121 11:22:20.645" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:20.646" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:20.608" endtime="20190121 11:22:20.647" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:20.657" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:20.650" endtime="20190121 11:22:20.658" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:20.661" endtime="20190121 11:22:20.667" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:21.674" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:20.670" endtime="20190121 11:22:21.676" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:20.205" endtime="20190121 11:22:21.677" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:21.758" level="INFO">${KLEMME30} = [[12225, 121], [12300, 129]]</msg>
<status starttime="20190121 11:22:21.691" endtime="20190121 11:22:21.760" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:21.802" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:22:21.768" endtime="20190121 11:22:21.803" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:21.838" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:22:21.806" endtime="20190121 11:22:21.839" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:21.846" level="INFO">${TIMENOW} = 1548069741</msg>
<status starttime="20190121 11:22:21.842" endtime="20190121 11:22:21.847" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:21.852" level="INFO">${TIMENOW} = 1548069741</msg>
<msg timestamp="20190121 11:22:21.854" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:22:21.855" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:22:21.682" endtime="20190121 11:22:21.855" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:21.870" endtime="20190121 11:22:22.090" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:22.092" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:22:21.864" endtime="20190121 11:22:22.093" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:22.096" endtime="20190121 11:22:22.102" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:22.109" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:22.112" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:22.105" endtime="20190121 11:22:22.113" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:22.136" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:22:22.131" endtime="20190121 11:22:22.137" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:22.146" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:22.139" endtime="20190121 11:22:22.147" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:22.122" endtime="20190121 11:22:22.150" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:22.152" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:22.116" endtime="20190121 11:22:22.153" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:22.163" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:22.156" endtime="20190121 11:22:22.163" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:22.166" endtime="20190121 11:22:22.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:23.184" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:22.175" endtime="20190121 11:22:23.186" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:21.679" endtime="20190121 11:22:23.187" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:23.273" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status starttime="20190121 11:22:23.206" endtime="20190121 11:22:23.274" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:23.309" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:22:23.277" endtime="20190121 11:22:23.310" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:23.346" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:23.313" endtime="20190121 11:22:23.346" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:23.354" level="INFO">${TIMENOW} = 1548069743</msg>
<status starttime="20190121 11:22:23.349" endtime="20190121 11:22:23.355" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:23.362" level="INFO">${TIMENOW} = 1548069743</msg>
<msg timestamp="20190121 11:22:23.363" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:22:23.364" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:23.191" endtime="20190121 11:22:23.365" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:23.373" endtime="20190121 11:22:23.609" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:23.611" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:22:23.368" endtime="20190121 11:22:23.612" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:23.616" endtime="20190121 11:22:23.622" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:23.632" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:23.634" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:23.625" endtime="20190121 11:22:23.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:23.662" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:22:23.657" endtime="20190121 11:22:23.663" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:23.671" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:23.666" endtime="20190121 11:22:23.672" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:23.644" endtime="20190121 11:22:23.675" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:23.677" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:23.638" endtime="20190121 11:22:23.678" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:23.694" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:23.681" endtime="20190121 11:22:23.695" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:23.698" endtime="20190121 11:22:23.704" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:24.711" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:23.707" endtime="20190121 11:22:24.713" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:23.189" endtime="20190121 11:22:24.714" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:24.782" level="INFO">${KLEMME30} = [[12225, 120], [0, 0]]</msg>
<status starttime="20190121 11:22:24.725" endtime="20190121 11:22:24.782" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:24.819" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:22:24.786" endtime="20190121 11:22:24.819" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:24.855" level="INFO">${CURR_KL30} = 0</msg>
<status starttime="20190121 11:22:24.822" endtime="20190121 11:22:24.856" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:24.863" level="INFO">${TIMENOW} = 1548069744</msg>
<status starttime="20190121 11:22:24.859" endtime="20190121 11:22:24.864" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:24.869" level="INFO">${TIMENOW} = 1548069744</msg>
<msg timestamp="20190121 11:22:24.871" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:22:24.872" level="INFO">${CURR_KL30} = 0</msg>
<status starttime="20190121 11:22:24.717" endtime="20190121 11:22:24.873" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:24.881" endtime="20190121 11:22:25.104" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:25.106" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:22:24.876" endtime="20190121 11:22:25.107" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:25.110" endtime="20190121 11:22:25.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:25.123" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:25.125" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:25.118" endtime="20190121 11:22:25.126" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:25.157" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:22:25.147" endtime="20190121 11:22:25.158" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:25.168" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:25.161" endtime="20190121 11:22:25.169" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:25.135" endtime="20190121 11:22:25.172" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:25.184" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:25.129" endtime="20190121 11:22:25.187" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:25.215" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:25.190" endtime="20190121 11:22:25.217" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:25.221" endtime="20190121 11:22:25.252" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:26.279" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:25.255" endtime="20190121 11:22:26.281" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:24.715" endtime="20190121 11:22:26.282" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:26.341" level="INFO">${KLEMME30} = [[12225, 123], [12300, 128]]</msg>
<status starttime="20190121 11:22:26.292" endtime="20190121 11:22:26.342" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:26.377" level="INFO">${CURR_VCARBAT} = 123</msg>
<status starttime="20190121 11:22:26.344" endtime="20190121 11:22:26.378" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:26.416" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:26.381" endtime="20190121 11:22:26.417" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:26.424" level="INFO">${TIMENOW} = 1548069746</msg>
<status starttime="20190121 11:22:26.420" endtime="20190121 11:22:26.425" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:26.430" level="INFO">${TIMENOW} = 1548069746</msg>
<msg timestamp="20190121 11:22:26.431" level="INFO">${CURR_VCARBAT} = 123</msg>
<msg timestamp="20190121 11:22:26.432" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:26.285" endtime="20190121 11:22:26.433" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:26.441" endtime="20190121 11:22:26.662" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:26.665" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:22:26.436" endtime="20190121 11:22:26.666" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:26.668" endtime="20190121 11:22:26.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:26.681" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:26.683" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:26.677" endtime="20190121 11:22:26.684" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:26.711" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:22:26.706" endtime="20190121 11:22:26.712" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:26.720" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:26.715" endtime="20190121 11:22:26.721" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:26.693" endtime="20190121 11:22:26.724" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:26.726" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:26.687" endtime="20190121 11:22:26.727" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:26.737" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:26.730" endtime="20190121 11:22:26.737" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:26.740" endtime="20190121 11:22:26.748" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:27.755" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:26.751" endtime="20190121 11:22:27.757" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:26.283" endtime="20190121 11:22:27.757" status="PASS"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:22:27.817" level="INFO">${KLEMME30} = [[12225, 122], [12300, 128]]</msg>
<status starttime="20190121 11:22:27.768" endtime="20190121 11:22:27.818" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:22:27.854" level="INFO">${CURR_VCARBAT} = 122</msg>
<status starttime="20190121 11:22:27.821" endtime="20190121 11:22:27.855" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:22:27.891" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:27.858" endtime="20190121 11:22:27.891" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:22:27.899" level="INFO">${TIMENOW} = 1548069747</msg>
<status starttime="20190121 11:22:27.894" endtime="20190121 11:22:27.900" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:27.905" level="INFO">${TIMENOW} = 1548069747</msg>
<msg timestamp="20190121 11:22:27.906" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190121 11:22:27.907" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:22:27.761" endtime="20190121 11:22:27.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:22:27.916" endtime="20190121 11:22:28.113" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:28.115" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:22:27.910" endtime="20190121 11:22:28.116" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:28.119" endtime="20190121 11:22:28.125" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:22:28.133" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:22:28.135" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:22:28.128" endtime="20190121 11:22:28.135" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:22:28.158" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:22:28.154" endtime="20190121 11:22:28.159" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:22:28.167" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:22:28.162" endtime="20190121 11:22:28.168" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:28.145" endtime="20190121 11:22:28.171" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:28.173" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:22:28.138" endtime="20190121 11:22:28.174" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:22:28.184" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:22:28.177" endtime="20190121 11:22:28.184" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:22:28.187" endtime="20190121 11:22:28.193" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:22:29.200" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:22:28.196" endtime="20190121 11:22:29.202" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:27.759" endtime="20190121 11:22:29.203" status="PASS"></status>
</kw>
<status starttime="20190121 11:20:39.955" endtime="20190121 11:22:29.204" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:22:29.206" endtime="20190121 11:22:29.213" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:22:29.216" endtime="20190121 11:22:29.222" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:22:29.225" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:20:39.926" endtime="20190121 11:22:29.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<msg timestamp="20190121 11:22:29.234" level="FAIL">'False' should be true.</msg>
<status starttime="20190121 11:22:29.229" endtime="20190121 11:22:29.236" status="FAIL"></status>
</kw>
<status starttime="20190121 11:20:36.957" endtime="20190121 11:22:29.238" status="FAIL"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:22:29.249" endtime="20190121 11:22:29.298" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:22:29.302" endtime="20190121 11:22:29.349" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:22:29.352" endtime="20190121 11:22:29.454" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:22:29.466" endtime="20190121 11:22:29.554" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:29.242" endtime="20190121 11:22:29.577" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-55194 Powermanagement</doc>
<tags>
<tag>Powermanagement test</tag>
</tags>
<status critical="yes" starttime="20190121 11:20:32.679" endtime="20190121 11:22:29.578" status="FAIL">'False' should be true.</status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:22:31.175" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:22:31.223" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:22:29.746" endtime="20190121 11:22:31.227" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:29.670" endtime="20190121 11:22:31.228" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:29.635" endtime="20190121 11:22:31.230" status="PASS"></status>
</kw>
<doc>Chorus Power wake up down test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:20:29.243" endtime="20190121 11:22:31.239" status="FAIL"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-FLASHDOWN.robot" name="SKTB-FLASHDOWN" id="s1-s20">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:22:31.860" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:22:31.838" endtime="20190121 11:22:31.876" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:22:31.901" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:22:31.915" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:22:34.127" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:22:31.879" endtime="20190121 11:22:34.128" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:31.832" endtime="20190121 11:22:34.165" status="PASS"></status>
</kw>
<test name="SKTB-FLSHDOWN Chorus SW Flashing" id="s1-s20-t1">
<kw type="setup" name="Test_precondition">
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:22:34.197" endtime="20190121 11:22:34.347" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:22:34.353" endtime="20190121 11:22:34.471" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:22:34.474" endtime="20190121 11:22:34.582" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:22:36.606" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:22:34.585" endtime="20190121 11:22:36.608" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:22:36.611" endtime="20190121 11:22:36.655" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status starttime="20190121 11:22:36.659" endtime="20190121 11:22:36.705" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:22:36.708" endtime="20190121 11:22:36.753" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:34.191" endtime="20190121 11:22:36.756" status="PASS"></status>
</kw>
<kw name="update_prev">
<doc>Flashing previous version</doc>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:22:38.774" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:22:36.765" endtime="20190121 11:22:38.777" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:24:09.007" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:22:38.780" endtime="20190121 11:24:09.009" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:24:09.016" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:24:09.011" endtime="20190121 11:24:09.018" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:24:11.025" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:24:09.021" endtime="20190121 11:24:11.027" status="PASS"></status>
</kw>
<status starttime="20190121 11:22:36.759" endtime="20190121 11:24:11.029" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:24:11.039" endtime="20190121 11:24:11.087" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:24:11.090" endtime="20190121 11:24:11.135" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:24:11.140" endtime="20190121 11:24:11.197" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:24:11.200" endtime="20190121 11:24:11.287" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:24:11.294" endtime="20190121 11:24:11.339" status="PASS"></status>
</kw>
<status starttime="20190121 11:24:11.033" endtime="20190121 11:24:11.346" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-FLASHDOWN</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status critical="yes" starttime="20190121 11:22:34.167" endtime="20190121 11:24:11.347" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:24:12.838" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:24:12.885" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:24:11.412" endtime="20190121 11:24:12.886" status="PASS"></status>
</kw>
<status starttime="20190121 11:24:11.385" endtime="20190121 11:24:12.888" status="PASS"></status>
</kw>
<status starttime="20190121 11:24:11.371" endtime="20190121 11:24:12.890" status="PASS"></status>
</kw>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:22:31.392" endtime="20190121 11:24:12.891" status="PASS"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-50571.robot" name="SKTB-50571" id="s1-s21">
<kw type="setup" library="chorus_resource" name="Setup Actions">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:24:13.658" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:24:13.643" endtime="20190121 11:24:13.667" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:24:13.692" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:24:13.694" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:24:15.993" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:24:13.670" endtime="20190121 11:24:15.995" status="PASS"></status>
</kw>
<status starttime="20190121 11:24:13.638" endtime="20190121 11:24:15.997" status="PASS"></status>
</kw>
<test name="SKTB-50571 OTA update" id="s1-s21-t1">
<kw type="setup" name="Test_precondition">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:24:16.075" level="INFO">"Test_precondition"</msg>
<status starttime="20190121 11:24:16.054" endtime="20190121 11:24:16.086" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:24:16.089" endtime="20190121 11:24:16.193" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:24:16.196" endtime="20190121 11:24:16.298" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:24:16.301" endtime="20190121 11:24:16.416" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:24:18.446" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:24:16.423" endtime="20190121 11:24:18.448" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:24:18.451" endtime="20190121 11:24:18.524" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:24:18.527" endtime="20190121 11:24:18.599" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait til the device is powered on it takes: ${BOOT_TIME}</arg>
</arguments>
<status starttime="20190121 11:24:18.602" endtime="20190121 11:24:18.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${BOOT_TIME}</arg>
</arguments>
<msg timestamp="20190121 11:25:18.643" level="INFO">Slept 1 minute</msg>
<status starttime="20190121 11:24:18.638" endtime="20190121 11:25:18.645" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>ping ${HOST_IP}</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20190121 11:25:18.653" level="INFO">Starting process:
ping 192.168.1.101</msg>
<status starttime="20190121 11:25:18.648" endtime="20190121 11:25:18.682" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:25:18.699" level="INFO">"Setup ssh"</msg>
<status starttime="20190121 11:25:18.690" endtime="20190121 11:25:18.706" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Open Ssh Connection">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg timestamp="20190121 11:25:18.725" level="INFO">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status starttime="20190121 11:25:18.718" endtime="20190121 11:25:19.579" status="PASS"></status>
</kw>
<status starttime="20190121 11:25:18.710" endtime="20190121 11:25:19.580" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh done!"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:25:19.587" level="INFO">"Setup ssh done!"</msg>
<status starttime="20190121 11:25:19.583" endtime="20190121 11:25:19.589" status="PASS"></status>
</kw>
<status starttime="20190121 11:24:16.046" endtime="20190121 11:25:19.592" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Implements Test Task SKTB-50571 OTA chorus update</arg>
</arguments>
<status starttime="20190121 11:25:19.595" endtime="20190121 11:25:19.600" status="PASS"></status>
</kw>
<kw name="PREPARE_FILE">
<doc>remove old and copy the new loader, pbl and appl debian package to the dut</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Remove old carif files</arg>
</arguments>
<status starttime="20190121 11:25:19.609" endtime="20190121 11:25:19.614" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>rm ${OLU-CARIF}*</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:25:19.622" level="INFO">Sending command to DUT rm olu-carif*</msg>
<msg timestamp="20190121 11:25:19.686" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:25:19.689" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:25:19.617" endtime="20190121 11:25:19.689" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:25:19.692" endtime="20190121 11:25:19.700" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>rm -f ${RESULT_APPL_FILE} ${RESULT_PBL_FILE}</arg>
</arguments>
<msg timestamp="20190121 11:25:19.710" level="INFO">Sending command to DUT rm -f /root/appl50571.txt /root/pbl50571.txt</msg>
<msg timestamp="20190121 11:25:19.791" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:25:19.703" endtime="20190121 11:25:19.793" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste all .deb files</arg>
</arguments>
<status starttime="20190121 11:25:19.796" endtime="20190121 11:25:19.819" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ls -al | grep ${OLU-CARIF}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:25:19.827" level="INFO">Sending command to DUT ls -al | grep olu-carif</msg>
<msg timestamp="20190121 11:25:19.902" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:25:19.904" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:25:19.822" endtime="20190121 11:25:19.905" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:25:19.908" endtime="20190121 11:25:19.920" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${LD_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_LD}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:25:19.936" level="INFO">Starting process:
find /home/debian/chorus_deb/olu-carif-ld_*.deb</msg>
<msg timestamp="20190121 11:25:19.966" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:25:19.981" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:25:19.984" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:25:19.931" endtime="20190121 11:25:19.985" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:25:19.994" level="INFO">${stdout_path} = /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<status starttime="20190121 11:25:19.989" endtime="20190121 11:25:19.995" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:25:20.003" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:25:20.005" level="INFO">${temp} = ['/home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb']</msg>
<status starttime="20190121 11:25:19.998" endtime="20190121 11:25:20.006" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:25:20.016" level="INFO">${path} = /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<status starttime="20190121 11:25:20.009" endtime="20190121 11:25:20.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:25:20.019" endtime="20190121 11:25:20.025" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190121 11:25:20.033" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:25:20.028" endtime="20190121 11:25:20.035" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:25:20.039" level="INFO">${matched_path_LD} = /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<status starttime="20190121 11:25:19.923" endtime="20190121 11:25:20.040" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum LD Original:</arg>
</arguments>
<status starttime="20190121 11:25:20.043" endtime="20190121 11:25:20.048" status="PASS"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_LD}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:25:20.064" level="INFO">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<msg timestamp="20190121 11:25:20.093" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:25:20.105" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:25:20.108" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:25:20.058" endtime="20190121 11:25:20.109" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg timestamp="20190121 11:25:20.118" level="INFO">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:25:20.113" endtime="20190121 11:25:20.119" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status starttime="20190121 11:25:20.122" endtime="20190121 11:25:20.130" status="PASS"></status>
</kw>
<status starttime="20190121 11:25:20.050" endtime="20190121 11:25:20.132" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy LD to DUT</arg>
</arguments>
<status starttime="20190121 11:25:20.135" endtime="20190121 11:25:20.140" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Upload File To Dut">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_LD}</arg>
<arg>/root</arg>
</arguments>
<msg timestamp="20190121 11:25:20.148" level="INFO">Uploading file /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb to /root</msg>
<status starttime="20190121 11:25:20.143" endtime="20190121 11:25:20.473" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${PBL_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_PBL}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:25:20.496" level="INFO">Starting process:
find /home/debian/chorus_deb/olu-carif-pbl_*.deb</msg>
<msg timestamp="20190121 11:25:20.525" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:25:20.540" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:25:20.543" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:25:20.490" endtime="20190121 11:25:20.543" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:25:20.553" level="INFO">${stdout_path} = /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:25:20.547" endtime="20190121 11:25:20.554" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:25:20.561" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:25:20.563" level="INFO">${temp} = ['/home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb']</msg>
<status starttime="20190121 11:25:20.557" endtime="20190121 11:25:20.564" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:25:20.572" level="INFO">${path} = /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:25:20.567" endtime="20190121 11:25:20.573" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:25:20.576" endtime="20190121 11:25:20.581" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190121 11:25:20.589" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:25:20.584" endtime="20190121 11:25:20.591" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:25:20.596" level="INFO">${matched_path_PBL} = /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:25:20.476" endtime="20190121 11:25:20.596" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum PBL Original:</arg>
</arguments>
<status starttime="20190121 11:25:20.599" endtime="20190121 11:25:20.604" status="PASS"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_PBL}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:25:20.621" level="INFO">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<msg timestamp="20190121 11:25:20.650" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:25:20.662" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:25:20.665" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:25:20.614" endtime="20190121 11:25:20.666" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg timestamp="20190121 11:25:20.676" level="INFO">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:25:20.670" endtime="20190121 11:25:20.677" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status starttime="20190121 11:25:20.679" endtime="20190121 11:25:20.687" status="PASS"></status>
</kw>
<status starttime="20190121 11:25:20.607" endtime="20190121 11:25:20.690" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy PBL to DUT</arg>
</arguments>
<status starttime="20190121 11:25:20.693" endtime="20190121 11:25:20.698" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Upload File To Dut">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_PBL}</arg>
<arg>/root</arg>
</arguments>
<msg timestamp="20190121 11:25:20.706" level="INFO">Uploading file /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb to /root</msg>
<status starttime="20190121 11:25:20.701" endtime="20190121 11:25:20.792" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy APPL to DUT</arg>
</arguments>
<status starttime="20190121 11:25:20.796" endtime="20190121 11:25:20.807" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${APPL_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_APPL}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:25:20.823" level="INFO">Starting process:
find /home/debian/chorus_deb/olu-carif-appl_*.deb</msg>
<msg timestamp="20190121 11:25:20.859" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:25:20.874" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:25:20.877" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:25:20.818" endtime="20190121 11:25:20.878" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:25:20.887" level="INFO">${stdout_path} = /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:25:20.881" endtime="20190121 11:25:20.888" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:25:20.895" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:25:20.898" level="INFO">${temp} = ['/home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb']</msg>
<status starttime="20190121 11:25:20.891" endtime="20190121 11:25:20.898" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:25:20.906" level="INFO">${path} = /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:25:20.901" endtime="20190121 11:25:20.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:25:20.910" endtime="20190121 11:25:20.916" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190121 11:25:20.926" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:25:20.919" endtime="20190121 11:25:20.928" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:25:20.932" level="INFO">${matched_path_APPL} = /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:25:20.809" endtime="20190121 11:25:20.933" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum APPL Original:</arg>
</arguments>
<status starttime="20190121 11:25:20.936" endtime="20190121 11:25:20.941" status="PASS"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_APPL}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:25:20.956" level="INFO">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<msg timestamp="20190121 11:25:20.985" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:25:20.999" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:25:21.002" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:25:20.951" endtime="20190121 11:25:21.003" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg timestamp="20190121 11:25:21.012" level="INFO">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:25:21.007" endtime="20190121 11:25:21.013" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status starttime="20190121 11:25:21.016" endtime="20190121 11:25:21.023" status="PASS"></status>
</kw>
<status starttime="20190121 11:25:20.943" endtime="20190121 11:25:21.026" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Upload File To Dut">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_APPL}</arg>
<arg>/root</arg>
</arguments>
<msg timestamp="20190121 11:25:21.034" level="INFO">Uploading file /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb to /root</msg>
<status starttime="20190121 11:25:21.029" endtime="20190121 11:25:21.196" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Starte sync</arg>
</arguments>
<status starttime="20190121 11:25:21.200" endtime="20190121 11:25:21.212" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>sync</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:25:21.219" level="INFO">Sending command to DUT sync</msg>
<msg timestamp="20190121 11:25:22.091" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:25:22.094" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:25:21.216" endtime="20190121 11:25:22.095" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:25:22.099" endtime="20190121 11:25:22.110" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nMD5SUM for OLU-CARIF deb packages</arg>
</arguments>
<status starttime="20190121 11:25:22.113" endtime="20190121 11:25:22.119" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>md5sum ${LD_NAME}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:25:22.127" level="INFO">Sending command to DUT md5sum olu-carif-ld_*.deb</msg>
<msg timestamp="20190121 11:25:22.195" level="INFO">Returning data (78d5b2b8e3db02fa0b883e7c72486760  olu-carif-ld_9.9.3_i386.deb, )</msg>
<msg timestamp="20190121 11:25:22.198" level="INFO">${ret} = ('78d5b2b8e3db02fa0b883e7c72486760  olu-carif-ld_9.9.3_i386.deb', '')</msg>
<status starttime="20190121 11:25:22.122" endtime="20190121 11:25:22.199" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:25:22.202" endtime="20190121 11:25:22.213" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Show all files</arg>
</arguments>
<status starttime="20190121 11:25:22.217" endtime="20190121 11:25:22.221" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ls -al | grep ${OLU-CARIF}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:25:22.229" level="INFO">Sending command to DUT ls -al | grep olu-carif</msg>
<msg timestamp="20190121 11:25:22.302" level="INFO">Returning data (-rw-r--r--    1 root     root        183256 Jan 21 11:22 olu-carif-appl_9.9.3_i386.deb -rw-r--r--    1 root     root         47808 Jan 21 11:22 olu-carif-ld_9.9.3_i386.deb -rw-r--r--    1 root     root         47984 Jan 21 11:22 olu-carif-pbl_9.9.3_i386.deb, )</msg>
<msg timestamp="20190121 11:25:22.304" level="INFO">${ret} = ('-rw-r--r--    1 root     root        183256 Jan 21 11:22 olu-carif-appl_9.9.3_i386.deb -rw-r--r--    1 root     root         47808 Jan 21 11:22 olu-carif-ld_9.9.3_i386.deb -rw-r--r--    1 root     r...</msg>
<status starttime="20190121 11:25:22.224" endtime="20190121 11:25:22.305" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:25:22.308" endtime="20190121 11:25:22.320" status="PASS"></status>
</kw>
<status starttime="20190121 11:25:19.602" endtime="20190121 11:25:22.323" status="PASS"></status>
</kw>
<kw name="UPDATE_CHORUS">
<doc>Update chorus</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Update chorus"</arg>
</arguments>
<status starttime="20190121 11:25:22.332" endtime="20190121 11:25:22.337" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>run ssh command</arg>
<arg>${ENV_PATHVAR} nohup ${DPKG_INSTALL} ${LD_NAME} ${PBL_NAME} ${APPL_NAME} &gt; ${RESULT_APPL_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>${ENV_PATHVAR} nohup ${DPKG_INSTALL} ${LD_NAME} ${PBL_NAME} ${APPL_NAME} &gt; ${RESULT_APPL_FILE}</arg>
</arguments>
<msg timestamp="20190121 11:25:22.353" level="INFO">Sending command to DUT PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin nohup dpkg -i olu-carif-ld_*.deb olu-carif-pbl_*.deb olu-carif-appl_*.deb &gt; /root/appl50571.txt</msg>
<msg timestamp="20190121 11:26:09.725" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:25:22.346" endtime="20190121 11:26:09.727" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:26:09.730" level="INFO">${ret} = ('PASS', ('', ''))</msg>
<status starttime="20190121 11:25:22.340" endtime="20190121 11:26:09.731" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Close Ssh Connection">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190121 11:26:09.754" level="INFO">Closing SSH connection to 192.168.1.101</msg>
<status starttime="20190121 11:26:09.751" endtime="20190121 11:26:09.789" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Wait until the update success, it takes: ${UPDATE_TIME}"</arg>
</arguments>
<status starttime="20190121 11:26:09.797" endtime="20190121 11:26:09.829" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${UPDATE_TIME}</arg>
</arguments>
<msg timestamp="20190121 11:26:59.847" level="INFO">Slept 50 seconds</msg>
<status starttime="20190121 11:26:09.832" endtime="20190121 11:26:59.849" status="PASS"></status>
</kw>
<kw name="check_stdoutfile">
<doc>Check stdout file</doc>
<arguments>
<arg>${RESULT_APPL_FILE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Check stdout file: ${result_file}</arg>
</arguments>
<status starttime="20190121 11:26:59.859" endtime="20190121 11:26:59.865" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Close Ssh Connection">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190121 11:26:59.871" level="INFO">No SSH connection currently established.</msg>
<status starttime="20190121 11:26:59.868" endtime="20190121 11:26:59.873" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:26:59.876" endtime="20190121 11:26:59.920" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:26:59.929" endtime="20190121 11:26:59.978" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:27:00.052" level="INFO">${KLEMME30} = [[0, 0], [0, 0]]</msg>
<status starttime="20190121 11:26:59.997" endtime="20190121 11:27:00.055" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:27:00.105" level="INFO">${CURR_VCARBAT} = 0</msg>
<status starttime="20190121 11:27:00.058" endtime="20190121 11:27:00.106" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:27:00.135" level="INFO">${CURR_KL30} = 0</msg>
<status starttime="20190121 11:27:00.108" endtime="20190121 11:27:00.136" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:27:00.144" level="INFO">${TIMENOW} = 1548070020</msg>
<status starttime="20190121 11:27:00.139" endtime="20190121 11:27:00.145" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:27:00.147" endtime="20190121 11:27:00.155" status="PASS"></status>
</kw>
<status starttime="20190121 11:26:59.985" endtime="20190121 11:27:00.160" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait 5 seconds</arg>
</arguments>
<status starttime="20190121 11:27:00.163" endtime="20190121 11:27:00.167" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5 seconds</arg>
</arguments>
<msg timestamp="20190121 11:27:05.174" level="INFO">Slept 5 seconds</msg>
<status starttime="20190121 11:27:00.170" endtime="20190121 11:27:05.176" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:27:05.179" endtime="20190121 11:27:05.228" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:27:05.231" endtime="20190121 11:27:05.278" status="PASS"></status>
</kw>
<kw name="WAIT_UNTIL_DEVICE_IS_READY">
<doc>Waiting for device to be ready, up to 90 seconds</doc>
<assign>
<var>${status}</var>
</assign>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${secs}</var>
</assign>
<msg timestamp="20190121 11:27:05.291" level="INFO">${secs} = 1548070025</msg>
<status starttime="20190121 11:27:05.287" endtime="20190121 11:27:05.292" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Waiting for device to be ready, up to 90 seconds. Timestamp: ${secs}\n</arg>
<arg>console=true</arg>
</arguments>
<msg timestamp="20190121 11:27:05.299" level="INFO">Waiting for device to be ready, up to 90 seconds. Timestamp: 1548070025
</msg>
<status starttime="20190121 11:27:05.295" endtime="20190121 11:27:05.302" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Return Status">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait until keyword succeeds</arg>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:05.331" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:05.360" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:05.380" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:05.383" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:05.325" endtime="20190121 11:27:05.384" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:05.397" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:05.388" endtime="20190121 11:27:05.398" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:05.409" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:05.401" endtime="20190121 11:27:05.410" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:05.317" endtime="20190121 11:27:05.414" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:05.568" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:05.601" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:05.621" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:05.624" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:05.557" endtime="20190121 11:27:05.625" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:05.642" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:05.629" endtime="20190121 11:27:05.642" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:05.653" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:05.645" endtime="20190121 11:27:05.655" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:05.537" endtime="20190121 11:27:05.657" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:05.795" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:05.823" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:05.844" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:05.847" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:05.788" endtime="20190121 11:27:05.847" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:05.861" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:05.852" endtime="20190121 11:27:05.862" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:05.873" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:05.865" endtime="20190121 11:27:05.874" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:05.780" endtime="20190121 11:27:05.877" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:06.016" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:06.044" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:06.064" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:06.067" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:06.009" endtime="20190121 11:27:06.070" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:06.085" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:06.075" endtime="20190121 11:27:06.086" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:06.097" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:06.089" endtime="20190121 11:27:06.098" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:06.000" endtime="20190121 11:27:06.101" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:06.249" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:06.277" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:06.297" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:06.300" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:06.242" endtime="20190121 11:27:06.301" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:06.314" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:06.305" endtime="20190121 11:27:06.315" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:06.326" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:06.318" endtime="20190121 11:27:06.329" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:06.225" endtime="20190121 11:27:06.332" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:06.474" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:06.502" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:06.523" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:06.526" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:06.464" endtime="20190121 11:27:06.527" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:06.539" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:06.531" endtime="20190121 11:27:06.540" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:06.560" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:06.551" endtime="20190121 11:27:06.562" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:06.456" endtime="20190121 11:27:06.565" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:06.702" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:06.731" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:06.753" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:06.757" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:06.696" endtime="20190121 11:27:06.758" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:06.770" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:06.761" endtime="20190121 11:27:06.771" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:06.782" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:06.774" endtime="20190121 11:27:06.783" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:06.688" endtime="20190121 11:27:06.786" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:06.924" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:06.953" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:06.973" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:06.976" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:06.918" endtime="20190121 11:27:06.977" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:06.990" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:06.981" endtime="20190121 11:27:06.991" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:07.002" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:06.994" endtime="20190121 11:27:07.003" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:06.910" endtime="20190121 11:27:07.007" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:07.145" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:07.173" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:07.193" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:07.197" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:07.138" endtime="20190121 11:27:07.198" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:07.211" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:07.201" endtime="20190121 11:27:07.212" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:07.223" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:07.215" endtime="20190121 11:27:07.224" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:07.130" endtime="20190121 11:27:07.227" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:07.369" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:07.401" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:07.474" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:07.477" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:07.359" endtime="20190121 11:27:07.478" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:07.519" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:07.489" endtime="20190121 11:27:07.520" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:07.538" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:07.523" endtime="20190121 11:27:07.540" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:07.351" endtime="20190121 11:27:07.547" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:07.685" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:07.713" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:07.733" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:07.736" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:07.678" endtime="20190121 11:27:07.737" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:07.750" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:07.741" endtime="20190121 11:27:07.751" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:07.762" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:07.754" endtime="20190121 11:27:07.763" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:07.670" endtime="20190121 11:27:07.766" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:07.904" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:07.934" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:07.954" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:07.957" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:07.898" endtime="20190121 11:27:07.958" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:07.971" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:07.962" endtime="20190121 11:27:07.972" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:07.983" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:07.975" endtime="20190121 11:27:07.984" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:07.890" endtime="20190121 11:27:07.987" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:08.127" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:08.155" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:08.175" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:08.178" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:08.120" endtime="20190121 11:27:08.179" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:08.192" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:08.183" endtime="20190121 11:27:08.193" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:08.204" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:08.196" endtime="20190121 11:27:08.205" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:08.111" endtime="20190121 11:27:08.208" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:08.350" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:08.378" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:08.398" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:08.402" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:08.340" endtime="20190121 11:27:08.403" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:08.417" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:08.406" endtime="20190121 11:27:08.417" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:08.428" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:08.420" endtime="20190121 11:27:08.430" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:08.331" endtime="20190121 11:27:08.433" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:08.570" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:08.599" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:08.619" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:08.622" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:08.564" endtime="20190121 11:27:08.623" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:08.636" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:08.627" endtime="20190121 11:27:08.637" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:08.648" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:08.640" endtime="20190121 11:27:08.649" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:08.556" endtime="20190121 11:27:08.652" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:08.790" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:08.818" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:08.838" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:08.842" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:08.783" endtime="20190121 11:27:08.843" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:08.855" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:08.846" endtime="20190121 11:27:08.856" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:08.867" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:08.859" endtime="20190121 11:27:08.869" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:08.775" endtime="20190121 11:27:08.872" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:09.010" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:09.038" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:09.058" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:09.062" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:09.003" endtime="20190121 11:27:09.063" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:09.075" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:09.066" endtime="20190121 11:27:09.076" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:09.087" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:09.079" endtime="20190121 11:27:09.089" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:08.995" endtime="20190121 11:27:09.092" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:09.234" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:09.262" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:09.283" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:09.286" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:09.223" endtime="20190121 11:27:09.287" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:09.300" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:09.291" endtime="20190121 11:27:09.301" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:09.311" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:09.303" endtime="20190121 11:27:09.313" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:09.215" endtime="20190121 11:27:09.316" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:09.454" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:09.482" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:09.502" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:09.505" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:09.447" endtime="20190121 11:27:09.506" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:09.519" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:09.510" endtime="20190121 11:27:09.520" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:09.532" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:09.524" endtime="20190121 11:27:09.534" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:09.439" endtime="20190121 11:27:09.537" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:09.674" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:09.733" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:09.753" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:09.756" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:09.668" endtime="20190121 11:27:09.757" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:09.770" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:09.761" endtime="20190121 11:27:09.771" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:09.782" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:09.774" endtime="20190121 11:27:09.784" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:09.660" endtime="20190121 11:27:09.787" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:09.925" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:09.954" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:09.975" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:09.978" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:09.919" endtime="20190121 11:27:09.979" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:09.992" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:09.983" endtime="20190121 11:27:09.993" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:10.004" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:09.996" endtime="20190121 11:27:10.006" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:09.910" endtime="20190121 11:27:10.009" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:10.151" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:10.180" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:10.200" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:10.203" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:10.141" endtime="20190121 11:27:10.204" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:10.217" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:10.208" endtime="20190121 11:27:10.218" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:10.229" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:10.221" endtime="20190121 11:27:10.230" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:10.132" endtime="20190121 11:27:10.233" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:10.371" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:10.400" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:10.420" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:10.423" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:10.364" endtime="20190121 11:27:10.424" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:10.437" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:10.428" endtime="20190121 11:27:10.437" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:10.448" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:10.440" endtime="20190121 11:27:10.450" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:10.356" endtime="20190121 11:27:10.453" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:10.591" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:10.620" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:10.640" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:10.643" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:10.584" endtime="20190121 11:27:10.644" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:10.659" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:10.647" endtime="20190121 11:27:10.660" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:10.672" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:10.663" endtime="20190121 11:27:10.673" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:10.576" endtime="20190121 11:27:10.676" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:10.814" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:10.843" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:10.863" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:10.866" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:10.808" endtime="20190121 11:27:10.867" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:10.880" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:10.871" endtime="20190121 11:27:10.881" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:10.891" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:10.884" endtime="20190121 11:27:10.893" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:10.800" endtime="20190121 11:27:10.896" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:11.041" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:11.069" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:11.089" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:11.093" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:11.028" endtime="20190121 11:27:11.094" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:11.107" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:11.098" endtime="20190121 11:27:11.107" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:11.119" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:11.111" endtime="20190121 11:27:11.120" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:11.019" endtime="20190121 11:27:11.123" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:11.281" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:11.346" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:11.382" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:11.385" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:11.267" endtime="20190121 11:27:11.386" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:11.400" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:11.390" endtime="20190121 11:27:11.401" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:11.411" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:11.403" endtime="20190121 11:27:11.413" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:11.251" endtime="20190121 11:27:11.416" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:11.554" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:11.582" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:11.602" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:11.606" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:11.547" endtime="20190121 11:27:11.606" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:11.619" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:11.611" endtime="20190121 11:27:11.620" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:11.631" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:11.623" endtime="20190121 11:27:11.633" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:11.539" endtime="20190121 11:27:11.636" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:11.774" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:11.803" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:11.823" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:11.826" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:11.767" endtime="20190121 11:27:11.827" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:11.840" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:11.831" endtime="20190121 11:27:11.841" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:11.851" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:11.843" endtime="20190121 11:27:11.854" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:11.759" endtime="20190121 11:27:11.857" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:11.999" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:12.028" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:12.048" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:12.051" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:11.988" endtime="20190121 11:27:12.052" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:12.065" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:12.056" endtime="20190121 11:27:12.066" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:12.077" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:12.069" endtime="20190121 11:27:12.078" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:11.980" endtime="20190121 11:27:12.082" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:12.220" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:12.248" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:12.269" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:12.272" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:12.213" endtime="20190121 11:27:12.273" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:12.286" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:12.277" endtime="20190121 11:27:12.286" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:12.297" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:12.289" endtime="20190121 11:27:12.299" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:12.206" endtime="20190121 11:27:12.302" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:12.440" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:12.468" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:12.488" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:12.491" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:12.434" endtime="20190121 11:27:12.492" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:12.505" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:12.496" endtime="20190121 11:27:12.506" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:12.517" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:12.509" endtime="20190121 11:27:12.519" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:12.425" endtime="20190121 11:27:12.522" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:12.659" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:12.687" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:12.708" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:12.710" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:12.653" endtime="20190121 11:27:12.711" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:12.724" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:12.715" endtime="20190121 11:27:12.725" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:12.736" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:12.728" endtime="20190121 11:27:12.737" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:12.645" endtime="20190121 11:27:12.741" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:12.882" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:12.911" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:12.931" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:12.934" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:12.872" endtime="20190121 11:27:12.935" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:12.950" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:12.941" endtime="20190121 11:27:12.950" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:12.961" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:12.953" endtime="20190121 11:27:12.962" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:12.864" endtime="20190121 11:27:12.966" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:13.105" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:13.133" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:13.153" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:13.156" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:13.098" endtime="20190121 11:27:13.157" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:13.170" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:13.161" endtime="20190121 11:27:13.171" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:13.182" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:13.174" endtime="20190121 11:27:13.183" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:13.090" endtime="20190121 11:27:13.186" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:13.325" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:13.353" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:13.373" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:13.376" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:13.318" endtime="20190121 11:27:13.377" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:13.390" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:13.381" endtime="20190121 11:27:13.391" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:13.402" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:13.394" endtime="20190121 11:27:13.404" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:13.310" endtime="20190121 11:27:13.407" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:13.548" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:13.576" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:13.596" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:13.599" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:13.540" endtime="20190121 11:27:13.601" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:13.614" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:13.605" endtime="20190121 11:27:13.614" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:13.625" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:13.617" endtime="20190121 11:27:13.627" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:13.530" endtime="20190121 11:27:13.630" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:13.781" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:13.809" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:13.830" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:13.833" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:13.761" endtime="20190121 11:27:13.834" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:13.846" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:13.838" endtime="20190121 11:27:13.847" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:13.858" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:13.850" endtime="20190121 11:27:13.859" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:13.753" endtime="20190121 11:27:13.862" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:14.000" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:14.030" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:14.050" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:14.054" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:13.994" endtime="20190121 11:27:14.055" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:14.067" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:14.058" endtime="20190121 11:27:14.068" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:14.079" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:14.071" endtime="20190121 11:27:14.081" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:13.986" endtime="20190121 11:27:14.084" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:14.224" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:14.253" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:14.276" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:14.279" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:14.217" endtime="20190121 11:27:14.280" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:14.294" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:14.285" endtime="20190121 11:27:14.295" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:14.308" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:14.299" endtime="20190121 11:27:14.309" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:14.207" endtime="20190121 11:27:14.312" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:14.451" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:14.480" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:14.500" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:14.504" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:14.444" endtime="20190121 11:27:14.505" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:14.518" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:14.509" endtime="20190121 11:27:14.518" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:14.529" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:14.521" endtime="20190121 11:27:14.531" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:14.435" endtime="20190121 11:27:14.534" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:14.671" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:14.705" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:14.726" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:14.729" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:14.665" endtime="20190121 11:27:14.730" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:14.743" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:14.734" endtime="20190121 11:27:14.744" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:14.755" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:14.747" endtime="20190121 11:27:14.756" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:14.657" endtime="20190121 11:27:14.759" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:14.897" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:14.925" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:14.945" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:14.949" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:14.890" endtime="20190121 11:27:14.950" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:14.962" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:14.953" endtime="20190121 11:27:14.963" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:14.974" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:14.966" endtime="20190121 11:27:14.975" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:14.882" endtime="20190121 11:27:14.979" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:15.117" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:15.146" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:15.166" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:15.169" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:15.110" endtime="20190121 11:27:15.171" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:15.184" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:15.175" endtime="20190121 11:27:15.185" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:15.195" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:15.187" endtime="20190121 11:27:15.197" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:15.102" endtime="20190121 11:27:15.200" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:15.340" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:15.368" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:15.388" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:15.391" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:15.332" endtime="20190121 11:27:15.392" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:15.405" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:15.396" endtime="20190121 11:27:15.406" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:15.417" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:15.409" endtime="20190121 11:27:15.418" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:15.323" endtime="20190121 11:27:15.421" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:15.559" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:15.587" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:15.608" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:15.611" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:15.553" endtime="20190121 11:27:15.612" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:15.629" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:15.616" endtime="20190121 11:27:15.630" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:15.641" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:15.633" endtime="20190121 11:27:15.642" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:15.545" endtime="20190121 11:27:15.645" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:15.782" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:15.811" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:15.831" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:15.834" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:15.776" endtime="20190121 11:27:15.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:15.848" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:15.839" endtime="20190121 11:27:15.849" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:15.860" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:15.852" endtime="20190121 11:27:15.861" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:15.768" endtime="20190121 11:27:15.864" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:16.002" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:16.031" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:16.051" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:16.054" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:15.995" endtime="20190121 11:27:16.055" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:16.068" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:16.059" endtime="20190121 11:27:16.069" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:16.079" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:16.072" endtime="20190121 11:27:16.081" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:15.987" endtime="20190121 11:27:16.084" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:16.222" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:16.250" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:16.270" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:16.274" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:16.215" endtime="20190121 11:27:16.275" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:16.288" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:16.278" endtime="20190121 11:27:16.289" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:16.299" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:16.292" endtime="20190121 11:27:16.301" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:16.207" endtime="20190121 11:27:16.304" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:16.442" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:16.476" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:16.496" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:16.499" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:16.435" endtime="20190121 11:27:16.500" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:16.513" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:16.504" endtime="20190121 11:27:16.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:16.529" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:16.517" endtime="20190121 11:27:16.530" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:16.427" endtime="20190121 11:27:16.533" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:16.671" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:16.699" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:16.719" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:16.722" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:16.664" endtime="20190121 11:27:16.723" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:16.736" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:16.727" endtime="20190121 11:27:16.737" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:16.747" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:16.740" endtime="20190121 11:27:16.749" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:16.656" endtime="20190121 11:27:16.752" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:16.914" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:16.949" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:16.970" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:16.973" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:16.902" endtime="20190121 11:27:16.974" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:16.987" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:16.978" endtime="20190121 11:27:16.987" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:16.998" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:16.990" endtime="20190121 11:27:17.000" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:16.886" endtime="20190121 11:27:17.003" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:17.141" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:17.169" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:17.190" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:17.194" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:17.134" endtime="20190121 11:27:17.195" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:17.207" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:17.199" endtime="20190121 11:27:17.209" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:17.220" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:17.212" endtime="20190121 11:27:17.222" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:17.126" endtime="20190121 11:27:17.225" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:17.363" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:17.394" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:17.415" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:17.418" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:17.356" endtime="20190121 11:27:17.419" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:17.432" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:17.423" endtime="20190121 11:27:17.433" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:17.449" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:17.436" endtime="20190121 11:27:17.450" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:17.348" endtime="20190121 11:27:17.453" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:17.592" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:17.621" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:17.642" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:17.646" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:17.586" endtime="20190121 11:27:17.647" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:17.660" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:17.651" endtime="20190121 11:27:17.660" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:17.671" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:17.663" endtime="20190121 11:27:17.673" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:17.576" endtime="20190121 11:27:17.676" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:17.862" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:17.931" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:17.970" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:17.973" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:17.847" endtime="20190121 11:27:17.974" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:18.004" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:17.994" endtime="20190121 11:27:18.005" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:18.031" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:18.014" endtime="20190121 11:27:18.032" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:17.807" endtime="20190121 11:27:18.036" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:18.174" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:18.202" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:18.222" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:18.225" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:18.167" endtime="20190121 11:27:18.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:18.240" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:18.230" endtime="20190121 11:27:18.241" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:18.251" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:18.243" endtime="20190121 11:27:18.253" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:18.159" endtime="20190121 11:27:18.256" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:18.394" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:18.423" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:18.443" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:18.446" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:18.387" endtime="20190121 11:27:18.447" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:18.460" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:18.451" endtime="20190121 11:27:18.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:18.472" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:18.464" endtime="20190121 11:27:18.473" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:18.379" endtime="20190121 11:27:18.476" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:18.624" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:18.694" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:18.734" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:18.737" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:18.613" endtime="20190121 11:27:18.738" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:18.785" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:18.762" endtime="20190121 11:27:18.786" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:18.807" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:18.789" endtime="20190121 11:27:18.809" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:18.599" endtime="20190121 11:27:18.830" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:18.994" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:19.052" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:19.091" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:19.094" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:18.964" endtime="20190121 11:27:19.095" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:19.139" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:19.109" endtime="20190121 11:27:19.140" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:19.160" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:19.143" endtime="20190121 11:27:19.171" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:18.955" endtime="20190121 11:27:19.174" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:19.334" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:19.401" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:19.430" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:19.433" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:19.319" endtime="20190121 11:27:19.434" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:19.459" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:19.450" endtime="20190121 11:27:19.460" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:19.506" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:19.472" endtime="20190121 11:27:19.507" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:19.302" endtime="20190121 11:27:19.511" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:19.680" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:19.738" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:19.763" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:19.766" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:19.654" endtime="20190121 11:27:19.767" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:19.823" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:19.795" endtime="20190121 11:27:19.824" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:19.856" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:19.828" endtime="20190121 11:27:19.857" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:19.637" endtime="20190121 11:27:19.861" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:20.056" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:20.113" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:20.130" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:20.134" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:20.037" endtime="20190121 11:27:20.135" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:20.147" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:20.138" endtime="20190121 11:27:20.148" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:20.159" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:20.151" endtime="20190121 11:27:20.160" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:20.003" endtime="20190121 11:27:20.163" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:20.301" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:20.330" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:20.350" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:20.354" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:20.295" endtime="20190121 11:27:20.355" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:20.367" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:20.358" endtime="20190121 11:27:20.368" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:20.379" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:20.371" endtime="20190121 11:27:20.381" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:20.287" endtime="20190121 11:27:20.384" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:20.523" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:20.551" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:20.572" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:20.575" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:20.516" endtime="20190121 11:27:20.576" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:20.590" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:20.580" endtime="20190121 11:27:20.591" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:20.602" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:20.594" endtime="20190121 11:27:20.603" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:20.508" endtime="20190121 11:27:20.607" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:20.745" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:20.773" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:20.793" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:20.796" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:20.738" endtime="20190121 11:27:20.797" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:20.810" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:20.801" endtime="20190121 11:27:20.811" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:20.822" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:20.814" endtime="20190121 11:27:20.823" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:20.730" endtime="20190121 11:27:20.827" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:20.968" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:20.997" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:21.017" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:21.021" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:20.958" endtime="20190121 11:27:21.022" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:21.034" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:21.025" endtime="20190121 11:27:21.035" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:21.046" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:21.038" endtime="20190121 11:27:21.048" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:20.950" endtime="20190121 11:27:21.051" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:21.189" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:21.217" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:21.237" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:21.240" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:21.182" endtime="20190121 11:27:21.241" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:21.255" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:21.246" endtime="20190121 11:27:21.256" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:21.267" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:21.259" endtime="20190121 11:27:21.268" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:21.174" endtime="20190121 11:27:21.271" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:21.410" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:21.438" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:21.458" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:21.462" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:21.403" endtime="20190121 11:27:21.463" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:21.476" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:21.467" endtime="20190121 11:27:21.477" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:21.487" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:21.480" endtime="20190121 11:27:21.489" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:21.395" endtime="20190121 11:27:21.492" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:21.630" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:21.659" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:21.680" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:21.683" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:21.623" endtime="20190121 11:27:21.685" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:21.697" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:21.688" endtime="20190121 11:27:21.699" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:21.710" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:21.702" endtime="20190121 11:27:21.712" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:21.615" endtime="20190121 11:27:21.715" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:21.856" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:21.885" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:21.912" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:21.915" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:21.846" endtime="20190121 11:27:21.916" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:21.930" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:21.920" endtime="20190121 11:27:21.930" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:21.941" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:21.933" endtime="20190121 11:27:21.943" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:21.838" endtime="20190121 11:27:21.946" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:22.084" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:22.112" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:22.134" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:22.138" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:22.078" endtime="20190121 11:27:22.139" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:22.151" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:22.142" endtime="20190121 11:27:22.152" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:22.164" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:22.155" endtime="20190121 11:27:22.165" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:22.069" endtime="20190121 11:27:22.168" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:22.307" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:22.335" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:22.355" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:22.358" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:22.300" endtime="20190121 11:27:22.359" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:22.372" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:22.363" endtime="20190121 11:27:22.373" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:22.384" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:22.376" endtime="20190121 11:27:22.386" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:22.292" endtime="20190121 11:27:22.389" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:22.527" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:22.556" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:22.576" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:22.579" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:22.521" endtime="20190121 11:27:22.581" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:22.594" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:22.585" endtime="20190121 11:27:22.595" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:22.605" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:22.597" endtime="20190121 11:27:22.607" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:22.512" endtime="20190121 11:27:22.610" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:22.751" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:22.780" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:22.800" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:22.803" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:22.741" endtime="20190121 11:27:22.805" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:22.818" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:22.809" endtime="20190121 11:27:22.819" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:22.831" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:22.821" endtime="20190121 11:27:22.832" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:22.733" endtime="20190121 11:27:22.835" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:22.973" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:23.001" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:23.022" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:23.026" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:22.966" endtime="20190121 11:27:23.027" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:23.040" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:23.031" endtime="20190121 11:27:23.041" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:23.051" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:23.043" endtime="20190121 11:27:23.053" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:22.958" endtime="20190121 11:27:23.056" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:23.194" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:23.222" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:23.243" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:23.246" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:23.187" endtime="20190121 11:27:23.247" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:23.260" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:23.251" endtime="20190121 11:27:23.261" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:23.273" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:23.264" endtime="20190121 11:27:23.275" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:23.179" endtime="20190121 11:27:23.278" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:23.416" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:23.444" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:23.466" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:23.469" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:23.409" endtime="20190121 11:27:23.472" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:23.490" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:23.477" endtime="20190121 11:27:23.490" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:23.505" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:23.495" endtime="20190121 11:27:23.506" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:23.401" endtime="20190121 11:27:23.510" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:23.647" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:23.680" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:23.701" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:23.704" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:23.641" endtime="20190121 11:27:23.705" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:23.718" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:23.709" endtime="20190121 11:27:23.719" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:23.730" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:23.722" endtime="20190121 11:27:23.731" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:23.633" endtime="20190121 11:27:23.734" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:23.872" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:23.900" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:23.921" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:23.924" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:23.865" endtime="20190121 11:27:23.925" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:23.940" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:23.931" endtime="20190121 11:27:23.941" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:23.953" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:23.944" endtime="20190121 11:27:23.954" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:23.857" endtime="20190121 11:27:23.957" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:24.097" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:24.125" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:24.145" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:24.148" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:24.090" endtime="20190121 11:27:24.149" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:24.162" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:24.153" endtime="20190121 11:27:24.163" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:24.174" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:24.166" endtime="20190121 11:27:24.176" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:24.080" endtime="20190121 11:27:24.179" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:24.317" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:24.347" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:24.367" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:24.370" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:24.310" endtime="20190121 11:27:24.371" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:24.383" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:24.375" endtime="20190121 11:27:24.384" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:24.395" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:24.387" endtime="20190121 11:27:24.397" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:24.302" endtime="20190121 11:27:24.400" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:24.542" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:24.570" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:24.591" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:24.594" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:24.531" endtime="20190121 11:27:24.595" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:24.608" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:24.598" endtime="20190121 11:27:24.609" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:24.619" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:24.612" endtime="20190121 11:27:24.621" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:24.523" endtime="20190121 11:27:24.624" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:24.762" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:24.791" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:24.811" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:24.814" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:24.755" endtime="20190121 11:27:24.815" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:24.829" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:24.819" endtime="20190121 11:27:24.830" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:24.840" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:24.832" endtime="20190121 11:27:24.842" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:24.747" endtime="20190121 11:27:24.845" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:24.983" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:25.013" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:25.035" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:25.038" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:24.976" endtime="20190121 11:27:25.039" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:25.053" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:25.044" endtime="20190121 11:27:25.054" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:25.064" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:25.057" endtime="20190121 11:27:25.066" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:24.968" endtime="20190121 11:27:25.070" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:25.208" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:25.237" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:25.257" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:25.260" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:25.201" endtime="20190121 11:27:25.261" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:25.274" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:25.265" endtime="20190121 11:27:25.275" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:25.286" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:25.278" endtime="20190121 11:27:25.287" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:25.193" endtime="20190121 11:27:25.291" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:25.442" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:25.471" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:25.491" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:25.494" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:25.422" endtime="20190121 11:27:25.495" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:25.508" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:25.499" endtime="20190121 11:27:25.509" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:25.520" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:25.512" endtime="20190121 11:27:25.521" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:25.414" endtime="20190121 11:27:25.525" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:25.662" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:25.691" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:25.711" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:25.714" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:25.656" endtime="20190121 11:27:25.715" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:25.727" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:25.718" endtime="20190121 11:27:25.729" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:25.740" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:25.732" endtime="20190121 11:27:25.741" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:25.648" endtime="20190121 11:27:25.744" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:25.882" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:25.910" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:25.930" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:25.934" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:25.875" endtime="20190121 11:27:25.935" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:25.947" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:25.938" endtime="20190121 11:27:25.948" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:25.959" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:25.951" endtime="20190121 11:27:25.961" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:25.867" endtime="20190121 11:27:25.964" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:26.103" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:26.131" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:26.151" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:26.154" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:26.096" endtime="20190121 11:27:26.155" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:26.168" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:26.159" endtime="20190121 11:27:26.169" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:26.180" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:26.172" endtime="20190121 11:27:26.181" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:26.087" endtime="20190121 11:27:26.184" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:26.324" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:26.352" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:26.373" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:26.376" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:26.317" endtime="20190121 11:27:26.377" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:26.394" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:26.381" endtime="20190121 11:27:26.395" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:26.405" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:26.398" endtime="20190121 11:27:26.407" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:26.309" endtime="20190121 11:27:26.410" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:26.547" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:26.576" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:26.597" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:26.600" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:26.541" endtime="20190121 11:27:26.601" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:26.614" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:26.605" endtime="20190121 11:27:26.615" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:26.626" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:26.618" endtime="20190121 11:27:26.627" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:26.533" endtime="20190121 11:27:26.631" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:26.768" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:26.797" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:26.817" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:26.820" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:26.762" endtime="20190121 11:27:26.821" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:26.834" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:26.825" endtime="20190121 11:27:26.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:26.846" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:26.838" endtime="20190121 11:27:26.847" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:26.754" endtime="20190121 11:27:26.850" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:26.988" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:27.016" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:27.037" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:27.040" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:26.981" endtime="20190121 11:27:27.041" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:27.054" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:27.045" endtime="20190121 11:27:27.055" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:27.066" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:27.058" endtime="20190121 11:27:27.067" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:26.973" endtime="20190121 11:27:27.070" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:27.208" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:27.236" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:27.256" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:27.259" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:27.202" endtime="20190121 11:27:27.261" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:27.274" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:27.265" endtime="20190121 11:27:27.275" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:27.290" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:27.278" endtime="20190121 11:27:27.291" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:27.194" endtime="20190121 11:27:27.294" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:27.437" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:27.466" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:27.486" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:27.490" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:27.425" endtime="20190121 11:27:27.491" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:27.503" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:27.495" endtime="20190121 11:27:27.504" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:27.515" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:27.507" endtime="20190121 11:27:27.517" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:27.417" endtime="20190121 11:27:27.520" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:27.658" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:27.686" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:27.706" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:27.710" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:27.651" endtime="20190121 11:27:27.710" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:27.723" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:27.714" endtime="20190121 11:27:27.724" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:27.735" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:27.727" endtime="20190121 11:27:27.737" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:27.643" endtime="20190121 11:27:27.740" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:27.878" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:27.906" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:27.926" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:27.930" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:27.871" endtime="20190121 11:27:27.930" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:27.944" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:27.935" endtime="20190121 11:27:27.945" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:27.956" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:27.948" endtime="20190121 11:27:27.957" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:27.863" endtime="20190121 11:27:27.960" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:28.098" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:28.126" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:28.146" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:28.150" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:28.092" endtime="20190121 11:27:28.151" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:28.163" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:28.154" endtime="20190121 11:27:28.164" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:28.179" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:28.167" endtime="20190121 11:27:28.181" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:28.083" endtime="20190121 11:27:28.184" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:28.322" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:28.350" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:28.371" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:28.374" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:28.315" endtime="20190121 11:27:28.375" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:28.387" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:28.379" endtime="20190121 11:27:28.389" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:28.399" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:28.392" endtime="20190121 11:27:28.401" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:28.307" endtime="20190121 11:27:28.404" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:28.542" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:28.572" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:28.592" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:28.595" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:28.535" endtime="20190121 11:27:28.596" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:28.610" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:28.601" endtime="20190121 11:27:28.610" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:28.621" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:28.613" endtime="20190121 11:27:28.623" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:28.527" endtime="20190121 11:27:28.626" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:28.764" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:28.792" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:28.812" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:28.815" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:28.757" endtime="20190121 11:27:28.816" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:28.829" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:28.820" endtime="20190121 11:27:28.830" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:28.841" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:28.833" endtime="20190121 11:27:28.842" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:28.749" endtime="20190121 11:27:28.846" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:28.983" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:29.011" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:29.032" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:29.035" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:28.977" endtime="20190121 11:27:29.036" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:29.049" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:29.040" endtime="20190121 11:27:29.050" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:29.061" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:29.053" endtime="20190121 11:27:29.062" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:28.969" endtime="20190121 11:27:29.065" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:29.207" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:29.236" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:29.256" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:29.259" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:29.201" endtime="20190121 11:27:29.260" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:29.273" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:29.264" endtime="20190121 11:27:29.274" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:29.285" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:29.277" endtime="20190121 11:27:29.286" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:29.188" endtime="20190121 11:27:29.289" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:29.427" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:29.456" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:29.476" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:29.479" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:29.421" endtime="20190121 11:27:29.481" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:29.493" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:29.485" endtime="20190121 11:27:29.494" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:29.505" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:29.497" endtime="20190121 11:27:29.507" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:29.413" endtime="20190121 11:27:29.510" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:29.648" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:29.677" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:29.698" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:29.701" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:29.641" endtime="20190121 11:27:29.702" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:29.715" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:29.706" endtime="20190121 11:27:29.716" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:29.726" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:29.719" endtime="20190121 11:27:29.728" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:29.633" endtime="20190121 11:27:29.731" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:29.869" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:29.897" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:29.917" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:29.920" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:29.862" endtime="20190121 11:27:29.921" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:29.934" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:29.925" endtime="20190121 11:27:29.935" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:29.946" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:29.939" endtime="20190121 11:27:29.948" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:29.854" endtime="20190121 11:27:29.951" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:30.093" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:30.143" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:30.162" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:30.165" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:30.086" endtime="20190121 11:27:30.166" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:30.179" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:30.170" endtime="20190121 11:27:30.180" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:30.191" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:30.183" endtime="20190121 11:27:30.193" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:30.074" endtime="20190121 11:27:30.196" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:30.334" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:30.362" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:30.382" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:30.386" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:30.327" endtime="20190121 11:27:30.386" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:30.399" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:30.390" endtime="20190121 11:27:30.400" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:30.411" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:30.403" endtime="20190121 11:27:30.412" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:30.319" endtime="20190121 11:27:30.415" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:30.553" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:30.581" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:30.602" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:30.605" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:30.547" endtime="20190121 11:27:30.606" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:30.624" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:30.610" endtime="20190121 11:27:30.625" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:30.636" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:30.628" endtime="20190121 11:27:30.640" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:30.538" endtime="20190121 11:27:30.647" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:30.787" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:30.815" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:30.836" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:30.839" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:30.780" endtime="20190121 11:27:30.841" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:30.854" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:30.845" endtime="20190121 11:27:30.855" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:30.866" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:30.858" endtime="20190121 11:27:30.867" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:30.772" endtime="20190121 11:27:30.870" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:31.012" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:31.041" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:31.061" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:31.064" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:31.001" endtime="20190121 11:27:31.065" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:31.078" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:31.069" endtime="20190121 11:27:31.079" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:31.090" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:31.082" endtime="20190121 11:27:31.091" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:30.993" endtime="20190121 11:27:31.094" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:31.232" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:31.260" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:31.281" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:31.284" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:31.225" endtime="20190121 11:27:31.285" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:31.298" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:31.289" endtime="20190121 11:27:31.298" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:31.309" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:31.301" endtime="20190121 11:27:31.311" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:31.217" endtime="20190121 11:27:31.314" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:31.470" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:31.530" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:31.563" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:31.566" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:31.450" endtime="20190121 11:27:31.567" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:31.592" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:31.571" endtime="20190121 11:27:31.593" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:31.616" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:31.596" endtime="20190121 11:27:31.618" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:31.442" endtime="20190121 11:27:31.621" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:31.780" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:31.813" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:31.848" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:31.851" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:31.773" endtime="20190121 11:27:31.852" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:31.870" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:31.856" endtime="20190121 11:27:31.871" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:31.892" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:31.884" endtime="20190121 11:27:31.914" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:31.762" endtime="20190121 11:27:31.917" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:32.055" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:32.084" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:32.110" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:32.113" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:32.049" endtime="20190121 11:27:32.114" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:32.127" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:32.117" endtime="20190121 11:27:32.128" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:32.139" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:32.131" endtime="20190121 11:27:32.140" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:32.040" endtime="20190121 11:27:32.143" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:32.281" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:32.309" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:32.329" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:32.332" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:32.274" endtime="20190121 11:27:32.334" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:32.347" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:32.338" endtime="20190121 11:27:32.348" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:32.359" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:32.351" endtime="20190121 11:27:32.360" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:32.267" endtime="20190121 11:27:32.363" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:32.501" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:32.530" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:32.550" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:32.553" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:32.495" endtime="20190121 11:27:32.554" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:32.567" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:32.558" endtime="20190121 11:27:32.568" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:32.579" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:32.571" endtime="20190121 11:27:32.580" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:32.487" endtime="20190121 11:27:32.583" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:32.721" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:32.750" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:32.770" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:32.773" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:32.714" endtime="20190121 11:27:32.774" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:32.787" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:32.778" endtime="20190121 11:27:32.788" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:32.798" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:32.791" endtime="20190121 11:27:32.800" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:32.706" endtime="20190121 11:27:32.803" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:32.941" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:32.974" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:32.994" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:32.997" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:32.934" endtime="20190121 11:27:32.998" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:33.011" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:33.002" endtime="20190121 11:27:33.012" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:33.023" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:33.015" endtime="20190121 11:27:33.024" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:32.926" endtime="20190121 11:27:33.027" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:33.165" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:33.195" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:33.215" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:33.218" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:33.159" endtime="20190121 11:27:33.219" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:33.233" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:33.223" endtime="20190121 11:27:33.234" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:33.245" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:33.237" endtime="20190121 11:27:33.246" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:33.151" endtime="20190121 11:27:33.250" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:33.389" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:33.417" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:33.437" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:33.441" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:33.383" endtime="20190121 11:27:33.442" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:33.457" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:33.445" endtime="20190121 11:27:33.458" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:33.474" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:33.463" endtime="20190121 11:27:33.476" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:33.373" endtime="20190121 11:27:33.483" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:33.652" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:33.681" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:33.701" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:33.704" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:33.636" endtime="20190121 11:27:33.705" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:33.718" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:33.709" endtime="20190121 11:27:33.719" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:33.730" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:33.722" endtime="20190121 11:27:33.731" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:33.609" endtime="20190121 11:27:33.734" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:33.877" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:33.905" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:33.927" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:33.931" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:33.866" endtime="20190121 11:27:33.931" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:33.945" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:33.935" endtime="20190121 11:27:33.946" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:33.957" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:33.949" endtime="20190121 11:27:33.958" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:33.858" endtime="20190121 11:27:33.962" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:34.101" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:34.129" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:34.149" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:34.153" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:34.093" endtime="20190121 11:27:34.154" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:34.166" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:34.158" endtime="20190121 11:27:34.167" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:34.178" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:34.170" endtime="20190121 11:27:34.179" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:34.085" endtime="20190121 11:27:34.183" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:34.322" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:34.350" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:34.370" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:34.373" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:34.315" endtime="20190121 11:27:34.375" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:34.388" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:34.379" endtime="20190121 11:27:34.389" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:34.400" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:34.393" endtime="20190121 11:27:34.402" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:34.306" endtime="20190121 11:27:34.405" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:34.543" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:34.572" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:34.593" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:34.596" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:34.537" endtime="20190121 11:27:34.597" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:34.610" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:34.601" endtime="20190121 11:27:34.611" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:34.622" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:34.614" endtime="20190121 11:27:34.623" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:34.528" endtime="20190121 11:27:34.626" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:34.768" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:34.798" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:34.835" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:34.838" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:34.758" endtime="20190121 11:27:34.839" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:34.865" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:34.843" endtime="20190121 11:27:34.866" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:34.890" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:34.868" endtime="20190121 11:27:34.902" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:34.750" endtime="20190121 11:27:34.906" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:35.045" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:35.075" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:35.096" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:35.099" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:35.039" endtime="20190121 11:27:35.101" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:35.113" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:35.104" endtime="20190121 11:27:35.114" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:35.126" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:35.117" endtime="20190121 11:27:35.127" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:35.030" endtime="20190121 11:27:35.130" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:35.269" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:35.297" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:35.318" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:35.321" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:35.262" endtime="20190121 11:27:35.322" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:35.335" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:35.326" endtime="20190121 11:27:35.336" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:35.347" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:35.339" endtime="20190121 11:27:35.348" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:35.253" endtime="20190121 11:27:35.351" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:35.491" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:35.519" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:35.539" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:35.542" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:35.484" endtime="20190121 11:27:35.543" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:35.557" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:35.547" endtime="20190121 11:27:35.557" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:35.570" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:35.560" endtime="20190121 11:27:35.571" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:35.475" endtime="20190121 11:27:35.574" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:35.712" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:35.750" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:35.770" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:35.773" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:35.705" endtime="20190121 11:27:35.774" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:35.787" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:35.778" endtime="20190121 11:27:35.788" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:35.798" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:35.791" endtime="20190121 11:27:35.800" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:35.697" endtime="20190121 11:27:35.803" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:35.942" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:35.970" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:35.991" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:35.994" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:35.935" endtime="20190121 11:27:35.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:36.009" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:35.999" endtime="20190121 11:27:36.010" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:36.020" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:36.012" endtime="20190121 11:27:36.022" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:35.927" endtime="20190121 11:27:36.025" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:36.166" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:36.194" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:36.214" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:36.217" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:36.156" endtime="20190121 11:27:36.218" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:36.231" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:36.222" endtime="20190121 11:27:36.232" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:36.243" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:36.235" endtime="20190121 11:27:36.244" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:36.148" endtime="20190121 11:27:36.247" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:36.523" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:36.666" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:36.725" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:36.736" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:27:36.455" endtime="20190121 11:27:36.737" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:36.816" level="INFO">${resp} = </msg>
<status starttime="20190121 11:27:36.769" endtime="20190121 11:27:36.817" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:27:36.901" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:27:36.832" endtime="20190121 11:27:36.948" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:36.394" endtime="20190121 11:27:36.952" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:37.254" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:27:37.337" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:37.361" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:27:37.365" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:27:37.190" endtime="20190121 11:27:37.366" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:27:37.391" level="INFO">${resp} = 282: usb_max: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    inet 192.168.1.100/24 brd 192.168.1.255 scope global usb_max</msg>
<status starttime="20190121 11:27:37.382" endtime="20190121 11:27:37.393" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<status starttime="20190121 11:27:37.408" endtime="20190121 11:27:37.443" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:27:37.095" endtime="20190121 11:27:37.455" status="PASS"></status>
</kw>
<status starttime="20190121 11:27:05.311" endtime="20190121 11:27:37.457" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:27:37.458" level="INFO">${STATUS} = True</msg>
<status starttime="20190121 11:27:05.305" endtime="20190121 11:27:37.460" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${secs}</var>
</assign>
<msg timestamp="20190121 11:27:37.473" level="INFO">${secs} = 1548070057</msg>
<status starttime="20190121 11:27:37.463" endtime="20190121 11:27:37.474" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DUT ready status: ${STATUS}, Timestamp: ${secs}</arg>
</arguments>
<status starttime="20190121 11:27:37.497" endtime="20190121 11:27:37.511" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3 seconds</arg>
</arguments>
<msg timestamp="20190121 11:27:40.518" level="INFO">Slept 3 seconds</msg>
<status starttime="20190121 11:27:37.514" endtime="20190121 11:27:40.521" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:27:40.525" level="INFO">${status} = True</msg>
<status starttime="20190121 11:27:05.281" endtime="20190121 11:27:40.526" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Device does not exist</arg>
</arguments>
<status starttime="20190121 11:27:40.528" endtime="20190121 11:27:40.533" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Open Ssh Connection">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg timestamp="20190121 11:27:40.550" level="INFO">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status starttime="20190121 11:27:40.543" endtime="20190121 11:27:41.445" status="PASS"></status>
</kw>
<status starttime="20190121 11:27:40.536" endtime="20190121 11:27:41.446" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh success!"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:27:41.462" level="INFO">"Setup ssh success!"</msg>
<status starttime="20190121 11:27:41.449" endtime="20190121 11:27:41.465" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>grep ${CarIfUpdater} ${result_file}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:41.483" level="INFO">Sending command to DUT grep CarIfUpdater /root/appl50571.txt</msg>
<msg timestamp="20190121 11:27:41.555" level="INFO">Returning data (CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_LD_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_PBL_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_PBL_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_Appl_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_Appl_OLU_0045_C2_0009.9.3.bin, )</msg>
<msg timestamp="20190121 11:27:41.557" level="INFO">${ret} = ('CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_LD_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/fir...</msg>
<status starttime="20190121 11:27:41.468" endtime="20190121 11:27:41.558" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:27:41.561" endtime="20190121 11:27:41.573" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$ret[0]</arg>
</arguments>
<assign>
<var>${str_val}</var>
</assign>
<msg timestamp="20190121 11:27:41.603" level="INFO">${str_val} = CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_LD_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/firmw...</msg>
<status starttime="20190121 11:27:41.577" endtime="20190121 11:27:41.603" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain X Times">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${str_val}</arg>
<arg>${SUCCESS_STR}</arg>
<arg>3</arg>
<arg>ignore_case=True</arg>
</arguments>
<msg timestamp="20190121 11:27:41.612" level="INFO">Item found from the first item 3 times</msg>
<status starttime="20190121 11:27:41.606" endtime="20190121 11:27:41.615" status="PASS"></status>
</kw>
<status starttime="20190121 11:26:59.851" endtime="20190121 11:27:41.618" status="PASS"></status>
</kw>
<status starttime="20190121 11:25:22.325" endtime="20190121 11:27:41.621" status="PASS"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"Test_Teardown_Action"</arg>
</arguments>
<status starttime="20190121 11:27:41.631" endtime="20190121 11:27:41.635" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>systemctl poweroff</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:27:41.642" level="INFO">Sending command to DUT systemctl poweroff</msg>
<msg timestamp="20190121 11:27:41.734" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:27:41.737" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:27:41.638" endtime="20190121 11:27:41.737" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait until the device power down, it takes: ${SHUTDOWN_TIME}</arg>
</arguments>
<status starttime="20190121 11:27:41.740" endtime="20190121 11:27:41.753" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHUTDOWN_TIME}</arg>
</arguments>
<msg timestamp="20190121 11:27:56.761" level="INFO">Slept 15 seconds</msg>
<status starttime="20190121 11:27:41.756" endtime="20190121 11:27:56.763" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Close Ssh Connection">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190121 11:27:56.770" level="INFO">Closing SSH connection to 192.168.1.101</msg>
<status starttime="20190121 11:27:56.766" endtime="20190121 11:27:56.772" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill ping</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20190121 11:27:56.780" level="INFO">Starting process:
pkill ping</msg>
<msg timestamp="20190121 11:27:56.809" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:27:56.844" level="INFO">Process completed.</msg>
<status starttime="20190121 11:27:56.776" endtime="20190121 11:27:56.847" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:27:56.851" endtime="20190121 11:27:56.919" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:27:56.922" endtime="20190121 11:27:56.972" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:27:56.975" endtime="20190121 11:27:57.055" status="PASS"></status>
</kw>
<status starttime="20190121 11:27:41.624" endtime="20190121 11:27:57.058" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-50571 OTA chorus update</doc>
<tags>
<tag>OTA flashing</tag>
</tags>
<status critical="yes" starttime="20190121 11:24:15.999" endtime="20190121 11:27:57.059" status="PASS"></status>
</test>
<kw type="teardown" library="chorus_resource" name="Teardown Actions">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:27:58.632" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:27:58.665" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:27:57.163" endtime="20190121 11:27:58.667" status="PASS"></status>
</kw>
<status starttime="20190121 11:27:57.108" endtime="20190121 11:27:58.696" status="PASS"></status>
</kw>
<status starttime="20190121 11:27:57.102" endtime="20190121 11:27:58.703" status="PASS"></status>
</kw>
<doc>OTA flashing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:24:13.123" endtime="20190121 11:27:58.704" status="PASS"></status>
</suite>
<status starttime="20190121 11:00:08.411" endtime="20190121 11:27:59.028" status="FAIL"></status>
</suite>
<statistics>
<total>
<stat pass="15" fail="6">Critical Tests</stat>
<stat pass="15" fail="6">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">CAN 1 diagnose test</stat>
<stat pass="1" fail="0">CAN 3 test</stat>
<stat pass="1" fail="0">CAN 3 test TX</stat>
<stat pass="1" fail="0">EEPROM</stat>
<stat pass="0" fail="1">Eeprom OTP Value</stat>
<stat pass="4" fail="0">FBUS</stat>
<stat pass="3" fail="0">Flashing</stat>
<stat pass="0" fail="2">GpioAdc testroutine</stat>
<stat pass="2" fail="1">GPIO Test</stat>
<stat pass="1" fail="0">OTA flashing</stat>
<stat pass="0" fail="1">Powermanagement test</stat>
<stat pass="0" fail="1">Power testroutine</stat>
<stat pass="1" fail="0">Vehicle buses testroutine</stat>
</tag>
<suite>
<stat pass="15" fail="6" name="Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571" id="s1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571</stat>
<stat pass="1" fail="0" name="Update-Nad" id="s1-s1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.Update-Nad</stat>
<stat pass="1" fail="0" name="CI update chorus" id="s1-s2">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.CI update chorus</stat>
<stat pass="1" fail="0" name="SKTB-31396" id="s1-s3">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-31396</stat>
<stat pass="0" fail="1" name="SKTB-31405" id="s1-s4">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-31405</stat>
<stat pass="0" fail="1" name="SKTB-33244" id="s1-s5">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-33244</stat>
<stat pass="1" fail="0" name="SKTB-13351" id="s1-s6">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-13351</stat>
<stat pass="1" fail="0" name="SKTB-34994" id="s1-s7">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-34994</stat>
<stat pass="0" fail="1" name="SKTB-40097" id="s1-s8">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-40097</stat>
<stat pass="1" fail="0" name="SKTB-41635" id="s1-s9">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-41635</stat>
<stat pass="1" fail="0" name="SKTB-46886" id="s1-s10">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-46886</stat>
<stat pass="1" fail="0" name="SKTB-47669" id="s1-s11">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-47669</stat>
<stat pass="1" fail="0" name="SKTB-48413" id="s1-s12">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-48413</stat>
<stat pass="0" fail="1" name="SKTB-49038" id="s1-s13">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-49038</stat>
<stat pass="1" fail="0" name="SKTB-49357" id="s1-s14">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-49357</stat>
<stat pass="1" fail="0" name="SKTB-41553" id="s1-s15">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-41553</stat>
<stat pass="1" fail="0" name="SKTB-56663" id="s1-s16">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56663</stat>
<stat pass="0" fail="1" name="SKTB-56067" id="s1-s17">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56067</stat>
<stat pass="1" fail="0" name="SKTB-56094" id="s1-s18">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56094</stat>
<stat pass="0" fail="1" name="SKTB-55194" id="s1-s19">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-55194</stat>
<stat pass="1" fail="0" name="SKTB-FLASHDOWN" id="s1-s20">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-FLASHDOWN</stat>
<stat pass="1" fail="0" name="SKTB-50571" id="s1-s21">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-50571</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
