<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.2 (Python 3.5.3 on linux)" generated="20190118 18:15:30.812">
<suite name="Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094" id="s1">
<suite name="Update-Nad" source="/usr/share/robot-framework-scripts/robot-framework-chorus/update-nad.robot" id="s1-s1">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:15:36.240" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:15:36.242" starttime="20190118 18:15:36.235" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:15:36.254" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:15:36.256" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:15:37.983" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:15:37.985" starttime="20190118 18:15:36.245" status="PASS"></status>
</kw>
<status endtime="20190118 18:15:37.987" starttime="20190118 18:15:36.229" status="PASS"></status>
</kw>
<test name="SKTB-13351 FBUS test" id="s1-s1-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:15:38.056" starttime="20190118 18:15:38.008" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:15:38.108" starttime="20190118 18:15:38.059" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:15:38.162" starttime="20190118 18:15:38.114" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:15:40.170" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:15:40.172" starttime="20190118 18:15:38.165" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:15:40.222" starttime="20190118 18:15:40.175" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:15:40.273" starttime="20190118 18:15:40.225" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>45s</arg>
</arguments>
<msg timestamp="20190118 18:16:25.280" level="INFO">Slept 45 seconds</msg>
<status endtime="20190118 18:16:25.282" starttime="20190118 18:15:40.276" status="PASS"></status>
</kw>
<status endtime="20190118 18:16:25.288" starttime="20190118 18:15:37.999" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:16:25.305" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</msg>
<msg timestamp="20190118 18:16:25.347" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:16:30.069" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:16:30.072" level="INFO">${info} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:16:30.073" starttime="20190118 18:16:25.300" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status endtime="20190118 18:16:30.083" starttime="20190118 18:16:30.076" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:16:30.091" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</msg>
<msg timestamp="20190118 18:16:30.116" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:16:31.062" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:16:31.066" level="INFO">${info} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:16:31.067" starttime="20190118 18:16:30.086" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status endtime="20190118 18:16:31.078" starttime="20190118 18:16:31.070" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:16:31.085" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</msg>
<msg timestamp="20190118 18:16:31.108" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:16:31.922" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:16:31.925" level="INFO">${info} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:16:31.926" starttime="20190118 18:16:31.081" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status endtime="20190118 18:16:31.937" starttime="20190118 18:16:31.930" status="PASS"></status>
</kw>
<status endtime="20190118 18:16:31.940" starttime="20190118 18:16:25.291" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:16:32.000" starttime="20190118 18:16:31.950" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:16:32.052" starttime="20190118 18:16:32.005" status="PASS"></status>
</kw>
<status endtime="20190118 18:16:32.057" starttime="20190118 18:16:31.943" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-update-nad</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status endtime="20190118 18:16:32.058" critical="yes" starttime="20190118 18:15:37.989" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:16:33.700" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:16:33.737" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:16:33.739" starttime="20190118 18:16:32.279" status="PASS"></status>
</kw>
<status endtime="20190118 18:16:33.741" starttime="20190118 18:16:32.102" status="PASS"></status>
</kw>
<status endtime="20190118 18:16:33.743" starttime="20190118 18:16:32.084" status="PASS"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:16:33.744" starttime="20190118 18:15:31.265" status="PASS"></status>
</suite>
<suite name="CI update chorus" source="/usr/share/robot-framework-scripts/robot-framework-chorus/CI_update_chorus.robot" id="s1-s2">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:16:33.904" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:16:33.906" starttime="20190118 18:16:33.899" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:16:33.917" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:16:33.919" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:16:35.613" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:16:35.615" starttime="20190118 18:16:33.909" status="PASS"></status>
</kw>
<status endtime="20190118 18:16:35.617" starttime="20190118 18:16:33.894" status="PASS"></status>
</kw>
<test name="Ci_update_chorus Chorus SW Flashing" id="s1-s2-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:16:35.683" starttime="20190118 18:16:35.635" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:16:35.750" starttime="20190118 18:16:35.686" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:16:35.803" starttime="20190118 18:16:35.753" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:16:37.811" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:16:37.814" starttime="20190118 18:16:35.807" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:16:37.863" starttime="20190118 18:16:37.817" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status endtime="20190118 18:16:37.914" starttime="20190118 18:16:37.866" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:16:37.964" starttime="20190118 18:16:37.916" status="PASS"></status>
</kw>
<status endtime="20190118 18:16:37.967" starttime="20190118 18:16:35.629" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:16:39.979" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:16:39.982" starttime="20190118 18:16:37.975" status="PASS"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190118 18:18:05.002" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status endtime="20190118 18:18:05.003" starttime="20190118 18:16:39.985" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:18:05.011" level="INFO">Flashing sucessfully finished.</msg>
<status endtime="20190118 18:18:05.013" starttime="20190118 18:18:05.007" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:18:05.021" starttime="20190118 18:18:05.016" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:05.023" starttime="20190118 18:16:37.969" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190118 18:18:05.081" starttime="20190118 18:18:05.033" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:18:05.131" starttime="20190118 18:18:05.084" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:05.183" starttime="20190118 18:18:05.134" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:05.234" starttime="20190118 18:18:05.186" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:05.285" starttime="20190118 18:18:05.238" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:05.288" starttime="20190118 18:18:05.027" status="PASS"></status>
</kw>
<doc>Implements Test Task Ci_update_chorus</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status endtime="20190118 18:18:05.289" critical="yes" starttime="20190118 18:16:35.619" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:18:06.762" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:18:06.789" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:18:06.799" starttime="20190118 18:18:05.329" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:06.800" starttime="20190118 18:18:05.305" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:06.802" starttime="20190118 18:18:05.299" status="PASS"></status>
</kw>
<doc>Serial flashing test fof CI</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:18:06.803" starttime="20190118 18:16:33.775" status="PASS"></status>
</suite>
<suite name="SKTB-31405" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-31405.robot" id="s1-s3">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:18:06.984" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:18:06.987" starttime="20190118 18:18:06.980" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:18:06.999" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:18:07.002" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:18:08.727" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:18:08.729" starttime="20190118 18:18:06.990" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:08.731" starttime="20190118 18:18:06.975" status="PASS"></status>
</kw>
<test name="SKTB-31405 GpioAdc testroutine" id="s1-s3-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:08.818" starttime="20190118 18:18:08.748" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:08.869" starttime="20190118 18:18:08.821" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:08.922" starttime="20190118 18:18:08.872" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:10.959" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:10.962" starttime="20190118 18:18:08.926" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:18:11.013" starttime="20190118 18:18:10.964" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:12.020" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:12.022" starttime="20190118 18:18:11.015" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:18:12.073" starttime="20190118 18:18:12.025" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:14.081" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:14.083" starttime="20190118 18:18:12.077" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:18:14.134" starttime="20190118 18:18:14.086" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190118 18:18:14.185" starttime="20190118 18:18:14.138" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190118 18:18:14.237" starttime="20190118 18:18:14.188" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:18:14.294" starttime="20190118 18:18:14.240" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:14.296" starttime="20190118 18:18:08.742" status="PASS"></status>
</kw>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:14.366" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4153', 'request': '41'}</msg>
<status endtime="20190118 18:18:14.367" starttime="20190118 18:18:14.306" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:14.394" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:14.395" starttime="20190118 18:18:14.371" status="PASS"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190118 18:18:14.404" starttime="20190118 18:18:14.398" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:15.411" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:15.413" starttime="20190118 18:18:14.407" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:15.416" starttime="20190118 18:18:14.299" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:15.485" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4153', 'request': '41'}</msg>
<status endtime="20190118 18:18:15.486" starttime="20190118 18:18:15.423" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:15.512" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:15.513" starttime="20190118 18:18:15.489" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:15.520" starttime="20190118 18:18:15.516" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:16.527" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:16.529" starttime="20190118 18:18:15.522" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:16.531" starttime="20190118 18:18:15.418" status="PASS"></status>
</kw>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190118 18:18:16.551" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg timestamp="20190118 18:18:16.575" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:18:16.590" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:18:16.593" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:18:16.594" starttime="20190118 18:18:16.546" status="PASS"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190118 18:18:16.603" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190118 18:18:16.604" starttime="20190118 18:18:16.597" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:18:16.612" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:18:16.614" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status endtime="20190118 18:18:16.615" starttime="20190118 18:18:16.606" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190118 18:18:16.623" level="INFO">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190118 18:18:16.623" starttime="20190118 18:18:16.618" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190118 18:18:16.631" starttime="20190118 18:18:16.626" status="PASS"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190118 18:18:16.639" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190118 18:18:16.641" starttime="20190118 18:18:16.634" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:18:16.645" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190118 18:18:16.645" starttime="20190118 18:18:16.538" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:16.790" level="INFO">${res_dict} = {'data': '0468781f', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:18:16.791" starttime="20190118 18:18:16.648" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:18:16.804" level="INFO">{'data': '0468781f', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:18:16.813" starttime="20190118 18:18:16.799" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:18.820" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:18.823" starttime="20190118 18:18:16.816" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:18.849" level="INFO">${value} = 5453</msg>
<status endtime="20190118 18:18:18.850" starttime="20190118 18:18:18.826" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:18:18.859" starttime="20190118 18:18:18.853" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:18.861" starttime="20190118 18:18:16.533" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:18.934" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4953', 'request': '49'}</msg>
<status endtime="20190118 18:18:18.935" starttime="20190118 18:18:18.869" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:18.960" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:18.961" starttime="20190118 18:18:18.937" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:18.968" starttime="20190118 18:18:18.964" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:19.975" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:19.977" starttime="20190118 18:18:18.971" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:19.980" starttime="20190118 18:18:18.863" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:20.054" level="INFO">${res_dict} = {'data': '0201', 'status': True, 'result': '475653', 'request': '4756'}</msg>
<status endtime="20190118 18:18:20.055" starttime="20190118 18:18:19.989" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:21.062" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:21.065" starttime="20190118 18:18:20.058" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:21.067" starttime="20190118 18:18:19.983" status="PASS"></status>
</kw>
<kw name="Step_gpio_select">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:21.137" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '534653', 'request': '53460000006d'}</msg>
<status endtime="20190118 18:18:21.138" starttime="20190118 18:18:21.075" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:21.163" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:21.164" starttime="20190118 18:18:21.141" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:21.171" starttime="20190118 18:18:21.167" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:21.235" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '520153', 'request': '5201'}</msg>
<status endtime="20190118 18:18:21.237" starttime="20190118 18:18:21.174" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:21.263" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:21.264" starttime="20190118 18:18:21.240" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:21.272" starttime="20190118 18:18:21.267" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:22.279" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:22.281" starttime="20190118 18:18:21.274" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:22.283" starttime="20190118 18:18:21.069" status="PASS"></status>
</kw>
<kw name="Step_gpio_write">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:22.353" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '534653', 'request': '534600000001'}</msg>
<status endtime="20190118 18:18:22.354" starttime="20190118 18:18:22.291" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:22.380" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:22.381" starttime="20190118 18:18:22.357" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:22.388" starttime="20190118 18:18:22.384" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioWrite}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:22.453" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '520453', 'request': '5204'}</msg>
<status endtime="20190118 18:18:22.454" starttime="20190118 18:18:22.391" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:22.480" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:22.481" starttime="20190118 18:18:22.457" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:22.488" starttime="20190118 18:18:22.484" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:23.495" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:23.497" starttime="20190118 18:18:22.491" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:23.499" starttime="20190118 18:18:22.285" status="PASS"></status>
</kw>
<kw name="Step_adc_read_channel">
<kw name="check_analog_channel">
<arguments>
<arg>${CARBAT_V_SENSE}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:23.591" level="INFO">${res_dict} = {'data': '', 'status': False, 'result': '1efd54', 'request': '53460000004d'}</msg>
<status endtime="20190118 18:18:23.592" starttime="20190118 18:18:23.515" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:23.621" level="INFO">${value} = False</msg>
<status endtime="20190118 18:18:23.621" starttime="20190118 18:18:23.595" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20190118 18:18:23.630" level="FAIL">'False' should be true.</msg>
<status endtime="20190118 18:18:23.632" starttime="20190118 18:18:23.624" status="FAIL"></status>
</kw>
<status endtime="20190118 18:18:23.635" starttime="20190118 18:18:23.508" status="FAIL"></status>
</kw>
<status endtime="20190118 18:18:23.637" starttime="20190118 18:18:23.503" status="FAIL"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:23.699" starttime="20190118 18:18:23.651" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:23.750" starttime="20190118 18:18:23.702" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:23.801" starttime="20190118 18:18:23.754" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:25.809" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:25.811" starttime="20190118 18:18:23.804" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:18:25.860" starttime="20190118 18:18:25.814" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:25.863" starttime="20190118 18:18:23.641" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-31405</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status endtime="20190118 18:18:25.864" critical="yes" starttime="20190118 18:18:08.732" status="FAIL">'False' should be true.</status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:18:27.334" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:18:27.373" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:18:27.375" starttime="20190118 18:18:25.905" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:27.376" starttime="20190118 18:18:25.880" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:27.379" starttime="20190118 18:18:25.875" status="PASS"></status>
</kw>
<doc>Chorus GpioAdc testing with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:18:27.379" starttime="20190118 18:18:06.844" status="FAIL"></status>
</suite>
<suite name="SKTB-33244" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-33244.robot" id="s1-s4">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:18:27.598" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:18:27.600" starttime="20190118 18:18:27.593" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:18:27.609" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:18:27.610" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:18:29.406" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:18:29.408" starttime="20190118 18:18:27.603" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:29.410" starttime="20190118 18:18:27.588" status="PASS"></status>
</kw>
<test name="SKTB-33244 Test ADC channels" id="s1-s4-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:29.479" starttime="20190118 18:18:29.431" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:29.531" starttime="20190118 18:18:29.482" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:29.581" starttime="20190118 18:18:29.534" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:31.589" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:31.591" starttime="20190118 18:18:29.584" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:18:31.641" starttime="20190118 18:18:31.594" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:32.649" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:32.651" starttime="20190118 18:18:31.644" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:18:32.702" starttime="20190118 18:18:32.654" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:34.710" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:34.712" starttime="20190118 18:18:32.705" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:18:34.761" starttime="20190118 18:18:34.715" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190118 18:18:34.812" starttime="20190118 18:18:34.764" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190118 18:18:34.862" starttime="20190118 18:18:34.815" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:18:34.915" starttime="20190118 18:18:34.865" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:34.918" starttime="20190118 18:18:29.425" status="PASS"></status>
</kw>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:34.991" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4153', 'request': '41'}</msg>
<status endtime="20190118 18:18:34.992" starttime="20190118 18:18:34.927" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:35.026" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:35.027" starttime="20190118 18:18:34.995" status="PASS"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190118 18:18:35.036" starttime="20190118 18:18:35.030" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:36.043" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:36.046" starttime="20190118 18:18:35.038" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:36.048" starttime="20190118 18:18:34.921" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:36.117" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4153', 'request': '41'}</msg>
<status endtime="20190118 18:18:36.118" starttime="20190118 18:18:36.056" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:36.150" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:36.151" starttime="20190118 18:18:36.121" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:36.158" starttime="20190118 18:18:36.154" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:37.165" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:37.167" starttime="20190118 18:18:36.161" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:37.170" starttime="20190118 18:18:36.050" status="PASS"></status>
</kw>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190118 18:18:37.190" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg timestamp="20190118 18:18:37.215" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:18:37.230" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:18:37.233" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:18:37.234" starttime="20190118 18:18:37.185" status="PASS"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190118 18:18:37.242" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190118 18:18:37.243" starttime="20190118 18:18:37.237" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:18:37.250" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:18:37.253" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status endtime="20190118 18:18:37.254" starttime="20190118 18:18:37.246" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190118 18:18:37.266" level="INFO">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190118 18:18:37.267" starttime="20190118 18:18:37.257" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190118 18:18:37.275" starttime="20190118 18:18:37.269" status="PASS"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190118 18:18:37.282" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190118 18:18:37.284" starttime="20190118 18:18:37.277" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:18:37.287" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status endtime="20190118 18:18:37.288" starttime="20190118 18:18:37.177" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:37.427" level="INFO">${res_dict} = {'data': '0468781f', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:18:37.431" starttime="20190118 18:18:37.291" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:39.446" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:39.449" starttime="20190118 18:18:37.434" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:39.482" level="INFO">${value} = 5453</msg>
<status endtime="20190118 18:18:39.482" starttime="20190118 18:18:39.451" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:18:39.491" starttime="20190118 18:18:39.485" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:39.493" starttime="20190118 18:18:37.172" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:39.562" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4953', 'request': '49'}</msg>
<status endtime="20190118 18:18:39.563" starttime="20190118 18:18:39.501" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:39.595" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:39.596" starttime="20190118 18:18:39.566" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:39.603" starttime="20190118 18:18:39.599" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:40.610" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:40.612" starttime="20190118 18:18:39.606" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:40.615" starttime="20190118 18:18:39.495" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:40.687" level="INFO">${res_dict} = {'data': '0201', 'status': True, 'result': '475653', 'request': '4756'}</msg>
<status endtime="20190118 18:18:40.688" starttime="20190118 18:18:40.622" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:41.695" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:41.698" starttime="20190118 18:18:40.691" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:41.700" starttime="20190118 18:18:40.617" status="PASS"></status>
</kw>
<kw name="Step_gpio_select">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:41.769" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '534653', 'request': '53460000006d'}</msg>
<status endtime="20190118 18:18:41.770" starttime="20190118 18:18:41.708" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:41.803" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:41.804" starttime="20190118 18:18:41.774" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:41.811" starttime="20190118 18:18:41.807" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:41.875" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '520153', 'request': '5201'}</msg>
<status endtime="20190118 18:18:41.876" starttime="20190118 18:18:41.813" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:41.909" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:41.910" starttime="20190118 18:18:41.879" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:41.917" starttime="20190118 18:18:41.913" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:42.924" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:42.926" starttime="20190118 18:18:41.919" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:42.928" starttime="20190118 18:18:41.702" status="PASS"></status>
</kw>
<kw name="Step_gpio_write">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:43.002" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '534653', 'request': '534600000001'}</msg>
<status endtime="20190118 18:18:43.003" starttime="20190118 18:18:42.937" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:43.036" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:43.037" starttime="20190118 18:18:43.006" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:43.044" starttime="20190118 18:18:43.039" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioWrite}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:43.107" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '520453', 'request': '5204'}</msg>
<status endtime="20190118 18:18:43.109" starttime="20190118 18:18:43.046" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:43.141" level="INFO">${value} = True</msg>
<status endtime="20190118 18:18:43.142" starttime="20190118 18:18:43.112" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:18:43.149" starttime="20190118 18:18:43.145" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:18:44.156" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:18:44.158" starttime="20190118 18:18:43.152" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:44.161" starttime="20190118 18:18:42.930" status="PASS"></status>
</kw>
<kw name="Step_adc_read_channel">
<kw name="check_analog_channel">
<arguments>
<arg>${CARBAT_V_SENSE}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:18:44.255" level="INFO">${res_dict} = {'data': '', 'status': False, 'result': '1efd54', 'request': '53460000004d'}</msg>
<status endtime="20190118 18:18:44.256" starttime="20190118 18:18:44.175" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:18:44.289" level="INFO">${value} = False</msg>
<status endtime="20190118 18:18:44.290" starttime="20190118 18:18:44.259" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20190118 18:18:44.298" level="FAIL">'False' should be true.</msg>
<status endtime="20190118 18:18:44.300" starttime="20190118 18:18:44.293" status="FAIL"></status>
</kw>
<status endtime="20190118 18:18:44.302" starttime="20190118 18:18:44.167" status="FAIL"></status>
</kw>
<status endtime="20190118 18:18:44.305" starttime="20190118 18:18:44.162" status="FAIL"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:44.367" starttime="20190118 18:18:44.316" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:44.417" starttime="20190118 18:18:44.370" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:44.470" starttime="20190118 18:18:44.421" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:46.477" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:46.479" starttime="20190118 18:18:44.473" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:18:46.528" starttime="20190118 18:18:46.482" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:46.531" starttime="20190118 18:18:44.310" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-33244</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status endtime="20190118 18:18:46.532" critical="yes" starttime="20190118 18:18:29.412" status="FAIL">'False' should be true.</status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:18:48.016" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:18:48.041" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:18:48.043" starttime="20190118 18:18:46.580" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:48.044" starttime="20190118 18:18:46.548" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:48.050" starttime="20190118 18:18:46.542" status="PASS"></status>
</kw>
<doc>Chorus GpioAdc's test with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:18:48.051" starttime="20190118 18:18:27.435" status="FAIL"></status>
</suite>
<suite name="SKTB-13351" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-13351.robot" id="s1-s5">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:18:48.217" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:18:48.220" starttime="20190118 18:18:48.213" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:18:48.229" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:18:48.230" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:18:50.049" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:18:50.050" starttime="20190118 18:18:48.223" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:50.053" starttime="20190118 18:18:48.207" status="PASS"></status>
</kw>
<test name="SKTB-13351 FBUS test" id="s1-s5-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:50.130" starttime="20190118 18:18:50.070" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:50.182" starttime="20190118 18:18:50.134" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:50.233" starttime="20190118 18:18:50.185" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:52.241" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:52.243" starttime="20190118 18:18:50.237" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:18:52.295" starttime="20190118 18:18:52.246" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:18:52.346" starttime="20190118 18:18:52.299" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:18:52.396" starttime="20190118 18:18:52.350" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190118 18:18:52.446" starttime="20190118 18:18:52.399" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:18:52.498" starttime="20190118 18:18:52.450" status="PASS"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status endtime="20190118 18:18:52.554" starttime="20190118 18:18:52.501" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:54.562" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:54.564" starttime="20190118 18:18:52.557" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:54.567" starttime="20190118 18:18:50.064" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${PN_POWER_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:18:54.775" level="INFO">${info} = 1E 14 54 8D 00 08 00 0C 01 01 00 00 01 43 4A DF</msg>
<status endtime="20190118 18:18:54.776" starttime="20190118 18:18:54.575" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:18:54.784" level="INFO">1E 14 54 8D 00 08 00 0C 01 01 00 00 01 43 4A DF</msg>
<status endtime="20190118 18:18:54.786" starttime="20190118 18:18:54.779" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_POWER_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:18:54.795" starttime="20190118 18:18:54.789" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:54.798" starttime="20190118 18:18:54.569" status="PASS"></status>
</kw>
<kw name="Step_2">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${PN_DIAG_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:18:55.010" level="INFO">${info} = 1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 44 4A DE</msg>
<status endtime="20190118 18:18:55.011" starttime="20190118 18:18:54.806" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:18:55.019" level="INFO">1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 44 4A DE</msg>
<status endtime="20190118 18:18:55.021" starttime="20190118 18:18:55.015" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_DIAG_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:18:55.030" starttime="20190118 18:18:55.024" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:55.032" starttime="20190118 18:18:54.799" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:55.091" starttime="20190118 18:18:55.042" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:55.142" starttime="20190118 18:18:55.094" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:18:55.195" starttime="20190118 18:18:55.145" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:18:57.203" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:18:57.205" starttime="20190118 18:18:55.199" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190118 18:18:57.255" starttime="20190118 18:18:57.208" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:18:57.307" starttime="20190118 18:18:57.258" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:57.310" starttime="20190118 18:18:55.035" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-13351</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status endtime="20190118 18:18:57.311" critical="yes" starttime="20190118 18:18:50.055" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:18:58.785" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:18:58.811" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:18:58.812" starttime="20190118 18:18:57.349" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:58.822" starttime="20190118 18:18:57.326" status="PASS"></status>
</kw>
<status endtime="20190118 18:18:58.824" starttime="20190118 18:18:57.320" status="PASS"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:18:58.825" starttime="20190118 18:18:48.082" status="PASS"></status>
</suite>
<suite name="SKTB-34994" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-34994.robot" id="s1-s6">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:18:59.068" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:18:59.071" starttime="20190118 18:18:59.063" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:18:59.079" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:18:59.081" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:19:00.799" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:19:00.805" starttime="20190118 18:18:59.074" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:00.807" starttime="20190118 18:18:59.058" status="PASS"></status>
</kw>
<test name="SKTB-34994 CAN 3 testing" id="s1-s6-t1">
<kw name="Test_precondition" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:19:00.838" level="INFO">"Test_precondition"</msg>
<status endtime="20190118 18:19:00.840" starttime="20190118 18:19:00.834" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:19:00.891" starttime="20190118 18:19:00.843" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:19:00.942" starttime="20190118 18:19:00.894" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190118 18:19:02.950" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:19:02.952" starttime="20190118 18:19:00.946" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:19:03.003" starttime="20190118 18:19:02.955" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190118 18:19:04.010" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:19:04.012" starttime="20190118 18:19:03.006" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:19:04.063" starttime="20190118 18:19:04.015" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20190118 18:19:07.071" level="INFO">Slept 3 seconds</msg>
<status endtime="20190118 18:19:07.073" starttime="20190118 18:19:04.067" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>ping ${HOST_IP}</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20190118 18:19:07.081" level="INFO">Starting process:
ping 192.168.1.101</msg>
<status endtime="20190118 18:19:07.107" starttime="20190118 18:19:07.076" status="PASS"></status>
</kw>
<kw name="WAIT_UNTIL_DEVICE_IS_READY">
<doc>Waiting for device to be ready, up to 90 seconds</doc>
<assign>
<var>${status}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Waiting for device to be ready, up to 90 seconds\n</arg>
<arg>console=true</arg>
</arguments>
<msg timestamp="20190118 18:19:07.134" level="INFO">Waiting for device to be ready, up to 90 seconds
</msg>
<status endtime="20190118 18:19:07.137" starttime="20190118 18:19:07.130" status="PASS"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait until keyword succeeds</arg>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:07.167" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:07.192" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:07.214" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:07.217" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:07.218" starttime="20190118 18:19:07.160" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:07.231" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:07.231" starttime="20190118 18:19:07.222" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:07.242" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:07.244" starttime="20190118 18:19:07.234" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:07.247" starttime="20190118 18:19:07.152" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:07.401" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:07.427" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:07.447" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:07.450" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:07.451" starttime="20190118 18:19:07.377" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:07.464" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:07.465" starttime="20190118 18:19:07.455" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:07.475" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:07.477" starttime="20190118 18:19:07.467" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:07.480" starttime="20190118 18:19:07.370" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:07.618" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:07.644" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:07.664" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:07.667" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:07.669" starttime="20190118 18:19:07.611" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:07.681" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:07.682" starttime="20190118 18:19:07.673" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:07.693" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:07.694" starttime="20190118 18:19:07.685" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:07.698" starttime="20190118 18:19:07.603" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:07.835" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:07.861" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:07.881" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:07.884" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:07.885" starttime="20190118 18:19:07.829" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:07.898" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:07.898" starttime="20190118 18:19:07.889" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:07.909" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:07.911" starttime="20190118 18:19:07.901" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:07.914" starttime="20190118 18:19:07.821" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:08.052" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:08.078" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:08.098" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:08.101" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:08.102" starttime="20190118 18:19:08.045" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:08.114" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:08.115" starttime="20190118 18:19:08.106" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:08.126" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:08.128" starttime="20190118 18:19:08.118" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:08.131" starttime="20190118 18:19:08.037" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:08.272" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:08.298" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:08.318" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:08.321" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:08.322" starttime="20190118 18:19:08.262" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:08.335" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:08.336" starttime="20190118 18:19:08.326" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:08.373" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:08.375" starttime="20190118 18:19:08.339" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:08.385" starttime="20190118 18:19:08.254" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:08.523" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:08.549" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:08.569" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:08.572" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:08.573" starttime="20190118 18:19:08.516" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:08.585" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:08.586" starttime="20190118 18:19:08.577" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:08.597" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:08.598" starttime="20190118 18:19:08.589" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:08.602" starttime="20190118 18:19:08.508" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:08.739" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:08.765" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:08.785" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:08.789" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:08.790" starttime="20190118 18:19:08.733" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:08.804" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:08.805" starttime="20190118 18:19:08.794" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:08.815" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:08.817" starttime="20190118 18:19:08.808" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:08.820" starttime="20190118 18:19:08.725" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:08.958" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:08.983" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:09.003" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:09.007" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:09.008" starttime="20190118 18:19:08.951" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:09.022" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:09.023" starttime="20190118 18:19:09.012" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:09.035" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:09.037" starttime="20190118 18:19:09.026" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:09.040" starttime="20190118 18:19:08.943" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:09.201" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:09.227" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:09.247" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:09.250" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:09.251" starttime="20190118 18:19:09.180" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:09.264" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:09.265" starttime="20190118 18:19:09.255" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:09.276" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:09.277" starttime="20190118 18:19:09.268" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:09.280" starttime="20190118 18:19:09.164" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:09.417" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:09.444" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:09.464" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:09.467" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:09.468" starttime="20190118 18:19:09.411" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:09.481" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:09.482" starttime="20190118 18:19:09.472" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:09.493" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:09.494" starttime="20190118 18:19:09.485" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:09.497" starttime="20190118 18:19:09.403" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:09.635" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:09.661" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:09.681" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:09.684" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:09.685" starttime="20190118 18:19:09.629" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:09.697" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:09.698" starttime="20190118 18:19:09.689" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:09.710" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:09.711" starttime="20190118 18:19:09.701" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:09.714" starttime="20190118 18:19:09.620" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:09.855" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:09.881" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:09.901" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:09.904" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:09.905" starttime="20190118 18:19:09.847" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:09.919" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:09.920" starttime="20190118 18:19:09.909" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:09.931" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:09.932" starttime="20190118 18:19:09.923" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:09.935" starttime="20190118 18:19:09.838" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:10.074" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:10.100" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:10.125" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:10.129" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:10.130" starttime="20190118 18:19:10.067" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:10.142" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:10.143" starttime="20190118 18:19:10.133" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:10.153" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:10.154" starttime="20190118 18:19:10.145" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:10.157" starttime="20190118 18:19:10.058" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:10.294" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:10.320" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:10.341" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:10.343" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:10.345" starttime="20190118 18:19:10.288" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:10.357" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:10.358" starttime="20190118 18:19:10.348" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:10.369" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:10.370" starttime="20190118 18:19:10.361" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:10.374" starttime="20190118 18:19:10.280" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:10.511" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:10.537" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:10.557" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:10.560" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:10.561" starttime="20190118 18:19:10.505" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:10.574" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:10.575" starttime="20190118 18:19:10.565" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:10.586" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:10.587" starttime="20190118 18:19:10.577" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:10.590" starttime="20190118 18:19:10.497" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:10.728" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:10.754" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:10.774" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:10.777" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:10.778" starttime="20190118 18:19:10.721" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:10.791" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:10.791" starttime="20190118 18:19:10.782" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:10.802" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:10.804" starttime="20190118 18:19:10.794" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:10.807" starttime="20190118 18:19:10.713" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:10.947" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:10.974" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:10.995" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:10.998" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:10.998" starttime="20190118 18:19:10.938" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:11.013" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:11.014" starttime="20190118 18:19:11.002" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:11.026" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:11.027" starttime="20190118 18:19:11.018" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:11.030" starttime="20190118 18:19:10.930" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:11.168" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:11.194" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:11.214" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:11.217" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:11.218" starttime="20190118 18:19:11.161" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:11.231" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:11.232" starttime="20190118 18:19:11.221" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:11.243" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:11.244" starttime="20190118 18:19:11.235" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:11.247" starttime="20190118 18:19:11.153" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:11.385" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:11.411" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:11.431" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:11.434" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:11.435" starttime="20190118 18:19:11.378" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:11.448" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:11.449" starttime="20190118 18:19:11.439" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:11.459" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:11.461" starttime="20190118 18:19:11.451" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:11.464" starttime="20190118 18:19:11.370" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:11.601" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:11.627" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:11.647" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:11.650" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:11.651" starttime="20190118 18:19:11.595" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:11.664" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:11.665" starttime="20190118 18:19:11.655" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:11.676" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:11.677" starttime="20190118 18:19:11.668" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:11.680" starttime="20190118 18:19:11.587" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:11.821" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:11.847" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:11.868" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:11.871" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:11.872" starttime="20190118 18:19:11.811" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:11.884" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:11.885" starttime="20190118 18:19:11.875" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:11.896" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:11.897" starttime="20190118 18:19:11.888" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:11.900" starttime="20190118 18:19:11.803" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:12.039" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:12.065" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:12.085" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:12.088" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:12.089" starttime="20190118 18:19:12.032" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:12.102" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:12.103" starttime="20190118 18:19:12.093" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:12.115" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:12.116" starttime="20190118 18:19:12.106" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:12.119" starttime="20190118 18:19:12.023" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:12.257" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:12.283" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:12.303" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:12.306" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:12.307" starttime="20190118 18:19:12.250" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:12.322" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:12.323" starttime="20190118 18:19:12.311" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:12.334" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:12.335" starttime="20190118 18:19:12.326" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:12.338" starttime="20190118 18:19:12.242" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:12.476" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:12.502" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:12.522" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:12.525" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:12.526" starttime="20190118 18:19:12.469" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:12.539" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:12.540" starttime="20190118 18:19:12.529" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:12.551" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:12.552" starttime="20190118 18:19:12.543" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:12.555" starttime="20190118 18:19:12.461" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:12.696" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:12.723" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:12.743" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:12.746" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:12.747" starttime="20190118 18:19:12.686" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:12.760" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:12.760" starttime="20190118 18:19:12.751" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:12.771" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:12.773" starttime="20190118 18:19:12.763" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:12.776" starttime="20190118 18:19:12.678" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:12.915" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:12.941" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:12.961" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:12.964" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:12.965" starttime="20190118 18:19:12.908" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:12.978" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:12.978" starttime="20190118 18:19:12.969" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:12.989" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:12.990" starttime="20190118 18:19:12.981" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:12.994" starttime="20190118 18:19:12.900" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:13.131" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:13.158" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:13.178" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:13.181" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:13.182" starttime="20190118 18:19:13.125" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:13.194" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:13.195" starttime="20190118 18:19:13.186" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:13.206" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:13.208" starttime="20190118 18:19:13.198" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:13.211" starttime="20190118 18:19:13.117" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:13.349" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:13.375" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:13.395" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:13.398" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:13.399" starttime="20190118 18:19:13.343" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:13.417" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:13.420" starttime="20190118 18:19:13.403" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:13.432" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:13.436" starttime="20190118 18:19:13.423" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:13.439" starttime="20190118 18:19:13.335" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:13.580" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:13.609" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:13.629" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:13.632" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:13.633" starttime="20190118 18:19:13.570" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:13.646" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:13.647" starttime="20190118 18:19:13.637" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:13.657" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:13.659" starttime="20190118 18:19:13.650" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:13.662" starttime="20190118 18:19:13.563" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:13.799" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:13.825" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:13.846" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:13.849" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:13.850" starttime="20190118 18:19:13.793" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:13.864" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:13.865" starttime="20190118 18:19:13.854" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:13.876" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:13.877" starttime="20190118 18:19:13.868" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:13.880" starttime="20190118 18:19:13.785" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:14.019" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:14.045" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:14.065" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:14.068" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:14.069" starttime="20190118 18:19:14.012" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:14.082" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:14.083" starttime="20190118 18:19:14.073" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:14.093" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:14.094" starttime="20190118 18:19:14.085" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:14.098" starttime="20190118 18:19:14.003" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:14.235" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:14.261" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:14.287" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:14.290" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:14.291" starttime="20190118 18:19:14.229" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:14.305" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:14.306" starttime="20190118 18:19:14.296" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:14.316" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:14.318" starttime="20190118 18:19:14.309" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:14.321" starttime="20190118 18:19:14.221" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:14.463" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:14.489" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:14.509" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:14.513" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:14.514" starttime="20190118 18:19:14.453" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:14.526" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:14.527" starttime="20190118 18:19:14.517" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:14.539" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:14.540" starttime="20190118 18:19:14.530" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:14.543" starttime="20190118 18:19:14.445" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:14.681" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:14.707" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:14.727" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:14.730" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:14.731" starttime="20190118 18:19:14.674" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:14.744" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:14.745" starttime="20190118 18:19:14.735" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:14.756" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:14.757" starttime="20190118 18:19:14.748" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:14.760" starttime="20190118 18:19:14.666" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:14.898" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:14.925" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:14.946" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:14.950" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:14.951" starttime="20190118 18:19:14.891" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:14.965" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:14.966" starttime="20190118 18:19:14.955" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:14.977" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:14.979" starttime="20190118 18:19:14.969" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:14.982" starttime="20190118 18:19:14.883" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:15.121" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:15.148" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:15.168" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:15.171" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:15.172" starttime="20190118 18:19:15.115" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:15.184" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:15.185" starttime="20190118 18:19:15.175" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:15.196" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:15.197" starttime="20190118 18:19:15.188" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:15.200" starttime="20190118 18:19:15.105" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:15.341" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:15.367" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:15.388" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:15.391" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:15.393" starttime="20190118 18:19:15.331" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:15.405" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:15.406" starttime="20190118 18:19:15.396" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:15.417" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:15.418" starttime="20190118 18:19:15.409" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:15.421" starttime="20190118 18:19:15.323" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:15.559" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:15.585" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:15.605" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:15.609" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:15.610" starttime="20190118 18:19:15.553" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:15.623" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:15.624" starttime="20190118 18:19:15.614" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:15.634" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:15.636" starttime="20190118 18:19:15.626" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:15.639" starttime="20190118 18:19:15.544" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:15.777" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:15.803" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:15.823" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:15.826" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:15.827" starttime="20190118 18:19:15.770" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:15.840" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:15.841" starttime="20190118 18:19:15.831" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:15.851" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:15.853" starttime="20190118 18:19:15.844" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:15.856" starttime="20190118 18:19:15.762" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:15.993" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:16.019" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:16.040" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:16.043" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:16.044" starttime="20190118 18:19:15.987" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:16.056" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:16.057" starttime="20190118 18:19:16.048" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:16.068" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:16.069" starttime="20190118 18:19:16.060" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:16.072" starttime="20190118 18:19:15.979" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:16.214" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:16.240" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:16.260" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:16.263" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:16.264" starttime="20190118 18:19:16.203" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:16.277" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:16.278" starttime="20190118 18:19:16.268" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:16.289" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:16.290" starttime="20190118 18:19:16.281" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:16.293" starttime="20190118 18:19:16.195" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:16.431" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:16.458" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:16.478" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:16.481" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:16.482" starttime="20190118 18:19:16.424" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:16.494" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:16.495" starttime="20190118 18:19:16.486" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:16.506" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:16.507" starttime="20190118 18:19:16.498" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:16.510" starttime="20190118 18:19:16.416" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:16.650" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:16.676" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:16.696" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:16.699" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:16.700" starttime="20190118 18:19:16.642" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:16.713" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:16.714" starttime="20190118 18:19:16.704" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:16.725" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:16.726" starttime="20190118 18:19:16.717" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:16.729" starttime="20190118 18:19:16.634" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:16.867" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:16.892" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:16.914" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:16.917" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:16.918" starttime="20190118 18:19:16.860" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:16.931" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:16.931" starttime="20190118 18:19:16.922" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:16.942" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:16.944" starttime="20190118 18:19:16.934" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:16.947" starttime="20190118 18:19:16.852" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:17.088" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:17.115" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:17.135" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:17.138" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:17.139" starttime="20190118 18:19:17.078" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:17.153" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:17.154" starttime="20190118 18:19:17.143" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:17.164" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:17.166" starttime="20190118 18:19:17.157" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:17.169" starttime="20190118 18:19:17.070" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:17.307" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:17.333" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:17.353" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:17.356" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:17.357" starttime="20190118 18:19:17.300" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:17.370" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:17.371" starttime="20190118 18:19:17.361" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:17.382" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:17.383" starttime="20190118 18:19:17.374" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:17.386" starttime="20190118 18:19:17.292" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:17.524" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:17.550" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:17.571" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:17.574" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:17.574" starttime="20190118 18:19:17.517" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:17.587" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:17.588" starttime="20190118 18:19:17.578" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:17.599" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:17.600" starttime="20190118 18:19:17.591" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:17.603" starttime="20190118 18:19:17.509" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:17.741" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:17.769" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:17.789" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:17.792" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:17.793" starttime="20190118 18:19:17.734" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:17.805" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:17.806" starttime="20190118 18:19:17.797" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:17.817" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:17.818" starttime="20190118 18:19:17.809" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:17.821" starttime="20190118 18:19:17.726" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:17.972" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:17.998" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:18.019" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:18.022" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:18.023" starttime="20190118 18:19:17.953" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:18.036" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:18.037" starttime="20190118 18:19:18.027" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:18.048" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:18.049" starttime="20190118 18:19:18.039" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:18.052" starttime="20190118 18:19:17.945" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:18.190" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:18.216" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:18.236" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:18.239" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:18.240" starttime="20190118 18:19:18.183" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:18.253" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:18.254" starttime="20190118 18:19:18.244" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:18.265" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:18.267" starttime="20190118 18:19:18.257" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:18.270" starttime="20190118 18:19:18.175" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:18.408" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:18.434" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:18.455" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:18.458" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:18.459" starttime="20190118 18:19:18.402" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:18.472" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:18.473" starttime="20190118 18:19:18.463" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:18.483" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:18.485" starttime="20190118 18:19:18.475" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:18.488" starttime="20190118 18:19:18.393" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:18.627" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:18.653" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:18.674" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:18.677" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:18.678" starttime="20190118 18:19:18.619" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:18.691" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:18.692" starttime="20190118 18:19:18.682" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:18.703" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:18.704" starttime="20190118 18:19:18.695" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:18.707" starttime="20190118 18:19:18.611" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:18.845" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:18.872" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:18.892" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:18.896" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:18.897" starttime="20190118 18:19:18.839" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:18.914" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:18.915" starttime="20190118 18:19:18.901" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:18.925" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:18.926" starttime="20190118 18:19:18.917" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:18.930" starttime="20190118 18:19:18.830" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:19.067" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:19.093" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:19.114" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:19.117" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:19.118" starttime="20190118 18:19:19.061" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:19.130" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:19.131" starttime="20190118 18:19:19.121" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:19.142" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:19.143" starttime="20190118 18:19:19.134" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:19.146" starttime="20190118 18:19:19.053" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:19.284" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:19.311" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:19.331" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:19.334" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:19.335" starttime="20190118 18:19:19.278" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:19.348" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:19.349" starttime="20190118 18:19:19.339" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:19.360" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:19.361" starttime="20190118 18:19:19.352" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:19.364" starttime="20190118 18:19:19.270" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:19.503" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:19.529" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:19.549" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:19.553" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:19.554" starttime="20190118 18:19:19.496" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:19.566" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:19.567" starttime="20190118 18:19:19.557" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:19.578" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:19.579" starttime="20190118 18:19:19.570" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:19.582" starttime="20190118 18:19:19.488" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:19.720" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:19.748" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:19.769" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:19.773" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:19.774" starttime="20190118 18:19:19.714" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:19.786" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:19.787" starttime="20190118 18:19:19.777" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:19.801" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:19.803" starttime="20190118 18:19:19.790" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:19.806" starttime="20190118 18:19:19.706" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:19.943" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:19.969" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:19.990" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:19.994" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:19.995" starttime="20190118 18:19:19.937" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:20.009" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:20.010" starttime="20190118 18:19:19.999" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:20.021" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:20.022" starttime="20190118 18:19:20.013" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:20.025" starttime="20190118 18:19:19.929" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:20.163" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:20.189" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:20.210" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:20.213" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:20.214" starttime="20190118 18:19:20.157" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:20.226" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:20.227" starttime="20190118 18:19:20.218" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:20.238" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:20.239" starttime="20190118 18:19:20.230" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:20.242" starttime="20190118 18:19:20.148" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:20.380" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:20.406" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:20.427" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:20.430" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:20.431" starttime="20190118 18:19:20.373" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:20.444" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:20.445" starttime="20190118 18:19:20.435" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:20.456" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:20.457" starttime="20190118 18:19:20.448" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:20.460" starttime="20190118 18:19:20.365" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:20.598" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:20.624" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:20.644" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:20.648" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:20.649" starttime="20190118 18:19:20.591" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:20.661" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:20.662" starttime="20190118 18:19:20.652" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:20.677" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:20.678" starttime="20190118 18:19:20.665" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:20.681" starttime="20190118 18:19:20.583" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:20.818" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:20.845" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:20.865" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:20.868" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:20.869" starttime="20190118 18:19:20.812" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:20.882" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:20.883" starttime="20190118 18:19:20.873" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:20.893" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:20.895" starttime="20190118 18:19:20.886" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:20.898" starttime="20190118 18:19:20.804" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:21.036" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:21.062" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:21.083" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:21.086" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:21.087" starttime="20190118 18:19:21.029" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:21.100" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:21.101" starttime="20190118 18:19:21.090" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:21.112" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:21.113" starttime="20190118 18:19:21.104" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:21.116" starttime="20190118 18:19:21.021" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:21.254" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:21.280" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:21.300" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:21.303" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:21.305" starttime="20190118 18:19:21.247" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:21.317" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:21.318" starttime="20190118 18:19:21.308" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:21.329" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:21.330" starttime="20190118 18:19:21.321" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:21.333" starttime="20190118 18:19:21.240" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:21.472" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:21.498" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:21.518" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:21.521" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:21.522" starttime="20190118 18:19:21.465" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:21.535" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:21.535" starttime="20190118 18:19:21.526" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:21.546" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:21.548" starttime="20190118 18:19:21.538" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:21.551" starttime="20190118 18:19:21.457" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:21.692" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:21.718" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:21.738" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:21.742" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:21.743" starttime="20190118 18:19:21.685" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:21.756" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:21.757" starttime="20190118 18:19:21.746" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:21.767" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:21.769" starttime="20190118 18:19:21.760" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:21.772" starttime="20190118 18:19:21.674" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:21.909" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:21.935" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:21.956" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:21.959" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:21.960" starttime="20190118 18:19:21.903" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:21.973" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:21.974" starttime="20190118 18:19:21.964" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:21.984" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:21.985" starttime="20190118 18:19:21.976" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:21.989" starttime="20190118 18:19:21.895" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:22.126" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:22.153" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:22.173" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:22.176" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:22.177" starttime="20190118 18:19:22.120" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:22.190" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:22.191" starttime="20190118 18:19:22.181" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:22.203" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:22.204" starttime="20190118 18:19:22.195" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:22.207" starttime="20190118 18:19:22.112" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:22.345" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:22.371" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:22.391" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:22.394" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:22.395" starttime="20190118 18:19:22.338" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:22.408" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:22.409" starttime="20190118 18:19:22.399" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:22.420" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:22.422" starttime="20190118 18:19:22.412" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:22.425" starttime="20190118 18:19:22.330" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:22.566" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:22.593" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:22.613" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:22.616" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:22.617" starttime="20190118 18:19:22.559" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:22.630" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:22.630" starttime="20190118 18:19:22.621" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:22.641" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:22.643" starttime="20190118 18:19:22.633" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:22.646" starttime="20190118 18:19:22.548" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:22.783" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:22.810" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:22.830" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:22.834" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:22.834" starttime="20190118 18:19:22.777" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:22.847" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:22.848" starttime="20190118 18:19:22.838" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:22.859" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:22.861" starttime="20190118 18:19:22.851" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:22.864" starttime="20190118 18:19:22.769" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:23.003" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:23.029" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:23.050" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:23.053" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:23.054" starttime="20190118 18:19:22.996" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:23.067" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:23.068" starttime="20190118 18:19:23.058" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:23.078" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:23.080" starttime="20190118 18:19:23.070" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:23.083" starttime="20190118 18:19:22.987" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:23.220" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:23.246" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:23.269" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:23.272" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:23.273" starttime="20190118 18:19:23.214" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:23.285" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:23.286" starttime="20190118 18:19:23.277" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:23.298" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:23.300" starttime="20190118 18:19:23.289" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:23.303" starttime="20190118 18:19:23.206" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:23.444" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:23.476" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:23.500" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:23.503" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:23.504" starttime="20190118 18:19:23.434" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:23.520" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:23.521" starttime="20190118 18:19:23.510" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:23.531" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:23.533" starttime="20190118 18:19:23.523" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:23.536" starttime="20190118 18:19:23.426" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:23.673" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:23.700" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:23.720" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:23.723" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:23.724" starttime="20190118 18:19:23.667" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:23.738" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:23.738" starttime="20190118 18:19:23.728" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:23.749" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:23.750" starttime="20190118 18:19:23.741" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:23.754" starttime="20190118 18:19:23.659" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:23.891" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:23.919" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:23.939" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:23.942" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:23.943" starttime="20190118 18:19:23.885" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:23.956" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:23.957" starttime="20190118 18:19:23.947" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:23.968" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:23.969" starttime="20190118 18:19:23.960" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:23.972" starttime="20190118 18:19:23.877" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:24.110" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:24.137" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:24.158" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:24.161" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:24.162" starttime="20190118 18:19:24.104" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:24.174" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:24.175" starttime="20190118 18:19:24.165" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:24.186" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:24.188" starttime="20190118 18:19:24.178" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:24.191" starttime="20190118 18:19:24.095" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:24.329" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:24.355" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:24.376" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:24.379" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:24.380" starttime="20190118 18:19:24.322" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:24.397" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:24.397" starttime="20190118 18:19:24.384" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:24.410" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:24.411" starttime="20190118 18:19:24.401" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:24.414" starttime="20190118 18:19:24.314" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:24.552" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:24.578" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:24.598" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:24.601" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:24.602" starttime="20190118 18:19:24.545" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:24.615" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:24.616" starttime="20190118 18:19:24.606" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:24.627" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:24.629" starttime="20190118 18:19:24.619" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:24.631" starttime="20190118 18:19:24.537" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:24.770" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:24.796" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:24.816" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:24.819" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:24.821" starttime="20190118 18:19:24.763" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:24.834" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:24.835" starttime="20190118 18:19:24.825" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:24.845" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:24.847" starttime="20190118 18:19:24.838" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:24.850" starttime="20190118 18:19:24.755" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:24.988" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:25.016" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:25.038" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:25.041" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:25.042" starttime="20190118 18:19:24.982" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:25.055" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:25.055" starttime="20190118 18:19:25.046" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:25.067" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:25.068" starttime="20190118 18:19:25.059" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:25.071" starttime="20190118 18:19:24.973" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:25.209" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:25.235" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:25.255" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:25.259" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:25.260" starttime="20190118 18:19:25.202" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:25.276" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:25.277" starttime="20190118 18:19:25.263" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:25.287" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:25.289" starttime="20190118 18:19:25.280" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:25.292" starttime="20190118 18:19:25.194" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:25.429" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:25.455" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:25.476" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:25.479" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:25.480" starttime="20190118 18:19:25.423" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:25.493" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:25.494" starttime="20190118 18:19:25.484" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:25.504" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:25.506" starttime="20190118 18:19:25.497" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:25.514" starttime="20190118 18:19:25.415" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:25.652" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:25.678" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:25.698" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:25.701" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:25.702" starttime="20190118 18:19:25.646" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:25.715" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:25.716" starttime="20190118 18:19:25.706" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:25.726" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:25.728" starttime="20190118 18:19:25.718" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:25.731" starttime="20190118 18:19:25.638" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:25.869" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:25.894" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:25.914" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:25.917" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:25.918" starttime="20190118 18:19:25.862" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:25.931" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:25.931" starttime="20190118 18:19:25.922" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:25.942" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:25.943" starttime="20190118 18:19:25.934" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:25.947" starttime="20190118 18:19:25.854" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:26.085" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:26.111" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:26.131" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:26.134" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:26.134" starttime="20190118 18:19:26.078" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:26.152" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:26.153" starttime="20190118 18:19:26.138" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:26.164" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:26.165" starttime="20190118 18:19:26.155" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:26.168" starttime="20190118 18:19:26.070" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:26.305" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:26.331" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:26.351" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:26.354" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:26.355" starttime="20190118 18:19:26.299" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:26.367" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:26.368" starttime="20190118 18:19:26.358" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:26.379" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:26.380" starttime="20190118 18:19:26.371" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:26.383" starttime="20190118 18:19:26.291" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:26.521" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:26.546" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:26.566" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:26.569" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:26.570" starttime="20190118 18:19:26.514" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:26.583" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:26.584" starttime="20190118 18:19:26.574" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:26.595" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:26.596" starttime="20190118 18:19:26.587" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:26.599" starttime="20190118 18:19:26.506" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:26.738" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:26.764" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:26.784" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:26.787" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:26.787" starttime="20190118 18:19:26.731" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:26.800" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:26.801" starttime="20190118 18:19:26.791" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:26.812" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:26.813" starttime="20190118 18:19:26.804" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:26.816" starttime="20190118 18:19:26.723" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:26.954" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:26.979" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:26.999" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:27.003" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:27.004" starttime="20190118 18:19:26.947" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:27.020" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:27.021" starttime="20190118 18:19:27.008" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:27.031" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:27.033" starttime="20190118 18:19:27.024" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:27.036" starttime="20190118 18:19:26.939" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:27.173" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:27.199" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:27.219" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:27.222" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:27.223" starttime="20190118 18:19:27.167" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:27.236" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:27.237" starttime="20190118 18:19:27.227" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:27.247" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:27.249" starttime="20190118 18:19:27.240" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:27.252" starttime="20190118 18:19:27.159" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:27.389" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:27.415" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:27.435" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:27.438" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:27.439" starttime="20190118 18:19:27.383" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:27.451" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:27.452" starttime="20190118 18:19:27.443" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:27.463" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:27.465" starttime="20190118 18:19:27.455" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:27.468" starttime="20190118 18:19:27.375" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:27.605" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:27.631" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:27.651" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:27.654" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:27.655" starttime="20190118 18:19:27.599" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:27.668" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:27.669" starttime="20190118 18:19:27.659" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:27.682" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:27.683" starttime="20190118 18:19:27.672" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:27.686" starttime="20190118 18:19:27.591" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:27.825" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:27.851" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:27.871" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:27.874" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:27.875" starttime="20190118 18:19:27.817" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:27.891" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:27.892" starttime="20190118 18:19:27.879" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:27.903" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:27.905" starttime="20190118 18:19:27.895" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:27.908" starttime="20190118 18:19:27.809" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:28.046" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:28.071" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:28.092" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:28.095" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:28.095" starttime="20190118 18:19:28.039" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:28.109" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:28.110" starttime="20190118 18:19:28.099" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:28.120" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:28.122" starttime="20190118 18:19:28.112" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:28.125" starttime="20190118 18:19:28.031" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:28.263" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:28.288" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:28.308" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:28.311" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:28.312" starttime="20190118 18:19:28.256" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:28.325" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:28.326" starttime="20190118 18:19:28.316" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:28.337" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:28.338" starttime="20190118 18:19:28.329" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:28.341" starttime="20190118 18:19:28.248" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:28.479" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:28.505" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:28.525" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:28.528" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:28.529" starttime="20190118 18:19:28.473" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:28.542" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:28.543" starttime="20190118 18:19:28.533" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:28.553" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:28.555" starttime="20190118 18:19:28.545" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:28.558" starttime="20190118 18:19:28.464" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:28.695" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:28.721" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:28.741" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:28.744" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:28.745" starttime="20190118 18:19:28.689" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:28.770" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:28.771" starttime="20190118 18:19:28.749" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:28.781" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:28.783" starttime="20190118 18:19:28.774" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:28.786" starttime="20190118 18:19:28.681" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:28.923" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:28.950" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:28.970" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:28.974" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:28.975" starttime="20190118 18:19:28.916" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:28.987" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:28.988" starttime="20190118 18:19:28.979" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:29.000" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:29.001" starttime="20190118 18:19:28.991" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:29.005" starttime="20190118 18:19:28.909" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:29.143" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:29.215" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:29.244" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:29.247" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:29.248" starttime="20190118 18:19:29.136" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:29.261" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:29.262" starttime="20190118 18:19:29.252" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:29.273" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:29.274" starttime="20190118 18:19:29.265" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:29.277" starttime="20190118 18:19:29.128" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:29.415" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:29.441" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:29.461" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:29.464" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:29.465" starttime="20190118 18:19:29.408" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:29.478" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:29.479" starttime="20190118 18:19:29.469" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:29.491" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:29.493" starttime="20190118 18:19:29.483" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:29.496" starttime="20190118 18:19:29.400" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:29.633" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:29.659" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:29.680" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:29.683" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:29.684" starttime="20190118 18:19:29.627" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:29.701" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:29.702" starttime="20190118 18:19:29.688" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:29.712" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:29.714" starttime="20190118 18:19:29.704" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:29.717" starttime="20190118 18:19:29.619" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:29.855" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:29.883" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:29.903" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:29.906" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:29.907" starttime="20190118 18:19:29.847" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:29.920" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:29.921" starttime="20190118 18:19:29.911" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:29.931" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:29.933" starttime="20190118 18:19:29.923" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:29.936" starttime="20190118 18:19:29.840" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:30.074" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:30.101" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:30.122" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:30.125" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:30.126" starttime="20190118 18:19:30.067" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:30.139" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:30.139" starttime="20190118 18:19:30.130" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:30.150" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:30.152" starttime="20190118 18:19:30.142" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:30.155" starttime="20190118 18:19:30.059" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:30.292" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:30.318" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:30.338" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:30.341" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:30.342" starttime="20190118 18:19:30.286" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:30.355" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:30.356" starttime="20190118 18:19:30.346" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:30.367" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:30.368" starttime="20190118 18:19:30.359" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:30.372" starttime="20190118 18:19:30.278" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:30.509" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:30.535" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:30.555" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:30.558" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:30.559" starttime="20190118 18:19:30.503" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:30.572" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:30.573" starttime="20190118 18:19:30.563" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:30.588" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:30.590" starttime="20190118 18:19:30.576" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:30.593" starttime="20190118 18:19:30.495" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:30.730" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:30.758" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:30.778" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:30.782" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:30.783" starttime="20190118 18:19:30.723" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:30.795" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:30.796" starttime="20190118 18:19:30.786" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:30.807" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:30.808" starttime="20190118 18:19:30.799" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:30.811" starttime="20190118 18:19:30.716" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:30.949" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:30.975" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:30.995" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:30.998" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:30.999" starttime="20190118 18:19:30.942" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:31.013" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:31.014" starttime="20190118 18:19:31.003" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:31.024" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:31.026" starttime="20190118 18:19:31.016" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:31.029" starttime="20190118 18:19:30.934" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:31.166" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:31.193" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:31.213" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:31.216" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:31.218" starttime="20190118 18:19:31.160" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:31.230" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:31.231" starttime="20190118 18:19:31.222" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:31.242" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:31.243" starttime="20190118 18:19:31.234" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:31.246" starttime="20190118 18:19:31.152" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:31.384" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:31.410" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:31.430" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:31.433" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:31.434" starttime="20190118 18:19:31.377" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:31.446" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:31.447" starttime="20190118 18:19:31.438" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:31.462" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:31.464" starttime="20190118 18:19:31.450" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:31.466" starttime="20190118 18:19:31.369" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:31.603" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:31.629" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:31.650" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:31.653" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:31.654" starttime="20190118 18:19:31.597" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:31.667" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:31.668" starttime="20190118 18:19:31.658" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:31.679" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:31.680" starttime="20190118 18:19:31.670" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:31.683" starttime="20190118 18:19:31.589" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:31.821" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:31.847" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:31.869" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:31.872" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:31.873" starttime="20190118 18:19:31.815" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:31.886" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:31.887" starttime="20190118 18:19:31.877" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:31.898" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:31.899" starttime="20190118 18:19:31.890" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:31.902" starttime="20190118 18:19:31.806" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:32.065" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:32.114" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:32.152" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:32.156" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:19:32.161" starttime="20190118 18:19:32.050" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:32.189" level="INFO">${resp} = </msg>
<status endtime="20190118 18:19:32.190" starttime="20190118 18:19:32.169" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190118 18:19:32.214" level="FAIL">'' does not contain 'usb_max'</msg>
<status endtime="20190118 18:19:32.215" starttime="20190118 18:19:32.197" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:32.226" starttime="20190118 18:19:32.026" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:32.402" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190118 18:19:32.521" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:32.613" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:32.617" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:32.618" starttime="20190118 18:19:32.367" status="PASS"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:19:32.632" level="INFO">${resp} = 250: usb_max: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    inet 192.168.1.100/24 brd 192.168.1.255 scope global usb_max</msg>
<status endtime="20190118 18:19:32.633" starttime="20190118 18:19:32.622" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<status endtime="20190118 18:19:32.642" starttime="20190118 18:19:32.636" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:32.645" starttime="20190118 18:19:32.350" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:32.646" starttime="20190118 18:19:07.146" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:19:32.648" level="INFO">${STATUS} = True</msg>
<status endtime="20190118 18:19:32.649" starttime="20190118 18:19:07.140" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DUT ready status: ${STATUS}</arg>
</arguments>
<status endtime="20190118 18:19:32.659" starttime="20190118 18:19:32.651" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3 seconds</arg>
</arguments>
<msg timestamp="20190118 18:19:35.667" level="INFO">Slept 3 seconds</msg>
<status endtime="20190118 18:19:35.669" starttime="20190118 18:19:32.662" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:19:35.673" level="INFO">${status} = True</msg>
<status endtime="20190118 18:19:35.674" starttime="20190118 18:19:07.114" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Device does not exist</arg>
</arguments>
<status endtime="20190118 18:19:35.681" starttime="20190118 18:19:35.677" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:19:35.692" level="INFO">"Setup ssh"</msg>
<status endtime="20190118 18:19:35.694" starttime="20190118 18:19:35.684" status="PASS"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw name="Open Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg timestamp="20190118 18:19:35.711" level="INFO">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status endtime="20190118 18:19:37.559" starttime="20190118 18:19:35.705" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:37.561" starttime="20190118 18:19:35.698" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh done!"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:19:37.570" level="INFO">"Setup ssh done!"</msg>
<status endtime="20190118 18:19:37.573" starttime="20190118 18:19:37.563" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:37.575" starttime="20190118 18:19:00.826" status="PASS"></status>
</kw>
<kw name="cansend_500k">
<doc>Can 3 send message test with baudrate 500k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:19:37.602" level="INFO">Start test with can2 and bitrate: 500000</msg>
<status endtime="20190118 18:19:37.605" starttime="20190118 18:19:37.596" status="PASS"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:19:37.624" starttime="20190118 18:19:37.617" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:37.634" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:19:37.662" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:37.737" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:37.741" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:37.742" starttime="20190118 18:19:37.627" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:37.754" starttime="20190118 18:19:37.745" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:37.765" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190118 18:19:37.794" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:37.907" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:37.910" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:37.911" starttime="20190118 18:19:37.757" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:37.972" starttime="20190118 18:19:37.921" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:38.002" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:19:38.034" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:38.123" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:38.126" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:38.127" starttime="20190118 18:19:37.988" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:38.140" starttime="20190118 18:19:38.131" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:19:38.143" starttime="20190118 18:19:37.607" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190118 18:19:38.166" starttime="20190118 18:19:38.160" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:38.176" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190118 18:19:38.277" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:38.279" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:38.280" starttime="20190118 18:19:38.170" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:38.795" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:38.797" starttime="20190118 18:19:38.283" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:38.807" level="INFO">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190118 18:19:38.858" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:38.861" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:38.861" starttime="20190118 18:19:38.800" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:39.375" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:39.377" starttime="20190118 18:19:38.864" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:39.386" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190118 18:19:39.442" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:39.445" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:39.446" starttime="20190118 18:19:39.380" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:39.958" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:39.960" starttime="20190118 18:19:39.448" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:39.963" starttime="20190118 18:19:38.145" status="PASS"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190118 18:19:40.173" starttime="20190118 18:19:39.966" status="PASS"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:19:40.249" starttime="20190118 18:19:40.177" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status endtime="20190118 18:19:40.264" starttime="20190118 18:19:40.251" status="PASS"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:19:40.316" starttime="20190118 18:19:40.267" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status endtime="20190118 18:19:40.337" starttime="20190118 18:19:40.323" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:19:40.845" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:40.847" starttime="20190118 18:19:40.340" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status endtime="20190118 18:19:40.870" starttime="20190118 18:19:40.854" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190118 18:19:40.883" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:19:40.958" level="INFO">Returning data (, )</msg>
<status endtime="20190118 18:19:40.960" starttime="20190118 18:19:40.873" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190118 18:19:40.995" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:19:41.077" level="INFO">Returning data (, )</msg>
<status endtime="20190118 18:19:41.079" starttime="20190118 18:19:40.971" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190118 18:19:41.115" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:19:41.208" level="INFO">Returning data (, )</msg>
<status endtime="20190118 18:19:41.217" starttime="20190118 18:19:41.086" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:19:41.742" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:41.744" starttime="20190118 18:19:41.219" status="PASS"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190118 18:19:41.810" level="INFO">${res_list} = [{'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:40.964850', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:41.092188', 'id': '0x1a'}, {'payload': '11...</msg>
<status endtime="20190118 18:19:41.811" starttime="20190118 18:19:41.752" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:19:41.820" level="INFO">[{'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:40.964850', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:41.092188', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:41.221098', 'id': '0x1a'}]</msg>
<status endtime="20190118 18:19:41.823" starttime="20190118 18:19:41.814" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190118 18:19:41.831" level="INFO">Length is 3</msg>
<msg timestamp="20190118 18:19:41.833" level="INFO">${MSG_LENGTH} = 3</msg>
<status endtime="20190118 18:19:41.834" starttime="20190118 18:19:41.826" status="PASS"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:19:41.853" starttime="20190118 18:19:41.845" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:41.854" starttime="20190118 18:19:41.837" status="PASS"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:41.879" level="INFO">Length is 3</msg>
<msg timestamp="20190118 18:19:41.881" level="INFO">${count} = 3</msg>
<status endtime="20190118 18:19:41.882" starttime="20190118 18:19:41.874" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:19:41.891" starttime="20190118 18:19:41.885" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:41.900" level="INFO">${msgcount} = 0</msg>
<status endtime="20190118 18:19:41.901" starttime="20190118 18:19:41.894" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:40.964850', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:19:41.918" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:19:41.919" starttime="20190118 18:19:41.911" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:41.929" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:19:41.930" starttime="20190118 18:19:41.922" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:41.941" level="INFO">${msgcount} = 1</msg>
<status endtime="20190118 18:19:41.942" starttime="20190118 18:19:41.933" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:41.942" starttime="20190118 18:19:41.908" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:41.092188', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:19:41.953" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:19:41.954" starttime="20190118 18:19:41.947" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:41.965" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:19:41.966" starttime="20190118 18:19:41.957" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:41.976" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:19:41.977" starttime="20190118 18:19:41.968" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:41.977" starttime="20190118 18:19:41.944" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:41.221098', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:19:41.988" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:19:41.989" starttime="20190118 18:19:41.982" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:41.999" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:19:42.000" starttime="20190118 18:19:41.992" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:42.011" level="INFO">${msgcount} = 3</msg>
<status endtime="20190118 18:19:42.011" starttime="20190118 18:19:42.003" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:42.012" starttime="20190118 18:19:41.979" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:42.013" starttime="20190118 18:19:41.902" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:19:42.022" starttime="20190118 18:19:42.016" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190118 18:19:42.032" starttime="20190118 18:19:42.025" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:42.035" starttime="20190118 18:19:41.865" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:42.037" starttime="20190118 18:19:41.858" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status endtime="20190118 18:19:42.039" starttime="20190118 18:19:37.586" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:42.042" starttime="20190118 18:19:37.580" status="PASS"></status>
</kw>
<kw name="can_loopback_500k">
<doc>Can 3 loopback test with baudrate 500k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:19:42.063" level="INFO">Can channel loopback: can2 with bitrate: 500000</msg>
<status endtime="20190118 18:19:42.066" starttime="20190118 18:19:42.058" status="PASS"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:19:42.086" starttime="20190118 18:19:42.079" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:42.095" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:19:42.123" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:42.200" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:42.203" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:42.204" starttime="20190118 18:19:42.089" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:42.217" starttime="20190118 18:19:42.208" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:42.227" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190118 18:19:42.255" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:42.314" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:42.317" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:42.318" starttime="20190118 18:19:42.220" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:42.330" starttime="20190118 18:19:42.322" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:42.340" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:19:42.369" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:42.456" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:42.459" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:42.460" starttime="20190118 18:19:42.334" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:42.472" starttime="20190118 18:19:42.464" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:19:42.475" starttime="20190118 18:19:42.068" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190118 18:19:42.493" starttime="20190118 18:19:42.488" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:42.502" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190118 18:19:42.555" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:42.558" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:42.559" starttime="20190118 18:19:42.496" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:43.073" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:43.076" starttime="20190118 18:19:42.561" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:43.085" level="INFO">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190118 18:19:43.134" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:43.137" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:43.137" starttime="20190118 18:19:43.078" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:43.652" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:43.654" starttime="20190118 18:19:43.140" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:43.663" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190118 18:19:43.706" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:43.709" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:43.709" starttime="20190118 18:19:43.657" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:44.222" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:44.225" starttime="20190118 18:19:43.717" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:44.227" starttime="20190118 18:19:42.478" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:44.237" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190118 18:19:44.266" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:44.280" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:44.283" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:44.284" starttime="20190118 18:19:44.231" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status endtime="20190118 18:19:44.297" starttime="20190118 18:19:44.288" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:44.305" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190118 18:19:44.364" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 500000 sample-point 0.875  	  tq 125 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190118 18:19:44.368" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 500000 sample-poi...</msg>
<status endtime="20190118 18:19:44.369" starttime="20190118 18:19:44.300" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status endtime="20190118 18:19:44.385" starttime="20190118 18:19:44.372" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:44.392" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190118 18:19:44.489" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:44.491" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:44.492" starttime="20190118 18:19:44.388" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status endtime="20190118 18:19:44.507" starttime="20190118 18:19:44.495" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190118 18:19:45.514" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:19:45.516" starttime="20190118 18:19:44.510" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:45.525" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190118 18:19:45.569" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:45.572" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:45.573" starttime="20190118 18:19:45.519" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status endtime="20190118 18:19:45.586" starttime="20190118 18:19:45.576" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:19:46.093" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:46.095" starttime="20190118 18:19:45.589" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:46.102" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190118 18:19:46.201" level="INFO">Returning data (542 root      0:00 candump -t a -D -B can2 can2   543 root      0:00 sh -c ps aux | grep candump   545 root      0:00 grep candump, )</msg>
<msg timestamp="20190118 18:19:46.203" level="INFO">${ret} = ('542 root      0:00 candump -t a -D -B can2 can2   543 root      0:00 sh -c ps aux | grep candump   545 root      0:00 grep candump', '')</msg>
<status endtime="20190118 18:19:46.204" starttime="20190118 18:19:46.098" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status endtime="20190118 18:19:46.220" starttime="20190118 18:19:46.207" status="PASS"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190118 18:19:46.383" starttime="20190118 18:19:46.223" status="PASS"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:19:46.433" starttime="20190118 18:19:46.386" status="PASS"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:19:46.483" starttime="20190118 18:19:46.436" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:19:46.999" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:47.001" starttime="20190118 18:19:46.491" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:47.021" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190118 18:19:47.114" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:47.142" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:47.146" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:47.147" starttime="20190118 18:19:47.004" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:47.205" starttime="20190118 18:19:47.178" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:47.237" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:19:47.308" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:47.339" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:47.342" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:47.343" starttime="20190118 18:19:47.216" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:47.399" starttime="20190118 18:19:47.366" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:47.425" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190118 18:19:47.511" level="INFO">Returning data ((1547834541.418466)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547834541.622777)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190118 18:19:47.521" level="INFO">${ret} = ('(1547834541.418466)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547834541.622777)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status endtime="20190118 18:19:47.522" starttime="20190118 18:19:47.406" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status endtime="20190118 18:19:47.571" starttime="20190118 18:19:47.533" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:19:48.101" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:48.103" starttime="20190118 18:19:47.582" status="PASS"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190118 18:19:48.207" level="INFO">${res_list} = [{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:47.164948', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:47.182930', 'id': '0x18ef7777'}, {'p...</msg>
<status endtime="20190118 18:19:48.208" starttime="20190118 18:19:48.125" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:19:48.225" level="INFO">[{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:47.164948', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:47.182930', 'id': '0x18ef7777'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:47.357144', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:47.372208', 'id': '0x1a'}]</msg>
<status endtime="20190118 18:19:48.233" starttime="20190118 18:19:48.221" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190118 18:19:48.248" level="INFO">Length is 4</msg>
<msg timestamp="20190118 18:19:48.250" level="INFO">${MSG_LENGTH} = 4</msg>
<status endtime="20190118 18:19:48.251" starttime="20190118 18:19:48.240" status="PASS"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:19:48.282" starttime="20190118 18:19:48.268" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:48.283" starttime="20190118 18:19:48.258" status="PASS"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:48.339" level="INFO">Length is 4</msg>
<msg timestamp="20190118 18:19:48.346" level="INFO">${count} = 4</msg>
<status endtime="20190118 18:19:48.346" starttime="20190118 18:19:48.331" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:19:48.363" starttime="20190118 18:19:48.353" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:48.379" level="INFO">${msgcount} = 0</msg>
<status endtime="20190118 18:19:48.380" starttime="20190118 18:19:48.370" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:47.164948', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:19:48.409" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190118 18:19:48.410" starttime="20190118 18:19:48.396" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:48.427" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:19:48.428" starttime="20190118 18:19:48.416" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:48.440" level="INFO">${msgcount} = 1</msg>
<status endtime="20190118 18:19:48.441" starttime="20190118 18:19:48.432" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:48.442" starttime="20190118 18:19:48.393" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:47.182930', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:19:48.451" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190118 18:19:48.452" starttime="20190118 18:19:48.446" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:48.466" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:19:48.467" starttime="20190118 18:19:48.455" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:48.488" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:19:48.493" starttime="20190118 18:19:48.474" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:48.494" starttime="20190118 18:19:48.443" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:47.357144', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:19:48.513" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:19:48.515" starttime="20190118 18:19:48.500" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:48.531" level="INFO">${count} = 0</msg>
<status endtime="20190118 18:19:48.532" starttime="20190118 18:19:48.522" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:48.544" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:19:48.546" starttime="20190118 18:19:48.536" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:48.547" starttime="20190118 18:19:48.495" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:47.372208', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:19:48.558" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:19:48.558" starttime="20190118 18:19:48.552" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:48.569" level="INFO">${count} = 0</msg>
<status endtime="20190118 18:19:48.570" starttime="20190118 18:19:48.561" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:48.579" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:19:48.579" starttime="20190118 18:19:48.572" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:48.581" starttime="20190118 18:19:48.549" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:48.582" starttime="20190118 18:19:48.385" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:19:48.606" starttime="20190118 18:19:48.591" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190118 18:19:48.629" starttime="20190118 18:19:48.613" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:48.633" starttime="20190118 18:19:48.306" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:48.634" starttime="20190118 18:19:48.290" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:48.649" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190118 18:19:48.747" level="INFO">Returning data (542 root      0:00 candump -t a -D -B can2 can2   551 root      0:00 sh -c ps aux | grep candump   554 root      0:00 grep candump, )</msg>
<msg timestamp="20190118 18:19:48.754" level="INFO">${ret} = ('542 root      0:00 candump -t a -D -B can2 can2   551 root      0:00 sh -c ps aux | grep candump   554 root      0:00 grep candump', '')</msg>
<status endtime="20190118 18:19:48.755" starttime="20190118 18:19:48.641" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status endtime="20190118 18:19:48.789" starttime="20190118 18:19:48.759" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:48.800" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190118 18:19:48.875" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:48.877" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:48.878" starttime="20190118 18:19:48.796" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190118 18:19:49.885" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:19:49.887" starttime="20190118 18:19:48.881" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:49.894" starttime="20190118 18:19:42.049" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:49.900" starttime="20190118 18:19:42.044" status="PASS"></status>
</kw>
<kw name="cansend_250k">
<doc>Can 3 send message test with baudrate 250k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:19:49.950" level="INFO">Start test with can2 and bitrate: 250000</msg>
<status endtime="20190118 18:19:49.966" starttime="20190118 18:19:49.932" status="PASS"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:19:50.026" starttime="20190118 18:19:49.990" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:50.049" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:19:50.097" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:50.221" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:50.224" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:50.225" starttime="20190118 18:19:50.030" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:50.250" starttime="20190118 18:19:50.233" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:50.268" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190118 18:19:50.314" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:50.404" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:50.407" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:50.408" starttime="20190118 18:19:50.257" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:50.425" starttime="20190118 18:19:50.415" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:50.450" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:19:50.501" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:50.642" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:50.645" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:50.646" starttime="20190118 18:19:50.434" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:50.666" starttime="20190118 18:19:50.654" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:19:50.669" starttime="20190118 18:19:49.968" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190118 18:19:50.688" starttime="20190118 18:19:50.682" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:50.697" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190118 18:19:50.750" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:50.753" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:50.754" starttime="20190118 18:19:50.691" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:51.270" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:51.272" starttime="20190118 18:19:50.757" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:51.287" level="INFO">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190118 18:19:51.344" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:51.350" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:51.351" starttime="20190118 18:19:51.275" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:51.876" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:51.878" starttime="20190118 18:19:51.366" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:51.900" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190118 18:19:51.965" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:51.967" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:51.969" starttime="20190118 18:19:51.886" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:52.483" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:52.485" starttime="20190118 18:19:51.971" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:52.488" starttime="20190118 18:19:50.672" status="PASS"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190118 18:19:52.650" starttime="20190118 18:19:52.491" status="PASS"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:19:52.704" starttime="20190118 18:19:52.657" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status endtime="20190118 18:19:52.713" starttime="20190118 18:19:52.707" status="PASS"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:19:52.765" starttime="20190118 18:19:52.716" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status endtime="20190118 18:19:52.786" starttime="20190118 18:19:52.768" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:19:53.298" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:53.300" starttime="20190118 18:19:52.789" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status endtime="20190118 18:19:53.325" starttime="20190118 18:19:53.303" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190118 18:19:53.339" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:19:53.398" level="INFO">Returning data (, )</msg>
<status endtime="20190118 18:19:53.400" starttime="20190118 18:19:53.328" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190118 18:19:53.450" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:19:53.518" level="INFO">Returning data (, )</msg>
<status endtime="20190118 18:19:53.520" starttime="20190118 18:19:53.410" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190118 18:19:53.562" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:19:53.630" level="INFO">Returning data (, )</msg>
<status endtime="20190118 18:19:53.641" starttime="20190118 18:19:53.535" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:19:54.166" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:54.169" starttime="20190118 18:19:53.644" status="PASS"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190118 18:19:54.234" level="INFO">${res_list} = [{'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:53.402883', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:53.526509', 'id': '0x1a'}, {'payload': '11...</msg>
<status endtime="20190118 18:19:54.235" starttime="20190118 18:19:54.172" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:19:54.244" level="INFO">[{'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:53.402883', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:53.526509', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:53.636985', 'id': '0x1a'}]</msg>
<status endtime="20190118 18:19:54.247" starttime="20190118 18:19:54.238" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190118 18:19:54.255" level="INFO">Length is 3</msg>
<msg timestamp="20190118 18:19:54.258" level="INFO">${MSG_LENGTH} = 3</msg>
<status endtime="20190118 18:19:54.258" starttime="20190118 18:19:54.250" status="PASS"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:19:54.277" starttime="20190118 18:19:54.268" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:54.278" starttime="20190118 18:19:54.261" status="PASS"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:54.303" level="INFO">Length is 3</msg>
<msg timestamp="20190118 18:19:54.305" level="INFO">${count} = 3</msg>
<status endtime="20190118 18:19:54.306" starttime="20190118 18:19:54.298" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:19:54.319" starttime="20190118 18:19:54.309" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:54.329" level="INFO">${msgcount} = 0</msg>
<status endtime="20190118 18:19:54.330" starttime="20190118 18:19:54.322" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:53.402883', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:19:54.344" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:19:54.345" starttime="20190118 18:19:54.337" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:54.355" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:19:54.356" starttime="20190118 18:19:54.348" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:54.366" level="INFO">${msgcount} = 1</msg>
<status endtime="20190118 18:19:54.367" starttime="20190118 18:19:54.359" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:54.368" starttime="20190118 18:19:54.334" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:53.526509', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:19:54.379" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:19:54.379" starttime="20190118 18:19:54.372" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:54.390" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:19:54.391" starttime="20190118 18:19:54.382" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:54.401" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:19:54.402" starttime="20190118 18:19:54.394" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:54.403" starttime="20190118 18:19:54.369" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:53.636985', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:19:54.413" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:19:54.414" starttime="20190118 18:19:54.407" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:19:54.425" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:19:54.425" starttime="20190118 18:19:54.417" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:19:54.436" level="INFO">${msgcount} = 3</msg>
<status endtime="20190118 18:19:54.437" starttime="20190118 18:19:54.428" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:54.437" starttime="20190118 18:19:54.404" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:54.438" starttime="20190118 18:19:54.331" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:19:54.447" starttime="20190118 18:19:54.441" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190118 18:19:54.458" starttime="20190118 18:19:54.450" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:54.462" starttime="20190118 18:19:54.289" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:54.463" starttime="20190118 18:19:54.282" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status endtime="20190118 18:19:54.466" starttime="20190118 18:19:49.916" status="PASS"></status>
</kw>
<status endtime="20190118 18:19:54.468" starttime="20190118 18:19:49.903" status="PASS"></status>
</kw>
<kw name="can_loopback_250k">
<doc>Can 3 loopback test with baudrate 250k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:19:54.490" level="INFO">Can channel loopback: can2 with bitrate: 250000</msg>
<status endtime="20190118 18:19:54.492" starttime="20190118 18:19:54.484" status="PASS"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:19:54.512" starttime="20190118 18:19:54.505" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:54.522" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:19:54.551" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:54.627" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:54.631" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:54.632" starttime="20190118 18:19:54.515" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:54.644" starttime="20190118 18:19:54.635" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:54.654" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190118 18:19:54.683" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:54.741" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:54.744" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:54.745" starttime="20190118 18:19:54.647" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:54.757" starttime="20190118 18:19:54.749" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:19:54.769" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:19:54.798" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:54.885" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:54.888" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:54.889" starttime="20190118 18:19:54.760" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:54.902" starttime="20190118 18:19:54.893" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:19:54.904" starttime="20190118 18:19:54.495" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190118 18:19:54.924" starttime="20190118 18:19:54.917" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:54.934" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190118 18:19:54.985" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:54.987" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:54.988" starttime="20190118 18:19:54.927" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:55.506" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:55.507" starttime="20190118 18:19:54.991" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:55.517" level="INFO">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190118 18:19:55.569" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:55.572" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:55.573" starttime="20190118 18:19:55.510" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:56.087" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:56.090" starttime="20190118 18:19:55.576" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:56.098" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190118 18:19:56.151" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:56.156" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:56.157" starttime="20190118 18:19:56.092" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:19:56.672" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:56.674" starttime="20190118 18:19:56.166" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:19:56.676" starttime="20190118 18:19:54.907" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:56.685" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190118 18:19:56.715" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:56.728" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:56.731" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:56.732" starttime="20190118 18:19:56.679" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status endtime="20190118 18:19:56.744" starttime="20190118 18:19:56.736" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:56.752" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190118 18:19:56.796" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 250000 sample-point 0.875  	  tq 250 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190118 18:19:56.798" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 250000 sample-poi...</msg>
<status endtime="20190118 18:19:56.799" starttime="20190118 18:19:56.747" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status endtime="20190118 18:19:56.815" starttime="20190118 18:19:56.802" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:56.822" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190118 18:19:56.931" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:56.933" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:56.934" starttime="20190118 18:19:56.818" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status endtime="20190118 18:19:56.948" starttime="20190118 18:19:56.937" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190118 18:19:57.955" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:19:57.958" starttime="20190118 18:19:56.951" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:57.967" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190118 18:19:58.014" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:19:58.017" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:19:58.018" starttime="20190118 18:19:57.961" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status endtime="20190118 18:19:58.029" starttime="20190118 18:19:58.021" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:19:58.535" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:58.537" starttime="20190118 18:19:58.031" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:58.544" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190118 18:19:58.629" level="INFO">Returning data (586 root      0:00 candump -t a -D -B can2 can2   587 root      0:00 sh -c ps aux | grep candump   589 root      0:00 grep candump, )</msg>
<msg timestamp="20190118 18:19:58.632" level="INFO">${ret} = ('586 root      0:00 candump -t a -D -B can2 can2   587 root      0:00 sh -c ps aux | grep candump   589 root      0:00 grep candump', '')</msg>
<status endtime="20190118 18:19:58.633" starttime="20190118 18:19:58.540" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status endtime="20190118 18:19:58.649" starttime="20190118 18:19:58.636" status="PASS"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190118 18:19:58.813" starttime="20190118 18:19:58.652" status="PASS"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:19:58.862" starttime="20190118 18:19:58.816" status="PASS"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:19:58.917" starttime="20190118 18:19:58.866" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:19:59.428" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:19:59.430" starttime="20190118 18:19:58.920" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:59.452" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190118 18:19:59.501" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:59.530" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:59.533" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:59.534" starttime="20190118 18:19:59.437" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:59.565" starttime="20190118 18:19:59.542" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:59.579" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:19:59.632" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:19:59.656" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:19:59.659" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:19:59.665" starttime="20190118 18:19:59.568" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190118 18:19:59.697" starttime="20190118 18:19:59.678" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:19:59.710" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190118 18:19:59.771" level="INFO">Returning data ((1547835599.508373)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547835599.640162)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190118 18:19:59.780" level="INFO">${ret} = ('(1547835599.508373)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547835599.640162)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status endtime="20190118 18:19:59.781" starttime="20190118 18:19:59.700" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status endtime="20190118 18:19:59.817" starttime="20190118 18:19:59.800" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:20:00.331" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:00.334" starttime="20190118 18:19:59.820" status="PASS"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190118 18:20:00.391" level="INFO">${res_list} = [{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:59.522441', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:59.537098', 'id': '0x18ef7777'}, {'p...</msg>
<status endtime="20190118 18:20:00.393" starttime="20190118 18:20:00.341" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:00.400" level="INFO">[{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:59.522441', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:59.537098', 'id': '0x18ef7777'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:59.661419', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:59.672311', 'id': '0x1a'}]</msg>
<status endtime="20190118 18:20:00.404" starttime="20190118 18:20:00.396" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190118 18:20:00.411" level="INFO">Length is 4</msg>
<msg timestamp="20190118 18:20:00.413" level="INFO">${MSG_LENGTH} = 4</msg>
<status endtime="20190118 18:20:00.414" starttime="20190118 18:20:00.407" status="PASS"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:20:00.428" starttime="20190118 18:20:00.422" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:00.429" starttime="20190118 18:20:00.417" status="PASS"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:00.456" level="INFO">Length is 4</msg>
<msg timestamp="20190118 18:20:00.458" level="INFO">${count} = 4</msg>
<status endtime="20190118 18:20:00.459" starttime="20190118 18:20:00.452" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:20:00.467" starttime="20190118 18:20:00.462" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:00.475" level="INFO">${msgcount} = 0</msg>
<status endtime="20190118 18:20:00.476" starttime="20190118 18:20:00.470" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:59.522441', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:00.488" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190118 18:20:00.489" starttime="20190118 18:20:00.483" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:00.499" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:20:00.500" starttime="20190118 18:20:00.492" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:00.510" level="INFO">${msgcount} = 1</msg>
<status endtime="20190118 18:20:00.511" starttime="20190118 18:20:00.503" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:00.511" starttime="20190118 18:20:00.480" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:19:59.537098', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:00.521" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190118 18:20:00.522" starttime="20190118 18:20:00.516" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:00.532" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:20:00.533" starttime="20190118 18:20:00.525" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:00.543" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:20:00.544" starttime="20190118 18:20:00.536" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:00.545" starttime="20190118 18:20:00.513" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:59.661419', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:00.554" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:20:00.555" starttime="20190118 18:20:00.549" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:00.565" level="INFO">${count} = 0</msg>
<status endtime="20190118 18:20:00.566" starttime="20190118 18:20:00.558" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:00.575" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:20:00.576" starttime="20190118 18:20:00.569" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:00.577" starttime="20190118 18:20:00.546" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:19:59.672311', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:00.586" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:20:00.587" starttime="20190118 18:20:00.581" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:00.597" level="INFO">${count} = 0</msg>
<status endtime="20190118 18:20:00.598" starttime="20190118 18:20:00.590" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:00.607" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:20:00.608" starttime="20190118 18:20:00.601" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:00.609" starttime="20190118 18:20:00.578" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:00.610" starttime="20190118 18:20:00.477" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:20:00.618" starttime="20190118 18:20:00.612" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190118 18:20:00.627" starttime="20190118 18:20:00.621" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:00.630" starttime="20190118 18:20:00.440" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:00.632" starttime="20190118 18:20:00.432" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:00.638" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190118 18:20:00.701" level="INFO">Returning data (586 root      0:00 candump -t a -D -B can2 can2   591 root      0:00 sh -c ps aux | grep candump   593 root      0:00 grep candump, )</msg>
<msg timestamp="20190118 18:20:00.704" level="INFO">${ret} = ('586 root      0:00 candump -t a -D -B can2 can2   591 root      0:00 sh -c ps aux | grep candump   593 root      0:00 grep candump', '')</msg>
<status endtime="20190118 18:20:00.705" starttime="20190118 18:20:00.635" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status endtime="20190118 18:20:00.721" starttime="20190118 18:20:00.708" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:00.727" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190118 18:20:00.825" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:00.827" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:00.828" starttime="20190118 18:20:00.724" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190118 18:20:01.841" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:20:01.843" starttime="20190118 18:20:00.831" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:01.846" starttime="20190118 18:19:54.476" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:01.849" starttime="20190118 18:19:54.471" status="PASS"></status>
</kw>
<kw name="cansend_125k">
<doc>Can 3 send message test with baudrate 125k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:01.873" level="INFO">Start test with can2 and bitrate: 125000</msg>
<status endtime="20190118 18:20:01.876" starttime="20190118 18:20:01.866" status="PASS"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:20:01.895" starttime="20190118 18:20:01.887" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:20:01.905" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:20:01.933" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:02.008" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:02.011" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:02.013" starttime="20190118 18:20:01.898" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:20:02.026" starttime="20190118 18:20:02.016" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:20:02.041" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190118 18:20:02.072" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:02.129" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:02.132" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:02.133" starttime="20190118 18:20:02.030" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:20:02.146" starttime="20190118 18:20:02.137" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:20:02.157" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:20:02.186" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:02.276" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:02.279" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:02.280" starttime="20190118 18:20:02.149" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:20:02.293" starttime="20190118 18:20:02.284" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:20:02.295" starttime="20190118 18:20:01.878" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190118 18:20:02.314" starttime="20190118 18:20:02.308" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:02.323" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190118 18:20:02.375" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:02.377" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:02.378" starttime="20190118 18:20:02.317" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:20:02.894" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:02.895" starttime="20190118 18:20:02.381" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:02.907" level="INFO">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190118 18:20:02.951" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:02.953" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:02.954" starttime="20190118 18:20:02.898" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:20:03.466" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:03.468" starttime="20190118 18:20:02.957" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:03.477" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190118 18:20:03.527" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:03.530" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:03.531" starttime="20190118 18:20:03.471" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:20:04.046" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:04.049" starttime="20190118 18:20:03.534" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:20:04.051" starttime="20190118 18:20:02.298" status="PASS"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190118 18:20:04.228" starttime="20190118 18:20:04.054" status="PASS"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:20:04.281" starttime="20190118 18:20:04.231" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status endtime="20190118 18:20:04.290" starttime="20190118 18:20:04.284" status="PASS"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:20:04.345" starttime="20190118 18:20:04.293" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status endtime="20190118 18:20:04.362" starttime="20190118 18:20:04.348" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:20:04.874" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:04.876" starttime="20190118 18:20:04.365" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status endtime="20190118 18:20:04.897" starttime="20190118 18:20:04.879" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190118 18:20:04.915" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:20:04.968" level="INFO">Returning data (, )</msg>
<status endtime="20190118 18:20:04.970" starttime="20190118 18:20:04.904" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190118 18:20:05.009" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:20:05.104" level="INFO">Returning data (, )</msg>
<status endtime="20190118 18:20:05.112" starttime="20190118 18:20:04.985" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190118 18:20:05.146" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:20:05.206" level="INFO">Returning data (, )</msg>
<status endtime="20190118 18:20:05.208" starttime="20190118 18:20:05.131" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:20:05.744" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:05.746" starttime="20190118 18:20:05.219" status="PASS"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190118 18:20:05.816" level="INFO">${res_list} = [{'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:04.980032', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:05.117283', 'id': '0x1a'}, {'payload': '11...</msg>
<status endtime="20190118 18:20:05.818" starttime="20190118 18:20:05.754" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:05.826" level="INFO">[{'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:04.980032', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:05.117283', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:05.221476', 'id': '0x1a'}]</msg>
<status endtime="20190118 18:20:05.829" starttime="20190118 18:20:05.821" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190118 18:20:05.837" level="INFO">Length is 3</msg>
<msg timestamp="20190118 18:20:05.839" level="INFO">${MSG_LENGTH} = 3</msg>
<status endtime="20190118 18:20:05.840" starttime="20190118 18:20:05.832" status="PASS"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:20:05.856" starttime="20190118 18:20:05.849" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:05.857" starttime="20190118 18:20:05.843" status="PASS"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:05.883" level="INFO">Length is 3</msg>
<msg timestamp="20190118 18:20:05.885" level="INFO">${count} = 3</msg>
<status endtime="20190118 18:20:05.886" starttime="20190118 18:20:05.877" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:20:05.899" starttime="20190118 18:20:05.889" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:05.908" level="INFO">${msgcount} = 0</msg>
<status endtime="20190118 18:20:05.909" starttime="20190118 18:20:05.902" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:04.980032', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:05.923" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:20:05.923" starttime="20190118 18:20:05.916" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:05.934" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:20:05.935" starttime="20190118 18:20:05.926" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:05.945" level="INFO">${msgcount} = 1</msg>
<status endtime="20190118 18:20:05.946" starttime="20190118 18:20:05.938" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:05.946" starttime="20190118 18:20:05.913" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:05.117283', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:05.957" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:20:05.958" starttime="20190118 18:20:05.951" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:05.969" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:20:05.970" starttime="20190118 18:20:05.961" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:05.980" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:20:05.981" starttime="20190118 18:20:05.973" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:05.982" starttime="20190118 18:20:05.948" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:05.221476', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:05.992" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:20:05.993" starttime="20190118 18:20:05.986" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:06.005" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:20:06.006" starttime="20190118 18:20:05.997" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:06.016" level="INFO">${msgcount} = 3</msg>
<status endtime="20190118 18:20:06.017" starttime="20190118 18:20:06.008" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:06.017" starttime="20190118 18:20:05.983" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:06.018" starttime="20190118 18:20:05.910" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:20:06.027" starttime="20190118 18:20:06.021" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190118 18:20:06.037" starttime="20190118 18:20:06.030" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:06.041" starttime="20190118 18:20:05.868" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:06.042" starttime="20190118 18:20:05.861" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status endtime="20190118 18:20:06.045" starttime="20190118 18:20:01.857" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:06.047" starttime="20190118 18:20:01.851" status="PASS"></status>
</kw>
<kw name="can_loopback_125k">
<doc>Can 3 loopback test with baudrate 125k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:06.068" level="INFO">Can channel loopback: can2 with bitrate: 125000</msg>
<status endtime="20190118 18:20:06.071" starttime="20190118 18:20:06.063" status="PASS"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:20:06.090" starttime="20190118 18:20:06.083" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:20:06.100" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:20:06.129" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:06.203" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:06.206" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:06.207" starttime="20190118 18:20:06.093" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:20:06.220" starttime="20190118 18:20:06.211" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:20:06.230" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190118 18:20:06.258" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:06.317" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:06.320" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:06.321" starttime="20190118 18:20:06.223" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:20:06.333" starttime="20190118 18:20:06.325" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:20:06.343" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:20:06.371" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:06.457" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:06.460" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:06.461" starttime="20190118 18:20:06.337" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:20:06.473" starttime="20190118 18:20:06.465" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:20:06.476" starttime="20190118 18:20:06.074" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status endtime="20190118 18:20:06.495" starttime="20190118 18:20:06.489" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:06.504" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190118 18:20:06.556" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:06.559" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:06.560" starttime="20190118 18:20:06.498" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:20:07.075" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:07.077" starttime="20190118 18:20:06.563" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:07.087" level="INFO">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190118 18:20:07.143" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:07.146" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:07.146" starttime="20190118 18:20:07.080" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:20:07.657" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:07.660" starttime="20190118 18:20:07.149" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:07.669" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190118 18:20:07.721" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:07.724" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:07.725" starttime="20190118 18:20:07.663" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190118 18:20:08.239" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:08.242" starttime="20190118 18:20:07.728" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status endtime="20190118 18:20:08.244" starttime="20190118 18:20:06.478" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:08.255" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190118 18:20:08.284" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:08.297" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:08.300" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:08.301" starttime="20190118 18:20:08.247" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status endtime="20190118 18:20:08.313" starttime="20190118 18:20:08.305" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:08.321" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190118 18:20:08.372" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 125000 sample-point 0.875  	  tq 500 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190118 18:20:08.375" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 125000 sample-poi...</msg>
<status endtime="20190118 18:20:08.376" starttime="20190118 18:20:08.316" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status endtime="20190118 18:20:08.392" starttime="20190118 18:20:08.379" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:08.399" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190118 18:20:08.498" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:08.501" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:08.502" starttime="20190118 18:20:08.395" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status endtime="20190118 18:20:08.514" starttime="20190118 18:20:08.505" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190118 18:20:09.522" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:20:09.524" starttime="20190118 18:20:08.517" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:09.534" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190118 18:20:09.579" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:09.581" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:09.582" starttime="20190118 18:20:09.527" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status endtime="20190118 18:20:09.594" starttime="20190118 18:20:09.585" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:20:10.100" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:10.102" starttime="20190118 18:20:09.597" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:10.109" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190118 18:20:10.191" level="INFO">Returning data (609 root      0:00 candump -t a -D -B can2 can2   610 root      0:00 sh -c ps aux | grep candump   612 root      0:00 grep candump, )</msg>
<msg timestamp="20190118 18:20:10.193" level="INFO">${ret} = ('609 root      0:00 candump -t a -D -B can2 can2   610 root      0:00 sh -c ps aux | grep candump   612 root      0:00 grep candump', '')</msg>
<status endtime="20190118 18:20:10.194" starttime="20190118 18:20:10.105" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status endtime="20190118 18:20:10.210" starttime="20190118 18:20:10.197" status="PASS"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status endtime="20190118 18:20:10.385" starttime="20190118 18:20:10.213" status="PASS"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:20:10.458" starttime="20190118 18:20:10.402" status="PASS"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status endtime="20190118 18:20:10.521" starttime="20190118 18:20:10.467" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:20:11.032" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:11.034" starttime="20190118 18:20:10.524" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:11.057" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190118 18:20:11.111" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:11.131" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:11.134" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:11.135" starttime="20190118 18:20:11.041" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190118 18:20:11.173" starttime="20190118 18:20:11.149" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:11.187" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190118 18:20:11.240" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:11.267" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:11.270" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:11.271" starttime="20190118 18:20:11.176" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status endtime="20190118 18:20:11.308" starttime="20190118 18:20:11.284" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:11.328" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190118 18:20:11.387" level="INFO">Returning data ((1547835611.092846)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547835611.226937)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190118 18:20:11.393" level="INFO">${ret} = ('(1547835611.092846)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547835611.226937)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status endtime="20190118 18:20:11.395" starttime="20190118 18:20:11.311" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status endtime="20190118 18:20:11.429" starttime="20190118 18:20:11.398" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190118 18:20:11.940" level="INFO">Slept 500 milliseconds</msg>
<status endtime="20190118 18:20:11.942" starttime="20190118 18:20:11.436" status="PASS"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190118 18:20:12.003" level="INFO">${res_list} = [{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:20:11.140254', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:20:11.153108', 'id': '0x18ef7777'}, {'p...</msg>
<status endtime="20190118 18:20:12.004" starttime="20190118 18:20:11.949" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:12.012" level="INFO">[{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:20:11.140254', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:20:11.153108', 'id': '0x18ef7777'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:11.275363', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:11.285162', 'id': '0x1a'}]</msg>
<status endtime="20190118 18:20:12.015" starttime="20190118 18:20:12.007" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190118 18:20:12.022" level="INFO">Length is 4</msg>
<msg timestamp="20190118 18:20:12.024" level="INFO">${MSG_LENGTH} = 4</msg>
<status endtime="20190118 18:20:12.025" starttime="20190118 18:20:12.018" status="PASS"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:20:12.040" starttime="20190118 18:20:12.035" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:12.042" starttime="20190118 18:20:12.028" status="PASS"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:12.076" level="INFO">Length is 4</msg>
<msg timestamp="20190118 18:20:12.078" level="INFO">${count} = 4</msg>
<status endtime="20190118 18:20:12.078" starttime="20190118 18:20:12.071" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:20:12.086" starttime="20190118 18:20:12.081" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:12.094" level="INFO">${msgcount} = 0</msg>
<status endtime="20190118 18:20:12.095" starttime="20190118 18:20:12.089" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:20:11.140254', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:12.108" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190118 18:20:12.108" starttime="20190118 18:20:12.103" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:12.119" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:20:12.120" starttime="20190118 18:20:12.111" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:12.130" level="INFO">${msgcount} = 1</msg>
<status endtime="20190118 18:20:12.131" starttime="20190118 18:20:12.123" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:12.131" starttime="20190118 18:20:12.099" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '18-01-2019 - 18:20:11.153108', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:12.141" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status endtime="20190118 18:20:12.142" starttime="20190118 18:20:12.136" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:12.152" level="INFO">${count} = 1</msg>
<status endtime="20190118 18:20:12.153" starttime="20190118 18:20:12.145" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:12.162" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:20:12.163" starttime="20190118 18:20:12.156" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:12.164" starttime="20190118 18:20:12.133" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:11.275363', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:12.174" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:20:12.175" starttime="20190118 18:20:12.169" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:12.185" level="INFO">${count} = 0</msg>
<status endtime="20190118 18:20:12.186" starttime="20190118 18:20:12.177" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:12.195" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:20:12.196" starttime="20190118 18:20:12.189" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:12.196" starttime="20190118 18:20:12.165" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '18-01-2019 - 18:20:11.285162', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:20:12.206" level="INFO">${payload} = 11223344556677BB</msg>
<status endtime="20190118 18:20:12.207" starttime="20190118 18:20:12.201" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:20:12.217" level="INFO">${count} = 0</msg>
<status endtime="20190118 18:20:12.218" starttime="20190118 18:20:12.210" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:20:12.227" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:20:12.228" starttime="20190118 18:20:12.221" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:12.228" starttime="20190118 18:20:12.198" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:12.229" starttime="20190118 18:20:12.096" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:20:12.237" starttime="20190118 18:20:12.232" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status endtime="20190118 18:20:12.246" starttime="20190118 18:20:12.240" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:12.250" starttime="20190118 18:20:12.053" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:12.251" starttime="20190118 18:20:12.045" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:12.258" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190118 18:20:12.335" level="INFO">Returning data (609 root      0:00 candump -t a -D -B can2 can2   614 root      0:00 sh -c ps aux | grep candump   616 root      0:00 grep candump, )</msg>
<msg timestamp="20190118 18:20:12.337" level="INFO">${ret} = ('609 root      0:00 candump -t a -D -B can2 can2   614 root      0:00 sh -c ps aux | grep candump   616 root      0:00 grep candump', '')</msg>
<status endtime="20190118 18:20:12.338" starttime="20190118 18:20:12.254" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status endtime="20190118 18:20:12.354" starttime="20190118 18:20:12.341" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:12.360" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190118 18:20:12.463" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:12.466" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:12.466" starttime="20190118 18:20:12.357" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190118 18:20:13.479" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:20:13.481" starttime="20190118 18:20:12.469" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:13.484" starttime="20190118 18:20:06.055" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:13.486" starttime="20190118 18:20:06.050" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill ping</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:20:13.505" level="INFO">Starting process:
pkill ping</msg>
<msg timestamp="20190118 18:20:13.537" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:13.572" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:13.575" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:13.576" starttime="20190118 18:20:13.500" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_Teardown_Action"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:13.583" level="INFO">"Test_Teardown_Action"</msg>
<status endtime="20190118 18:20:13.586" starttime="20190118 18:20:13.580" status="PASS"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>systemctl poweroff</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190118 18:20:13.594" level="INFO">Sending command to DUT systemctl poweroff</msg>
<msg timestamp="20190118 18:20:13.721" level="INFO">Returning data (, )</msg>
<msg timestamp="20190118 18:20:13.723" level="INFO">${ret} = ('', '')</msg>
<status endtime="20190118 18:20:13.724" starttime="20190118 18:20:13.589" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHUTDOWN_TIME}</arg>
</arguments>
<msg timestamp="20190118 18:20:28.739" level="INFO">Slept 15 seconds</msg>
<status endtime="20190118 18:20:28.741" starttime="20190118 18:20:13.727" status="PASS"></status>
</kw>
<kw name="Close Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190118 18:20:28.748" level="INFO">Closing SSH connection to 192.168.1.101</msg>
<status endtime="20190118 18:20:28.750" starttime="20190118 18:20:28.744" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:28.802" starttime="20190118 18:20:28.752" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:28.853" starttime="20190118 18:20:28.805" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:28.855" starttime="20190118 18:20:13.490" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-34994</doc>
<tags>
<tag>CAN 3 test</tag>
</tags>
<status endtime="20190118 18:20:28.857" critical="yes" starttime="20190118 18:19:00.809" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:20:30.371" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:20:30.413" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:20:30.415" starttime="20190118 18:20:28.900" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:30.416" starttime="20190118 18:20:28.874" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:30.418" starttime="20190118 18:20:28.868" status="PASS"></status>
</kw>
<doc>CAN 3 test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:20:30.419" starttime="20190118 18:18:58.874" status="PASS"></status>
</suite>
<suite name="SKTB-41635" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41635.robot" id="s1-s7">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:20:30.590" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:20:30.592" starttime="20190118 18:20:30.585" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:20:30.603" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:20:30.604" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:20:32.371" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:20:32.373" starttime="20190118 18:20:30.595" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:32.375" starttime="20190118 18:20:30.579" status="PASS"></status>
</kw>
<test name="can_diag_test" id="s1-s7-t1">
<kw name="Test_precondition" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:32.398" level="INFO">"Test_precondition"</msg>
<status endtime="20190118 18:20:32.400" starttime="20190118 18:20:32.393" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:32.479" starttime="20190118 18:20:32.403" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:32.586" starttime="20190118 18:20:32.483" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190118 18:20:33.602" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:20:33.604" starttime="20190118 18:20:32.589" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:20:33.657" starttime="20190118 18:20:33.607" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<msg timestamp="20190118 18:20:33.764" level="INFO">Slept 100 milliseconds</msg>
<status endtime="20190118 18:20:33.766" starttime="20190118 18:20:33.660" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:20:33.819" starttime="20190118 18:20:33.769" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190118 18:20:35.828" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:20:35.830" starttime="20190118 18:20:33.823" status="PASS"></status>
</kw>
<kw name="set_can_channels">
<doc>set bitrate for channels</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:20:35.849" level="INFO">Starting process:
sudo ip link set can0 down</msg>
<msg timestamp="20190118 18:20:35.876" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:35.949" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:35.952" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:35.953" starttime="20190118 18:20:35.842" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:20:35.966" level="INFO">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg timestamp="20190118 18:20:35.993" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:36.052" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:36.056" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:36.057" starttime="20190118 18:20:35.957" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:20:36.068" level="INFO">Starting process:
sudo ip link set can0 up</msg>
<msg timestamp="20190118 18:20:36.095" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:36.167" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:36.170" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:36.171" starttime="20190118 18:20:36.061" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status endtime="20190118 18:20:36.174" starttime="20190118 18:20:35.832" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:36.177" starttime="20190118 18:20:32.387" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:36.186" level="INFO">Start test</msg>
<status endtime="20190118 18:20:36.189" starttime="20190118 18:20:36.181" status="PASS"></status>
</kw>
<kw name="Req_1003">
<doc>Extended session</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Extended session</arg>
</arguments>
<status endtime="20190118 18:20:36.204" starttime="20190118 18:20:36.198" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:20:36.216" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190118 18:20:36.246" level="INFO">${candump_ID} = 153</msg>
<status endtime="20190118 18:20:36.248" starttime="20190118 18:20:36.207" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>10 03</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190118 18:20:36.282" level="INFO">Starting process:
echo 10 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190118 18:20:36.317" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:36.327" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:36.330" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:36.331" starttime="20190118 18:20:36.274" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:36.334" starttime="20190118 18:20:36.260" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:20:36.349" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:37.354" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:20:37.356" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:20:37.361" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:37.363" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:20:37.364" starttime="20190118 18:20:36.344" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:20:37.373" level="INFO">2 lines returned</msg>
<msg timestamp="20190118 18:20:37.376" level="INFO">${temp} = [' (1547835636.324869)  can0  7F8   [8]  02 10 03 00 00 00 00 00', ' (1547835636.332115)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA']</msg>
<status endtime="20190118 18:20:37.377" starttime="20190118 18:20:37.367" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:20:37.385" level="INFO">(1547835636.324869)  can0  7F8   [8]  02 10 03 00 00 00 00 00
 (1547835636.332115)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA</msg>
<msg timestamp="20190118 18:20:37.387" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1547835636.324869', 'payload': '0210030000000000', 'id': '7F8'}, {'channel': 'can0', 'timestamp': '1547835636.332115', 'payload': '065003001400C8AA', 'id': '7F7'}]</msg>
<status endtime="20190118 18:20:37.388" starttime="20190118 18:20:37.380" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:20:37.398" starttime="20190118 18:20:37.391" status="PASS"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190118 18:20:37.409" level="INFO">${data} = True</msg>
<status endtime="20190118 18:20:37.410" starttime="20190118 18:20:37.401" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:20:37.414" level="INFO">${res} = True</msg>
<status endtime="20190118 18:20:37.415" starttime="20190118 18:20:36.337" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:20:37.423" starttime="20190118 18:20:37.418" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:37.425" starttime="20190118 18:20:36.191" status="PASS"></status>
</kw>
<kw name="Req_F100">
<doc>Active_DiagnosticInformation</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Active_DiagnosticInformation</arg>
</arguments>
<status endtime="20190118 18:20:37.439" starttime="20190118 18:20:37.434" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:20:37.452" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190118 18:20:37.482" level="INFO">${candump_ID} = 155</msg>
<status endtime="20190118 18:20:37.483" starttime="20190118 18:20:37.442" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 00</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190118 18:20:37.511" level="INFO">Starting process:
echo 22 F1 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190118 18:20:37.539" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:37.553" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:37.556" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:37.557" starttime="20190118 18:20:37.501" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:37.560" starttime="20190118 18:20:37.493" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:20:37.576" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:38.581" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:20:38.583" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:20:38.588" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:38.590" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:20:38.591" starttime="20190118 18:20:37.570" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:20:38.601" level="INFO">3 lines returned</msg>
<msg timestamp="20190118 18:20:38.603" level="INFO">${temp} = [' (1547835637.550358)  can0  7F8   [8]  03 22 F1 00 00 00 00 00', ' (1547835637.569260)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1547835637.579266)  can0  7F7   [8]  07 62 F1 00 00 01 01 03']</msg>
<status endtime="20190118 18:20:38.604" starttime="20190118 18:20:38.594" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:20:38.614" level="INFO">(1547835637.550358)  can0  7F8   [8]  03 22 F1 00 00 00 00 00
 (1547835637.569260)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1547835637.579266)  can0  7F7   [8]  07 62 F1 00 00 01 01 03</msg>
<msg timestamp="20190118 18:20:38.616" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1547835637.550358', 'payload': '0322F10000000000', 'id': '7F8'}, {'channel': 'can0', 'timestamp': '1547835637.569260', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status endtime="20190118 18:20:38.617" starttime="20190118 18:20:38.607" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:20:38.626" starttime="20190118 18:20:38.620" status="PASS"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190118 18:20:38.637" level="INFO">None</msg>
<msg timestamp="20190118 18:20:38.639" level="INFO">${data} = True</msg>
<status endtime="20190118 18:20:38.640" starttime="20190118 18:20:38.630" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:20:38.644" level="INFO">${res} = True</msg>
<status endtime="20190118 18:20:38.645" starttime="20190118 18:20:37.563" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:20:38.654" starttime="20190118 18:20:38.648" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:38.656" starttime="20190118 18:20:37.428" status="PASS"></status>
</kw>
<kw name="Req_F10D">
<doc>DDS Package Release</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DDS Package Release</arg>
</arguments>
<status endtime="20190118 18:20:38.671" starttime="20190118 18:20:38.665" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:20:38.682" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190118 18:20:38.712" level="INFO">${candump_ID} = 157</msg>
<status endtime="20190118 18:20:38.717" starttime="20190118 18:20:38.674" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 0D</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190118 18:20:38.741" level="INFO">Starting process:
echo 22 F1 0D | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190118 18:20:38.769" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:38.787" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:38.790" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:38.790" starttime="20190118 18:20:38.732" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:38.795" starttime="20190118 18:20:38.720" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:20:38.813" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:39.831" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:20:39.833" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:20:39.837" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:39.839" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:20:39.840" starttime="20190118 18:20:38.806" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:20:39.850" level="INFO">3 lines returned</msg>
<msg timestamp="20190118 18:20:39.852" level="INFO">${temp} = [' (1547835638.784291)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00', ' (1547835638.799310)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1547835638.809299)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA']</msg>
<status endtime="20190118 18:20:39.853" starttime="20190118 18:20:39.843" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:20:39.862" level="INFO">(1547835638.784291)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00
 (1547835638.799310)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1547835638.809299)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA</msg>
<msg timestamp="20190118 18:20:39.865" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1547835638.784291', 'payload': '0322F10D00000000', 'id': '7F8'}, {'channel': 'can0', 'timestamp': '1547835638.799310', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status endtime="20190118 18:20:39.866" starttime="20190118 18:20:39.856" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:20:39.876" starttime="20190118 18:20:39.869" status="PASS"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190118 18:20:39.887" level="INFO">${data} = True</msg>
<status endtime="20190118 18:20:39.888" starttime="20190118 18:20:39.879" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:20:39.891" level="INFO">${res} = True</msg>
<status endtime="20190118 18:20:39.892" starttime="20190118 18:20:38.798" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:20:39.901" starttime="20190118 18:20:39.895" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:39.903" starttime="20190118 18:20:38.659" status="PASS"></status>
</kw>
<kw name="Req_F103">
<doc>Vedoc Relevant Information</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Vedoc Relevant Information</arg>
</arguments>
<status endtime="20190118 18:20:39.918" starttime="20190118 18:20:39.911" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:20:39.930" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190118 18:20:39.959" level="INFO">${candump_ID} = 159</msg>
<status endtime="20190118 18:20:39.964" starttime="20190118 18:20:39.921" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg timestamp="20190118 18:20:39.981" level="INFO">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190118 18:20:40.011" level="INFO">${isotprecv_ID} = 160</msg>
<status endtime="20190118 18:20:40.015" starttime="20190118 18:20:39.968" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 03</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190118 18:20:40.040" level="INFO">Starting process:
echo 22 F1 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190118 18:20:40.068" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:40.081" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:40.085" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:40.086" starttime="20190118 18:20:40.031" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:40.088" starttime="20190118 18:20:40.018" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:20:40.106" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:41.111" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:20:41.113" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:20:41.117" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:41.120" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:20:41.121" starttime="20190118 18:20:40.098" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:20:41.130" level="INFO">3 lines returned</msg>
<msg timestamp="20190118 18:20:41.132" level="INFO">${temp} = [' (1547835640.079220)  can0  7F8   [8]  03 22 F1 03 00 00 00 00', ' (1547835640.099357)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1547835640.109344)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69']</msg>
<status endtime="20190118 18:20:41.133" starttime="20190118 18:20:41.124" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:20:41.143" level="INFO">(1547835640.079220)  can0  7F8   [8]  03 22 F1 03 00 00 00 00
 (1547835640.099357)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1547835640.109344)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69</msg>
<msg timestamp="20190118 18:20:41.150" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1547835640.079220', 'payload': '0322F10300000000', 'id': '7F8'}, {'channel': 'can0', 'timestamp': '1547835640.099357', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status endtime="20190118 18:20:41.151" starttime="20190118 18:20:41.137" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:20:41.174" starttime="20190118 18:20:41.157" status="PASS"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190118 18:20:41.193" level="INFO">${data} = True</msg>
<status endtime="20190118 18:20:41.194" starttime="20190118 18:20:41.178" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:20:41.201" level="INFO">${res} = True</msg>
<status endtime="20190118 18:20:41.203" starttime="20190118 18:20:40.091" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:20:41.215" starttime="20190118 18:20:41.209" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:41.221" starttime="20190118 18:20:39.905" status="PASS"></status>
</kw>
<kw name="Req_F1A0">
<doc>VIN Current</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current</arg>
</arguments>
<status endtime="20190118 18:20:41.251" starttime="20190118 18:20:41.239" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:20:41.263" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190118 18:20:41.295" level="INFO">${candump_ID} = 162</msg>
<status endtime="20190118 18:20:41.296" starttime="20190118 18:20:41.254" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg timestamp="20190118 18:20:41.316" level="INFO">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190118 18:20:41.346" level="INFO">${isotprecv_ID} = 163</msg>
<status endtime="20190118 18:20:41.347" starttime="20190118 18:20:41.307" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 A0</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190118 18:20:41.379" level="INFO">Starting process:
echo 22 F1 A0 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190118 18:20:41.406" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:41.423" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:41.426" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:41.427" starttime="20190118 18:20:41.370" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:41.430" starttime="20190118 18:20:41.354" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:20:41.448" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:42.453" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:20:42.454" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:20:42.459" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:42.461" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:20:42.462" starttime="20190118 18:20:41.442" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:20:42.472" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:20:42.474" level="INFO">${temp} = [' (1547835641.420394)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00']</msg>
<status endtime="20190118 18:20:42.475" starttime="20190118 18:20:42.465" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:20:42.484" level="INFO">(1547835641.420394)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00</msg>
<msg timestamp="20190118 18:20:42.486" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1547835641.420394', 'payload': '0322F1A000000000', 'id': '7F8'}]</msg>
<status endtime="20190118 18:20:42.486" starttime="20190118 18:20:42.478" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:20:42.496" starttime="20190118 18:20:42.489" status="PASS"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190118 18:20:42.507" level="INFO">${data} = True</msg>
<status endtime="20190118 18:20:42.508" starttime="20190118 18:20:42.499" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:20:42.512" level="INFO">${res} = True</msg>
<status endtime="20190118 18:20:42.513" starttime="20190118 18:20:41.432" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:20:42.521" starttime="20190118 18:20:42.516" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:42.524" starttime="20190118 18:20:41.225" status="PASS"></status>
</kw>
<kw name="Req_F1A0_WRITE">
<doc>VIN Current</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current write</arg>
</arguments>
<status endtime="20190118 18:20:42.538" starttime="20190118 18:20:42.533" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:20:42.550" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190118 18:20:42.579" level="INFO">${candump_ID} = 165</msg>
<status endtime="20190118 18:20:42.584" starttime="20190118 18:20:42.541" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190118 18:20:42.609" level="INFO">Starting process:
echo 2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190118 18:20:42.637" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:42.671" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:42.674" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:20:42.675" starttime="20190118 18:20:42.600" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:42.678" starttime="20190118 18:20:42.587" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190118 18:20:43.690" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:20:43.692" starttime="20190118 18:20:42.684" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:20:43.707" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:20:44.713" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:20:44.715" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:20:44.719" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:20:44.722" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:20:44.723" starttime="20190118 18:20:43.702" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:20:44.733" level="INFO">5 lines returned</msg>
<msg timestamp="20190118 18:20:44.736" level="INFO">${temp} = [' (1547835642.647746)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00', ' (1547835642.648293)  can0  7F7   [8]  30 08 0A AA AA AA AA AA', ' (1547835642.658896)  can0  7F8   [8]  21 00 00 00 00 00 00 00', '...</msg>
<status endtime="20190118 18:20:44.737" starttime="20190118 18:20:44.726" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:20:44.746" level="INFO">(1547835642.647746)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00
 (1547835642.648293)  can0  7F7   [8]  30 08 0A AA AA AA AA AA
 (1547835642.658896)  can0  7F8   [8]  21 00 00 00 00 00 00 00
 (1547835642.676097)  can0  7F8   [8]  22 00 00 00 00 00 00 00
 (1547835642.679464)  can0  7F7   [8]  03 7F 2E 33 AA AA AA AA</msg>
<msg timestamp="20190118 18:20:44.748" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1547835642.647746', 'payload': '10142EF1A0000000', 'id': '7F8'}, {'channel': 'can0', 'timestamp': '1547835642.648293', 'payload': '30080AAAAAAAAAAA', 'id': '7F7'}, {...</msg>
<status endtime="20190118 18:20:44.749" starttime="20190118 18:20:44.740" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:20:44.759" starttime="20190118 18:20:44.752" status="PASS"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190118 18:20:44.770" level="INFO">None</msg>
<msg timestamp="20190118 18:20:44.773" level="INFO">${data} = False</msg>
<status endtime="20190118 18:20:44.774" starttime="20190118 18:20:44.762" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:20:44.778" level="INFO">${res} = False</msg>
<status endtime="20190118 18:20:44.779" starttime="20190118 18:20:43.694" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:44.787" level="INFO">False</msg>
<status endtime="20190118 18:20:44.790" starttime="20190118 18:20:44.782" status="PASS"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:20:44.798" starttime="20190118 18:20:44.793" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:44.801" starttime="20190118 18:20:42.526" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg timestamp="20190118 18:20:44.816" level="INFO">Starting process:
pkill candump</msg>
<msg timestamp="20190118 18:20:44.845" level="INFO">${rm_res} = 167</msg>
<status endtime="20190118 18:20:44.847" starttime="20190118 18:20:44.811" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:44.933" starttime="20190118 18:20:44.859" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:44.988" starttime="20190118 18:20:44.938" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:44.991" starttime="20190118 18:20:44.805" status="PASS"></status>
</kw>
<doc>Can diagnose test</doc>
<tags>
<tag>CAN 1 diagnose test</tag>
</tags>
<timeout value="50 seconds"></timeout>
<status endtime="20190118 18:20:44.993" critical="yes" starttime="20190118 18:20:32.377" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:20:46.464" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:20:46.489" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:20:46.499" starttime="20190118 18:20:45.036" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:46.501" starttime="20190118 18:20:45.011" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:46.503" starttime="20190118 18:20:45.004" status="PASS"></status>
</kw>
<doc>CAN 1 diagnose test</doc>
<status endtime="20190118 18:20:46.504" starttime="20190118 18:20:30.450" status="PASS"></status>
</suite>
<suite name="SKTB-46886" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-46886.robot" id="s1-s8">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:20:46.701" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:20:46.704" starttime="20190118 18:20:46.693" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:20:46.712" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:20:46.714" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:20:48.439" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:20:48.440" starttime="20190118 18:20:46.707" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:48.443" starttime="20190118 18:20:46.687" status="PASS"></status>
</kw>
<test name="SKTB-GPIO FBUS test" id="s1-s8-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:48.519" starttime="20190118 18:20:48.460" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:48.573" starttime="20190118 18:20:48.524" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:48.623" starttime="20190118 18:20:48.576" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:20:50.632" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:20:50.634" starttime="20190118 18:20:48.627" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:20:50.685" starttime="20190118 18:20:50.637" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:20:50.735" starttime="20190118 18:20:50.688" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:20:50.785" starttime="20190118 18:20:50.739" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190118 18:20:50.836" starttime="20190118 18:20:50.788" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190118 18:20:50.886" starttime="20190118 18:20:50.839" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:20:50.938" starttime="20190118 18:20:50.890" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:20:52.946" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:20:52.948" starttime="20190118 18:20:50.941" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:52.951" starttime="20190118 18:20:48.454" status="PASS"></status>
</kw>
<kw name="Test_GPIO_00">
<doc>Test HI SIDE SWITCH 01</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 01</arg>
</arguments>
<status endtime="20190118 18:20:52.964" starttime="20190118 18:20:52.960" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:53.171" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 43 3D F5</msg>
<status endtime="20190118 18:20:53.172" starttime="20190118 18:20:52.967" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:53.180" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 43 3D F5</msg>
<status endtime="20190118 18:20:53.183" starttime="20190118 18:20:53.176" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:53.386" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 44 3D FE</msg>
<status endtime="20190118 18:20:53.387" starttime="20190118 18:20:53.186" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:53.395" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 44 3D FE</msg>
<status endtime="20190118 18:20:53.398" starttime="20190118 18:20:53.391" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:20:53.410" starttime="20190118 18:20:53.401" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:53.627" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 45 3D F3</msg>
<status endtime="20190118 18:20:53.629" starttime="20190118 18:20:53.415" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:53.636" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 45 3D F3</msg>
<status endtime="20190118 18:20:53.639" starttime="20190118 18:20:53.632" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:53.845" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 00 01 46 3D FD</msg>
<status endtime="20190118 18:20:53.846" starttime="20190118 18:20:53.642" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:53.854" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 00 01 46 3D FD</msg>
<status endtime="20190118 18:20:53.857" starttime="20190118 18:20:53.850" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:20:53.867" starttime="20190118 18:20:53.859" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:53.870" starttime="20190118 18:20:52.953" status="PASS"></status>
</kw>
<kw name="Test_GPIO_01">
<doc>Test HI SIDE SWITCH 02</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 02</arg>
</arguments>
<status endtime="20190118 18:20:53.883" starttime="20190118 18:20:53.878" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_2}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:54.087" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 01 01 41 3D F6</msg>
<status endtime="20190118 18:20:54.088" starttime="20190118 18:20:53.886" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:54.098" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 01 01 41 3D F6</msg>
<status endtime="20190118 18:20:54.101" starttime="20190118 18:20:54.091" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_2}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:54.312" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 01 01 42 3D F9</msg>
<status endtime="20190118 18:20:54.314" starttime="20190118 18:20:54.104" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:54.321" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 01 01 42 3D F9</msg>
<status endtime="20190118 18:20:54.324" starttime="20190118 18:20:54.317" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_2} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:20:54.334" starttime="20190118 18:20:54.327" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_2}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:54.539" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 01 01 43 3D F4</msg>
<status endtime="20190118 18:20:54.541" starttime="20190118 18:20:54.337" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:54.549" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 01 01 43 3D F4</msg>
<status endtime="20190118 18:20:54.552" starttime="20190118 18:20:54.545" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_2}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:54.755" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 00 01 44 3D FE</msg>
<status endtime="20190118 18:20:54.756" starttime="20190118 18:20:54.555" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:54.763" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 00 01 44 3D FE</msg>
<status endtime="20190118 18:20:54.766" starttime="20190118 18:20:54.759" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_2} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:20:54.778" starttime="20190118 18:20:54.769" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:54.780" starttime="20190118 18:20:53.872" status="PASS"></status>
</kw>
<kw name="Test_GPIO_02">
<doc>Test HI SIDE SWITCH 03</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 03</arg>
</arguments>
<status endtime="20190118 18:20:54.793" starttime="20190118 18:20:54.789" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_3}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:55.002" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 02 01 47 3D F3</msg>
<status endtime="20190118 18:20:55.003" starttime="20190118 18:20:54.796" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:55.010" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 02 01 47 3D F3</msg>
<status endtime="20190118 18:20:55.012" starttime="20190118 18:20:55.006" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_3}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:55.217" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 01 01 40 3D F8</msg>
<status endtime="20190118 18:20:55.218" starttime="20190118 18:20:55.015" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:55.226" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 01 01 40 3D F8</msg>
<status endtime="20190118 18:20:55.229" starttime="20190118 18:20:55.222" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_3} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:20:55.239" starttime="20190118 18:20:55.231" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_3}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:55.446" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 02 01 41 3D F5</msg>
<status endtime="20190118 18:20:55.447" starttime="20190118 18:20:55.243" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:55.454" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 02 01 41 3D F5</msg>
<status endtime="20190118 18:20:55.456" starttime="20190118 18:20:55.450" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_3}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:55.663" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 00 01 42 3D FB</msg>
<status endtime="20190118 18:20:55.664" starttime="20190118 18:20:55.459" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:55.671" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 00 01 42 3D FB</msg>
<status endtime="20190118 18:20:55.674" starttime="20190118 18:20:55.666" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_3} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:20:55.685" starttime="20190118 18:20:55.677" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:55.687" starttime="20190118 18:20:54.782" status="PASS"></status>
</kw>
<kw name="Test_GPIO_03">
<doc>Test HI SIDE SWITCH 03</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 03</arg>
</arguments>
<status endtime="20190118 18:20:55.700" starttime="20190118 18:20:55.695" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_4}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:55.905" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 03 01 43 3D F6</msg>
<status endtime="20190118 18:20:55.906" starttime="20190118 18:20:55.703" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:55.913" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 03 01 43 3D F6</msg>
<status endtime="20190118 18:20:55.916" starttime="20190118 18:20:55.909" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_4}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:56.120" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 01 01 44 3D FD</msg>
<status endtime="20190118 18:20:56.121" starttime="20190118 18:20:55.919" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:56.128" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 01 01 44 3D FD</msg>
<status endtime="20190118 18:20:56.131" starttime="20190118 18:20:56.124" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_4} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:20:56.146" starttime="20190118 18:20:56.134" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_4}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:56.351" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 03 01 45 3D F0</msg>
<status endtime="20190118 18:20:56.352" starttime="20190118 18:20:56.149" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:56.360" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 03 01 45 3D F0</msg>
<status endtime="20190118 18:20:56.362" starttime="20190118 18:20:56.355" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_4}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:20:56.571" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 00 01 46 3D FE</msg>
<status endtime="20190118 18:20:56.572" starttime="20190118 18:20:56.365" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:20:56.580" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 00 01 46 3D FE</msg>
<status endtime="20190118 18:20:56.582" starttime="20190118 18:20:56.575" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_4} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:20:56.593" starttime="20190118 18:20:56.585" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:56.595" starttime="20190118 18:20:55.689" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:56.654" starttime="20190118 18:20:56.606" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:56.703" starttime="20190118 18:20:56.657" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:20:56.754" starttime="20190118 18:20:56.707" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:20:58.761" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:20:58.763" starttime="20190118 18:20:56.757" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190118 18:20:58.813" starttime="20190118 18:20:58.766" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:20:58.862" starttime="20190118 18:20:58.816" status="PASS"></status>
</kw>
<status endtime="20190118 18:20:58.865" starttime="20190118 18:20:56.599" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-46886</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status endtime="20190118 18:20:58.866" critical="yes" starttime="20190118 18:20:48.445" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:21:00.334" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:21:00.373" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:21:00.385" starttime="20190118 18:20:58.912" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:00.386" starttime="20190118 18:20:58.881" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:00.388" starttime="20190118 18:20:58.876" status="PASS"></status>
</kw>
<doc>Chorus Fbus GPIO Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:21:00.389" starttime="20190118 18:20:46.541" status="PASS"></status>
</suite>
<suite name="SKTB-47669" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-47669.robot" id="s1-s9">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:21:00.615" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:21:00.618" starttime="20190118 18:21:00.611" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:21:00.626" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:21:00.628" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:21:02.344" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:21:02.346" starttime="20190118 18:21:00.620" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:02.348" starttime="20190118 18:21:00.605" status="PASS"></status>
</kw>
<test name="SKTB-47669" id="s1-s9-t1">
<kw name="Test_precondition" type="setup">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status endtime="20190118 18:21:02.371" starttime="20190118 18:21:02.366" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:02.422" starttime="20190118 18:21:02.374" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:02.473" starttime="20190118 18:21:02.424" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:21:02.521" starttime="20190118 18:21:02.476" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status endtime="20190118 18:21:02.574" starttime="20190118 18:21:02.524" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190118 18:21:02.629" starttime="20190118 18:21:02.577" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:21:02.679" starttime="20190118 18:21:02.632" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:21:04.688" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:21:04.690" starttime="20190118 18:21:02.683" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:21:04.739" starttime="20190118 18:21:04.692" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:21:04.790" starttime="20190118 18:21:04.742" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${4}</arg>
</arguments>
<msg timestamp="20190118 18:21:08.798" level="INFO">Slept 4 seconds</msg>
<status endtime="20190118 18:21:08.800" starttime="20190118 18:21:04.793" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:08.802" starttime="20190118 18:21:02.360" status="PASS"></status>
</kw>
<kw name="cansend_500k">
<doc>Trigger to send can message on can with bitrate 500000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 500000</arg>
</arguments>
<status endtime="20190118 18:21:08.816" starttime="20190118 18:21:08.811" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:21:08.845" starttime="20190118 18:21:08.838" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:08.857" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:21:08.886" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:08.959" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:08.962" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:08.963" starttime="20190118 18:21:08.848" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:08.976" starttime="20190118 18:21:08.967" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:08.987" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190118 18:21:09.015" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:09.072" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:09.075" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:09.076" starttime="20190118 18:21:08.979" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:09.090" starttime="20190118 18:21:09.080" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:09.100" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:21:09.128" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:09.242" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:09.245" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:09.246" starttime="20190118 18:21:09.093" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:09.259" starttime="20190118 18:21:09.250" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:21:09.262" starttime="20190118 18:21:08.828" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:21:09.272" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190118 18:21:09.303" level="INFO">${candump_ID} = 171</msg>
<status endtime="20190118 18:21:09.307" starttime="20190118 18:21:09.265" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190118 18:21:09.337" starttime="20190118 18:21:09.325" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:09.347" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status endtime="20190118 18:21:09.348" starttime="20190118 18:21:09.340" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:09.377" starttime="20190118 18:21:09.360" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:09.589" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status endtime="20190118 18:21:09.590" starttime="20190118 18:21:09.381" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:09.597" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status endtime="20190118 18:21:09.600" starttime="20190118 18:21:09.593" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:09.610" starttime="20190118 18:21:09.602" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:09.612" starttime="20190118 18:21:09.311" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190118 18:21:09.629" starttime="20190118 18:21:09.624" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:09.638" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190118 18:21:09.639" starttime="20190118 18:21:09.632" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:09.648" starttime="20190118 18:21:09.642" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:09.863" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status endtime="20190118 18:21:09.865" starttime="20190118 18:21:09.651" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:09.872" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status endtime="20190118 18:21:09.875" starttime="20190118 18:21:09.868" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:09.885" starttime="20190118 18:21:09.878" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:09.888" starttime="20190118 18:21:09.614" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190118 18:21:09.896" starttime="20190118 18:21:09.891" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:09.916" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:09.916" starttime="20190118 18:21:09.907" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:09.925" starttime="20190118 18:21:09.919" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:10.118" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:10.119" starttime="20190118 18:21:09.928" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:10.121" starttime="20190118 18:21:09.898" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:21:10.138" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:11.144" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:21:11.145" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:21:11.149" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:11.152" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:21:11.153" starttime="20190118 18:21:10.130" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:21:11.161" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:21:11.163" level="INFO">${temp} = [' (1547835669.978120)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190118 18:21:11.164" starttime="20190118 18:21:11.156" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:21:11.171" level="INFO">(1547835669.978120)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190118 18:21:11.173" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1547835669.978120', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status endtime="20190118 18:21:11.174" starttime="20190118 18:21:11.167" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:21:11.183" starttime="20190118 18:21:11.178" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:11.187" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1547835669.978120', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status endtime="20190118 18:21:11.188" starttime="20190118 18:21:10.123" status="PASS"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:21:11.198" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190118 18:21:11.199" starttime="20190118 18:21:11.191" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:21:11.207" starttime="20190118 18:21:11.202" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:11.241" level="INFO">${value} = True</msg>
<status endtime="20190118 18:21:11.242" starttime="20190118 18:21:11.210" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:21:11.250" starttime="20190118 18:21:11.245" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:11.254" level="INFO">${resp} = True</msg>
<status endtime="20190118 18:21:11.263" starttime="20190118 18:21:08.818" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:21:11.272" starttime="20190118 18:21:11.266" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:11.274" starttime="20190118 18:21:08.805" status="PASS"></status>
</kw>
<kw name="cansend_500k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 500000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 500000</arg>
</arguments>
<status endtime="20190118 18:21:11.287" starttime="20190118 18:21:11.282" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:21:11.317" starttime="20190118 18:21:11.309" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:11.326" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:21:11.354" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:11.426" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:11.430" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:11.431" starttime="20190118 18:21:11.320" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:11.443" starttime="20190118 18:21:11.434" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:11.453" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190118 18:21:11.481" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:11.538" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:11.541" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:11.542" starttime="20190118 18:21:11.446" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:11.555" starttime="20190118 18:21:11.546" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:11.565" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:21:11.595" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:11.682" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:11.685" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:11.686" starttime="20190118 18:21:11.558" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:11.699" starttime="20190118 18:21:11.690" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:21:11.702" starttime="20190118 18:21:11.300" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:21:11.712" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190118 18:21:11.742" level="INFO">${candump_ID} = 175</msg>
<status endtime="20190118 18:21:11.743" starttime="20190118 18:21:11.705" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190118 18:21:11.775" starttime="20190118 18:21:11.763" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:11.785" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status endtime="20190118 18:21:11.786" starttime="20190118 18:21:11.778" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:11.795" starttime="20190118 18:21:11.789" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:11.999" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status endtime="20190118 18:21:12.000" starttime="20190118 18:21:11.798" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:12.008" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status endtime="20190118 18:21:12.011" starttime="20190118 18:21:12.004" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:12.021" starttime="20190118 18:21:12.014" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:12.023" starttime="20190118 18:21:11.753" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190118 18:21:12.043" starttime="20190118 18:21:12.038" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:12.054" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190118 18:21:12.054" starttime="20190118 18:21:12.046" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:12.063" starttime="20190118 18:21:12.057" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:12.266" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190118 18:21:12.267" starttime="20190118 18:21:12.066" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:12.274" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190118 18:21:12.277" starttime="20190118 18:21:12.270" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:12.287" starttime="20190118 18:21:12.280" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:12.290" starttime="20190118 18:21:12.025" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190118 18:21:12.299" starttime="20190118 18:21:12.293" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:12.318" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:12.319" starttime="20190118 18:21:12.309" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:12.327" starttime="20190118 18:21:12.321" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:12.518" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:12.519" starttime="20190118 18:21:12.330" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:12.522" starttime="20190118 18:21:12.301" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:21:12.535" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:13.541" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:21:13.542" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:21:13.546" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:13.549" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:21:13.550" starttime="20190118 18:21:12.531" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:21:13.558" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:21:13.560" level="INFO">${temp} = [' (1547835672.380657)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190118 18:21:13.561" starttime="20190118 18:21:13.553" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:21:13.570" level="INFO">(1547835672.380657)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190118 18:21:13.572" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1547835672.380657', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status endtime="20190118 18:21:13.573" starttime="20190118 18:21:13.564" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:21:13.582" starttime="20190118 18:21:13.576" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:13.586" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1547835672.380657', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status endtime="20190118 18:21:13.586" starttime="20190118 18:21:12.525" status="PASS"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:21:13.596" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190118 18:21:13.597" starttime="20190118 18:21:13.589" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:21:13.605" starttime="20190118 18:21:13.600" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:13.639" level="INFO">${value} = True</msg>
<status endtime="20190118 18:21:13.641" starttime="20190118 18:21:13.608" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:21:13.648" starttime="20190118 18:21:13.643" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:13.651" level="INFO">${resp} = True</msg>
<status endtime="20190118 18:21:13.652" starttime="20190118 18:21:11.290" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:21:13.660" starttime="20190118 18:21:13.656" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:13.663" starttime="20190118 18:21:11.276" status="PASS"></status>
</kw>
<kw name="cansend_250k">
<doc>Trigger to send can message on can with bitrate 250000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 250000</arg>
</arguments>
<status endtime="20190118 18:21:13.677" starttime="20190118 18:21:13.671" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:21:13.706" starttime="20190118 18:21:13.698" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:13.715" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:21:13.743" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:13.815" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:13.818" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:13.819" starttime="20190118 18:21:13.709" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:13.837" starttime="20190118 18:21:13.823" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:13.847" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190118 18:21:13.875" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:13.934" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:13.937" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:13.938" starttime="20190118 18:21:13.840" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:13.951" starttime="20190118 18:21:13.942" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:13.961" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:21:13.989" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:14.075" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:14.078" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:14.079" starttime="20190118 18:21:13.954" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:14.092" starttime="20190118 18:21:14.083" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:21:14.095" starttime="20190118 18:21:13.688" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:21:14.105" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190118 18:21:14.135" level="INFO">${candump_ID} = 179</msg>
<status endtime="20190118 18:21:14.140" starttime="20190118 18:21:14.098" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190118 18:21:14.170" starttime="20190118 18:21:14.158" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:14.181" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status endtime="20190118 18:21:14.182" starttime="20190118 18:21:14.173" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:14.190" starttime="20190118 18:21:14.185" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:14.397" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status endtime="20190118 18:21:14.398" starttime="20190118 18:21:14.193" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:14.407" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status endtime="20190118 18:21:14.409" starttime="20190118 18:21:14.402" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:14.419" starttime="20190118 18:21:14.412" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:14.422" starttime="20190118 18:21:14.143" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190118 18:21:14.437" starttime="20190118 18:21:14.432" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:14.447" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190118 18:21:14.448" starttime="20190118 18:21:14.440" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:14.457" starttime="20190118 18:21:14.451" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:14.665" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status endtime="20190118 18:21:14.666" starttime="20190118 18:21:14.460" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:14.674" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status endtime="20190118 18:21:14.677" starttime="20190118 18:21:14.670" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:14.688" starttime="20190118 18:21:14.680" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:14.690" starttime="20190118 18:21:14.424" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190118 18:21:14.699" starttime="20190118 18:21:14.693" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:14.719" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:14.720" starttime="20190118 18:21:14.710" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:14.728" starttime="20190118 18:21:14.722" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:14.955" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:14.955" starttime="20190118 18:21:14.731" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:14.958" starttime="20190118 18:21:14.701" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:21:14.972" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:15.978" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:21:15.980" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:21:15.984" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:15.986" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:21:15.987" starttime="20190118 18:21:14.968" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:21:16.000" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:21:16.002" level="INFO">${temp} = [' (1547835674.805842)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190118 18:21:16.003" starttime="20190118 18:21:15.990" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:21:16.011" level="INFO">(1547835674.805842)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190118 18:21:16.013" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1547835674.805842', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status endtime="20190118 18:21:16.013" starttime="20190118 18:21:16.006" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:21:16.022" starttime="20190118 18:21:16.016" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:16.026" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1547835674.805842', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status endtime="20190118 18:21:16.027" starttime="20190118 18:21:14.961" status="PASS"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:21:16.036" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190118 18:21:16.037" starttime="20190118 18:21:16.030" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:21:16.045" starttime="20190118 18:21:16.040" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:16.085" level="INFO">${value} = True</msg>
<status endtime="20190118 18:21:16.086" starttime="20190118 18:21:16.048" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:21:16.093" starttime="20190118 18:21:16.088" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:16.097" level="INFO">${resp} = True</msg>
<status endtime="20190118 18:21:16.098" starttime="20190118 18:21:13.679" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:21:16.105" starttime="20190118 18:21:16.101" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:16.107" starttime="20190118 18:21:13.665" status="PASS"></status>
</kw>
<kw name="cansend_250k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 250000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 250000</arg>
</arguments>
<status endtime="20190118 18:21:16.121" starttime="20190118 18:21:16.116" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:21:16.155" starttime="20190118 18:21:16.146" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:16.164" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:21:16.192" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:16.266" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:16.270" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:16.271" starttime="20190118 18:21:16.158" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:16.284" starttime="20190118 18:21:16.275" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:16.295" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190118 18:21:16.323" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:16.380" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:16.383" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:16.385" starttime="20190118 18:21:16.287" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:16.397" starttime="20190118 18:21:16.388" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:16.407" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:21:16.435" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:16.521" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:16.524" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:16.525" starttime="20190118 18:21:16.401" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:16.537" starttime="20190118 18:21:16.529" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:21:16.540" starttime="20190118 18:21:16.135" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:21:16.551" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190118 18:21:16.581" level="INFO">${candump_ID} = 183</msg>
<status endtime="20190118 18:21:16.582" starttime="20190118 18:21:16.543" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190118 18:21:16.615" starttime="20190118 18:21:16.610" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:16.625" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status endtime="20190118 18:21:16.626" starttime="20190118 18:21:16.618" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:16.635" starttime="20190118 18:21:16.629" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:16.839" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status endtime="20190118 18:21:16.840" starttime="20190118 18:21:16.638" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:16.848" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status endtime="20190118 18:21:16.851" starttime="20190118 18:21:16.843" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:16.861" starttime="20190118 18:21:16.854" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:16.863" starttime="20190118 18:21:16.593" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190118 18:21:16.883" starttime="20190118 18:21:16.878" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:16.893" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190118 18:21:16.894" starttime="20190118 18:21:16.886" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:16.902" starttime="20190118 18:21:16.897" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:17.106" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status endtime="20190118 18:21:17.107" starttime="20190118 18:21:16.906" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:17.116" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status endtime="20190118 18:21:17.118" starttime="20190118 18:21:17.111" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:17.130" starttime="20190118 18:21:17.121" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:17.133" starttime="20190118 18:21:16.865" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190118 18:21:17.141" starttime="20190118 18:21:17.136" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:17.160" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:17.161" starttime="20190118 18:21:17.152" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:17.170" starttime="20190118 18:21:17.164" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:17.363" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:17.365" starttime="20190118 18:21:17.173" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:17.367" starttime="20190118 18:21:17.143" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:21:17.380" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:18.385" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:21:18.387" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:21:18.391" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:18.393" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:21:18.394" starttime="20190118 18:21:17.376" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:21:18.403" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:21:18.405" level="INFO">${temp} = [' (1547835677.224192)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190118 18:21:18.406" starttime="20190118 18:21:18.397" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:21:18.414" level="INFO">(1547835677.224192)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190118 18:21:18.416" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1547835677.224192', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status endtime="20190118 18:21:18.416" starttime="20190118 18:21:18.409" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:21:18.425" starttime="20190118 18:21:18.419" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:18.429" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1547835677.224192', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status endtime="20190118 18:21:18.430" starttime="20190118 18:21:17.369" status="PASS"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:21:18.439" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190118 18:21:18.440" starttime="20190118 18:21:18.433" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:21:18.448" starttime="20190118 18:21:18.443" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:18.483" level="INFO">${value} = True</msg>
<status endtime="20190118 18:21:18.484" starttime="20190118 18:21:18.451" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:21:18.492" starttime="20190118 18:21:18.487" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:18.495" level="INFO">${resp} = True</msg>
<status endtime="20190118 18:21:18.496" starttime="20190118 18:21:16.123" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:21:18.504" starttime="20190118 18:21:18.499" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:18.506" starttime="20190118 18:21:16.110" status="PASS"></status>
</kw>
<kw name="cansend_125k">
<doc>Trigger to send can message on can with bitrate 125000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 125000</arg>
</arguments>
<status endtime="20190118 18:21:18.520" starttime="20190118 18:21:18.515" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:21:18.551" starttime="20190118 18:21:18.543" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:18.561" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:21:18.589" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:18.662" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:18.666" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:18.667" starttime="20190118 18:21:18.555" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:18.685" starttime="20190118 18:21:18.671" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:18.695" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190118 18:21:18.724" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:18.823" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:18.830" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:18.831" starttime="20190118 18:21:18.688" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:18.860" starttime="20190118 18:21:18.839" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:18.869" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:21:18.898" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:18.982" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:18.985" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:18.986" starttime="20190118 18:21:18.863" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:18.999" starttime="20190118 18:21:18.990" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:21:19.003" starttime="20190118 18:21:18.532" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:21:19.013" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190118 18:21:19.043" level="INFO">${candump_ID} = 187</msg>
<status endtime="20190118 18:21:19.044" starttime="20190118 18:21:19.006" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190118 18:21:19.076" starttime="20190118 18:21:19.065" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:19.086" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status endtime="20190118 18:21:19.087" starttime="20190118 18:21:19.080" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:19.096" starttime="20190118 18:21:19.090" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:19.300" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status endtime="20190118 18:21:19.301" starttime="20190118 18:21:19.099" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:19.309" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status endtime="20190118 18:21:19.312" starttime="20190118 18:21:19.304" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:19.322" starttime="20190118 18:21:19.315" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:19.324" starttime="20190118 18:21:19.050" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190118 18:21:19.340" starttime="20190118 18:21:19.335" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:19.350" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190118 18:21:19.351" starttime="20190118 18:21:19.343" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:19.360" starttime="20190118 18:21:19.354" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:19.564" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190118 18:21:19.565" starttime="20190118 18:21:19.363" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:19.572" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190118 18:21:19.575" starttime="20190118 18:21:19.568" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:19.586" starttime="20190118 18:21:19.578" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:19.588" starttime="20190118 18:21:19.326" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190118 18:21:19.597" starttime="20190118 18:21:19.591" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:19.617" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:19.618" starttime="20190118 18:21:19.609" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:19.627" starttime="20190118 18:21:19.621" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:19.819" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:19.820" starttime="20190118 18:21:19.630" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:19.823" starttime="20190118 18:21:19.599" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:21:19.836" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:20.841" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:21:20.843" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:21:20.847" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:20.850" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:21:20.851" starttime="20190118 18:21:19.832" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:21:20.863" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:21:20.865" level="INFO">${temp} = [' (1547835679.681558)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190118 18:21:20.866" starttime="20190118 18:21:20.853" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:21:20.873" level="INFO">(1547835679.681558)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190118 18:21:20.875" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1547835679.681558', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status endtime="20190118 18:21:20.876" starttime="20190118 18:21:20.869" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:21:20.885" starttime="20190118 18:21:20.879" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:20.889" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1547835679.681558', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status endtime="20190118 18:21:20.890" starttime="20190118 18:21:19.825" status="PASS"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:21:20.899" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190118 18:21:20.900" starttime="20190118 18:21:20.893" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:21:20.908" starttime="20190118 18:21:20.903" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:20.943" level="INFO">${value} = True</msg>
<status endtime="20190118 18:21:20.944" starttime="20190118 18:21:20.911" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:21:20.951" starttime="20190118 18:21:20.947" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:20.955" level="INFO">${resp} = True</msg>
<status endtime="20190118 18:21:20.956" starttime="20190118 18:21:18.522" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:21:20.963" starttime="20190118 18:21:20.959" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:20.965" starttime="20190118 18:21:18.508" status="PASS"></status>
</kw>
<kw name="cansend_125k_ex">
<doc>Trigger to send can message on can with 29 ID and bitrate 125000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 ID and bitrate 125000</arg>
</arguments>
<status endtime="20190118 18:21:20.978" starttime="20190118 18:21:20.973" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:21:21.008" starttime="20190118 18:21:21.000" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:21.018" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:21:21.045" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:21.117" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:21.121" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:21.122" starttime="20190118 18:21:21.011" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:21.134" starttime="20190118 18:21:21.126" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:21.147" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190118 18:21:21.174" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:21.231" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:21.234" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:21.235" starttime="20190118 18:21:21.138" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:21.248" starttime="20190118 18:21:21.239" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:21.257" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:21:21.285" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:21.370" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:21.374" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:21.375" starttime="20190118 18:21:21.251" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:21.387" starttime="20190118 18:21:21.378" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:21:21.390" starttime="20190118 18:21:20.990" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:21:21.400" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190118 18:21:21.430" level="INFO">${candump_ID} = 191</msg>
<status endtime="20190118 18:21:21.431" starttime="20190118 18:21:21.393" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status endtime="20190118 18:21:21.463" starttime="20190118 18:21:21.451" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:21.473" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status endtime="20190118 18:21:21.474" starttime="20190118 18:21:21.466" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:21.483" starttime="20190118 18:21:21.477" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:21.688" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status endtime="20190118 18:21:21.689" starttime="20190118 18:21:21.486" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:21.697" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status endtime="20190118 18:21:21.699" starttime="20190118 18:21:21.692" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:21.709" starttime="20190118 18:21:21.702" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:21.712" starttime="20190118 18:21:21.441" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190118 18:21:21.733" starttime="20190118 18:21:21.728" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:21.743" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status endtime="20190118 18:21:21.743" starttime="20190118 18:21:21.736" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:21.753" starttime="20190118 18:21:21.747" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:21.956" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status endtime="20190118 18:21:21.958" starttime="20190118 18:21:21.756" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:21.965" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status endtime="20190118 18:21:21.968" starttime="20190118 18:21:21.961" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:21.978" starttime="20190118 18:21:21.970" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:21.980" starttime="20190118 18:21:21.714" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status endtime="20190118 18:21:21.989" starttime="20190118 18:21:21.983" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:22.009" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:22.009" starttime="20190118 18:21:22.000" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:22.020" starttime="20190118 18:21:22.014" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:22.211" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:22.213" starttime="20190118 18:21:22.023" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:22.215" starttime="20190118 18:21:21.991" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:21:22.229" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:23.234" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:21:23.235" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:21:23.239" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:23.242" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:21:23.243" starttime="20190118 18:21:22.224" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:21:23.251" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:21:23.253" level="INFO">${temp} = [' (1547835682.074033)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status endtime="20190118 18:21:23.254" starttime="20190118 18:21:23.246" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:21:23.261" level="INFO">(1547835682.074033)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190118 18:21:23.263" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1547835682.074033', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status endtime="20190118 18:21:23.264" starttime="20190118 18:21:23.257" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:21:23.275" starttime="20190118 18:21:23.269" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:23.279" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1547835682.074033', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status endtime="20190118 18:21:23.280" starttime="20190118 18:21:22.218" status="PASS"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:21:23.289" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status endtime="20190118 18:21:23.290" starttime="20190118 18:21:23.282" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:21:23.298" starttime="20190118 18:21:23.293" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:23.333" level="INFO">${value} = True</msg>
<status endtime="20190118 18:21:23.334" starttime="20190118 18:21:23.301" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:21:23.341" starttime="20190118 18:21:23.337" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:23.345" level="INFO">${resp} = True</msg>
<status endtime="20190118 18:21:23.346" starttime="20190118 18:21:20.981" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:21:23.354" starttime="20190118 18:21:23.349" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:23.356" starttime="20190118 18:21:20.967" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate_1000k_negativtest">
<doc>Can setup channel and not supported bitrate 1000k negativtest</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and not supported bitrate 1000k negativtest</arg>
</arguments>
<status endtime="20190118 18:21:23.369" starttime="20190118 18:21:23.365" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate_negativtest">
<doc>Can setup channel and bitrate negativtest</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${1000_KBAUD}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate negativtest</arg>
</arguments>
<status endtime="20190118 18:21:23.385" starttime="20190118 18:21:23.380" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:23.394" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 03</msg>
<status endtime="20190118 18:21:23.395" starttime="20190118 18:21:23.388" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:23.404" starttime="20190118 18:21:23.398" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:23.616" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 04 00 01 45 E5 C3</msg>
<status endtime="20190118 18:21:23.617" starttime="20190118 18:21:23.407" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:23.624" level="INFO">1E 10 54 93 00 08 00 0E AA 03 04 00 01 45 E5 C3</msg>
<status endtime="20190118 18:21:23.627" starttime="20190118 18:21:23.620" status="PASS"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:23.637" starttime="20190118 18:21:23.630" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:23.639" starttime="20190118 18:21:23.371" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:23.641" starttime="20190118 18:21:23.358" status="PASS"></status>
</kw>
<kw name="trigger_can_message_125k">
<doc>Trigger to send 5 can messages on specified can channel without change any settings</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send 5 can messages on specified can channel without change any settings</arg>
</arguments>
<status endtime="20190118 18:21:23.660" starttime="20190118 18:21:23.651" status="PASS"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:21:23.683" starttime="20190118 18:21:23.673" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:23.694" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:21:23.723" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:23.795" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:23.798" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:23.799" starttime="20190118 18:21:23.686" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:23.811" starttime="20190118 18:21:23.803" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:23.822" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190118 18:21:23.850" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:23.911" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:23.914" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:23.916" starttime="20190118 18:21:23.815" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:23.928" starttime="20190118 18:21:23.919" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:23.938" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:21:23.966" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:24.050" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:24.054" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:24.055" starttime="20190118 18:21:23.931" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:24.067" starttime="20190118 18:21:24.059" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:21:24.070" starttime="20190118 18:21:23.663" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:21:24.090" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190118 18:21:24.119" level="INFO">${candump_ID} = 195</msg>
<status endtime="20190118 18:21:24.124" starttime="20190118 18:21:24.073" status="PASS"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg timestamp="20190118 18:21:24.145" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:24.166" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:24.167" starttime="20190118 18:21:24.157" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:24.176" starttime="20190118 18:21:24.170" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:24.374" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:24.375" starttime="20190118 18:21:24.180" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:24.377" starttime="20190118 18:21:24.147" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:24.378" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:24.397" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:24.398" starttime="20190118 18:21:24.389" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:24.406" starttime="20190118 18:21:24.401" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:24.599" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:24.600" starttime="20190118 18:21:24.409" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:24.603" starttime="20190118 18:21:24.380" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:24.604" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:24.625" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:24.626" starttime="20190118 18:21:24.615" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:24.635" starttime="20190118 18:21:24.629" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:24.827" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:24.828" starttime="20190118 18:21:24.638" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:24.831" starttime="20190118 18:21:24.607" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:24.831" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:24.855" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:24.856" starttime="20190118 18:21:24.847" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:24.865" starttime="20190118 18:21:24.859" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:25.065" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:25.066" starttime="20190118 18:21:24.868" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:25.068" starttime="20190118 18:21:24.834" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:25.069" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:25.088" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:25.089" starttime="20190118 18:21:25.080" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:25.098" starttime="20190118 18:21:25.092" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:25.290" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:25.291" starttime="20190118 18:21:25.101" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:25.294" starttime="20190118 18:21:25.071" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:25.295" starttime="20190118 18:21:24.133" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:21:25.308" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:26.313" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:21:26.315" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:21:26.319" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:26.322" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:21:26.322" starttime="20190118 18:21:25.304" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:21:26.331" level="INFO">5 lines returned</msg>
<msg timestamp="20190118 18:21:26.333" level="INFO">${temp} = [' (1547835684.236137)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1547835684.461541)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1547835684.689210)  can2  18EF1B05   [8]  11 22 33 44 ...</msg>
<status endtime="20190118 18:21:26.334" starttime="20190118 18:21:26.326" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:21:26.342" level="INFO">(1547835684.236137)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1547835684.461541)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1547835684.689210)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1547835684.925834)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1547835685.152551)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190118 18:21:26.344" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1547835684.236137', 'payload': '1122334455667788', 'id': '18EF1B05'}, {'channel': 'can2', 'timestamp': '1547835684.461541', 'payload': '1122334455667788', 'id': '18E...</msg>
<status endtime="20190118 18:21:26.345" starttime="20190118 18:21:26.337" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:21:26.354" starttime="20190118 18:21:26.348" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:26.358" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1547835684.236137', 'payload': '1122334455667788', 'id': '18EF1B05'}, {'channel': 'can2', 'timestamp': '1547835684.461541', 'payload': '1122334455667788', 'id': '18E...</msg>
<status endtime="20190118 18:21:26.359" starttime="20190118 18:21:25.297" status="PASS"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:21:26.369" level="INFO">${res_dict} = {'status': True, 'count': 5}</msg>
<status endtime="20190118 18:21:26.369" starttime="20190118 18:21:26.362" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:21:26.386" starttime="20190118 18:21:26.372" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:26.420" level="INFO">${value} = True</msg>
<status endtime="20190118 18:21:26.421" starttime="20190118 18:21:26.390" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:21:26.428" starttime="20190118 18:21:26.424" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:21:26.461" level="INFO">${count} = 5</msg>
<status endtime="20190118 18:21:26.462" starttime="20190118 18:21:26.431" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${5}</arg>
<arg>${count}</arg>
</arguments>
<status endtime="20190118 18:21:26.471" starttime="20190118 18:21:26.465" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:26.474" starttime="20190118 18:21:23.643" status="PASS"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190118 18:21:26.495" starttime="20190118 18:21:26.490" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:26.505" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status endtime="20190118 18:21:26.505" starttime="20190118 18:21:26.498" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:26.514" starttime="20190118 18:21:26.508" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:26.723" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 46 E3 C6</msg>
<status endtime="20190118 18:21:26.725" starttime="20190118 18:21:26.517" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:26.732" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 46 E3 C6</msg>
<status endtime="20190118 18:21:26.735" starttime="20190118 18:21:26.728" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:26.745" starttime="20190118 18:21:26.738" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:26.748" starttime="20190118 18:21:26.481" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:26.750" starttime="20190118 18:21:26.476" status="PASS"></status>
</kw>
<kw name="channel_off_trigger_can_message_125k_negativtest">
<doc>Set the channel off and trigger to send 5 can messages on specified can channel</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the channel off and trigger to send 5 can messages on specified can channel</arg>
</arguments>
<status endtime="20190118 18:21:26.763" starttime="20190118 18:21:26.758" status="PASS"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:21:26.795" starttime="20190118 18:21:26.775" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:26.805" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:21:26.833" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:26.905" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:26.908" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:26.909" starttime="20190118 18:21:26.798" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:26.921" starttime="20190118 18:21:26.913" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:26.932" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190118 18:21:26.959" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:27.016" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:27.019" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:27.021" starttime="20190118 18:21:26.925" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:27.033" starttime="20190118 18:21:27.025" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:21:27.043" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:21:27.070" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:27.154" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:27.158" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:21:27.159" starttime="20190118 18:21:27.037" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:21:27.171" starttime="20190118 18:21:27.162" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:21:27.174" starttime="20190118 18:21:26.765" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:21:27.186" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190118 18:21:27.215" level="INFO">${candump_ID} = 199</msg>
<status endtime="20190118 18:21:27.220" starttime="20190118 18:21:27.177" status="PASS"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg timestamp="20190118 18:21:27.233" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:27.261" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:27.262" starttime="20190118 18:21:27.253" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:27.271" starttime="20190118 18:21:27.265" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:27.463" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:27.464" starttime="20190118 18:21:27.274" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:27.467" starttime="20190118 18:21:27.236" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:27.468" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:27.487" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:27.488" starttime="20190118 18:21:27.479" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:27.497" starttime="20190118 18:21:27.491" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:27.688" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:27.689" starttime="20190118 18:21:27.500" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:27.692" starttime="20190118 18:21:27.470" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:27.693" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:27.712" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:27.713" starttime="20190118 18:21:27.704" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:27.722" starttime="20190118 18:21:27.716" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:27.913" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:27.914" starttime="20190118 18:21:27.726" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:27.917" starttime="20190118 18:21:27.695" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:27.918" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:27.938" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:27.939" starttime="20190118 18:21:27.930" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:27.948" starttime="20190118 18:21:27.942" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:28.143" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:28.145" starttime="20190118 18:21:27.951" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:28.147" starttime="20190118 18:21:27.921" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:28.148" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:28.167" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status endtime="20190118 18:21:28.168" starttime="20190118 18:21:28.159" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:28.177" starttime="20190118 18:21:28.171" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:28.369" level="INFO">${info} = </msg>
<status endtime="20190118 18:21:28.370" starttime="20190118 18:21:28.180" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:28.372" starttime="20190118 18:21:28.151" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:28.373" starttime="20190118 18:21:27.229" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:21:28.386" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:21:29.391" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190118 18:21:29.393" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:21:29.397" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:21:29.399" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:21:29.400" starttime="20190118 18:21:28.382" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:21:29.409" level="INFO">0 lines returned</msg>
<msg timestamp="20190118 18:21:29.411" level="INFO">${temp} = []</msg>
<status endtime="20190118 18:21:29.411" starttime="20190118 18:21:29.403" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:21:29.419" level="INFO">${ret_list} = []</msg>
<status endtime="20190118 18:21:29.420" starttime="20190118 18:21:29.414" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status endtime="20190118 18:21:29.428" starttime="20190118 18:21:29.423" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:29.432" level="INFO">${resp_list} = []</msg>
<status endtime="20190118 18:21:29.433" starttime="20190118 18:21:28.375" status="PASS"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:21:29.443" level="INFO">${res_dict} = {'status': False, 'count': 0}</msg>
<status endtime="20190118 18:21:29.444" starttime="20190118 18:21:29.436" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:21:29.452" starttime="20190118 18:21:29.447" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:29.485" level="INFO">${value} = False</msg>
<status endtime="20190118 18:21:29.486" starttime="20190118 18:21:29.455" status="PASS"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:21:29.493" starttime="20190118 18:21:29.489" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:21:29.539" level="INFO">${count} = 0</msg>
<status endtime="20190118 18:21:29.540" starttime="20190118 18:21:29.496" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${0}</arg>
<arg>${count}</arg>
</arguments>
<status endtime="20190118 18:21:29.549" starttime="20190118 18:21:29.543" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:29.551" starttime="20190118 18:21:26.752" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status endtime="20190118 18:21:29.566" starttime="20190118 18:21:29.562" status="PASS"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status endtime="20190118 18:21:29.588" starttime="20190118 18:21:29.583" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:29.598" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status endtime="20190118 18:21:29.599" starttime="20190118 18:21:29.591" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:29.607" starttime="20190118 18:21:29.602" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:29.810" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190118 18:21:29.811" starttime="20190118 18:21:29.610" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:21:29.819" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status endtime="20190118 18:21:29.822" starttime="20190118 18:21:29.815" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:29.833" starttime="20190118 18:21:29.825" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:29.835" starttime="20190118 18:21:29.574" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:29.838" starttime="20190118 18:21:29.568" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:29.889" starttime="20190118 18:21:29.840" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:29.940" starttime="20190118 18:21:29.892" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:21:29.989" starttime="20190118 18:21:29.944" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:29.991" starttime="20190118 18:21:29.555" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-47669 for can3 channel</doc>
<tags>
<tag>CAN 3 test TX</tag>
</tags>
<status endtime="20190118 18:21:29.993" critical="yes" starttime="20190118 18:21:02.350" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:21:31.515" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:21:31.601" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:21:31.602" starttime="20190118 18:21:30.046" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:31.604" starttime="20190118 18:21:30.009" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:31.624" starttime="20190118 18:21:30.003" status="PASS"></status>
</kw>
<doc>CAN 3 test TX with FBUS</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:21:31.628" starttime="20190118 18:21:00.444" status="PASS"></status>
</suite>
<suite name="SKTB-48413" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-48413.robot" id="s1-s10">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:21:32.245" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:21:32.256" starttime="20190118 18:21:32.241" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:21:32.265" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:21:32.278" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:21:34.138" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:21:34.140" starttime="20190118 18:21:32.259" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:34.142" starttime="20190118 18:21:32.228" status="PASS"></status>
</kw>
<test name="SKTB-48413 FBUS test" id="s1-s10-t1">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:34.234" starttime="20190118 18:21:34.165" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:34.302" starttime="20190118 18:21:34.237" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:34.353" starttime="20190118 18:21:34.305" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:21:36.361" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:21:36.363" starttime="20190118 18:21:34.356" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:21:36.412" starttime="20190118 18:21:36.366" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:21:36.464" starttime="20190118 18:21:36.415" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:21:36.513" starttime="20190118 18:21:36.468" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190118 18:21:36.563" starttime="20190118 18:21:36.516" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190118 18:21:36.614" starttime="20190118 18:21:36.567" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:21:36.665" starttime="20190118 18:21:36.618" status="PASS"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status endtime="20190118 18:21:36.719" starttime="20190118 18:21:36.668" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:21:38.727" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:21:38.729" starttime="20190118 18:21:36.722" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:38.732" starttime="20190118 18:21:34.155" status="PASS"></status>
</kw>
<kw name="digit_out_led1_freq">
<doc>Toggle digital output led 1 with the supported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle digital output led 1 with the supported frequency</arg>
</arguments>
<status endtime="20190118 18:21:38.745" starttime="20190118 18:21:38.741" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:38.764" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 01</msg>
<status endtime="20190118 18:21:38.765" starttime="20190118 18:21:38.757" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:38.774" starttime="20190118 18:21:38.768" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:38.982" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 04 01 43 3D F5</msg>
<status endtime="20190118 18:21:38.983" starttime="20190118 18:21:38.777" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:38.992" starttime="20190118 18:21:38.986" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:39.003" starttime="20190118 18:21:38.995" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:39.006" starttime="20190118 18:21:38.748" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190118 18:21:39.013" starttime="20190118 18:21:39.009" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:39.031" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status endtime="20190118 18:21:39.032" starttime="20190118 18:21:39.025" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:39.040" starttime="20190118 18:21:39.034" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:39.241" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 44 3E FB</msg>
<status endtime="20190118 18:21:39.242" starttime="20190118 18:21:39.043" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:39.250" starttime="20190118 18:21:39.245" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:39.263" starttime="20190118 18:21:39.253" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:39.272" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '44', '3E', 'FB']</msg>
<status endtime="20190118 18:21:39.273" starttime="20190118 18:21:39.266" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:39.284" level="INFO">${value} = 00</msg>
<status endtime="20190118 18:21:39.285" starttime="20190118 18:21:39.275" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:39.289" starttime="20190118 18:21:39.015" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:39.291" starttime="20190118 18:21:38.735" status="PASS"></status>
</kw>
<kw name="digit_out_led1_freq_negativtest">
<doc>Toggle the digital output led 1 with the notsupported frequency negativ test</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 1 with the notsupported frequency negativtest</arg>
</arguments>
<status endtime="20190118 18:21:39.304" starttime="20190118 18:21:39.299" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:39.354" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 0B</msg>
<status endtime="20190118 18:21:39.355" starttime="20190118 18:21:39.337" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:39.383" starttime="20190118 18:21:39.359" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:39.593" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 04 01 45 3C F3</msg>
<status endtime="20190118 18:21:39.594" starttime="20190118 18:21:39.386" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:39.603" starttime="20190118 18:21:39.598" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:39.614" starttime="20190118 18:21:39.606" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:39.616" starttime="20190118 18:21:39.306" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190118 18:21:39.623" starttime="20190118 18:21:39.619" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:39.641" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status endtime="20190118 18:21:39.642" starttime="20190118 18:21:39.635" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:39.650" starttime="20190118 18:21:39.645" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:39.853" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 40 3E FF</msg>
<status endtime="20190118 18:21:39.854" starttime="20190118 18:21:39.654" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:39.864" starttime="20190118 18:21:39.858" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:39.875" starttime="20190118 18:21:39.866" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:39.884" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '40', '3E', 'FF']</msg>
<status endtime="20190118 18:21:39.885" starttime="20190118 18:21:39.879" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:39.893" level="INFO">${value} = 00</msg>
<status endtime="20190118 18:21:39.894" starttime="20190118 18:21:39.888" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:39.897" starttime="20190118 18:21:39.626" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:39.900" starttime="20190118 18:21:39.293" status="PASS"></status>
</kw>
<kw name="digit_out_led1_high">
<doc>Set the digital output led 1 high and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 high and test it</arg>
</arguments>
<status endtime="20190118 18:21:39.913" starttime="20190118 18:21:39.908" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:39.932" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 01</msg>
<status endtime="20190118 18:21:39.933" starttime="20190118 18:21:39.925" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:39.941" starttime="20190118 18:21:39.935" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:40.144" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 41 3D F3</msg>
<status endtime="20190118 18:21:40.146" starttime="20190118 18:21:39.944" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:40.154" starttime="20190118 18:21:40.149" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:40.165" starttime="20190118 18:21:40.157" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:40.167" starttime="20190118 18:21:39.915" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:40.188" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status endtime="20190118 18:21:40.189" starttime="20190118 18:21:40.182" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:40.198" starttime="20190118 18:21:40.192" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:40.399" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 01 01 42 3D FC</msg>
<status endtime="20190118 18:21:40.401" starttime="20190118 18:21:40.201" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:40.409" starttime="20190118 18:21:40.404" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:40.420" starttime="20190118 18:21:40.412" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:40.428" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '01', '01', '42', '3D', 'FC']</msg>
<status endtime="20190118 18:21:40.429" starttime="20190118 18:21:40.423" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:40.437" level="INFO">${value} = 01</msg>
<status endtime="20190118 18:21:40.438" starttime="20190118 18:21:40.432" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:40.442" level="INFO">${res} = 01</msg>
<status endtime="20190118 18:21:40.443" starttime="20190118 18:21:40.169" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190118 18:21:40.450" starttime="20190118 18:21:40.445" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:40.453" starttime="20190118 18:21:39.902" status="PASS"></status>
</kw>
<kw name="digit_out_led1_low">
<doc>Set the digital output led 1 low and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 low and test it</arg>
</arguments>
<status endtime="20190118 18:21:40.466" starttime="20190118 18:21:40.462" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:40.485" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 00</msg>
<status endtime="20190118 18:21:40.486" starttime="20190118 18:21:40.479" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:40.495" starttime="20190118 18:21:40.489" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:40.699" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 45 3D F7</msg>
<status endtime="20190118 18:21:40.699" starttime="20190118 18:21:40.499" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:40.708" starttime="20190118 18:21:40.703" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:40.719" starttime="20190118 18:21:40.711" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:40.721" starttime="20190118 18:21:40.469" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:40.739" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status endtime="20190118 18:21:40.740" starttime="20190118 18:21:40.733" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:40.748" starttime="20190118 18:21:40.742" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:40.978" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 00 01 46 3D F9</msg>
<status endtime="20190118 18:21:40.979" starttime="20190118 18:21:40.751" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:40.991" starttime="20190118 18:21:40.985" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:41.002" starttime="20190118 18:21:40.994" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:41.010" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '00', '01', '46', '3D', 'F9']</msg>
<status endtime="20190118 18:21:41.011" starttime="20190118 18:21:41.005" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:41.020" level="INFO">${value} = 00</msg>
<status endtime="20190118 18:21:41.021" starttime="20190118 18:21:41.014" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:41.024" level="INFO">${res} = 00</msg>
<status endtime="20190118 18:21:41.025" starttime="20190118 18:21:40.723" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status endtime="20190118 18:21:41.033" starttime="20190118 18:21:41.028" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:41.035" starttime="20190118 18:21:40.455" status="PASS"></status>
</kw>
<kw name="digit_out_led2_freq">
<doc>Toggle the digital output led 2 with the supported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2</arg>
<arg>with the supported frequency</arg>
</arguments>
<status endtime="20190118 18:21:41.049" starttime="20190118 18:21:41.044" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:41.072" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 01</msg>
<status endtime="20190118 18:21:41.073" starttime="20190118 18:21:41.065" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:41.081" starttime="20190118 18:21:41.076" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:41.282" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 05 01 47 3D F0</msg>
<status endtime="20190118 18:21:41.283" starttime="20190118 18:21:41.084" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:41.293" starttime="20190118 18:21:41.287" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:41.303" starttime="20190118 18:21:41.295" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:41.305" starttime="20190118 18:21:41.051" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190118 18:21:41.313" starttime="20190118 18:21:41.308" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:41.330" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status endtime="20190118 18:21:41.331" starttime="20190118 18:21:41.325" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:41.340" starttime="20190118 18:21:41.334" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:41.543" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 40 3E FE</msg>
<status endtime="20190118 18:21:41.545" starttime="20190118 18:21:41.343" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:41.553" starttime="20190118 18:21:41.548" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:41.564" starttime="20190118 18:21:41.556" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:41.572" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '40', '3E', 'FE']</msg>
<status endtime="20190118 18:21:41.573" starttime="20190118 18:21:41.567" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:41.582" level="INFO">${value} = 00</msg>
<status endtime="20190118 18:21:41.582" starttime="20190118 18:21:41.576" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:41.586" starttime="20190118 18:21:41.315" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:41.588" starttime="20190118 18:21:41.037" status="PASS"></status>
</kw>
<kw name="digit_out_led2_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status endtime="20190118 18:21:41.601" starttime="20190118 18:21:41.596" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:41.620" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 0B</msg>
<status endtime="20190118 18:21:41.621" starttime="20190118 18:21:41.613" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:41.630" starttime="20190118 18:21:41.624" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:41.837" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 05 01 41 3C F6</msg>
<status endtime="20190118 18:21:41.838" starttime="20190118 18:21:41.633" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:41.847" starttime="20190118 18:21:41.842" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:41.858" starttime="20190118 18:21:41.850" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:41.860" starttime="20190118 18:21:41.603" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190118 18:21:41.868" starttime="20190118 18:21:41.863" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:41.885" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status endtime="20190118 18:21:41.886" starttime="20190118 18:21:41.879" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:41.895" starttime="20190118 18:21:41.889" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:42.103" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 42 3E FC</msg>
<status endtime="20190118 18:21:42.105" starttime="20190118 18:21:41.898" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:42.113" starttime="20190118 18:21:42.108" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:42.124" starttime="20190118 18:21:42.116" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:42.132" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '42', '3E', 'FC']</msg>
<status endtime="20190118 18:21:42.133" starttime="20190118 18:21:42.127" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:42.142" level="INFO">${value} = 00</msg>
<status endtime="20190118 18:21:42.142" starttime="20190118 18:21:42.136" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:42.146" starttime="20190118 18:21:41.870" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:42.148" starttime="20190118 18:21:41.590" status="PASS"></status>
</kw>
<kw name="digit_out_led2_high">
<doc>Set the digital output led 2 high and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 high and test it</arg>
</arguments>
<status endtime="20190118 18:21:42.161" starttime="20190118 18:21:42.157" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:42.182" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 01</msg>
<status endtime="20190118 18:21:42.183" starttime="20190118 18:21:42.176" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:42.191" starttime="20190118 18:21:42.186" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:42.395" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 43 3D F0</msg>
<status endtime="20190118 18:21:42.397" starttime="20190118 18:21:42.194" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:42.405" starttime="20190118 18:21:42.400" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:42.415" starttime="20190118 18:21:42.408" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:42.418" starttime="20190118 18:21:42.165" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:42.435" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status endtime="20190118 18:21:42.436" starttime="20190118 18:21:42.430" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:42.445" starttime="20190118 18:21:42.439" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:42.647" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 01 01 44 3D FB</msg>
<status endtime="20190118 18:21:42.649" starttime="20190118 18:21:42.448" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:42.657" starttime="20190118 18:21:42.652" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:42.668" starttime="20190118 18:21:42.660" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:42.676" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '01', '01', '44', '3D', 'FB']</msg>
<status endtime="20190118 18:21:42.677" starttime="20190118 18:21:42.671" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:42.685" level="INFO">${value} = 01</msg>
<status endtime="20190118 18:21:42.686" starttime="20190118 18:21:42.680" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:42.690" level="INFO">${res} = 01</msg>
<status endtime="20190118 18:21:42.691" starttime="20190118 18:21:42.420" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190118 18:21:42.698" starttime="20190118 18:21:42.693" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:42.701" starttime="20190118 18:21:42.150" status="PASS"></status>
</kw>
<kw name="digit_out_led2_low">
<doc>Set the digital output led 2 low and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 low and test it</arg>
</arguments>
<status endtime="20190118 18:21:42.714" starttime="20190118 18:21:42.709" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:42.733" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 00</msg>
<status endtime="20190118 18:21:42.733" starttime="20190118 18:21:42.726" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:42.742" starttime="20190118 18:21:42.736" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:42.949" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 45 3D F6</msg>
<status endtime="20190118 18:21:42.950" starttime="20190118 18:21:42.745" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:42.960" starttime="20190118 18:21:42.955" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:42.971" starttime="20190118 18:21:42.963" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:42.973" starttime="20190118 18:21:42.716" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:42.992" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status endtime="20190118 18:21:42.993" starttime="20190118 18:21:42.985" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:43.002" starttime="20190118 18:21:42.996" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:43.204" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 00 01 46 3D F8</msg>
<status endtime="20190118 18:21:43.205" starttime="20190118 18:21:43.005" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:43.214" starttime="20190118 18:21:43.208" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:43.224" starttime="20190118 18:21:43.217" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:43.232" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '00', '01', '46', '3D', 'F8']</msg>
<status endtime="20190118 18:21:43.233" starttime="20190118 18:21:43.227" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:43.242" level="INFO">${value} = 00</msg>
<status endtime="20190118 18:21:43.243" starttime="20190118 18:21:43.236" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:43.246" level="INFO">${res} = 00</msg>
<status endtime="20190118 18:21:43.247" starttime="20190118 18:21:42.975" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status endtime="20190118 18:21:43.255" starttime="20190118 18:21:43.250" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:43.257" starttime="20190118 18:21:42.703" status="PASS"></status>
</kw>
<kw name="digit_out_crm_freq">
<doc>Toggle the digital output CRM with the supported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output CRM with the supported frequency</arg>
</arguments>
<status endtime="20190118 18:21:43.271" starttime="20190118 18:21:43.266" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:43.289" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 01</msg>
<status endtime="20190118 18:21:43.290" starttime="20190118 18:21:43.282" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:43.299" starttime="20190118 18:21:43.293" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:43.503" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 06 01 47 3D F3</msg>
<status endtime="20190118 18:21:43.504" starttime="20190118 18:21:43.302" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:43.515" starttime="20190118 18:21:43.507" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:43.530" starttime="20190118 18:21:43.521" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:43.532" starttime="20190118 18:21:43.273" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190118 18:21:43.540" starttime="20190118 18:21:43.535" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:43.561" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status endtime="20190118 18:21:43.562" starttime="20190118 18:21:43.555" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:43.573" starttime="20190118 18:21:43.564" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:43.778" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 46 3E FB</msg>
<status endtime="20190118 18:21:43.779" starttime="20190118 18:21:43.576" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:43.789" starttime="20190118 18:21:43.783" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:43.800" starttime="20190118 18:21:43.792" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:43.807" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '46', '3E', 'FB']</msg>
<status endtime="20190118 18:21:43.808" starttime="20190118 18:21:43.803" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:43.822" level="INFO">${value} = 00</msg>
<status endtime="20190118 18:21:43.822" starttime="20190118 18:21:43.812" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:43.829" starttime="20190118 18:21:43.542" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:43.831" starttime="20190118 18:21:43.259" status="PASS"></status>
</kw>
<kw name="digit_out_crm_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status endtime="20190118 18:21:43.852" starttime="20190118 18:21:43.842" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:43.886" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 0B</msg>
<status endtime="20190118 18:21:43.896" starttime="20190118 18:21:43.873" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:43.905" starttime="20190118 18:21:43.899" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:44.132" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 06 01 47 3C F3</msg>
<status endtime="20190118 18:21:44.133" starttime="20190118 18:21:43.912" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:44.142" starttime="20190118 18:21:44.136" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:44.152" starttime="20190118 18:21:44.145" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:44.155" starttime="20190118 18:21:43.854" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status endtime="20190118 18:21:44.162" starttime="20190118 18:21:44.157" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:44.180" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status endtime="20190118 18:21:44.182" starttime="20190118 18:21:44.174" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:44.191" starttime="20190118 18:21:44.185" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:44.398" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 40 3E FD</msg>
<status endtime="20190118 18:21:44.399" starttime="20190118 18:21:44.194" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:44.407" starttime="20190118 18:21:44.402" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:44.419" starttime="20190118 18:21:44.410" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:44.427" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '40', '3E', 'FD']</msg>
<status endtime="20190118 18:21:44.428" starttime="20190118 18:21:44.422" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:44.436" level="INFO">${value} = 00</msg>
<status endtime="20190118 18:21:44.437" starttime="20190118 18:21:44.431" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:44.441" starttime="20190118 18:21:44.164" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:44.443" starttime="20190118 18:21:43.835" status="PASS"></status>
</kw>
<kw name="digit_out_crm_high">
<doc>Set the digital output crm high and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm high and test it</arg>
</arguments>
<status endtime="20190118 18:21:44.456" starttime="20190118 18:21:44.451" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:44.475" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 01</msg>
<status endtime="20190118 18:21:44.476" starttime="20190118 18:21:44.468" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:44.484" starttime="20190118 18:21:44.478" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:44.687" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 41 3D F1</msg>
<status endtime="20190118 18:21:44.689" starttime="20190118 18:21:44.488" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:44.698" starttime="20190118 18:21:44.692" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:44.709" starttime="20190118 18:21:44.701" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:44.711" starttime="20190118 18:21:44.458" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:44.732" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status endtime="20190118 18:21:44.733" starttime="20190118 18:21:44.726" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:44.741" starttime="20190118 18:21:44.736" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:44.948" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 01 01 42 3D FE</msg>
<status endtime="20190118 18:21:44.949" starttime="20190118 18:21:44.744" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:44.957" starttime="20190118 18:21:44.952" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:44.968" starttime="20190118 18:21:44.960" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:44.977" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '01', '01', '42', '3D', 'FE']</msg>
<status endtime="20190118 18:21:44.977" starttime="20190118 18:21:44.972" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:44.986" level="INFO">${value} = 01</msg>
<status endtime="20190118 18:21:44.987" starttime="20190118 18:21:44.980" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:44.990" level="INFO">${res} = 01</msg>
<status endtime="20190118 18:21:44.991" starttime="20190118 18:21:44.713" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190118 18:21:44.999" starttime="20190118 18:21:44.994" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:45.002" starttime="20190118 18:21:44.445" status="PASS"></status>
</kw>
<kw name="digit_out_crm_low">
<doc>Set the digital output crm low and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm low and test it</arg>
</arguments>
<status endtime="20190118 18:21:45.015" starttime="20190118 18:21:45.010" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:45.035" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 00</msg>
<status endtime="20190118 18:21:45.036" starttime="20190118 18:21:45.028" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:45.045" starttime="20190118 18:21:45.039" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:45.251" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 43 3D F3</msg>
<status endtime="20190118 18:21:45.252" starttime="20190118 18:21:45.049" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:45.260" starttime="20190118 18:21:45.255" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:45.271" starttime="20190118 18:21:45.263" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:45.273" starttime="20190118 18:21:45.017" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:45.291" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status endtime="20190118 18:21:45.292" starttime="20190118 18:21:45.285" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:45.300" starttime="20190118 18:21:45.295" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:45.503" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 00 01 44 3D F9</msg>
<status endtime="20190118 18:21:45.504" starttime="20190118 18:21:45.303" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:45.513" starttime="20190118 18:21:45.507" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:45.525" starttime="20190118 18:21:45.515" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:45.533" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '00', '01', '44', '3D', 'F9']</msg>
<status endtime="20190118 18:21:45.534" starttime="20190118 18:21:45.528" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:45.542" level="INFO">${value} = 00</msg>
<status endtime="20190118 18:21:45.543" starttime="20190118 18:21:45.536" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:45.547" level="INFO">${res} = 00</msg>
<status endtime="20190118 18:21:45.547" starttime="20190118 18:21:45.275" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status endtime="20190118 18:21:45.555" starttime="20190118 18:21:45.550" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:45.557" starttime="20190118 18:21:45.004" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:45.616" starttime="20190118 18:21:45.567" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:45.678" starttime="20190118 18:21:45.619" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:45.728" starttime="20190118 18:21:45.682" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:21:47.736" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:21:47.738" starttime="20190118 18:21:45.731" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190118 18:21:47.788" starttime="20190118 18:21:47.741" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:21:47.837" starttime="20190118 18:21:47.792" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:47.839" starttime="20190118 18:21:45.561" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-48413 toggle Digital Output Leds</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status endtime="20190118 18:21:47.841" critical="yes" starttime="20190118 18:21:34.144" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:21:49.323" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:21:49.347" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:21:49.358" starttime="20190118 18:21:47.891" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:49.359" starttime="20190118 18:21:47.856" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:49.361" starttime="20190118 18:21:47.851" status="PASS"></status>
</kw>
<doc>Chorus GPIO LED1, LED2, CRM test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:21:49.362" starttime="20190118 18:21:31.753" status="PASS"></status>
</suite>
<suite name="SKTB-49038" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49038.robot" id="s1-s11">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:21:49.699" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:21:49.702" starttime="20190118 18:21:49.695" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:21:49.711" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:21:49.713" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:21:51.499" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:21:51.501" starttime="20190118 18:21:49.705" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:51.503" starttime="20190118 18:21:49.689" status="PASS"></status>
</kw>
<test name="SKTB-GPIO FBUS test" id="s1-s11-t1">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:51.573" starttime="20190118 18:21:51.524" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:51.623" starttime="20190118 18:21:51.576" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:51.673" starttime="20190118 18:21:51.626" status="PASS"></status>
</kw>
<kw name="Bidir Wake Up" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:21:52.221" starttime="20190118 18:21:51.677" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:21:54.228" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:21:54.230" starttime="20190118 18:21:52.224" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:21:54.286" starttime="20190118 18:21:54.233" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:21:54.338" starttime="20190118 18:21:54.290" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:21:54.388" starttime="20190118 18:21:54.341" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190118 18:21:54.439" starttime="20190118 18:21:54.391" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190118 18:21:54.490" starttime="20190118 18:21:54.442" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:21:54.542" starttime="20190118 18:21:54.494" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:21:56.550" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:21:56.552" starttime="20190118 18:21:54.546" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:56.555" starttime="20190118 18:21:51.515" status="PASS"></status>
</kw>
<kw name="digit_input_1">
<doc>Get digital input 1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 1</arg>
</arguments>
<status endtime="20190118 18:21:56.568" starttime="20190118 18:21:56.564" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_1_BUTTON_1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:56.586" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0A</msg>
<status endtime="20190118 18:21:56.587" starttime="20190118 18:21:56.580" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:56.595" starttime="20190118 18:21:56.590" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:56.800" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0A 00 01 01 43 3D F3</msg>
<status endtime="20190118 18:21:56.801" starttime="20190118 18:21:56.599" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:56.809" starttime="20190118 18:21:56.804" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:56.821" starttime="20190118 18:21:56.812" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:56.829" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0A', '00', '01', '01', '43', '3D', 'F3']</msg>
<status endtime="20190118 18:21:56.829" starttime="20190118 18:21:56.823" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:56.838" level="INFO">${value} = 01</msg>
<status endtime="20190118 18:21:56.839" starttime="20190118 18:21:56.832" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:56.842" level="INFO">${res} = 01</msg>
<status endtime="20190118 18:21:56.843" starttime="20190118 18:21:56.570" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190118 18:21:56.851" starttime="20190118 18:21:56.846" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:56.853" starttime="20190118 18:21:56.558" status="PASS"></status>
</kw>
<kw name="digit_input_2">
<doc>Get digital input 2</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 2</arg>
</arguments>
<status endtime="20190118 18:21:56.866" starttime="20190118 18:21:56.861" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_2_BUTTON_2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:56.884" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0B</msg>
<status endtime="20190118 18:21:56.885" starttime="20190118 18:21:56.878" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:56.897" starttime="20190118 18:21:56.888" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:57.102" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0B 00 01 01 44 3D F5</msg>
<status endtime="20190118 18:21:57.103" starttime="20190118 18:21:56.900" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:57.111" starttime="20190118 18:21:57.105" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:57.122" starttime="20190118 18:21:57.114" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:57.129" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0B', '00', '01', '01', '44', '3D', 'F5']</msg>
<status endtime="20190118 18:21:57.130" starttime="20190118 18:21:57.125" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:57.139" level="INFO">${value} = 01</msg>
<status endtime="20190118 18:21:57.140" starttime="20190118 18:21:57.133" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:57.143" level="INFO">${res} = 01</msg>
<status endtime="20190118 18:21:57.144" starttime="20190118 18:21:56.868" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190118 18:21:57.152" starttime="20190118 18:21:57.147" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:57.154" starttime="20190118 18:21:56.855" status="PASS"></status>
</kw>
<kw name="digit_input_3">
<doc>Get digital input 3</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 3</arg>
</arguments>
<status endtime="20190118 18:21:57.168" starttime="20190118 18:21:57.164" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_3_AIRB_PWM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:57.186" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0C</msg>
<status endtime="20190118 18:21:57.187" starttime="20190118 18:21:57.180" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:57.195" starttime="20190118 18:21:57.190" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:57.399" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0C 00 01 01 45 3D F3</msg>
<status endtime="20190118 18:21:57.400" starttime="20190118 18:21:57.198" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:57.409" starttime="20190118 18:21:57.404" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:57.420" starttime="20190118 18:21:57.412" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:57.428" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0C', '00', '01', '01', '45', '3D', 'F3']</msg>
<status endtime="20190118 18:21:57.429" starttime="20190118 18:21:57.423" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:57.437" level="INFO">${value} = 01</msg>
<status endtime="20190118 18:21:57.438" starttime="20190118 18:21:57.432" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:57.442" level="INFO">${res} = 01</msg>
<status endtime="20190118 18:21:57.443" starttime="20190118 18:21:57.171" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status endtime="20190118 18:21:57.450" starttime="20190118 18:21:57.445" status="PASS"></status>
</kw>
<status endtime="20190118 18:21:57.453" starttime="20190118 18:21:57.156" status="PASS"></status>
</kw>
<kw name="digit_input_bid">
<doc>Get digital input BIDR WUL</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input BIDR WUL</arg>
</arguments>
<status endtime="20190118 18:21:57.466" starttime="20190118 18:21:57.461" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${BIDIR_WUL_IN}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:21:57.483" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0E</msg>
<status endtime="20190118 18:21:57.484" starttime="20190118 18:21:57.478" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:21:57.493" starttime="20190118 18:21:57.487" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:21:57.696" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0E 00 01 01 40 3D F4</msg>
<status endtime="20190118 18:21:57.698" starttime="20190118 18:21:57.496" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status endtime="20190118 18:21:57.706" starttime="20190118 18:21:57.701" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:21:57.717" starttime="20190118 18:21:57.709" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:21:57.725" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0E', '00', '01', '01', '40', '3D', 'F4']</msg>
<status endtime="20190118 18:21:57.726" starttime="20190118 18:21:57.720" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:21:57.738" level="INFO">${value} = 01</msg>
<status endtime="20190118 18:21:57.739" starttime="20190118 18:21:57.729" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:21:57.742" level="INFO">${res} = 01</msg>
<status endtime="20190118 18:21:57.743" starttime="20190118 18:21:57.468" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<msg timestamp="20190118 18:21:57.752" level="FAIL">'01' does not contain '00'</msg>
<status endtime="20190118 18:21:57.754" starttime="20190118 18:21:57.746" status="FAIL"></status>
</kw>
<status endtime="20190118 18:21:57.757" starttime="20190118 18:21:57.455" status="FAIL"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:57.835" starttime="20190118 18:21:57.768" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:57.895" starttime="20190118 18:21:57.841" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:21:57.945" starttime="20190118 18:21:57.898" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:21:59.953" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:21:59.956" starttime="20190118 18:21:57.949" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190118 18:22:00.006" starttime="20190118 18:21:59.958" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:22:00.059" starttime="20190118 18:22:00.009" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:00.062" starttime="20190118 18:21:57.761" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-49038</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status endtime="20190118 18:22:00.063" critical="yes" starttime="20190118 18:21:51.505" status="FAIL">'01' does not contain '00'</status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:22:01.522" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:22:01.574" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:22:01.575" starttime="20190118 18:22:00.113" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:01.577" starttime="20190118 18:22:00.079" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:01.579" starttime="20190118 18:22:00.073" status="PASS"></status>
</kw>
<doc>Chorus GPIO input 1,2,3 BID_wul test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:22:01.580" starttime="20190118 18:21:49.444" status="FAIL"></status>
</suite>
<suite name="SKTB-49357" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49357.robot" id="s1-s12">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:22:01.809" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:22:01.811" starttime="20190118 18:22:01.804" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:22:01.819" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:22:01.821" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:22:03.567" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:22:03.569" starttime="20190118 18:22:01.814" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:03.571" starttime="20190118 18:22:01.799" status="PASS"></status>
</kw>
<test name="SKTB-49357 Gpio pwm test" id="s1-s12-t1">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:03.638" starttime="20190118 18:22:03.590" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:03.690" starttime="20190118 18:22:03.642" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:03.742" starttime="20190118 18:22:03.694" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:22:05.750" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:22:05.752" starttime="20190118 18:22:03.745" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:05.802" starttime="20190118 18:22:05.755" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:05.853" starttime="20190118 18:22:05.805" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:22:05.901" starttime="20190118 18:22:05.856" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190118 18:22:05.952" starttime="20190118 18:22:05.904" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190118 18:22:06.002" starttime="20190118 18:22:05.955" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:22:06.053" starttime="20190118 18:22:06.006" status="PASS"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status endtime="20190118 18:22:06.113" starttime="20190118 18:22:06.057" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:22:07.120" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:22:07.123" starttime="20190118 18:22:06.116" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:07.125" starttime="20190118 18:22:03.584" status="PASS"></status>
</kw>
<kw name="digit_out_hs_1">
<doc>Set pwm for the digital output hs 1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 1</arg>
</arguments>
<status endtime="20190118 18:22:07.139" starttime="20190118 18:22:07.134" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_1}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:07.153" starttime="20190118 18:22:07.149" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:07.174" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 20</msg>
<status endtime="20190118 18:22:07.174" starttime="20190118 18:22:07.166" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:07.184" starttime="20190118 18:22:07.177" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:07.387" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 43 3D F7</msg>
<status endtime="20190118 18:22:07.388" starttime="20190118 18:22:07.187" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:07.399" starttime="20190118 18:22:07.391" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:07.408" starttime="20190118 18:22:07.403" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:07.417" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '43', '3D', 'F7']</msg>
<status endtime="20190118 18:22:07.417" starttime="20190118 18:22:07.411" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:07.426" level="INFO">${gpio_id} = 00</msg>
<status endtime="20190118 18:22:07.427" starttime="20190118 18:22:07.420" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:07.435" starttime="20190118 18:22:07.429" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:07.443" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:07.444" starttime="20190118 18:22:07.438" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:07.448" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:07.449" starttime="20190118 18:22:07.155" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:07.457" starttime="20190118 18:22:07.452" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:07.464" starttime="20190118 18:22:07.460" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:07.484" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0064 64</msg>
<status endtime="20190118 18:22:07.485" starttime="20190118 18:22:07.477" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:07.493" starttime="20190118 18:22:07.488" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:07.696" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 44 3D F0</msg>
<status endtime="20190118 18:22:07.698" starttime="20190118 18:22:07.496" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:07.706" starttime="20190118 18:22:07.700" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:07.714" starttime="20190118 18:22:07.709" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:07.722" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '44', '3D', 'F0']</msg>
<status endtime="20190118 18:22:07.723" starttime="20190118 18:22:07.718" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:07.732" level="INFO">${gpio_id} = 00</msg>
<status endtime="20190118 18:22:07.733" starttime="20190118 18:22:07.726" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:07.741" starttime="20190118 18:22:07.735" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:07.750" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:07.750" starttime="20190118 18:22:07.744" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:07.754" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:07.755" starttime="20190118 18:22:07.467" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:07.763" starttime="20190118 18:22:07.758" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:07.771" starttime="20190118 18:22:07.766" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:07.793" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0001 01</msg>
<status endtime="20190118 18:22:07.794" starttime="20190118 18:22:07.784" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:07.802" starttime="20190118 18:22:07.796" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:08.005" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 45 3D F1</msg>
<status endtime="20190118 18:22:08.006" starttime="20190118 18:22:07.805" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:08.015" starttime="20190118 18:22:08.010" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.024" starttime="20190118 18:22:08.018" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:08.032" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '45', '3D', 'F1']</msg>
<status endtime="20190118 18:22:08.033" starttime="20190118 18:22:08.027" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:08.044" level="INFO">${gpio_id} = 00</msg>
<status endtime="20190118 18:22:08.045" starttime="20190118 18:22:08.036" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.053" starttime="20190118 18:22:08.048" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:08.062" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:08.063" starttime="20190118 18:22:08.056" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:08.066" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:08.067" starttime="20190118 18:22:07.773" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.075" starttime="20190118 18:22:08.070" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:08.083" starttime="20190118 18:22:08.078" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:08.103" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0065 65</msg>
<status endtime="20190118 18:22:08.104" starttime="20190118 18:22:08.096" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:08.113" starttime="20190118 18:22:08.107" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:08.314" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 46 3C F2</msg>
<status endtime="20190118 18:22:08.315" starttime="20190118 18:22:08.115" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:08.324" starttime="20190118 18:22:08.319" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.333" starttime="20190118 18:22:08.327" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:08.341" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '46', '3C', 'F2']</msg>
<status endtime="20190118 18:22:08.342" starttime="20190118 18:22:08.336" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:08.350" level="INFO">${gpio_id} = 00</msg>
<status endtime="20190118 18:22:08.351" starttime="20190118 18:22:08.344" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.359" starttime="20190118 18:22:08.354" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:08.368" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:08.369" starttime="20190118 18:22:08.362" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:08.372" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:08.373" starttime="20190118 18:22:08.085" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.381" starttime="20190118 18:22:08.376" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:08.390" starttime="20190118 18:22:08.384" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:08.410" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 65</msg>
<status endtime="20190118 18:22:08.411" starttime="20190118 18:22:08.403" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:08.420" starttime="20190118 18:22:08.414" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:08.623" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 47 3C F3</msg>
<status endtime="20190118 18:22:08.625" starttime="20190118 18:22:08.423" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:08.633" starttime="20190118 18:22:08.628" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.642" starttime="20190118 18:22:08.636" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:08.650" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '47', '3C', 'F3']</msg>
<status endtime="20190118 18:22:08.651" starttime="20190118 18:22:08.645" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:08.659" level="INFO">${gpio_id} = 00</msg>
<status endtime="20190118 18:22:08.660" starttime="20190118 18:22:08.654" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.669" starttime="20190118 18:22:08.663" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:08.677" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:08.678" starttime="20190118 18:22:08.672" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:08.682" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:08.683" starttime="20190118 18:22:08.392" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.691" starttime="20190118 18:22:08.685" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:08.699" starttime="20190118 18:22:08.694" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:08.723" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0065 20</msg>
<status endtime="20190118 18:22:08.724" starttime="20190118 18:22:08.715" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:08.732" starttime="20190118 18:22:08.727" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:08.935" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 40 3C F4</msg>
<status endtime="20190118 18:22:08.936" starttime="20190118 18:22:08.735" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:08.945" starttime="20190118 18:22:08.939" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.954" starttime="20190118 18:22:08.948" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:08.961" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '40', '3C', 'F4']</msg>
<status endtime="20190118 18:22:08.962" starttime="20190118 18:22:08.957" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:08.971" level="INFO">${gpio_id} = 00</msg>
<status endtime="20190118 18:22:08.972" starttime="20190118 18:22:08.965" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:08.992" starttime="20190118 18:22:08.974" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:09.028" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:09.029" starttime="20190118 18:22:08.995" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:09.032" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:09.042" starttime="20190118 18:22:08.701" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:09.051" starttime="20190118 18:22:09.045" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:09.065" starttime="20190118 18:22:09.060" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:09.088" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 00</msg>
<status endtime="20190118 18:22:09.089" starttime="20190118 18:22:09.078" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:09.097" starttime="20190118 18:22:09.092" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:09.303" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 43 3C F7</msg>
<status endtime="20190118 18:22:09.303" starttime="20190118 18:22:09.100" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:09.313" starttime="20190118 18:22:09.307" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:09.322" starttime="20190118 18:22:09.315" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:09.330" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '43', '3C', 'F7']</msg>
<status endtime="20190118 18:22:09.330" starttime="20190118 18:22:09.325" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:09.339" level="INFO">${gpio_id} = 00</msg>
<status endtime="20190118 18:22:09.340" starttime="20190118 18:22:09.333" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:09.348" starttime="20190118 18:22:09.343" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:09.357" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:09.358" starttime="20190118 18:22:09.351" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:09.361" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:09.362" starttime="20190118 18:22:09.067" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:09.370" starttime="20190118 18:22:09.365" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:09.378" starttime="20190118 18:22:09.373" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:09.399" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0000 20</msg>
<status endtime="20190118 18:22:09.399" starttime="20190118 18:22:09.391" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:09.408" starttime="20190118 18:22:09.402" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:09.613" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 44 3C F0</msg>
<status endtime="20190118 18:22:09.614" starttime="20190118 18:22:09.411" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:09.623" starttime="20190118 18:22:09.617" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:09.632" starttime="20190118 18:22:09.626" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:09.639" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '44', '3C', 'F0']</msg>
<status endtime="20190118 18:22:09.640" starttime="20190118 18:22:09.635" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:09.649" level="INFO">${gpio_id} = 00</msg>
<status endtime="20190118 18:22:09.650" starttime="20190118 18:22:09.643" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:09.659" starttime="20190118 18:22:09.652" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:09.668" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:09.668" starttime="20190118 18:22:09.662" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:09.672" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:09.673" starttime="20190118 18:22:09.381" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:09.681" starttime="20190118 18:22:09.676" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:09.691" starttime="20190118 18:22:09.684" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:09.713" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0000 00</msg>
<status endtime="20190118 18:22:09.714" starttime="20190118 18:22:09.706" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:09.723" starttime="20190118 18:22:09.717" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:09.926" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 45 3C F1</msg>
<status endtime="20190118 18:22:09.927" starttime="20190118 18:22:09.725" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:09.936" starttime="20190118 18:22:09.930" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:09.945" starttime="20190118 18:22:09.939" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:09.953" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '45', '3C', 'F1']</msg>
<status endtime="20190118 18:22:09.954" starttime="20190118 18:22:09.948" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:09.962" level="INFO">${gpio_id} = 00</msg>
<status endtime="20190118 18:22:09.963" starttime="20190118 18:22:09.956" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:09.971" starttime="20190118 18:22:09.966" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:09.980" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:09.981" starttime="20190118 18:22:09.974" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:09.984" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:09.985" starttime="20190118 18:22:09.693" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:09.994" starttime="20190118 18:22:09.988" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:09.996" starttime="20190118 18:22:07.141" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:09.999" starttime="20190118 18:22:07.128" status="PASS"></status>
</kw>
<kw name="digit_out_hs_2">
<doc>Set pwm for the digital output hs 2</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 2</arg>
</arguments>
<status endtime="20190118 18:22:10.013" starttime="20190118 18:22:10.008" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_2}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:10.028" starttime="20190118 18:22:10.023" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:10.048" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 20</msg>
<status endtime="20190118 18:22:10.049" starttime="20190118 18:22:10.040" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:10.057" starttime="20190118 18:22:10.052" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:10.259" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 40 3D F5</msg>
<status endtime="20190118 18:22:10.260" starttime="20190118 18:22:10.060" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:10.269" starttime="20190118 18:22:10.263" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:10.281" starttime="20190118 18:22:10.271" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:10.289" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '40', '3D', 'F5']</msg>
<status endtime="20190118 18:22:10.290" starttime="20190118 18:22:10.285" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:10.299" level="INFO">${gpio_id} = 01</msg>
<status endtime="20190118 18:22:10.300" starttime="20190118 18:22:10.293" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:10.308" starttime="20190118 18:22:10.302" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:10.317" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:10.318" starttime="20190118 18:22:10.311" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:10.321" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:10.322" starttime="20190118 18:22:10.030" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:10.331" starttime="20190118 18:22:10.325" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:10.339" starttime="20190118 18:22:10.334" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:10.382" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0064 64</msg>
<status endtime="20190118 18:22:10.383" starttime="20190118 18:22:10.352" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:10.402" starttime="20190118 18:22:10.394" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:10.630" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 41 3D F4</msg>
<status endtime="20190118 18:22:10.631" starttime="20190118 18:22:10.405" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:10.640" starttime="20190118 18:22:10.634" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:10.648" starttime="20190118 18:22:10.643" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:10.656" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '41', '3D', 'F4']</msg>
<status endtime="20190118 18:22:10.657" starttime="20190118 18:22:10.651" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:10.665" level="INFO">${gpio_id} = 01</msg>
<status endtime="20190118 18:22:10.666" starttime="20190118 18:22:10.660" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:10.676" starttime="20190118 18:22:10.669" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:10.684" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:10.685" starttime="20190118 18:22:10.679" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:10.689" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:10.690" starttime="20190118 18:22:10.341" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:10.698" starttime="20190118 18:22:10.692" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:10.706" starttime="20190118 18:22:10.701" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:10.726" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0001 01</msg>
<status endtime="20190118 18:22:10.727" starttime="20190118 18:22:10.719" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:10.735" starttime="20190118 18:22:10.730" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:10.946" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 42 3D F7</msg>
<status endtime="20190118 18:22:10.949" starttime="20190118 18:22:10.738" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:10.957" starttime="20190118 18:22:10.952" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:10.966" starttime="20190118 18:22:10.960" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:10.974" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '42', '3D', 'F7']</msg>
<status endtime="20190118 18:22:10.975" starttime="20190118 18:22:10.969" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:10.983" level="INFO">${gpio_id} = 01</msg>
<status endtime="20190118 18:22:10.984" starttime="20190118 18:22:10.977" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:10.992" starttime="20190118 18:22:10.987" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:11.016" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:11.017" starttime="20190118 18:22:10.995" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:11.021" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:11.022" starttime="20190118 18:22:10.708" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:11.030" starttime="20190118 18:22:11.024" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:11.038" starttime="20190118 18:22:11.033" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:11.058" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0065 65</msg>
<status endtime="20190118 18:22:11.059" starttime="20190118 18:22:11.051" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:11.068" starttime="20190118 18:22:11.062" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:11.302" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 43 3C F6</msg>
<status endtime="20190118 18:22:11.303" starttime="20190118 18:22:11.079" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:11.312" starttime="20190118 18:22:11.307" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:11.358" starttime="20190118 18:22:11.315" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:11.390" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '43', '3C', 'F6']</msg>
<status endtime="20190118 18:22:11.391" starttime="20190118 18:22:11.365" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:11.429" level="INFO">${gpio_id} = 01</msg>
<status endtime="20190118 18:22:11.430" starttime="20190118 18:22:11.398" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:11.455" starttime="20190118 18:22:11.450" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:11.476" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:11.477" starttime="20190118 18:22:11.471" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:11.481" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:11.494" starttime="20190118 18:22:11.040" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:11.502" starttime="20190118 18:22:11.497" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:11.526" starttime="20190118 18:22:11.517" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:11.569" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 65</msg>
<status endtime="20190118 18:22:11.570" starttime="20190118 18:22:11.553" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:11.602" starttime="20190118 18:22:11.588" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:11.819" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 44 3C F1</msg>
<status endtime="20190118 18:22:11.821" starttime="20190118 18:22:11.605" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:11.832" starttime="20190118 18:22:11.826" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:11.842" starttime="20190118 18:22:11.836" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:11.852" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '44', '3C', 'F1']</msg>
<status endtime="20190118 18:22:11.853" starttime="20190118 18:22:11.846" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:11.862" level="INFO">${gpio_id} = 01</msg>
<status endtime="20190118 18:22:11.862" starttime="20190118 18:22:11.855" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:11.871" starttime="20190118 18:22:11.865" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:11.879" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:11.880" starttime="20190118 18:22:11.874" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:11.884" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:11.885" starttime="20190118 18:22:11.529" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:11.893" starttime="20190118 18:22:11.888" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:11.901" starttime="20190118 18:22:11.896" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:11.925" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0065 20</msg>
<status endtime="20190118 18:22:11.926" starttime="20190118 18:22:11.918" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:11.935" starttime="20190118 18:22:11.929" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:12.144" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 45 3C F0</msg>
<status endtime="20190118 18:22:12.145" starttime="20190118 18:22:11.938" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:12.154" starttime="20190118 18:22:12.148" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:12.163" starttime="20190118 18:22:12.157" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:12.170" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '45', '3C', 'F0']</msg>
<status endtime="20190118 18:22:12.173" starttime="20190118 18:22:12.166" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:12.182" level="INFO">${gpio_id} = 01</msg>
<status endtime="20190118 18:22:12.183" starttime="20190118 18:22:12.176" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:12.191" starttime="20190118 18:22:12.185" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:12.199" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:12.200" starttime="20190118 18:22:12.194" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:12.204" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:12.205" starttime="20190118 18:22:11.903" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:12.213" starttime="20190118 18:22:12.207" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:12.220" starttime="20190118 18:22:12.216" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:12.242" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 00</msg>
<status endtime="20190118 18:22:12.243" starttime="20190118 18:22:12.235" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:12.251" starttime="20190118 18:22:12.246" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:12.546" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 46 3C F3</msg>
<status endtime="20190118 18:22:12.547" starttime="20190118 18:22:12.254" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:12.565" starttime="20190118 18:22:12.550" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:12.586" starttime="20190118 18:22:12.567" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:12.594" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '46', '3C', 'F3']</msg>
<status endtime="20190118 18:22:12.595" starttime="20190118 18:22:12.589" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:12.609" level="INFO">${gpio_id} = 01</msg>
<status endtime="20190118 18:22:12.610" starttime="20190118 18:22:12.603" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:12.628" starttime="20190118 18:22:12.622" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:12.642" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:12.642" starttime="20190118 18:22:12.636" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:12.646" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:12.647" starttime="20190118 18:22:12.223" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:12.655" starttime="20190118 18:22:12.650" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:12.663" starttime="20190118 18:22:12.658" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:12.683" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0000 20</msg>
<status endtime="20190118 18:22:12.684" starttime="20190118 18:22:12.676" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:12.692" starttime="20190118 18:22:12.687" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:12.900" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 47 3C F2</msg>
<status endtime="20190118 18:22:12.901" starttime="20190118 18:22:12.695" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:12.911" starttime="20190118 18:22:12.906" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:12.921" starttime="20190118 18:22:12.914" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:12.929" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '47', '3C', 'F2']</msg>
<status endtime="20190118 18:22:12.930" starttime="20190118 18:22:12.924" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:12.938" level="INFO">${gpio_id} = 01</msg>
<status endtime="20190118 18:22:12.939" starttime="20190118 18:22:12.933" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:12.948" starttime="20190118 18:22:12.942" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:12.956" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:12.957" starttime="20190118 18:22:12.951" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:12.961" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:12.961" starttime="20190118 18:22:12.665" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:12.970" starttime="20190118 18:22:12.964" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:12.978" starttime="20190118 18:22:12.974" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:12.999" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0000 00</msg>
<status endtime="20190118 18:22:12.999" starttime="20190118 18:22:12.991" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:13.008" starttime="20190118 18:22:13.002" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:13.211" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 46 3C F3</msg>
<status endtime="20190118 18:22:13.212" starttime="20190118 18:22:13.011" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:13.221" starttime="20190118 18:22:13.215" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:13.230" starttime="20190118 18:22:13.224" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:13.238" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '46', '3C', 'F3']</msg>
<status endtime="20190118 18:22:13.239" starttime="20190118 18:22:13.233" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:13.247" level="INFO">${gpio_id} = 01</msg>
<status endtime="20190118 18:22:13.248" starttime="20190118 18:22:13.242" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:13.257" starttime="20190118 18:22:13.251" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:13.267" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:13.268" starttime="20190118 18:22:13.259" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:13.271" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:13.272" starttime="20190118 18:22:12.980" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:13.281" starttime="20190118 18:22:13.275" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:13.283" starttime="20190118 18:22:10.015" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:13.285" starttime="20190118 18:22:10.001" status="PASS"></status>
</kw>
<kw name="digit_out_hs_3">
<doc>Set pwm for the digital output hs 3</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 3</arg>
</arguments>
<status endtime="20190118 18:22:13.298" starttime="20190118 18:22:13.293" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_3}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:13.313" starttime="20190118 18:22:13.308" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:13.333" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 20</msg>
<status endtime="20190118 18:22:13.334" starttime="20190118 18:22:13.325" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:13.342" starttime="20190118 18:22:13.337" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:13.549" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 47 3D F1</msg>
<status endtime="20190118 18:22:13.550" starttime="20190118 18:22:13.345" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:13.559" starttime="20190118 18:22:13.553" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:13.573" starttime="20190118 18:22:13.563" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:13.581" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '47', '3D', 'F1']</msg>
<status endtime="20190118 18:22:13.582" starttime="20190118 18:22:13.576" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:13.590" level="INFO">${gpio_id} = 02</msg>
<status endtime="20190118 18:22:13.591" starttime="20190118 18:22:13.585" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:13.600" starttime="20190118 18:22:13.595" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:13.609" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:13.610" starttime="20190118 18:22:13.603" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:13.614" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:13.614" starttime="20190118 18:22:13.315" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:13.623" starttime="20190118 18:22:13.617" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:13.630" starttime="20190118 18:22:13.626" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:13.651" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0064 64</msg>
<status endtime="20190118 18:22:13.651" starttime="20190118 18:22:13.643" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:13.661" starttime="20190118 18:22:13.654" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:13.861" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 40 3D F6</msg>
<status endtime="20190118 18:22:13.862" starttime="20190118 18:22:13.664" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:13.873" starttime="20190118 18:22:13.866" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:13.881" starttime="20190118 18:22:13.876" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:13.889" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '40', '3D', 'F6']</msg>
<status endtime="20190118 18:22:13.890" starttime="20190118 18:22:13.884" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:13.899" level="INFO">${gpio_id} = 02</msg>
<status endtime="20190118 18:22:13.900" starttime="20190118 18:22:13.893" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:13.908" starttime="20190118 18:22:13.902" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:13.917" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:13.917" starttime="20190118 18:22:13.911" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:13.921" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:13.922" starttime="20190118 18:22:13.633" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:13.931" starttime="20190118 18:22:13.925" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:13.939" starttime="20190118 18:22:13.934" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:13.959" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0001 01</msg>
<status endtime="20190118 18:22:13.960" starttime="20190118 18:22:13.952" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:13.968" starttime="20190118 18:22:13.963" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:14.171" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 41 3D F7</msg>
<status endtime="20190118 18:22:14.172" starttime="20190118 18:22:13.971" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:14.181" starttime="20190118 18:22:14.175" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:14.190" starttime="20190118 18:22:14.184" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:14.198" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '41', '3D', 'F7']</msg>
<status endtime="20190118 18:22:14.200" starttime="20190118 18:22:14.193" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:14.209" level="INFO">${gpio_id} = 02</msg>
<status endtime="20190118 18:22:14.210" starttime="20190118 18:22:14.203" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:14.219" starttime="20190118 18:22:14.213" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:14.228" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:14.229" starttime="20190118 18:22:14.222" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:14.233" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:14.234" starttime="20190118 18:22:13.941" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:14.247" starttime="20190118 18:22:14.237" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:14.255" starttime="20190118 18:22:14.250" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:14.281" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0065 65</msg>
<status endtime="20190118 18:22:14.283" starttime="20190118 18:22:14.272" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:14.292" starttime="20190118 18:22:14.286" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:14.497" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 42 3C F4</msg>
<status endtime="20190118 18:22:14.498" starttime="20190118 18:22:14.295" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:14.506" starttime="20190118 18:22:14.501" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:14.515" starttime="20190118 18:22:14.509" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:14.523" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '42', '3C', 'F4']</msg>
<status endtime="20190118 18:22:14.524" starttime="20190118 18:22:14.518" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:14.532" level="INFO">${gpio_id} = 02</msg>
<status endtime="20190118 18:22:14.533" starttime="20190118 18:22:14.526" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:14.542" starttime="20190118 18:22:14.536" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:14.550" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:14.551" starttime="20190118 18:22:14.545" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:14.555" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:14.555" starttime="20190118 18:22:14.258" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:14.564" starttime="20190118 18:22:14.558" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:14.571" starttime="20190118 18:22:14.567" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:14.592" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 65</msg>
<status endtime="20190118 18:22:14.593" starttime="20190118 18:22:14.585" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:14.601" starttime="20190118 18:22:14.596" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:14.806" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 43 3C F5</msg>
<status endtime="20190118 18:22:14.806" starttime="20190118 18:22:14.604" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:14.815" starttime="20190118 18:22:14.810" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:14.825" starttime="20190118 18:22:14.818" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:14.833" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '43', '3C', 'F5']</msg>
<status endtime="20190118 18:22:14.834" starttime="20190118 18:22:14.828" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:14.843" level="INFO">${gpio_id} = 02</msg>
<status endtime="20190118 18:22:14.843" starttime="20190118 18:22:14.837" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:14.852" starttime="20190118 18:22:14.846" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:14.860" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:14.861" starttime="20190118 18:22:14.855" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:14.865" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:14.866" starttime="20190118 18:22:14.574" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:14.876" starttime="20190118 18:22:14.869" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:14.885" starttime="20190118 18:22:14.881" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:14.909" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0065 20</msg>
<status endtime="20190118 18:22:14.910" starttime="20190118 18:22:14.898" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:14.919" starttime="20190118 18:22:14.913" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:15.127" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 44 3C F2</msg>
<status endtime="20190118 18:22:15.129" starttime="20190118 18:22:14.922" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:15.137" starttime="20190118 18:22:15.131" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:15.146" starttime="20190118 18:22:15.140" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:15.156" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '44', '3C', 'F2']</msg>
<status endtime="20190118 18:22:15.157" starttime="20190118 18:22:15.149" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:15.165" level="INFO">${gpio_id} = 02</msg>
<status endtime="20190118 18:22:15.166" starttime="20190118 18:22:15.160" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:15.174" starttime="20190118 18:22:15.169" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:15.183" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:15.184" starttime="20190118 18:22:15.177" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:15.188" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:15.189" starttime="20190118 18:22:14.888" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:15.197" starttime="20190118 18:22:15.191" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:15.205" starttime="20190118 18:22:15.200" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:15.225" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 00</msg>
<status endtime="20190118 18:22:15.226" starttime="20190118 18:22:15.217" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:15.234" starttime="20190118 18:22:15.228" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:15.438" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 45 3C F3</msg>
<status endtime="20190118 18:22:15.441" starttime="20190118 18:22:15.237" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:15.449" starttime="20190118 18:22:15.444" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:15.458" starttime="20190118 18:22:15.452" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:15.466" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '45', '3C', 'F3']</msg>
<status endtime="20190118 18:22:15.467" starttime="20190118 18:22:15.461" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:15.475" level="INFO">${gpio_id} = 02</msg>
<status endtime="20190118 18:22:15.476" starttime="20190118 18:22:15.470" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:15.485" starttime="20190118 18:22:15.479" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:15.493" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:15.494" starttime="20190118 18:22:15.488" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:15.498" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:15.498" starttime="20190118 18:22:15.207" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:15.507" starttime="20190118 18:22:15.501" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:15.515" starttime="20190118 18:22:15.510" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:15.535" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0000 20</msg>
<status endtime="20190118 18:22:15.536" starttime="20190118 18:22:15.527" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:15.544" starttime="20190118 18:22:15.538" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:15.746" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 46 3C F0</msg>
<status endtime="20190118 18:22:15.747" starttime="20190118 18:22:15.547" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:15.756" starttime="20190118 18:22:15.750" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:15.765" starttime="20190118 18:22:15.759" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:15.776" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '46', '3C', 'F0']</msg>
<status endtime="20190118 18:22:15.777" starttime="20190118 18:22:15.768" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:15.786" level="INFO">${gpio_id} = 02</msg>
<status endtime="20190118 18:22:15.786" starttime="20190118 18:22:15.780" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:15.795" starttime="20190118 18:22:15.789" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:15.803" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:15.804" starttime="20190118 18:22:15.798" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:15.808" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:15.809" starttime="20190118 18:22:15.517" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:15.817" starttime="20190118 18:22:15.811" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:15.825" starttime="20190118 18:22:15.820" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:15.846" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0000 00</msg>
<status endtime="20190118 18:22:15.847" starttime="20190118 18:22:15.838" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:15.863" starttime="20190118 18:22:15.856" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:16.066" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 47 3C F1</msg>
<status endtime="20190118 18:22:16.067" starttime="20190118 18:22:15.866" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:16.076" starttime="20190118 18:22:16.071" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:16.085" starttime="20190118 18:22:16.079" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:16.093" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '47', '3C', 'F1']</msg>
<status endtime="20190118 18:22:16.094" starttime="20190118 18:22:16.088" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:16.103" level="INFO">${gpio_id} = 02</msg>
<status endtime="20190118 18:22:16.103" starttime="20190118 18:22:16.097" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:16.112" starttime="20190118 18:22:16.106" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:16.120" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:16.121" starttime="20190118 18:22:16.115" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:16.125" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:16.126" starttime="20190118 18:22:15.827" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:16.134" starttime="20190118 18:22:16.128" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:16.136" starttime="20190118 18:22:13.300" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:16.138" starttime="20190118 18:22:13.287" status="PASS"></status>
</kw>
<kw name="digit_out_hs_4">
<doc>Set for the digital output hs 4</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set for the digital output hs 4</arg>
</arguments>
<status endtime="20190118 18:22:16.152" starttime="20190118 18:22:16.147" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_4}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:16.166" starttime="20190118 18:22:16.161" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:16.186" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 20</msg>
<status endtime="20190118 18:22:16.187" starttime="20190118 18:22:16.179" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:16.196" starttime="20190118 18:22:16.190" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:16.398" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 40 3D F7</msg>
<status endtime="20190118 18:22:16.399" starttime="20190118 18:22:16.199" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:16.408" starttime="20190118 18:22:16.403" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:16.417" starttime="20190118 18:22:16.411" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:16.424" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '40', '3D', 'F7']</msg>
<status endtime="20190118 18:22:16.425" starttime="20190118 18:22:16.419" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:16.434" level="INFO">${gpio_id} = 03</msg>
<status endtime="20190118 18:22:16.435" starttime="20190118 18:22:16.428" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:16.448" starttime="20190118 18:22:16.438" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:16.456" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:16.457" starttime="20190118 18:22:16.451" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:16.461" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:16.462" starttime="20190118 18:22:16.168" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:16.471" starttime="20190118 18:22:16.465" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:16.479" starttime="20190118 18:22:16.474" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:16.499" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0064 64</msg>
<status endtime="20190118 18:22:16.500" starttime="20190118 18:22:16.492" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:16.509" starttime="20190118 18:22:16.503" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:16.712" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 41 3D F6</msg>
<status endtime="20190118 18:22:16.713" starttime="20190118 18:22:16.512" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:16.722" starttime="20190118 18:22:16.716" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:16.730" starttime="20190118 18:22:16.725" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:16.738" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '41', '3D', 'F6']</msg>
<status endtime="20190118 18:22:16.739" starttime="20190118 18:22:16.733" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:16.748" level="INFO">${gpio_id} = 03</msg>
<status endtime="20190118 18:22:16.749" starttime="20190118 18:22:16.742" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:16.757" starttime="20190118 18:22:16.752" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:16.766" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:16.767" starttime="20190118 18:22:16.760" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:16.771" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:16.771" starttime="20190118 18:22:16.481" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:16.780" starttime="20190118 18:22:16.774" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:16.787" starttime="20190118 18:22:16.783" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:16.807" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0001 01</msg>
<status endtime="20190118 18:22:16.808" starttime="20190118 18:22:16.800" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:16.817" starttime="20190118 18:22:16.811" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:17.020" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 42 3D F5</msg>
<status endtime="20190118 18:22:17.021" starttime="20190118 18:22:16.820" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:17.029" starttime="20190118 18:22:17.024" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.038" starttime="20190118 18:22:17.032" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:17.046" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '42', '3D', 'F5']</msg>
<status endtime="20190118 18:22:17.047" starttime="20190118 18:22:17.041" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:17.056" level="INFO">${gpio_id} = 03</msg>
<status endtime="20190118 18:22:17.056" starttime="20190118 18:22:17.050" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.065" starttime="20190118 18:22:17.059" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:17.075" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:17.075" starttime="20190118 18:22:17.068" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:17.079" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:17.080" starttime="20190118 18:22:16.790" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.088" starttime="20190118 18:22:17.083" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:17.096" starttime="20190118 18:22:17.091" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:17.120" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0065 65</msg>
<status endtime="20190118 18:22:17.121" starttime="20190118 18:22:17.109" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:17.130" starttime="20190118 18:22:17.124" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:17.334" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 45 3C F2</msg>
<status endtime="20190118 18:22:17.335" starttime="20190118 18:22:17.133" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:17.344" starttime="20190118 18:22:17.338" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.353" starttime="20190118 18:22:17.347" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:17.361" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '45', '3C', 'F2']</msg>
<status endtime="20190118 18:22:17.362" starttime="20190118 18:22:17.356" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:17.370" level="INFO">${gpio_id} = 03</msg>
<status endtime="20190118 18:22:17.371" starttime="20190118 18:22:17.365" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.379" starttime="20190118 18:22:17.374" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:17.388" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:17.389" starttime="20190118 18:22:17.383" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:17.393" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:17.394" starttime="20190118 18:22:17.098" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.403" starttime="20190118 18:22:17.397" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:17.410" starttime="20190118 18:22:17.406" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:17.430" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 65</msg>
<status endtime="20190118 18:22:17.431" starttime="20190118 18:22:17.423" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:17.440" starttime="20190118 18:22:17.434" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:17.642" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 46 3C F1</msg>
<status endtime="20190118 18:22:17.643" starttime="20190118 18:22:17.443" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:17.652" starttime="20190118 18:22:17.646" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.661" starttime="20190118 18:22:17.655" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:17.669" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '46', '3C', 'F1']</msg>
<status endtime="20190118 18:22:17.669" starttime="20190118 18:22:17.664" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:17.678" level="INFO">${gpio_id} = 03</msg>
<status endtime="20190118 18:22:17.679" starttime="20190118 18:22:17.672" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.688" starttime="20190118 18:22:17.683" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:17.697" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:17.698" starttime="20190118 18:22:17.691" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:17.701" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:17.702" starttime="20190118 18:22:17.412" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.710" starttime="20190118 18:22:17.705" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:17.718" starttime="20190118 18:22:17.713" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:17.738" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0065 20</msg>
<status endtime="20190118 18:22:17.739" starttime="20190118 18:22:17.731" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:17.748" starttime="20190118 18:22:17.742" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:17.950" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 47 3C F0</msg>
<status endtime="20190118 18:22:17.951" starttime="20190118 18:22:17.751" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:17.960" starttime="20190118 18:22:17.954" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.972" starttime="20190118 18:22:17.963" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:17.980" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '47', '3C', 'F0']</msg>
<status endtime="20190118 18:22:17.981" starttime="20190118 18:22:17.975" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:17.990" level="INFO">${gpio_id} = 03</msg>
<status endtime="20190118 18:22:17.990" starttime="20190118 18:22:17.984" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:17.999" starttime="20190118 18:22:17.993" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:18.008" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:18.009" starttime="20190118 18:22:18.002" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:18.012" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:18.013" starttime="20190118 18:22:17.720" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:18.021" starttime="20190118 18:22:18.016" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:18.029" starttime="20190118 18:22:18.024" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:18.049" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 00</msg>
<status endtime="20190118 18:22:18.050" starttime="20190118 18:22:18.042" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:18.059" starttime="20190118 18:22:18.053" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:18.262" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 40 3C F7</msg>
<status endtime="20190118 18:22:18.263" starttime="20190118 18:22:18.062" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:18.272" starttime="20190118 18:22:18.266" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:18.280" starttime="20190118 18:22:18.275" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:18.288" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '40', '3C', 'F7']</msg>
<status endtime="20190118 18:22:18.290" starttime="20190118 18:22:18.283" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:18.299" level="INFO">${gpio_id} = 03</msg>
<status endtime="20190118 18:22:18.300" starttime="20190118 18:22:18.293" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:18.308" starttime="20190118 18:22:18.303" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:18.317" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:18.318" starttime="20190118 18:22:18.311" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:18.322" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:18.323" starttime="20190118 18:22:18.031" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:18.331" starttime="20190118 18:22:18.325" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:18.339" starttime="20190118 18:22:18.334" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:18.359" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0000 20</msg>
<status endtime="20190118 18:22:18.360" starttime="20190118 18:22:18.352" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:18.369" starttime="20190118 18:22:18.363" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:18.570" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 41 3C F6</msg>
<status endtime="20190118 18:22:18.571" starttime="20190118 18:22:18.371" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:18.580" starttime="20190118 18:22:18.574" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:18.589" starttime="20190118 18:22:18.583" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:18.597" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '41', '3C', 'F6']</msg>
<status endtime="20190118 18:22:18.598" starttime="20190118 18:22:18.592" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:18.606" level="INFO">${gpio_id} = 03</msg>
<status endtime="20190118 18:22:18.607" starttime="20190118 18:22:18.600" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:18.615" starttime="20190118 18:22:18.610" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:18.624" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:18.625" starttime="20190118 18:22:18.618" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:18.628" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:18.629" starttime="20190118 18:22:18.341" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:18.641" starttime="20190118 18:22:18.632" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:18.649" starttime="20190118 18:22:18.644" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:18.670" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0000 00</msg>
<status endtime="20190118 18:22:18.671" starttime="20190118 18:22:18.662" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:18.679" starttime="20190118 18:22:18.673" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:18.882" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 42 3C F5</msg>
<status endtime="20190118 18:22:18.883" starttime="20190118 18:22:18.682" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:18.892" starttime="20190118 18:22:18.887" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:18.902" starttime="20190118 18:22:18.895" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:18.910" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '42', '3C', 'F5']</msg>
<status endtime="20190118 18:22:18.911" starttime="20190118 18:22:18.905" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:18.920" level="INFO">${gpio_id} = 03</msg>
<status endtime="20190118 18:22:18.921" starttime="20190118 18:22:18.914" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:18.929" starttime="20190118 18:22:18.924" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:18.939" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:18.940" starttime="20190118 18:22:18.933" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:18.944" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:18.946" starttime="20190118 18:22:18.652" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:18.955" starttime="20190118 18:22:18.949" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:18.957" starttime="20190118 18:22:16.154" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:18.959" starttime="20190118 18:22:16.140" status="PASS"></status>
</kw>
<kw name="digit_out_led1">
<doc>Set pwm for the digital output led1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output led1</arg>
</arguments>
<status endtime="20190118 18:22:18.973" starttime="20190118 18:22:18.968" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:18.987" starttime="20190118 18:22:18.982" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:19.007" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 20</msg>
<status endtime="20190118 18:22:19.008" starttime="20190118 18:22:19.000" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:19.017" starttime="20190118 18:22:19.011" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:19.265" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 43 3D F3</msg>
<status endtime="20190118 18:22:19.266" starttime="20190118 18:22:19.020" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:19.274" starttime="20190118 18:22:19.269" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:19.283" starttime="20190118 18:22:19.277" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:19.291" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '43', '3D', 'F3']</msg>
<status endtime="20190118 18:22:19.292" starttime="20190118 18:22:19.286" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:19.300" level="INFO">${gpio_id} = 04</msg>
<status endtime="20190118 18:22:19.301" starttime="20190118 18:22:19.295" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:19.309" starttime="20190118 18:22:19.304" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:19.318" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:19.319" starttime="20190118 18:22:19.312" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:19.323" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:19.324" starttime="20190118 18:22:18.989" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:19.332" starttime="20190118 18:22:19.326" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:19.339" starttime="20190118 18:22:19.335" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:19.365" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0064 64</msg>
<status endtime="20190118 18:22:19.367" starttime="20190118 18:22:19.358" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:19.375" starttime="20190118 18:22:19.370" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:19.579" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 44 3D F4</msg>
<status endtime="20190118 18:22:19.579" starttime="20190118 18:22:19.379" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:19.588" starttime="20190118 18:22:19.583" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:19.597" starttime="20190118 18:22:19.591" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:19.605" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '44', '3D', 'F4']</msg>
<status endtime="20190118 18:22:19.606" starttime="20190118 18:22:19.600" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:19.614" level="INFO">${gpio_id} = 04</msg>
<status endtime="20190118 18:22:19.615" starttime="20190118 18:22:19.609" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:19.624" starttime="20190118 18:22:19.618" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:19.632" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:19.633" starttime="20190118 18:22:19.626" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:19.637" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:19.638" starttime="20190118 18:22:19.342" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:19.646" starttime="20190118 18:22:19.640" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:19.669" starttime="20190118 18:22:19.649" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:19.715" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0001 01</msg>
<status endtime="20190118 18:22:19.716" starttime="20190118 18:22:19.701" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:19.740" starttime="20190118 18:22:19.726" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:19.942" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 45 3D F5</msg>
<status endtime="20190118 18:22:19.943" starttime="20190118 18:22:19.743" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:19.952" starttime="20190118 18:22:19.947" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:19.961" starttime="20190118 18:22:19.955" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:19.969" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '45', '3D', 'F5']</msg>
<status endtime="20190118 18:22:19.970" starttime="20190118 18:22:19.964" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:19.978" level="INFO">${gpio_id} = 04</msg>
<status endtime="20190118 18:22:19.979" starttime="20190118 18:22:19.973" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:19.987" starttime="20190118 18:22:19.982" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:19.996" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:19.997" starttime="20190118 18:22:19.990" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:20.000" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:20.002" starttime="20190118 18:22:19.671" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:20.010" starttime="20190118 18:22:20.005" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:20.018" starttime="20190118 18:22:20.013" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:20.039" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0065 65</msg>
<status endtime="20190118 18:22:20.040" starttime="20190118 18:22:20.032" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:20.049" starttime="20190118 18:22:20.043" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:20.265" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 46 3C F6</msg>
<status endtime="20190118 18:22:20.266" starttime="20190118 18:22:20.052" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:20.274" starttime="20190118 18:22:20.269" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:20.283" starttime="20190118 18:22:20.277" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:20.291" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '46', '3C', 'F6']</msg>
<status endtime="20190118 18:22:20.292" starttime="20190118 18:22:20.286" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:20.300" level="INFO">${gpio_id} = 04</msg>
<status endtime="20190118 18:22:20.301" starttime="20190118 18:22:20.295" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:20.309" starttime="20190118 18:22:20.304" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:20.318" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:20.319" starttime="20190118 18:22:20.312" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:20.322" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:20.323" starttime="20190118 18:22:20.020" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:20.332" starttime="20190118 18:22:20.326" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:20.339" starttime="20190118 18:22:20.334" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:20.359" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 65</msg>
<status endtime="20190118 18:22:20.360" starttime="20190118 18:22:20.352" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:20.369" starttime="20190118 18:22:20.363" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:20.570" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 47 3C F7</msg>
<status endtime="20190118 18:22:20.571" starttime="20190118 18:22:20.372" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:20.580" starttime="20190118 18:22:20.575" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:20.589" starttime="20190118 18:22:20.583" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:20.597" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '47', '3C', 'F7']</msg>
<status endtime="20190118 18:22:20.598" starttime="20190118 18:22:20.592" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:20.607" level="INFO">${gpio_id} = 04</msg>
<status endtime="20190118 18:22:20.608" starttime="20190118 18:22:20.601" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:20.616" starttime="20190118 18:22:20.610" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:20.625" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:20.625" starttime="20190118 18:22:20.619" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:20.629" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:20.630" starttime="20190118 18:22:20.341" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:20.639" starttime="20190118 18:22:20.633" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:20.647" starttime="20190118 18:22:20.642" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:20.667" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0065 20</msg>
<status endtime="20190118 18:22:20.668" starttime="20190118 18:22:20.660" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:20.677" starttime="20190118 18:22:20.671" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:20.880" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 40 3C F0</msg>
<status endtime="20190118 18:22:20.881" starttime="20190118 18:22:20.680" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:20.890" starttime="20190118 18:22:20.884" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:20.898" starttime="20190118 18:22:20.893" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:20.906" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '40', '3C', 'F0']</msg>
<status endtime="20190118 18:22:20.907" starttime="20190118 18:22:20.901" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:20.916" level="INFO">${gpio_id} = 04</msg>
<status endtime="20190118 18:22:20.917" starttime="20190118 18:22:20.910" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:20.929" starttime="20190118 18:22:20.919" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:20.937" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:20.938" starttime="20190118 18:22:20.932" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:20.942" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:20.943" starttime="20190118 18:22:20.649" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:20.951" starttime="20190118 18:22:20.946" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:20.959" starttime="20190118 18:22:20.955" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:20.980" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 00</msg>
<status endtime="20190118 18:22:20.981" starttime="20190118 18:22:20.972" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:20.989" starttime="20190118 18:22:20.983" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:21.195" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 41 3C F1</msg>
<status endtime="20190118 18:22:21.197" starttime="20190118 18:22:20.992" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:21.205" starttime="20190118 18:22:21.200" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:21.214" starttime="20190118 18:22:21.208" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:21.222" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '41', '3C', 'F1']</msg>
<status endtime="20190118 18:22:21.223" starttime="20190118 18:22:21.217" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:21.231" level="INFO">${gpio_id} = 04</msg>
<status endtime="20190118 18:22:21.232" starttime="20190118 18:22:21.225" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:21.240" starttime="20190118 18:22:21.235" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:21.250" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:21.251" starttime="20190118 18:22:21.244" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:21.255" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:21.256" starttime="20190118 18:22:20.962" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:21.264" starttime="20190118 18:22:21.259" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:21.272" starttime="20190118 18:22:21.267" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:21.293" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0000 20</msg>
<status endtime="20190118 18:22:21.294" starttime="20190118 18:22:21.285" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:21.302" starttime="20190118 18:22:21.297" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:21.504" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 42 3C F2</msg>
<status endtime="20190118 18:22:21.505" starttime="20190118 18:22:21.305" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:21.514" starttime="20190118 18:22:21.508" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:21.522" starttime="20190118 18:22:21.517" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:21.530" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '42', '3C', 'F2']</msg>
<status endtime="20190118 18:22:21.531" starttime="20190118 18:22:21.525" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:21.540" level="INFO">${gpio_id} = 04</msg>
<status endtime="20190118 18:22:21.540" starttime="20190118 18:22:21.534" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:21.549" starttime="20190118 18:22:21.543" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:21.558" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:21.558" starttime="20190118 18:22:21.552" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:21.562" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:21.563" starttime="20190118 18:22:21.274" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:21.571" starttime="20190118 18:22:21.566" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:21.579" starttime="20190118 18:22:21.574" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:21.603" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0000 00</msg>
<status endtime="20190118 18:22:21.604" starttime="20190118 18:22:21.592" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:21.612" starttime="20190118 18:22:21.607" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:21.814" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 43 3C F3</msg>
<status endtime="20190118 18:22:21.814" starttime="20190118 18:22:21.615" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:21.823" starttime="20190118 18:22:21.818" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:21.832" starttime="20190118 18:22:21.826" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:21.840" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '43', '3C', 'F3']</msg>
<status endtime="20190118 18:22:21.841" starttime="20190118 18:22:21.835" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:21.849" level="INFO">${gpio_id} = 04</msg>
<status endtime="20190118 18:22:21.851" starttime="20190118 18:22:21.844" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:21.860" starttime="20190118 18:22:21.854" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:21.868" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:21.869" starttime="20190118 18:22:21.863" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:21.873" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:21.874" starttime="20190118 18:22:21.581" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:21.882" starttime="20190118 18:22:21.877" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:21.884" starttime="20190118 18:22:18.975" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:21.887" starttime="20190118 18:22:18.962" status="PASS"></status>
</kw>
<kw name="digit_out_led2">
<doc>Set pwm for the digital output led2</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output led2</arg>
</arguments>
<status endtime="20190118 18:22:21.900" starttime="20190118 18:22:21.895" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:21.914" starttime="20190118 18:22:21.909" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:21.934" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 20</msg>
<status endtime="20190118 18:22:21.935" starttime="20190118 18:22:21.927" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:21.943" starttime="20190118 18:22:21.938" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:22.159" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 44 3D F5</msg>
<status endtime="20190118 18:22:22.160" starttime="20190118 18:22:21.946" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:22.168" starttime="20190118 18:22:22.163" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:22.177" starttime="20190118 18:22:22.171" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:22.185" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '44', '3D', 'F5']</msg>
<status endtime="20190118 18:22:22.186" starttime="20190118 18:22:22.180" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:22.195" level="INFO">${gpio_id} = 05</msg>
<status endtime="20190118 18:22:22.196" starttime="20190118 18:22:22.189" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:22.204" starttime="20190118 18:22:22.198" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:22.213" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:22.214" starttime="20190118 18:22:22.207" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:22.218" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:22.218" starttime="20190118 18:22:21.916" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:22.227" starttime="20190118 18:22:22.221" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:22.234" starttime="20190118 18:22:22.230" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:22.254" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0064 64</msg>
<status endtime="20190118 18:22:22.255" starttime="20190118 18:22:22.247" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:22.268" starttime="20190118 18:22:22.259" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:22.475" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 45 3D F4</msg>
<status endtime="20190118 18:22:22.477" starttime="20190118 18:22:22.271" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:22.486" starttime="20190118 18:22:22.480" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:22.495" starttime="20190118 18:22:22.489" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:22.503" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '45', '3D', 'F4']</msg>
<status endtime="20190118 18:22:22.504" starttime="20190118 18:22:22.498" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:22.513" level="INFO">${gpio_id} = 05</msg>
<status endtime="20190118 18:22:22.514" starttime="20190118 18:22:22.506" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:22.522" starttime="20190118 18:22:22.516" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:22.531" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:22.531" starttime="20190118 18:22:22.525" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:22.535" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:22.536" starttime="20190118 18:22:22.237" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:22.545" starttime="20190118 18:22:22.539" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:22.553" starttime="20190118 18:22:22.548" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:22.574" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0001 01</msg>
<status endtime="20190118 18:22:22.575" starttime="20190118 18:22:22.566" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:22.583" starttime="20190118 18:22:22.577" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:22.788" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 46 3D F7</msg>
<status endtime="20190118 18:22:22.789" starttime="20190118 18:22:22.586" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:22.798" starttime="20190118 18:22:22.792" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:22.806" starttime="20190118 18:22:22.801" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:22.814" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '46', '3D', 'F7']</msg>
<status endtime="20190118 18:22:22.815" starttime="20190118 18:22:22.810" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:22.824" level="INFO">${gpio_id} = 05</msg>
<status endtime="20190118 18:22:22.825" starttime="20190118 18:22:22.818" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:22.834" starttime="20190118 18:22:22.828" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:22.843" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:22.843" starttime="20190118 18:22:22.837" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:22.847" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:22.848" starttime="20190118 18:22:22.555" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:22.856" starttime="20190118 18:22:22.851" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:22.864" starttime="20190118 18:22:22.859" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:22.885" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0065 65</msg>
<status endtime="20190118 18:22:22.886" starttime="20190118 18:22:22.878" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:22.894" starttime="20190118 18:22:22.889" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:23.101" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 47 3C F6</msg>
<status endtime="20190118 18:22:23.102" starttime="20190118 18:22:22.898" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:23.111" starttime="20190118 18:22:23.105" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:23.120" starttime="20190118 18:22:23.114" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:23.128" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '47', '3C', 'F6']</msg>
<status endtime="20190118 18:22:23.129" starttime="20190118 18:22:23.123" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:23.141" level="INFO">${gpio_id} = 05</msg>
<status endtime="20190118 18:22:23.142" starttime="20190118 18:22:23.132" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:23.150" starttime="20190118 18:22:23.145" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:23.160" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:23.161" starttime="20190118 18:22:23.153" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:23.165" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:23.165" starttime="20190118 18:22:22.866" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:23.174" starttime="20190118 18:22:23.168" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:23.181" starttime="20190118 18:22:23.177" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:23.203" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 65</msg>
<status endtime="20190118 18:22:23.203" starttime="20190118 18:22:23.195" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:23.212" starttime="20190118 18:22:23.206" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:23.427" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 40 3C F1</msg>
<status endtime="20190118 18:22:23.428" starttime="20190118 18:22:23.215" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:23.437" starttime="20190118 18:22:23.431" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:23.446" starttime="20190118 18:22:23.440" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:23.460" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '40', '3C', 'F1']</msg>
<status endtime="20190118 18:22:23.461" starttime="20190118 18:22:23.450" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:23.470" level="INFO">${gpio_id} = 05</msg>
<status endtime="20190118 18:22:23.473" starttime="20190118 18:22:23.464" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:23.483" starttime="20190118 18:22:23.477" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:23.492" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:23.494" starttime="20190118 18:22:23.486" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:23.500" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:23.501" starttime="20190118 18:22:23.184" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:23.509" starttime="20190118 18:22:23.504" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:23.517" starttime="20190118 18:22:23.512" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:23.538" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0065 20</msg>
<status endtime="20190118 18:22:23.539" starttime="20190118 18:22:23.530" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:23.548" starttime="20190118 18:22:23.542" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:23.749" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 41 3C F0</msg>
<status endtime="20190118 18:22:23.750" starttime="20190118 18:22:23.551" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:23.758" starttime="20190118 18:22:23.753" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:23.767" starttime="20190118 18:22:23.761" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:23.775" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '41', '3C', 'F0']</msg>
<status endtime="20190118 18:22:23.776" starttime="20190118 18:22:23.770" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:23.785" level="INFO">${gpio_id} = 05</msg>
<status endtime="20190118 18:22:23.786" starttime="20190118 18:22:23.779" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:23.794" starttime="20190118 18:22:23.789" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:23.803" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:23.804" starttime="20190118 18:22:23.797" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:23.807" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:23.808" starttime="20190118 18:22:23.519" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:23.817" starttime="20190118 18:22:23.811" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:23.824" starttime="20190118 18:22:23.819" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:23.848" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 00</msg>
<status endtime="20190118 18:22:23.849" starttime="20190118 18:22:23.841" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:23.858" starttime="20190118 18:22:23.852" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:24.063" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 42 3C F3</msg>
<status endtime="20190118 18:22:24.064" starttime="20190118 18:22:23.860" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:24.073" starttime="20190118 18:22:24.067" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:24.082" starttime="20190118 18:22:24.076" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:24.098" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '42', '3C', 'F3']</msg>
<status endtime="20190118 18:22:24.099" starttime="20190118 18:22:24.085" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:24.107" level="INFO">${gpio_id} = 05</msg>
<status endtime="20190118 18:22:24.108" starttime="20190118 18:22:24.102" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:24.117" starttime="20190118 18:22:24.111" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:24.125" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:24.126" starttime="20190118 18:22:24.120" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:24.130" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:24.131" starttime="20190118 18:22:23.826" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:24.139" starttime="20190118 18:22:24.134" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:24.147" starttime="20190118 18:22:24.142" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:24.168" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0000 20</msg>
<status endtime="20190118 18:22:24.169" starttime="20190118 18:22:24.160" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:24.177" starttime="20190118 18:22:24.172" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:24.384" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 43 3C F2</msg>
<status endtime="20190118 18:22:24.385" starttime="20190118 18:22:24.180" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:24.396" starttime="20190118 18:22:24.388" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:24.405" starttime="20190118 18:22:24.399" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:24.414" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '43', '3C', 'F2']</msg>
<status endtime="20190118 18:22:24.414" starttime="20190118 18:22:24.409" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:24.423" level="INFO">${gpio_id} = 05</msg>
<status endtime="20190118 18:22:24.424" starttime="20190118 18:22:24.417" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:24.432" starttime="20190118 18:22:24.427" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:24.441" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:24.442" starttime="20190118 18:22:24.435" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:24.446" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:24.447" starttime="20190118 18:22:24.150" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:24.455" starttime="20190118 18:22:24.450" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:24.463" starttime="20190118 18:22:24.458" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:24.484" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0000 00</msg>
<status endtime="20190118 18:22:24.484" starttime="20190118 18:22:24.476" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:24.493" starttime="20190118 18:22:24.487" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:24.694" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 44 3C F5</msg>
<status endtime="20190118 18:22:24.695" starttime="20190118 18:22:24.496" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:24.708" starttime="20190118 18:22:24.698" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:24.716" starttime="20190118 18:22:24.710" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:24.724" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '44', '3C', 'F5']</msg>
<status endtime="20190118 18:22:24.725" starttime="20190118 18:22:24.719" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:24.734" level="INFO">${gpio_id} = 05</msg>
<status endtime="20190118 18:22:24.735" starttime="20190118 18:22:24.728" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:24.743" starttime="20190118 18:22:24.738" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:24.752" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:24.753" starttime="20190118 18:22:24.746" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:24.756" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:24.757" starttime="20190118 18:22:24.465" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:24.767" starttime="20190118 18:22:24.760" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:24.770" starttime="20190118 18:22:21.902" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:24.772" starttime="20190118 18:22:21.889" status="PASS"></status>
</kw>
<kw name="digit_out_crm">
<doc>Set pwm for the digital output crm</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output crm</arg>
</arguments>
<status endtime="20190118 18:22:24.786" starttime="20190118 18:22:24.781" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:24.801" starttime="20190118 18:22:24.797" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:24.821" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 20</msg>
<status endtime="20190118 18:22:24.822" starttime="20190118 18:22:24.814" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:24.831" starttime="20190118 18:22:24.825" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:25.035" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 45 3D F7</msg>
<status endtime="20190118 18:22:25.037" starttime="20190118 18:22:24.834" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:25.045" starttime="20190118 18:22:25.040" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:25.054" starttime="20190118 18:22:25.048" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:25.062" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '45', '3D', 'F7']</msg>
<status endtime="20190118 18:22:25.063" starttime="20190118 18:22:25.057" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:25.073" level="INFO">${gpio_id} = 06</msg>
<status endtime="20190118 18:22:25.074" starttime="20190118 18:22:25.067" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:25.083" starttime="20190118 18:22:25.077" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:25.091" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:25.092" starttime="20190118 18:22:25.086" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:25.096" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:25.097" starttime="20190118 18:22:24.804" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:25.105" starttime="20190118 18:22:25.099" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:25.113" starttime="20190118 18:22:25.108" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:25.133" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0064 64</msg>
<status endtime="20190118 18:22:25.134" starttime="20190118 18:22:25.126" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:25.143" starttime="20190118 18:22:25.137" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:25.346" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 46 3D F4</msg>
<status endtime="20190118 18:22:25.347" starttime="20190118 18:22:25.146" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:25.356" starttime="20190118 18:22:25.351" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:25.365" starttime="20190118 18:22:25.359" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:25.377" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '46', '3D', 'F4']</msg>
<status endtime="20190118 18:22:25.378" starttime="20190118 18:22:25.368" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:25.388" level="INFO">${gpio_id} = 06</msg>
<status endtime="20190118 18:22:25.388" starttime="20190118 18:22:25.381" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:25.397" starttime="20190118 18:22:25.391" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:25.406" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:25.407" starttime="20190118 18:22:25.400" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:25.410" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:25.411" starttime="20190118 18:22:25.115" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:25.419" starttime="20190118 18:22:25.414" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status endtime="20190118 18:22:25.427" starttime="20190118 18:22:25.422" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:25.447" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0001 01</msg>
<status endtime="20190118 18:22:25.448" starttime="20190118 18:22:25.440" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:25.457" starttime="20190118 18:22:25.451" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:25.659" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 47 3D F5</msg>
<status endtime="20190118 18:22:25.661" starttime="20190118 18:22:25.460" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:25.670" starttime="20190118 18:22:25.664" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:25.678" starttime="20190118 18:22:25.673" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:25.686" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '47', '3D', 'F5']</msg>
<status endtime="20190118 18:22:25.687" starttime="20190118 18:22:25.681" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:25.696" level="INFO">${gpio_id} = 06</msg>
<status endtime="20190118 18:22:25.697" starttime="20190118 18:22:25.690" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:25.705" starttime="20190118 18:22:25.700" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:25.714" level="INFO">${ret_val} = 00</msg>
<status endtime="20190118 18:22:25.715" starttime="20190118 18:22:25.708" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:25.718" level="INFO">${resp} = 00</msg>
<status endtime="20190118 18:22:25.719" starttime="20190118 18:22:25.429" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:25.728" starttime="20190118 18:22:25.722" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:25.735" starttime="20190118 18:22:25.730" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:25.756" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0065 65</msg>
<status endtime="20190118 18:22:25.756" starttime="20190118 18:22:25.748" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:25.765" starttime="20190118 18:22:25.759" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:25.970" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 40 3C F2</msg>
<status endtime="20190118 18:22:25.970" starttime="20190118 18:22:25.768" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:25.980" starttime="20190118 18:22:25.974" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:25.989" starttime="20190118 18:22:25.983" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:25.998" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '40', '3C', 'F2']</msg>
<status endtime="20190118 18:22:25.998" starttime="20190118 18:22:25.991" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:26.007" level="INFO">${gpio_id} = 06</msg>
<status endtime="20190118 18:22:26.008" starttime="20190118 18:22:26.001" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.017" starttime="20190118 18:22:26.011" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:26.025" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:26.026" starttime="20190118 18:22:26.020" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:26.030" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:26.031" starttime="20190118 18:22:25.737" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.039" starttime="20190118 18:22:26.034" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:26.047" starttime="20190118 18:22:26.043" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:26.071" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 65</msg>
<status endtime="20190118 18:22:26.073" starttime="20190118 18:22:26.064" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:26.081" starttime="20190118 18:22:26.076" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:26.284" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 41 3C F3</msg>
<status endtime="20190118 18:22:26.285" starttime="20190118 18:22:26.084" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:26.294" starttime="20190118 18:22:26.288" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.302" starttime="20190118 18:22:26.297" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:26.310" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '41', '3C', 'F3']</msg>
<status endtime="20190118 18:22:26.311" starttime="20190118 18:22:26.305" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:26.320" level="INFO">${gpio_id} = 06</msg>
<status endtime="20190118 18:22:26.321" starttime="20190118 18:22:26.314" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.329" starttime="20190118 18:22:26.323" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:26.337" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:26.338" starttime="20190118 18:22:26.332" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:26.342" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:26.343" starttime="20190118 18:22:26.050" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.351" starttime="20190118 18:22:26.346" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:26.359" starttime="20190118 18:22:26.354" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:26.379" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0065 20</msg>
<status endtime="20190118 18:22:26.380" starttime="20190118 18:22:26.371" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:26.389" starttime="20190118 18:22:26.383" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:26.591" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 42 3C F0</msg>
<status endtime="20190118 18:22:26.591" starttime="20190118 18:22:26.392" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:26.601" starttime="20190118 18:22:26.595" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.610" starttime="20190118 18:22:26.604" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:26.618" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '42', '3C', 'F0']</msg>
<status endtime="20190118 18:22:26.619" starttime="20190118 18:22:26.613" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:26.627" level="INFO">${gpio_id} = 06</msg>
<status endtime="20190118 18:22:26.628" starttime="20190118 18:22:26.622" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.637" starttime="20190118 18:22:26.631" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:26.645" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:26.646" starttime="20190118 18:22:26.640" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:26.650" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:26.651" starttime="20190118 18:22:26.361" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.659" starttime="20190118 18:22:26.654" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:26.667" starttime="20190118 18:22:26.662" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:26.688" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 00</msg>
<status endtime="20190118 18:22:26.689" starttime="20190118 18:22:26.681" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:26.697" starttime="20190118 18:22:26.692" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:26.905" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 43 3C F1</msg>
<status endtime="20190118 18:22:26.906" starttime="20190118 18:22:26.700" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:26.914" starttime="20190118 18:22:26.909" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.923" starttime="20190118 18:22:26.917" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:26.931" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '43', '3C', 'F1']</msg>
<status endtime="20190118 18:22:26.931" starttime="20190118 18:22:26.926" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:26.940" level="INFO">${gpio_id} = 06</msg>
<status endtime="20190118 18:22:26.941" starttime="20190118 18:22:26.934" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.949" starttime="20190118 18:22:26.944" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:26.958" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:26.959" starttime="20190118 18:22:26.953" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:26.963" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:26.963" starttime="20190118 18:22:26.669" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:26.972" starttime="20190118 18:22:26.966" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:26.980" starttime="20190118 18:22:26.975" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:27.000" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0000 20</msg>
<status endtime="20190118 18:22:27.001" starttime="20190118 18:22:26.993" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:27.011" starttime="20190118 18:22:27.004" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:27.218" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 44 3C F6</msg>
<status endtime="20190118 18:22:27.218" starttime="20190118 18:22:27.014" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:27.229" starttime="20190118 18:22:27.221" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:27.237" starttime="20190118 18:22:27.231" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:27.245" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '44', '3C', 'F6']</msg>
<status endtime="20190118 18:22:27.246" starttime="20190118 18:22:27.240" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:27.254" level="INFO">${gpio_id} = 06</msg>
<status endtime="20190118 18:22:27.255" starttime="20190118 18:22:27.249" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:27.264" starttime="20190118 18:22:27.258" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:27.272" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:27.273" starttime="20190118 18:22:27.267" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:27.277" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:27.278" starttime="20190118 18:22:26.982" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:27.286" starttime="20190118 18:22:27.281" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status endtime="20190118 18:22:27.294" starttime="20190118 18:22:27.289" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:27.315" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0000 00</msg>
<status endtime="20190118 18:22:27.316" starttime="20190118 18:22:27.307" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:27.324" starttime="20190118 18:22:27.318" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:27.526" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 45 3C F7</msg>
<status endtime="20190118 18:22:27.526" starttime="20190118 18:22:27.327" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:27.535" starttime="20190118 18:22:27.530" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:27.544" starttime="20190118 18:22:27.538" status="PASS"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:27.552" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '45', '3C', 'F7']</msg>
<status endtime="20190118 18:22:27.553" starttime="20190118 18:22:27.547" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190118 18:22:27.561" level="INFO">${gpio_id} = 06</msg>
<status endtime="20190118 18:22:27.562" starttime="20190118 18:22:27.556" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:27.574" starttime="20190118 18:22:27.565" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190118 18:22:27.584" level="INFO">${ret_val} = 01</msg>
<status endtime="20190118 18:22:27.584" starttime="20190118 18:22:27.578" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:27.588" level="INFO">${resp} = 01</msg>
<status endtime="20190118 18:22:27.589" starttime="20190118 18:22:27.297" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:27.597" starttime="20190118 18:22:27.591" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:27.599" starttime="20190118 18:22:24.788" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:27.601" starttime="20190118 18:22:24.775" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:27.659" starttime="20190118 18:22:27.611" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:27.709" starttime="20190118 18:22:27.663" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:27.759" starttime="20190118 18:22:27.713" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:22:27.809" starttime="20190118 18:22:27.763" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:27.811" starttime="20190118 18:22:27.605" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-49357 set pwm on Digital Outputs</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status endtime="20190118 18:22:27.812" critical="yes" starttime="20190118 18:22:03.573" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:22:29.315" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:22:29.337" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:22:29.339" starttime="20190118 18:22:27.866" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:29.340" starttime="20190118 18:22:27.828" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:29.352" starttime="20190118 18:22:27.822" status="PASS"></status>
</kw>
<doc>Chorus GPIO outputs set pwm</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:22:29.353" starttime="20190118 18:22:01.630" status="PASS"></status>
</suite>
<suite name="SKTB-41553" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41553.robot" id="s1-s13">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:22:29.726" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:22:29.728" starttime="20190118 18:22:29.721" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:22:29.737" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:22:29.739" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:22:31.461" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:22:31.463" starttime="20190118 18:22:29.731" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:31.465" starttime="20190118 18:22:29.714" status="PASS"></status>
</kw>
<test name="SKTB-41553" id="s1-s13-t1">
<kw name="Test_precondition" type="setup">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status endtime="20190118 18:22:31.499" starttime="20190118 18:22:31.494" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:31.550" starttime="20190118 18:22:31.502" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:31.601" starttime="20190118 18:22:31.553" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:22:31.650" starttime="20190118 18:22:31.604" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status endtime="20190118 18:22:31.700" starttime="20190118 18:22:31.653" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190118 18:22:31.749" starttime="20190118 18:22:31.704" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:22:31.800" starttime="20190118 18:22:31.753" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:22:33.808" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:22:33.810" starttime="20190118 18:22:31.803" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:33.860" starttime="20190118 18:22:33.812" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:33.910" starttime="20190118 18:22:33.863" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:33.915" starttime="20190118 18:22:31.481" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_PSN">
<doc>Test PSN value, write default value and read it, then write new value and read it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test PSN value, write and read default value</arg>
</arguments>
<status endtime="20190118 18:22:33.929" starttime="20190118 18:22:33.925" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read default otp value</arg>
</arguments>
<status endtime="20190118 18:22:33.937" starttime="20190118 18:22:33.932" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_PSN}</arg>
<arg>${PSN_LEN}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:33.956" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FE 00 10</msg>
<status endtime="20190118 18:22:33.957" starttime="20190118 18:22:33.949" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:33.965" starttime="20190118 18:22:33.960" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:34.172" level="INFO">${resp} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 30 31 32 33 34 35 01 45 00 69 16</msg>
<status endtime="20190118 18:22:34.174" starttime="20190118 18:22:33.968" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:34.182" starttime="20190118 18:22:34.177" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:34.203" level="INFO">${temp1} = 1E105494001B000BEE04FFFE0010004C616972642050534E203031323334350145006916</msg>
<status endtime="20190118 18:22:34.203" starttime="20190118 18:22:34.197" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:34.212" level="INFO">${temp2} = EE04FFFE001000</msg>
<status endtime="20190118 18:22:34.213" starttime="20190118 18:22:34.206" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:34.222" starttime="20190118 18:22:34.216" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:34.224" starttime="20190118 18:22:34.184" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:34.229" level="INFO">${res} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 30 31 32 33 34 35 01 45 00 69 16</msg>
<status endtime="20190118 18:22:34.230" starttime="20190118 18:22:33.939" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:34.232" starttime="20190118 18:22:33.918" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_PART_NO">
<doc>READ_OTP_CARIF_HW_PART_NO</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read otp_carif_hw_part_no</arg>
</arguments>
<status endtime="20190118 18:22:34.245" starttime="20190118 18:22:34.240" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_PART_NO}</arg>
<arg>${HW_PART_NO_LEN}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:34.272" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FD 00 0A</msg>
<status endtime="20190118 18:22:34.273" starttime="20190118 18:22:34.261" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:34.283" starttime="20190118 18:22:34.277" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:34.487" level="INFO">${resp} = 1E 10 54 94 00 15 00 0B EE 04 FF FD 00 0A 00 4C 61 69 72 64 20 30 31 32 33 01 44 00 2E 2B</msg>
<status endtime="20190118 18:22:34.488" starttime="20190118 18:22:34.286" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:34.497" starttime="20190118 18:22:34.492" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:34.516" level="INFO">${temp1} = 1E1054940015000BEE04FFFD000A004C6169726420303132330144002E2B</msg>
<status endtime="20190118 18:22:34.517" starttime="20190118 18:22:34.510" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:34.526" level="INFO">${temp2} = EE04FFFD000A00</msg>
<status endtime="20190118 18:22:34.527" starttime="20190118 18:22:34.520" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:34.535" starttime="20190118 18:22:34.529" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:34.537" starttime="20190118 18:22:34.499" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:34.541" starttime="20190118 18:22:34.248" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:34.543" starttime="20190118 18:22:34.234" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_VERSION_INFO">
<doc>READ_OTP_CARIF_HW_VERSION_INFO</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_VERSION_INFO</arg>
</arguments>
<status endtime="20190118 18:22:34.556" starttime="20190118 18:22:34.551" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_VERSION_INFO}</arg>
<arg>${HW_VERSION_INFO_LEN}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:34.574" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FC 00 04</msg>
<status endtime="20190118 18:22:34.575" starttime="20190118 18:22:34.567" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:34.583" starttime="20190118 18:22:34.577" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:34.807" level="INFO">${resp} = 1E 10 54 94 00 0F 00 0B EE 04 FF FC 00 04 00 03 01 06 00 01 45 00 1F 78</msg>
<status endtime="20190118 18:22:34.807" starttime="20190118 18:22:34.587" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:34.835" starttime="20190118 18:22:34.823" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:34.884" level="INFO">${temp1} = 1E105494000F000BEE04FFFC000400030106000145001F78</msg>
<status endtime="20190118 18:22:34.885" starttime="20190118 18:22:34.863" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:34.894" level="INFO">${temp2} = EE04FFFC000400</msg>
<status endtime="20190118 18:22:34.896" starttime="20190118 18:22:34.888" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:34.904" starttime="20190118 18:22:34.899" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:34.907" starttime="20190118 18:22:34.838" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:34.910" starttime="20190118 18:22:34.558" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:34.912" starttime="20190118 18:22:34.545" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_SUPPLIER_INFO">
<doc>READ_OTP_CARIF_HW_SUPPLIER_INFO</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_SUPPLIER_INFO</arg>
</arguments>
<status endtime="20190118 18:22:34.925" starttime="20190118 18:22:34.920" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_SUPPLIER_INFO}</arg>
<arg>${HW_SUPPLIER_INFO_LEN}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:34.943" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FB 00 02</msg>
<status endtime="20190118 18:22:34.943" starttime="20190118 18:22:34.936" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:34.952" starttime="20190118 18:22:34.946" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:35.158" level="INFO">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF FB 00 02 00 30 31 01 46 00 2C 4E</msg>
<status endtime="20190118 18:22:35.159" starttime="20190118 18:22:34.955" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:35.168" starttime="20190118 18:22:35.162" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:35.192" level="INFO">${temp1} = 1E105494000D000BEE04FFFB00020030310146002C4E</msg>
<status endtime="20190118 18:22:35.193" starttime="20190118 18:22:35.186" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:35.202" level="INFO">${temp2} = EE04FFFB000200</msg>
<status endtime="20190118 18:22:35.203" starttime="20190118 18:22:35.196" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:35.211" starttime="20190118 18:22:35.206" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:35.213" starttime="20190118 18:22:35.170" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:35.216" starttime="20190118 18:22:34.927" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:35.219" starttime="20190118 18:22:34.914" status="PASS"></status>
</kw>
<kw name="TEST_EEPROM_SW_SPARE_PART_NUMBER">
<doc>Write and read the EEPROM_SW_SPARE_PART_NUMBER</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_SW_SPARE_PART_NUMBER</arg>
</arguments>
<status endtime="20190118 18:22:35.232" starttime="20190118 18:22:35.227" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write eeprom sw spare part number with default value</arg>
</arguments>
<status endtime="20190118 18:22:35.239" starttime="20190118 18:22:35.234" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:35.258" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 4e</msg>
<status endtime="20190118 18:22:35.259" starttime="20190118 18:22:35.251" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:35.274" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', '4e']</msg>
<status endtime="20190118 18:22:35.275" starttime="20190118 18:22:35.269" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:35.282" level="INFO">Length is 26</msg>
<msg timestamp="20190118 18:22:35.284" level="INFO">${length} = 26</msg>
<status endtime="20190118 18:22:35.285" starttime="20190118 18:22:35.278" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:35.293" starttime="20190118 18:22:35.287" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:35.302" level="INFO">${value} = 20</msg>
<status endtime="20190118 18:22:35.303" starttime="20190118 18:22:35.296" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:35.311" level="INFO">${res} = 14</msg>
<status endtime="20190118 18:22:35.312" starttime="20190118 18:22:35.306" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:35.321" starttime="20190118 18:22:35.315" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:35.331" level="INFO">${res} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status endtime="20190118 18:22:35.331" starttime="20190118 18:22:35.324" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:35.335" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status endtime="20190118 18:22:35.336" starttime="20190118 18:22:35.261" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:35.345" starttime="20190118 18:22:35.339" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:35.961" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 47 5A 3E</msg>
<status endtime="20190118 18:22:35.962" starttime="20190118 18:22:35.347" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:35.976" starttime="20190118 18:22:35.970" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:35.995" level="INFO">${temp1} = 1E105494000A000BEE06FFFA000001475A3E</msg>
<status endtime="20190118 18:22:35.995" starttime="20190118 18:22:35.988" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:36.004" level="INFO">${temp2} = EE06FFFA00</msg>
<status endtime="20190118 18:22:36.005" starttime="20190118 18:22:35.998" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:36.013" starttime="20190118 18:22:36.008" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:36.016" starttime="20190118 18:22:35.978" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:36.018" starttime="20190118 18:22:35.241" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write eeprom sw spare part number with Different value</arg>
</arguments>
<status endtime="20190118 18:22:36.025" starttime="20190118 18:22:36.021" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:36.045" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 AA</msg>
<status endtime="20190118 18:22:36.046" starttime="20190118 18:22:36.038" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:36.065" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', 'AA']</msg>
<status endtime="20190118 18:22:36.066" starttime="20190118 18:22:36.055" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:36.072" level="INFO">Length is 26</msg>
<msg timestamp="20190118 18:22:36.074" level="INFO">${length} = 26</msg>
<status endtime="20190118 18:22:36.075" starttime="20190118 18:22:36.068" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:36.083" starttime="20190118 18:22:36.078" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:36.092" level="INFO">${value} = 20</msg>
<status endtime="20190118 18:22:36.093" starttime="20190118 18:22:36.086" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:36.101" level="INFO">${res} = 14</msg>
<status endtime="20190118 18:22:36.102" starttime="20190118 18:22:36.096" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:36.110" starttime="20190118 18:22:36.105" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:36.119" level="INFO">${res} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status endtime="20190118 18:22:36.120" starttime="20190118 18:22:36.113" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:36.124" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status endtime="20190118 18:22:36.125" starttime="20190118 18:22:36.048" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:36.133" starttime="20190118 18:22:36.127" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:36.553" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 40 5A 39</msg>
<status endtime="20190118 18:22:36.554" starttime="20190118 18:22:36.136" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:36.564" starttime="20190118 18:22:36.558" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:36.582" level="INFO">${temp1} = 1E105494000A000BEE06FFFA000001405A39</msg>
<status endtime="20190118 18:22:36.583" starttime="20190118 18:22:36.576" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:36.591" level="INFO">${temp2} = EE06FFFA00</msg>
<status endtime="20190118 18:22:36.592" starttime="20190118 18:22:36.586" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:36.601" starttime="20190118 18:22:36.595" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:36.603" starttime="20190118 18:22:36.566" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:36.606" starttime="20190118 18:22:36.027" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:36.661" starttime="20190118 18:22:36.614" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:36.713" starttime="20190118 18:22:36.664" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:22:38.720" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:22:38.722" starttime="20190118 18:22:36.716" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:38.771" starttime="20190118 18:22:38.725" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:38.821" starttime="20190118 18:22:38.774" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:38.823" starttime="20190118 18:22:36.608" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:38.842" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FA 00 0C</msg>
<status endtime="20190118 18:22:38.843" starttime="20190118 18:22:38.835" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:38.851" starttime="20190118 18:22:38.845" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:39.309" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 43 00 85 3E</msg>
<status endtime="20190118 18:22:39.310" starttime="20190118 18:22:38.854" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:39.319" starttime="20190118 18:22:39.313" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:39.350" level="INFO">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014300853E</msg>
<status endtime="20190118 18:22:39.351" starttime="20190118 18:22:39.337" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:39.368" level="INFO">${temp2} = EE04FFFA000C00</msg>
<status endtime="20190118 18:22:39.369" starttime="20190118 18:22:39.359" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:39.382" starttime="20190118 18:22:39.372" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:39.384" starttime="20190118 18:22:39.321" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:39.388" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 43 00 85 3E</msg>
<status endtime="20190118 18:22:39.389" starttime="20190118 18:22:38.826" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN} ${EEPROM_APP_OK} ${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:39.424" level="INFO">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014300853E</msg>
<status endtime="20190118 18:22:39.425" starttime="20190118 18:22:39.402" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:39.434" level="INFO">${temp2} = 000C005370617265205061727420AA</msg>
<status endtime="20190118 18:22:39.435" starttime="20190118 18:22:39.429" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:39.444" starttime="20190118 18:22:39.438" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:39.446" starttime="20190118 18:22:39.391" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:39.448" starttime="20190118 18:22:35.221" status="PASS"></status>
</kw>
<kw name="TEST_PRODUCT_NAME">
<doc>Write and read the EEPROM_PRODUCT_NAME</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_PRODUCT_NAME</arg>
</arguments>
<status endtime="20190118 18:22:39.462" starttime="20190118 18:22:39.458" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write default value</arg>
</arguments>
<status endtime="20190118 18:22:39.470" starttime="20190118 18:22:39.465" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:39.489" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 69</msg>
<status endtime="20190118 18:22:39.490" starttime="20190118 18:22:39.482" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:39.505" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', '69']</msg>
<status endtime="20190118 18:22:39.506" starttime="20190118 18:22:39.500" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:39.515" level="INFO">Length is 26</msg>
<msg timestamp="20190118 18:22:39.517" level="INFO">${length} = 26</msg>
<status endtime="20190118 18:22:39.518" starttime="20190118 18:22:39.509" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:39.526" starttime="20190118 18:22:39.521" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:39.545" level="INFO">${value} = 20</msg>
<status endtime="20190118 18:22:39.545" starttime="20190118 18:22:39.534" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:39.558" level="INFO">${res} = 14</msg>
<status endtime="20190118 18:22:39.559" starttime="20190118 18:22:39.549" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:39.567" starttime="20190118 18:22:39.562" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:39.577" level="INFO">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status endtime="20190118 18:22:39.578" starttime="20190118 18:22:39.570" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:39.582" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status endtime="20190118 18:22:39.582" starttime="20190118 18:22:39.492" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:39.591" starttime="20190118 18:22:39.585" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:41.058" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 44 5A 3E</msg>
<status endtime="20190118 18:22:41.059" starttime="20190118 18:22:39.594" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:41.074" starttime="20190118 18:22:41.068" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:41.092" level="INFO">${temp1} = 1E105494000A000BEE06FFF9000001445A3E</msg>
<status endtime="20190118 18:22:41.093" starttime="20190118 18:22:41.086" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:41.101" level="INFO">${temp2} = EE06FFF900</msg>
<status endtime="20190118 18:22:41.102" starttime="20190118 18:22:41.096" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:41.111" starttime="20190118 18:22:41.105" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:41.113" starttime="20190118 18:22:41.076" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:41.115" starttime="20190118 18:22:39.472" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:41.134" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 BB</msg>
<status endtime="20190118 18:22:41.135" starttime="20190118 18:22:41.127" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:41.150" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', 'BB']</msg>
<status endtime="20190118 18:22:41.152" starttime="20190118 18:22:41.145" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:41.159" level="INFO">Length is 26</msg>
<msg timestamp="20190118 18:22:41.161" level="INFO">${length} = 26</msg>
<status endtime="20190118 18:22:41.162" starttime="20190118 18:22:41.155" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:41.174" starttime="20190118 18:22:41.164" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:41.182" level="INFO">${value} = 20</msg>
<status endtime="20190118 18:22:41.183" starttime="20190118 18:22:41.177" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:41.193" level="INFO">${res} = 14</msg>
<status endtime="20190118 18:22:41.193" starttime="20190118 18:22:41.186" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:41.201" starttime="20190118 18:22:41.196" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:41.211" level="INFO">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status endtime="20190118 18:22:41.212" starttime="20190118 18:22:41.204" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:41.216" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status endtime="20190118 18:22:41.216" starttime="20190118 18:22:41.137" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:41.225" starttime="20190118 18:22:41.219" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:41.746" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 45 5A 3F</msg>
<status endtime="20190118 18:22:41.747" starttime="20190118 18:22:41.228" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:41.755" starttime="20190118 18:22:41.750" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:41.774" level="INFO">${temp1} = 1E105494000A000BEE06FFF9000001455A3F</msg>
<status endtime="20190118 18:22:41.774" starttime="20190118 18:22:41.768" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:41.783" level="INFO">${temp2} = EE06FFF900</msg>
<status endtime="20190118 18:22:41.784" starttime="20190118 18:22:41.777" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:41.793" starttime="20190118 18:22:41.787" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:41.795" starttime="20190118 18:22:41.757" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:41.797" starttime="20190118 18:22:41.117" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:41.853" starttime="20190118 18:22:41.805" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:41.904" starttime="20190118 18:22:41.856" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:22:43.912" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:22:43.914" starttime="20190118 18:22:41.907" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:43.965" starttime="20190118 18:22:43.917" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:44.015" starttime="20190118 18:22:43.968" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:44.018" starttime="20190118 18:22:41.799" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:44.036" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F9 00 0C</msg>
<status endtime="20190118 18:22:44.037" starttime="20190118 18:22:44.029" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:44.046" starttime="20190118 18:22:44.040" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:44.477" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 43 00 AD 4E</msg>
<status endtime="20190118 18:22:44.478" starttime="20190118 18:22:44.049" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:44.486" starttime="20190118 18:22:44.481" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:44.507" level="INFO">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014300AD4E</msg>
<status endtime="20190118 18:22:44.508" starttime="20190118 18:22:44.501" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:44.517" level="INFO">${temp2} = EE04FFF9000C00</msg>
<status endtime="20190118 18:22:44.518" starttime="20190118 18:22:44.511" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:44.527" starttime="20190118 18:22:44.521" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:44.529" starttime="20190118 18:22:44.489" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:44.532" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 43 00 AD 4E</msg>
<status endtime="20190118 18:22:44.533" starttime="20190118 18:22:44.020" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN} ${EEPROM_APP_OK} ${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:44.551" level="INFO">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014300AD4E</msg>
<status endtime="20190118 18:22:44.552" starttime="20190118 18:22:44.545" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:44.561" level="INFO">${temp2} = 000C004f4c5520436f6e6e656374BB</msg>
<status endtime="20190118 18:22:44.562" starttime="20190118 18:22:44.555" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:44.574" starttime="20190118 18:22:44.564" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:44.577" starttime="20190118 18:22:44.535" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:44.579" starttime="20190118 18:22:39.451" status="PASS"></status>
</kw>
<kw name="TEST_LAST_POWER_STATE">
<doc>Write and read the EEPROM_LAST_POWER_STATE</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_LAST_POWER_STATE</arg>
</arguments>
<status endtime="20190118 18:22:44.592" starttime="20190118 18:22:44.587" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:44.612" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 FF</msg>
<status endtime="20190118 18:22:44.613" starttime="20190118 18:22:44.605" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:44.628" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'FF']</msg>
<status endtime="20190118 18:22:44.629" starttime="20190118 18:22:44.623" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:44.636" level="INFO">Length is 15</msg>
<msg timestamp="20190118 18:22:44.638" level="INFO">${length} = 15</msg>
<status endtime="20190118 18:22:44.638" starttime="20190118 18:22:44.632" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:44.647" starttime="20190118 18:22:44.641" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:44.655" level="INFO">${value} = 9</msg>
<status endtime="20190118 18:22:44.656" starttime="20190118 18:22:44.649" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:44.665" level="INFO">${res} = 09</msg>
<status endtime="20190118 18:22:44.666" starttime="20190118 18:22:44.659" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:44.674" starttime="20190118 18:22:44.669" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:44.683" level="INFO">${res} = 1E54109400090000EE05FFF80001FF</msg>
<status endtime="20190118 18:22:44.683" starttime="20190118 18:22:44.676" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:44.687" level="INFO">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001FF</msg>
<status endtime="20190118 18:22:44.688" starttime="20190118 18:22:44.615" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:44.697" starttime="20190118 18:22:44.691" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:46.046" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 44 5A 3F</msg>
<status endtime="20190118 18:22:46.046" starttime="20190118 18:22:44.700" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:46.064" starttime="20190118 18:22:46.055" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:46.082" level="INFO">${temp1} = 1E105494000A000BEE06FFF8000001445A3F</msg>
<status endtime="20190118 18:22:46.083" starttime="20190118 18:22:46.077" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:46.092" level="INFO">${temp2} = EE06FFF800</msg>
<status endtime="20190118 18:22:46.093" starttime="20190118 18:22:46.086" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:46.101" starttime="20190118 18:22:46.095" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:46.103" starttime="20190118 18:22:46.066" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:46.105" starttime="20190118 18:22:44.594" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:46.125" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 AA</msg>
<status endtime="20190118 18:22:46.126" starttime="20190118 18:22:46.117" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:46.140" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'AA']</msg>
<status endtime="20190118 18:22:46.141" starttime="20190118 18:22:46.135" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:46.148" level="INFO">Length is 15</msg>
<msg timestamp="20190118 18:22:46.150" level="INFO">${length} = 15</msg>
<status endtime="20190118 18:22:46.151" starttime="20190118 18:22:46.144" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:46.163" starttime="20190118 18:22:46.154" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:46.172" level="INFO">${value} = 9</msg>
<status endtime="20190118 18:22:46.173" starttime="20190118 18:22:46.166" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:46.181" level="INFO">${res} = 09</msg>
<status endtime="20190118 18:22:46.182" starttime="20190118 18:22:46.176" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:46.190" starttime="20190118 18:22:46.185" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:46.199" level="INFO">${res} = 1E54109400090000EE05FFF80001AA</msg>
<status endtime="20190118 18:22:46.200" starttime="20190118 18:22:46.193" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:46.203" level="INFO">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001AA</msg>
<status endtime="20190118 18:22:46.204" starttime="20190118 18:22:46.128" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:46.213" starttime="20190118 18:22:46.207" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:46.527" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 45 5A 3E</msg>
<status endtime="20190118 18:22:46.528" starttime="20190118 18:22:46.216" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:46.537" starttime="20190118 18:22:46.531" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:46.556" level="INFO">${temp1} = 1E105494000A000BEE06FFF8000001455A3E</msg>
<status endtime="20190118 18:22:46.557" starttime="20190118 18:22:46.549" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:46.565" level="INFO">${temp2} = EE06FFF800</msg>
<status endtime="20190118 18:22:46.566" starttime="20190118 18:22:46.559" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:46.574" starttime="20190118 18:22:46.569" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:46.577" starttime="20190118 18:22:46.539" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:46.579" starttime="20190118 18:22:46.107" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:46.636" starttime="20190118 18:22:46.587" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:46.687" starttime="20190118 18:22:46.639" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:22:48.695" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:22:48.697" starttime="20190118 18:22:46.690" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:48.746" starttime="20190118 18:22:48.700" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:48.797" starttime="20190118 18:22:48.750" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:48.799" starttime="20190118 18:22:46.581" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:48.817" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F8 00 01</msg>
<status endtime="20190118 18:22:48.818" starttime="20190118 18:22:48.811" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:48.827" starttime="20190118 18:22:48.821" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:49.142" level="INFO">${resp} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 43 5A 97</msg>
<status endtime="20190118 18:22:49.142" starttime="20190118 18:22:48.830" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:49.151" starttime="20190118 18:22:49.146" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:49.170" level="INFO">${temp1} = 1E105494000C000BEE04FFF8000100AA01435A97</msg>
<status endtime="20190118 18:22:49.171" starttime="20190118 18:22:49.165" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:49.180" level="INFO">${temp2} = EE04FFF8000100</msg>
<status endtime="20190118 18:22:49.181" starttime="20190118 18:22:49.174" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:49.189" starttime="20190118 18:22:49.183" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:49.191" starttime="20190118 18:22:49.154" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:49.195" level="INFO">${RESP} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 43 5A 97</msg>
<status endtime="20190118 18:22:49.195" starttime="20190118 18:22:48.802" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN} ${EEPROM_APP_OK} ${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:49.214" level="INFO">${temp1} = 1E105494000C000BEE04FFF8000100AA01435A97</msg>
<status endtime="20190118 18:22:49.214" starttime="20190118 18:22:49.208" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:49.223" level="INFO">${temp2} = 000100AA</msg>
<status endtime="20190118 18:22:49.224" starttime="20190118 18:22:49.217" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:49.237" starttime="20190118 18:22:49.227" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:49.239" starttime="20190118 18:22:49.197" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:49.241" starttime="20190118 18:22:44.581" status="PASS"></status>
</kw>
<kw name="TEST_WAKE_BARRIERS">
<doc>Write and read the EEPROM_WAKE_BARRIERS</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_WAKE_BARRIERS</arg>
</arguments>
<status endtime="20190118 18:22:49.254" starttime="20190118 18:22:49.249" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:49.273" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 FF FF</msg>
<status endtime="20190118 18:22:49.274" starttime="20190118 18:22:49.266" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:49.289" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'FF', 'FF']</msg>
<status endtime="20190118 18:22:49.290" starttime="20190118 18:22:49.284" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:49.298" level="INFO">Length is 16</msg>
<msg timestamp="20190118 18:22:49.300" level="INFO">${length} = 16</msg>
<status endtime="20190118 18:22:49.301" starttime="20190118 18:22:49.294" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:49.310" starttime="20190118 18:22:49.305" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:49.319" level="INFO">${value} = 10</msg>
<status endtime="20190118 18:22:49.320" starttime="20190118 18:22:49.313" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:49.329" level="INFO">${res} = 0A</msg>
<status endtime="20190118 18:22:49.329" starttime="20190118 18:22:49.323" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:49.338" starttime="20190118 18:22:49.332" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:49.347" level="INFO">${res} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status endtime="20190118 18:22:49.348" starttime="20190118 18:22:49.340" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:49.351" level="INFO">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status endtime="20190118 18:22:49.352" starttime="20190118 18:22:49.276" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:49.360" starttime="20190118 18:22:49.355" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:50.708" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 44 5A 30</msg>
<status endtime="20190118 18:22:50.712" starttime="20190118 18:22:49.363" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:50.723" starttime="20190118 18:22:50.715" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:50.741" level="INFO">${temp1} = 1E105494000A000BEE06FFF7000001445A30</msg>
<status endtime="20190118 18:22:50.742" starttime="20190118 18:22:50.736" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:50.751" level="INFO">${temp2} = EE06FFF700</msg>
<status endtime="20190118 18:22:50.752" starttime="20190118 18:22:50.745" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:50.760" starttime="20190118 18:22:50.755" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:50.762" starttime="20190118 18:22:50.725" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:50.764" starttime="20190118 18:22:49.256" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:50.783" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 AA BB</msg>
<status endtime="20190118 18:22:50.784" starttime="20190118 18:22:50.776" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:50.799" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'AA', 'BB']</msg>
<status endtime="20190118 18:22:50.800" starttime="20190118 18:22:50.794" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:50.807" level="INFO">Length is 16</msg>
<msg timestamp="20190118 18:22:50.809" level="INFO">${length} = 16</msg>
<status endtime="20190118 18:22:50.809" starttime="20190118 18:22:50.803" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:50.821" starttime="20190118 18:22:50.812" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:50.830" level="INFO">${value} = 10</msg>
<status endtime="20190118 18:22:50.831" starttime="20190118 18:22:50.824" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:50.840" level="INFO">${res} = 0A</msg>
<status endtime="20190118 18:22:50.840" starttime="20190118 18:22:50.834" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:50.848" starttime="20190118 18:22:50.843" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:50.858" level="INFO">${res} = 1E541094000A0000EE05FFF70002AABB</msg>
<status endtime="20190118 18:22:50.858" starttime="20190118 18:22:50.851" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:50.862" level="INFO">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002AABB</msg>
<status endtime="20190118 18:22:50.863" starttime="20190118 18:22:50.786" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:50.872" starttime="20190118 18:22:50.867" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:51.183" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 45 5A 31</msg>
<status endtime="20190118 18:22:51.185" starttime="20190118 18:22:50.875" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:51.193" starttime="20190118 18:22:51.188" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:51.212" level="INFO">${temp1} = 1E105494000A000BEE06FFF7000001455A31</msg>
<status endtime="20190118 18:22:51.213" starttime="20190118 18:22:51.206" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:51.222" level="INFO">${temp2} = EE06FFF700</msg>
<status endtime="20190118 18:22:51.222" starttime="20190118 18:22:51.216" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:51.231" starttime="20190118 18:22:51.225" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:51.233" starttime="20190118 18:22:51.195" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:51.235" starttime="20190118 18:22:50.767" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:51.293" starttime="20190118 18:22:51.244" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:51.346" starttime="20190118 18:22:51.297" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:22:53.354" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:22:53.356" starttime="20190118 18:22:51.349" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:53.405" starttime="20190118 18:22:53.359" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:53.455" starttime="20190118 18:22:53.408" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:53.458" starttime="20190118 18:22:51.237" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:53.482" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F7 00 02</msg>
<status endtime="20190118 18:22:53.483" starttime="20190118 18:22:53.473" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:53.496" starttime="20190118 18:22:53.486" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:53.817" level="INFO">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 43 00 A3 D8</msg>
<status endtime="20190118 18:22:53.818" starttime="20190118 18:22:53.499" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:53.827" starttime="20190118 18:22:53.821" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:53.846" level="INFO">${temp1} = 1E105494000D000BEE04FFF7000200AABB014300A3D8</msg>
<status endtime="20190118 18:22:53.847" starttime="20190118 18:22:53.840" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:53.855" level="INFO">${temp2} = EE04FFF7000200</msg>
<status endtime="20190118 18:22:53.856" starttime="20190118 18:22:53.850" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:53.865" starttime="20190118 18:22:53.859" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:53.867" starttime="20190118 18:22:53.829" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:53.872" level="INFO">${RESP} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 43 00 A3 D8</msg>
<status endtime="20190118 18:22:53.873" starttime="20190118 18:22:53.460" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN} ${EEPROM_APP_OK} ${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:53.891" level="INFO">${temp1} = 1E105494000D000BEE04FFF7000200AABB014300A3D8</msg>
<status endtime="20190118 18:22:53.892" starttime="20190118 18:22:53.885" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:53.900" level="INFO">${temp2} = 000200AABB</msg>
<status endtime="20190118 18:22:53.901" starttime="20190118 18:22:53.895" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:53.915" starttime="20190118 18:22:53.905" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:53.917" starttime="20190118 18:22:53.875" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:53.919" starttime="20190118 18:22:49.243" status="PASS"></status>
</kw>
<kw name="TEST_DIAG_CODING">
<doc>Write and read the EEPROM_DIAG_CODING</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_DIAG_CODING</arg>
</arguments>
<status endtime="20190118 18:22:53.932" starttime="20190118 18:22:53.928" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:53.952" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 00</msg>
<status endtime="20190118 18:22:53.953" starttime="20190118 18:22:53.945" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:53.968" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', '00']</msg>
<status endtime="20190118 18:22:53.968" starttime="20190118 18:22:53.962" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:53.975" level="INFO">Length is 26</msg>
<msg timestamp="20190118 18:22:53.977" level="INFO">${length} = 26</msg>
<status endtime="20190118 18:22:53.978" starttime="20190118 18:22:53.971" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:53.986" starttime="20190118 18:22:53.981" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:53.995" level="INFO">${value} = 20</msg>
<status endtime="20190118 18:22:53.996" starttime="20190118 18:22:53.989" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:54.005" level="INFO">${res} = 14</msg>
<status endtime="20190118 18:22:54.006" starttime="20190118 18:22:53.998" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:54.021" starttime="20190118 18:22:54.013" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:54.031" level="INFO">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status endtime="20190118 18:22:54.032" starttime="20190118 18:22:54.024" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:54.036" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status endtime="20190118 18:22:54.037" starttime="20190118 18:22:53.955" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:54.048" starttime="20190118 18:22:54.042" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:55.408" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 44 5A 31</msg>
<status endtime="20190118 18:22:55.412" starttime="20190118 18:22:54.051" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:55.429" starttime="20190118 18:22:55.421" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:55.448" level="INFO">${temp1} = 1E105494000A000BEE06FFF6000001445A31</msg>
<status endtime="20190118 18:22:55.449" starttime="20190118 18:22:55.442" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:55.457" level="INFO">${temp2} = EE06FFF600</msg>
<status endtime="20190118 18:22:55.459" starttime="20190118 18:22:55.452" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:55.467" starttime="20190118 18:22:55.462" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:55.470" starttime="20190118 18:22:55.431" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:55.472" starttime="20190118 18:22:53.934" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:55.490" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 CC</msg>
<status endtime="20190118 18:22:55.491" starttime="20190118 18:22:55.483" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:55.508" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', 'CC']</msg>
<status endtime="20190118 18:22:55.509" starttime="20190118 18:22:55.502" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:55.515" level="INFO">Length is 26</msg>
<msg timestamp="20190118 18:22:55.518" level="INFO">${length} = 26</msg>
<status endtime="20190118 18:22:55.519" starttime="20190118 18:22:55.512" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:55.531" starttime="20190118 18:22:55.522" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:55.539" level="INFO">${value} = 20</msg>
<status endtime="20190118 18:22:55.540" starttime="20190118 18:22:55.534" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:55.550" level="INFO">${res} = 14</msg>
<status endtime="20190118 18:22:55.550" starttime="20190118 18:22:55.544" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:55.558" starttime="20190118 18:22:55.553" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:55.568" level="INFO">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status endtime="20190118 18:22:55.569" starttime="20190118 18:22:55.562" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:55.573" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status endtime="20190118 18:22:55.574" starttime="20190118 18:22:55.493" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:55.582" starttime="20190118 18:22:55.577" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:55.895" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 45 5A 30</msg>
<status endtime="20190118 18:22:55.896" starttime="20190118 18:22:55.585" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:55.906" starttime="20190118 18:22:55.901" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:55.925" level="INFO">${temp1} = 1E105494000A000BEE06FFF6000001455A30</msg>
<status endtime="20190118 18:22:55.926" starttime="20190118 18:22:55.919" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:55.941" level="INFO">${temp2} = EE06FFF600</msg>
<status endtime="20190118 18:22:55.949" starttime="20190118 18:22:55.929" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:55.967" starttime="20190118 18:22:55.952" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:55.972" starttime="20190118 18:22:55.908" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:55.974" starttime="20190118 18:22:55.474" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:56.031" starttime="20190118 18:22:55.982" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:22:56.082" starttime="20190118 18:22:56.034" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:22:58.090" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:22:58.092" starttime="20190118 18:22:56.086" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:58.142" starttime="20190118 18:22:58.095" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:22:58.193" starttime="20190118 18:22:58.145" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:58.195" starttime="20190118 18:22:55.976" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:58.214" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F6 00 0C</msg>
<status endtime="20190118 18:22:58.214" starttime="20190118 18:22:58.207" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:22:58.223" starttime="20190118 18:22:58.217" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:22:58.537" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 43 00 D5 0E</msg>
<status endtime="20190118 18:22:58.538" starttime="20190118 18:22:58.226" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:22:58.547" starttime="20190118 18:22:58.541" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:58.566" level="INFO">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014300D50E</msg>
<status endtime="20190118 18:22:58.567" starttime="20190118 18:22:58.560" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:58.576" level="INFO">${temp2} = EE04FFF6000C00</msg>
<status endtime="20190118 18:22:58.576" starttime="20190118 18:22:58.570" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:58.585" starttime="20190118 18:22:58.579" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:58.588" starttime="20190118 18:22:58.550" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:58.591" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 43 00 D5 0E</msg>
<status endtime="20190118 18:22:58.592" starttime="20190118 18:22:58.198" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_DIAG_CODING_LEN} ${EEPROM_APP_OK} ${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:22:58.610" level="INFO">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014300D50E</msg>
<status endtime="20190118 18:22:58.611" starttime="20190118 18:22:58.604" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:22:58.619" level="INFO">${temp2} = 000C001115051501FF00017CFF00CC</msg>
<status endtime="20190118 18:22:58.620" starttime="20190118 18:22:58.614" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:22:58.639" starttime="20190118 18:22:58.623" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:58.641" starttime="20190118 18:22:58.594" status="PASS"></status>
</kw>
<status endtime="20190118 18:22:58.643" starttime="20190118 18:22:53.921" status="PASS"></status>
</kw>
<kw name="TEST_RESET_BUFFER">
<doc>Write and read the EEPROM_RESET_BUFFER</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_RESET_BUFFER</arg>
</arguments>
<status endtime="20190118 18:22:58.656" starttime="20190118 18:22:58.652" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:22:58.675" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 00000000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190118 18:22:58.676" starttime="20190118 18:22:58.668" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:22:58.691" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', '00000000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status endtime="20190118 18:22:58.692" starttime="20190118 18:22:58.686" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:22:58.699" level="INFO">Length is 18</msg>
<msg timestamp="20190118 18:22:58.701" level="INFO">${length} = 18</msg>
<status endtime="20190118 18:22:58.702" starttime="20190118 18:22:58.695" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:22:58.710" starttime="20190118 18:22:58.705" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:22:58.718" level="INFO">${value} = 12</msg>
<status endtime="20190118 18:22:58.719" starttime="20190118 18:22:58.713" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:58.728" level="INFO">${res} = 0C</msg>
<status endtime="20190118 18:22:58.729" starttime="20190118 18:22:58.722" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:22:58.736" starttime="20190118 18:22:58.731" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:22:58.746" level="INFO">${res} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190118 18:22:58.747" starttime="20190118 18:22:58.740" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:22:58.751" level="INFO">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190118 18:22:58.752" starttime="20190118 18:22:58.678" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:22:58.761" starttime="20190118 18:22:58.756" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:23:00.124" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 44 5A 32</msg>
<status endtime="20190118 18:23:00.125" starttime="20190118 18:22:58.764" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:23:00.134" starttime="20190118 18:23:00.128" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:23:00.152" level="INFO">${temp1} = 1E105494000A000BEE06FFF5000001445A32</msg>
<status endtime="20190118 18:23:00.153" starttime="20190118 18:23:00.146" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:23:00.161" level="INFO">${temp2} = EE06FFF500</msg>
<status endtime="20190118 18:23:00.162" starttime="20190118 18:23:00.156" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:00.171" starttime="20190118 18:23:00.165" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:00.173" starttime="20190118 18:23:00.136" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:00.175" starttime="20190118 18:22:58.659" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:23:00.194" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 AABB0000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190118 18:23:00.195" starttime="20190118 18:23:00.187" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190118 18:23:00.211" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', 'AABB0000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status endtime="20190118 18:23:00.212" starttime="20190118 18:23:00.205" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190118 18:23:00.219" level="INFO">Length is 18</msg>
<msg timestamp="20190118 18:23:00.221" level="INFO">${length} = 18</msg>
<status endtime="20190118 18:23:00.221" starttime="20190118 18:23:00.215" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status endtime="20190118 18:23:00.233" starttime="20190118 18:23:00.224" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:23:00.242" level="INFO">${value} = 12</msg>
<status endtime="20190118 18:23:00.243" starttime="20190118 18:23:00.236" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:23:00.251" level="INFO">${res} = 0C</msg>
<status endtime="20190118 18:23:00.253" starttime="20190118 18:23:00.246" status="PASS"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:23:00.261" starttime="20190118 18:23:00.255" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:23:00.270" level="INFO">${res} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190118 18:23:00.271" starttime="20190118 18:23:00.263" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:23:00.274" level="INFO">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190118 18:23:00.275" starttime="20190118 18:23:00.197" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status endtime="20190118 18:23:00.284" starttime="20190118 18:23:00.278" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:23:00.729" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 45 5A 33</msg>
<status endtime="20190118 18:23:00.730" starttime="20190118 18:23:00.287" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:23:00.739" starttime="20190118 18:23:00.733" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:23:00.758" level="INFO">${temp1} = 1E105494000A000BEE06FFF5000001455A33</msg>
<status endtime="20190118 18:23:00.760" starttime="20190118 18:23:00.751" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:23:00.769" level="INFO">${temp2} = EE06FFF500</msg>
<status endtime="20190118 18:23:00.769" starttime="20190118 18:23:00.763" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:00.778" starttime="20190118 18:23:00.772" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:00.780" starttime="20190118 18:23:00.741" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:00.782" starttime="20190118 18:23:00.177" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:00.838" starttime="20190118 18:23:00.790" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:00.890" starttime="20190118 18:23:00.842" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:23:02.898" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:23:02.900" starttime="20190118 18:23:00.894" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:23:02.950" starttime="20190118 18:23:02.903" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:23:03.001" starttime="20190118 18:23:02.954" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:03.004" starttime="20190118 18:23:00.784" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190118 18:23:03.022" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F5 00 42</msg>
<status endtime="20190118 18:23:03.023" starttime="20190118 18:23:03.016" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status endtime="20190118 18:23:03.031" starttime="20190118 18:23:03.025" status="PASS"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:23:03.347" level="INFO">${resp} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status endtime="20190118 18:23:03.348" starttime="20190118 18:23:03.034" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status endtime="20190118 18:23:03.357" starttime="20190118 18:23:03.351" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:23:03.376" level="INFO">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014300A5DC</msg>
<status endtime="20190118 18:23:03.377" starttime="20190118 18:23:03.370" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:23:03.386" level="INFO">${temp2} = EE04FFF5004200</msg>
<status endtime="20190118 18:23:03.386" starttime="20190118 18:23:03.380" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:03.395" starttime="20190118 18:23:03.389" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:03.397" starttime="20190118 18:23:03.359" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:23:03.401" level="INFO">${RESP} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status endtime="20190118 18:23:03.401" starttime="20190118 18:23:03.006" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN} ${EEPROM_APP_OK} ${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190118 18:23:03.419" level="INFO">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014300A5DC</msg>
<status endtime="20190118 18:23:03.420" starttime="20190118 18:23:03.413" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190118 18:23:03.428" level="INFO">${temp2} = 004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status endtime="20190118 18:23:03.429" starttime="20190118 18:23:03.423" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:03.442" starttime="20190118 18:23:03.432" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:03.444" starttime="20190118 18:23:03.403" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:03.446" starttime="20190118 18:22:58.645" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status endtime="20190118 18:23:03.467" starttime="20190118 18:23:03.459" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:03.530" starttime="20190118 18:23:03.472" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:03.582" starttime="20190118 18:23:03.534" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:23:03.633" starttime="20190118 18:23:03.585" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:03.635" starttime="20190118 18:23:03.450" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-41553</doc>
<tags>
<tag>EEPROM</tag>
</tags>
<status endtime="20190118 18:23:03.636" critical="yes" starttime="20190118 18:22:31.467" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:23:05.116" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:23:05.152" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:23:05.154" starttime="20190118 18:23:03.692" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:05.155" starttime="20190118 18:23:03.653" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:05.158" starttime="20190118 18:23:03.646" status="PASS"></status>
</kw>
<doc>EEPROM write read test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:23:05.158" starttime="20190118 18:22:29.420" status="PASS"></status>
</suite>
<suite name="SKTB-56663" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56663.robot" id="s1-s14">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:23:05.376" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:23:05.378" starttime="20190118 18:23:05.371" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:23:05.387" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:23:05.388" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:23:07.102" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:23:07.104" starttime="20190118 18:23:05.381" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:07.106" starttime="20190118 18:23:05.366" status="PASS"></status>
</kw>
<test name="SKTB-56663" id="s1-s14-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:07.196" starttime="20190118 18:23:07.136" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:07.245" starttime="20190118 18:23:07.198" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:07.297" starttime="20190118 18:23:07.249" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:23:09.305" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:23:09.307" starttime="20190118 18:23:07.300" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:23:09.359" starttime="20190118 18:23:09.309" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:23:09.409" starttime="20190118 18:23:09.362" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:23:09.458" starttime="20190118 18:23:09.413" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190118 18:23:09.509" starttime="20190118 18:23:09.461" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:23:09.566" starttime="20190118 18:23:09.512" status="PASS"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status endtime="20190118 18:23:09.619" starttime="20190118 18:23:09.569" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:23:11.627" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:23:11.630" starttime="20190118 18:23:09.623" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:11.632" starttime="20190118 18:23:07.127" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:23:11.844" level="INFO">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F E6 01 43 65 3B</msg>
<status endtime="20190118 18:23:11.845" starttime="20190118 18:23:11.641" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:23:11.852" level="INFO">1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F E6 01 43 65 3B</msg>
<status endtime="20190118 18:23:11.855" starttime="20190118 18:23:11.848" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:11.865" starttime="20190118 18:23:11.857" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:11.867" starttime="20190118 18:23:11.634" status="PASS"></status>
</kw>
<kw name="Step_2">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} 00</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190118 18:23:12.076" level="INFO">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 44 B4 24</msg>
<status endtime="20190118 18:23:12.077" starttime="20190118 18:23:11.875" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:23:12.084" level="INFO">1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 44 B4 24</msg>
<status endtime="20190118 18:23:12.087" starttime="20190118 18:23:12.080" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:12.097" starttime="20190118 18:23:12.090" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:12.099" starttime="20190118 18:23:11.869" status="PASS"></status>
</kw>
<kw name="Step_3">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:23:12.307" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 45 4A DF</msg>
<status endtime="20190118 18:23:12.312" starttime="20190118 18:23:12.107" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:23:12.319" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 45 4A DF</msg>
<status endtime="20190118 18:23:12.322" starttime="20190118 18:23:12.315" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:12.332" starttime="20190118 18:23:12.325" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:12.334" starttime="20190118 18:23:12.101" status="PASS"></status>
</kw>
<kw name="Step_4">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_EXCEED} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:23:12.553" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 46 4A DC</msg>
<status endtime="20190118 18:23:12.554" starttime="20190118 18:23:12.342" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:23:12.561" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 46 4A DC</msg>
<status endtime="20190118 18:23:12.564" starttime="20190118 18:23:12.557" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:12.580" starttime="20190118 18:23:12.569" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:12.582" starttime="20190118 18:23:12.336" status="PASS"></status>
</kw>
<kw name="Step_5">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_INVALID} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:23:12.798" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 01 01 41 4B DB</msg>
<status endtime="20190118 18:23:12.799" starttime="20190118 18:23:12.591" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:23:12.807" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 01 01 01 41 4B DB</msg>
<status endtime="20190118 18:23:12.809" starttime="20190118 18:23:12.803" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:12.819" starttime="20190118 18:23:12.812" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:12.821" starttime="20190118 18:23:12.584" status="PASS"></status>
</kw>
<kw name="Step_6">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} 00 ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190118 18:23:13.033" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 00 01 42 4B D9</msg>
<status endtime="20190118 18:23:13.034" starttime="20190118 18:23:12.829" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:23:13.041" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 01 00 01 42 4B D9</msg>
<status endtime="20190118 18:23:13.044" starttime="20190118 18:23:13.037" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:13.053" starttime="20190118 18:23:13.047" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:13.056" starttime="20190118 18:23:12.823" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:13.114" starttime="20190118 18:23:13.065" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:13.163" starttime="20190118 18:23:13.117" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:13.214" starttime="20190118 18:23:13.166" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:23:15.221" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:23:15.224" starttime="20190118 18:23:13.217" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190118 18:23:15.273" starttime="20190118 18:23:15.227" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:23:15.323" starttime="20190118 18:23:15.277" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:15.326" starttime="20190118 18:23:13.059" status="PASS"></status>
</kw>
<doc>Implements SW Test Case SKTB-56663</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status endtime="20190118 18:23:15.327" critical="yes" starttime="20190118 18:23:07.108" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:23:16.796" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:23:16.823" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:23:16.834" starttime="20190118 18:23:15.368" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:16.835" starttime="20190118 18:23:15.342" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:16.837" starttime="20190118 18:23:15.337" status="PASS"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:23:16.838" starttime="20190118 18:23:05.231" status="PASS"></status>
</suite>
<suite name="SKTB-56067" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56067.robot" id="s1-s15">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:23:17.027" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:23:17.029" starttime="20190118 18:23:17.023" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:23:17.038" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:23:17.039" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:23:18.764" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:23:18.765" starttime="20190118 18:23:17.032" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:18.771" starttime="20190118 18:23:17.017" status="PASS"></status>
</kw>
<test name="SKTB-SKTB-56067" id="s1-s15-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:18.856" starttime="20190118 18:23:18.797" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:18.906" starttime="20190118 18:23:18.859" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:19.009" starttime="20190118 18:23:18.921" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:23:21.017" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:23:21.019" starttime="20190118 18:23:19.012" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:23:21.069" starttime="20190118 18:23:21.022" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:23:22.076" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:23:22.078" starttime="20190118 18:23:21.072" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:23:22.129" starttime="20190118 18:23:22.081" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:23:24.136" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:23:24.138" starttime="20190118 18:23:22.132" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:23:24.186" starttime="20190118 18:23:24.141" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190118 18:23:24.237" starttime="20190118 18:23:24.190" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190118 18:23:24.286" starttime="20190118 18:23:24.240" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:23:24.337" starttime="20190118 18:23:24.289" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:24.340" starttime="20190118 18:23:18.791" status="PASS"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate</doc>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:23:24.420" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4153', 'request': '41'}</msg>
<status endtime="20190118 18:23:24.421" starttime="20190118 18:23:24.355" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:23:24.446" level="INFO">${value} = True</msg>
<status endtime="20190118 18:23:24.447" starttime="20190118 18:23:24.424" status="PASS"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190118 18:23:24.455" starttime="20190118 18:23:24.450" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:23:25.463" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:23:25.465" starttime="20190118 18:23:24.458" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:25.467" starttime="20190118 18:23:24.349" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:23:25.536" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4153', 'request': '41'}</msg>
<status endtime="20190118 18:23:25.537" starttime="20190118 18:23:25.475" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:23:25.561" level="INFO">${value} = True</msg>
<status endtime="20190118 18:23:25.562" starttime="20190118 18:23:25.540" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:23:25.569" starttime="20190118 18:23:25.565" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:23:26.577" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:23:26.579" starttime="20190118 18:23:25.572" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:26.581" starttime="20190118 18:23:25.469" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:26.583" starttime="20190118 18:23:24.343" status="PASS"></status>
</kw>
<kw name="POWER_ON_NAD">
<doc>Test the POWER_ON_NAD functionality</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the POWER_ON_NAD</arg>
<arg>functionality</arg>
</arguments>
<status endtime="20190118 18:23:26.606" starttime="20190118 18:23:26.592" status="PASS"></status>
</kw>
<kw name="POWERCYCLE">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:26.691" starttime="20190118 18:23:26.614" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:26.743" starttime="20190118 18:23:26.694" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:26.806" starttime="20190118 18:23:26.746" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:23:28.818" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:23:28.820" starttime="20190118 18:23:26.811" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:23:28.870" starttime="20190118 18:23:28.823" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:23:29.878" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:23:29.880" starttime="20190118 18:23:28.873" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:23:29.933" starttime="20190118 18:23:29.883" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:29.936" starttime="20190118 18:23:26.608" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190118 18:23:29.961" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190118 18:23:29.989" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:23:30.003" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:23:30.007" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:23:30.007" starttime="20190118 18:23:29.956" status="PASS"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190118 18:23:30.017" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190118 18:23:30.018" starttime="20190118 18:23:30.011" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:23:30.025" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:23:30.027" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status endtime="20190118 18:23:30.028" starttime="20190118 18:23:30.020" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190118 18:23:30.036" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190118 18:23:30.036" starttime="20190118 18:23:30.031" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190118 18:23:30.044" starttime="20190118 18:23:30.039" status="PASS"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190118 18:23:30.052" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190118 18:23:30.054" starttime="20190118 18:23:30.047" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:23:30.058" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190118 18:23:30.058" starttime="20190118 18:23:29.948" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:23:30.195" level="INFO">${res_dict} = {'data': '2002e7cf', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:23:30.195" starttime="20190118 18:23:30.061" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:23:30.211" level="INFO">{'data': '2002e7cf', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:23:30.217" starttime="20190118 18:23:30.205" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:23:32.225" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:23:32.227" starttime="20190118 18:23:30.220" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:23:32.252" level="INFO">${value} = 5453</msg>
<status endtime="20190118 18:23:32.253" starttime="20190118 18:23:32.230" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:32.262" starttime="20190118 18:23:32.256" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:32.264" starttime="20190118 18:23:29.943" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:23:32.334" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4953', 'request': '49'}</msg>
<status endtime="20190118 18:23:32.335" starttime="20190118 18:23:32.272" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:23:32.360" level="INFO">${value} = True</msg>
<status endtime="20190118 18:23:32.361" starttime="20190118 18:23:32.339" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:23:32.369" starttime="20190118 18:23:32.365" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:23:33.376" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:23:33.378" starttime="20190118 18:23:32.372" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:33.381" starttime="20190118 18:23:32.266" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:23:33.453" level="INFO">${res_dict} = {'data': '0100', 'status': True, 'result': '475653', 'request': '4756'}</msg>
<status endtime="20190118 18:23:33.454" starttime="20190118 18:23:33.388" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status endtime="20190118 18:23:33.463" starttime="20190118 18:23:33.457" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:23:34.474" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:23:34.476" starttime="20190118 18:23:33.467" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:34.478" starttime="20190118 18:23:33.382" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:34.480" starttime="20190118 18:23:29.938" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_POWERONNAD}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:23:34.551" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '520153', 'request': '5201'}</msg>
<status endtime="20190118 18:23:34.552" starttime="20190118 18:23:34.490" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:23:34.561" starttime="20190118 18:23:34.555" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:23:34.585" level="INFO">${value} = True</msg>
<status endtime="20190118 18:23:34.586" starttime="20190118 18:23:34.563" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:23:34.590" level="INFO">${value} = True</msg>
<status endtime="20190118 18:23:34.591" starttime="20190118 18:23:34.482" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:23:34.598" starttime="20190118 18:23:34.593" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20190118 18:23:44.604" level="INFO">Slept 10 seconds</msg>
<status endtime="20190118 18:23:44.606" starttime="20190118 18:23:34.600" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190118 18:23:44.666" level="INFO">${KLEMME30} = [[12225, 129], [12300, 136]]</msg>
<status endtime="20190118 18:23:44.666" starttime="20190118 18:23:44.615" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190118 18:23:44.691" level="INFO">${CURR_VCARBAT} = 129</msg>
<status endtime="20190118 18:23:44.692" starttime="20190118 18:23:44.669" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190118 18:23:44.717" level="INFO">${CURR_KL30} = 136</msg>
<status endtime="20190118 18:23:44.718" starttime="20190118 18:23:44.694" status="PASS"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190118 18:23:44.726" level="INFO">${TIMENOW} = 1547835824</msg>
<status endtime="20190118 18:23:44.727" starttime="20190118 18:23:44.721" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status endtime="20190118 18:23:44.737" starttime="20190118 18:23:44.730" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:23:44.742" level="INFO">${TIMENOW} = 1547835824</msg>
<msg timestamp="20190118 18:23:44.743" level="INFO">${CURR_VCARBAT} = 129</msg>
<msg timestamp="20190118 18:23:44.744" level="INFO">${CURR_KL30} = 136</msg>
<status endtime="20190118 18:23:44.745" starttime="20190118 18:23:44.609" status="PASS"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<status endtime="20190118 18:23:44.759" starttime="20190118 18:23:44.754" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:23:44.761" level="INFO">${fbus_resp} = None</msg>
<status endtime="20190118 18:23:44.762" starttime="20190118 18:23:44.748" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:44.764" starttime="20190118 18:23:26.586" status="PASS"></status>
</kw>
<kw name="SHUTDOWNSYSTEM">
<doc>Test the shutdownsystem functionality</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the shutdownsystem functionality</arg>
</arguments>
<status endtime="20190118 18:23:44.777" starttime="20190118 18:23:44.772" status="PASS"></status>
</kw>
<kw name="POWERCYCLE">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:44.832" starttime="20190118 18:23:44.785" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:44.885" starttime="20190118 18:23:44.835" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:44.934" starttime="20190118 18:23:44.888" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:23:46.942" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:23:46.945" starttime="20190118 18:23:44.938" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:23:46.997" starttime="20190118 18:23:46.947" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:23:48.005" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:23:48.007" starttime="20190118 18:23:47.000" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:23:48.058" starttime="20190118 18:23:48.010" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:48.061" starttime="20190118 18:23:44.779" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190118 18:23:48.087" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190118 18:23:48.114" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:23:48.129" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:23:48.132" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:23:48.133" starttime="20190118 18:23:48.081" status="PASS"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190118 18:23:48.143" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190118 18:23:48.143" starttime="20190118 18:23:48.137" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:23:48.150" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:23:48.153" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status endtime="20190118 18:23:48.154" starttime="20190118 18:23:48.146" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190118 18:23:48.162" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190118 18:23:48.162" starttime="20190118 18:23:48.157" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190118 18:23:48.170" starttime="20190118 18:23:48.165" status="PASS"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190118 18:23:48.178" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190118 18:23:48.179" starttime="20190118 18:23:48.173" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:23:48.183" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190118 18:23:48.184" starttime="20190118 18:23:48.073" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:23:48.328" level="INFO">${res_dict} = {'data': '2002e7cf', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:23:48.329" starttime="20190118 18:23:48.187" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:23:48.338" level="INFO">{'data': '2002e7cf', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:23:48.341" starttime="20190118 18:23:48.332" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:23:50.360" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:23:50.362" starttime="20190118 18:23:48.344" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:23:50.387" level="INFO">${value} = 5453</msg>
<status endtime="20190118 18:23:50.388" starttime="20190118 18:23:50.365" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:23:50.396" starttime="20190118 18:23:50.391" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:50.399" starttime="20190118 18:23:48.068" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:23:50.467" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4953', 'request': '49'}</msg>
<status endtime="20190118 18:23:50.468" starttime="20190118 18:23:50.407" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:23:50.493" level="INFO">${value} = True</msg>
<status endtime="20190118 18:23:50.493" starttime="20190118 18:23:50.471" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:23:50.500" starttime="20190118 18:23:50.496" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:23:51.507" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:23:51.510" starttime="20190118 18:23:50.503" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:51.512" starttime="20190118 18:23:50.401" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:23:51.585" level="INFO">${res_dict} = {'data': '0100', 'status': True, 'result': '475653', 'request': '4756'}</msg>
<status endtime="20190118 18:23:51.586" starttime="20190118 18:23:51.520" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status endtime="20190118 18:23:51.596" starttime="20190118 18:23:51.589" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:23:52.603" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:23:52.605" starttime="20190118 18:23:51.598" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:52.607" starttime="20190118 18:23:51.514" status="PASS"></status>
</kw>
<status endtime="20190118 18:23:52.609" starttime="20190118 18:23:48.063" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_SHUTDOWNSYSTEM}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:23:52.693" level="INFO">${res_dict} = {'data': '', 'status': False, 'result': '520246', 'request': '5202'}</msg>
<status endtime="20190118 18:23:52.694" starttime="20190118 18:23:52.619" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:23:52.702" starttime="20190118 18:23:52.696" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:23:52.726" level="INFO">${value} = False</msg>
<status endtime="20190118 18:23:52.727" starttime="20190118 18:23:52.705" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:23:52.731" level="INFO">${value} = False</msg>
<status endtime="20190118 18:23:52.731" starttime="20190118 18:23:52.611" status="PASS"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:23:52.738" starttime="20190118 18:23:52.734" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20190118 18:23:57.745" level="INFO">Slept 5 seconds</msg>
<status endtime="20190118 18:23:57.747" starttime="20190118 18:23:52.741" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190118 18:23:57.807" level="INFO">${KLEMME30} = [[12250, 78], [12325, 83]]</msg>
<status endtime="20190118 18:23:57.808" starttime="20190118 18:23:57.756" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190118 18:23:57.833" level="INFO">${CURR_VCARBAT} = 78</msg>
<status endtime="20190118 18:23:57.833" starttime="20190118 18:23:57.811" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190118 18:23:57.858" level="INFO">${CURR_KL30} = 83</msg>
<status endtime="20190118 18:23:57.859" starttime="20190118 18:23:57.836" status="PASS"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190118 18:23:57.867" level="INFO">${TIMENOW} = 1547835837</msg>
<status endtime="20190118 18:23:57.867" starttime="20190118 18:23:57.862" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status endtime="20190118 18:23:57.877" starttime="20190118 18:23:57.870" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:23:57.883" level="INFO">${TIMENOW} = 1547835837</msg>
<msg timestamp="20190118 18:23:57.884" level="INFO">${CURR_VCARBAT} = 78</msg>
<msg timestamp="20190118 18:23:57.885" level="INFO">${CURR_KL30} = 83</msg>
<status endtime="20190118 18:23:57.885" starttime="20190118 18:23:57.749" status="PASS"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<msg timestamp="20190118 18:23:57.900" level="FAIL">'78 &lt; 5' should be true.</msg>
<status endtime="20190118 18:23:57.902" starttime="20190118 18:23:57.894" status="FAIL"></status>
</kw>
<msg timestamp="20190118 18:23:57.904" level="INFO">${fbus_resp} = None</msg>
<status endtime="20190118 18:23:57.904" starttime="20190118 18:23:57.888" status="FAIL"></status>
</kw>
<status endtime="20190118 18:23:57.908" starttime="20190118 18:23:44.766" status="FAIL"></status>
</kw>
<kw name="MCUSTANDBY">
<doc>Test the mcu stanby functionality</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the mcu stanby functionality</arg>
</arguments>
<status endtime="20190118 18:23:57.921" starttime="20190118 18:23:57.916" status="PASS"></status>
</kw>
<kw name="POWERCYCLE">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:57.976" starttime="20190118 18:23:57.928" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:58.027" starttime="20190118 18:23:57.979" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:23:58.077" starttime="20190118 18:23:58.030" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:24:00.084" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:24:00.086" starttime="20190118 18:23:58.080" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:24:00.137" starttime="20190118 18:24:00.089" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:24:01.145" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:24:01.147" starttime="20190118 18:24:00.140" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:24:01.198" starttime="20190118 18:24:01.150" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:01.201" starttime="20190118 18:23:57.923" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190118 18:24:01.228" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190118 18:24:01.255" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:01.270" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:01.273" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:24:01.274" starttime="20190118 18:24:01.222" status="PASS"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190118 18:24:01.283" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190118 18:24:01.284" starttime="20190118 18:24:01.278" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:24:01.292" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:24:01.307" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status endtime="20190118 18:24:01.308" starttime="20190118 18:24:01.287" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190118 18:24:01.317" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190118 18:24:01.318" starttime="20190118 18:24:01.311" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190118 18:24:01.325" starttime="20190118 18:24:01.320" status="PASS"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190118 18:24:01.333" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190118 18:24:01.335" starttime="20190118 18:24:01.328" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:24:01.338" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status endtime="20190118 18:24:01.339" starttime="20190118 18:24:01.213" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:01.475" level="INFO">${res_dict} = {'data': '2002e7cf', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:24:01.476" starttime="20190118 18:24:01.342" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:24:01.491" level="INFO">{'data': '2002e7cf', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:24:01.495" starttime="20190118 18:24:01.483" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:24:03.503" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:24:03.505" starttime="20190118 18:24:01.498" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:03.537" level="INFO">${value} = 5453</msg>
<status endtime="20190118 18:24:03.537" starttime="20190118 18:24:03.511" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:24:03.546" starttime="20190118 18:24:03.540" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:03.548" starttime="20190118 18:24:01.208" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:03.619" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4953', 'request': '49'}</msg>
<status endtime="20190118 18:24:03.620" starttime="20190118 18:24:03.556" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:03.647" level="INFO">${value} = True</msg>
<status endtime="20190118 18:24:03.648" starttime="20190118 18:24:03.623" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:24:03.655" starttime="20190118 18:24:03.651" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:24:04.662" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:24:04.665" starttime="20190118 18:24:03.658" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:04.667" starttime="20190118 18:24:03.550" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:04.741" level="INFO">${res_dict} = {'data': '0100', 'status': True, 'result': '475653', 'request': '4756'}</msg>
<status endtime="20190118 18:24:04.742" starttime="20190118 18:24:04.675" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status endtime="20190118 18:24:04.751" starttime="20190118 18:24:04.745" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:24:05.758" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:24:05.760" starttime="20190118 18:24:04.754" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:05.763" starttime="20190118 18:24:04.669" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:05.765" starttime="20190118 18:24:01.203" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_MCUSTANDBY}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:05.849" level="INFO">${res_dict} = {'data': '', 'status': False, 'result': '520346', 'request': '5203'}</msg>
<status endtime="20190118 18:24:05.850" starttime="20190118 18:24:05.774" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:24:05.858" starttime="20190118 18:24:05.853" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:05.882" level="INFO">${value} = False</msg>
<status endtime="20190118 18:24:05.883" starttime="20190118 18:24:05.861" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:24:05.887" level="INFO">${value} = False</msg>
<status endtime="20190118 18:24:05.888" starttime="20190118 18:24:05.767" status="PASS"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:24:05.895" starttime="20190118 18:24:05.890" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20190118 18:24:10.901" level="INFO">Slept 5 seconds</msg>
<status endtime="20190118 18:24:10.903" starttime="20190118 18:24:05.897" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190118 18:24:10.961" level="INFO">${KLEMME30} = [[12250, 78], [12325, 83]]</msg>
<status endtime="20190118 18:24:10.962" starttime="20190118 18:24:10.912" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190118 18:24:10.987" level="INFO">${CURR_VCARBAT} = 78</msg>
<status endtime="20190118 18:24:10.988" starttime="20190118 18:24:10.966" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190118 18:24:11.013" level="INFO">${CURR_KL30} = 83</msg>
<status endtime="20190118 18:24:11.014" starttime="20190118 18:24:10.991" status="PASS"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190118 18:24:11.022" level="INFO">${TIMENOW} = 1547835851</msg>
<status endtime="20190118 18:24:11.022" starttime="20190118 18:24:11.017" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status endtime="20190118 18:24:11.032" starttime="20190118 18:24:11.025" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:24:11.037" level="INFO">${TIMENOW} = 1547835851</msg>
<msg timestamp="20190118 18:24:11.038" level="INFO">${CURR_VCARBAT} = 78</msg>
<msg timestamp="20190118 18:24:11.039" level="INFO">${CURR_KL30} = 83</msg>
<status endtime="20190118 18:24:11.040" starttime="20190118 18:24:10.906" status="PASS"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<msg timestamp="20190118 18:24:11.055" level="FAIL">'78 &lt; 5' should be true.</msg>
<status endtime="20190118 18:24:11.057" starttime="20190118 18:24:11.049" status="FAIL"></status>
</kw>
<msg timestamp="20190118 18:24:11.058" level="INFO">${fbus_resp} = None</msg>
<status endtime="20190118 18:24:11.059" starttime="20190118 18:24:11.043" status="FAIL"></status>
</kw>
<status endtime="20190118 18:24:11.063" starttime="20190118 18:23:57.910" status="FAIL"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:24:11.125" starttime="20190118 18:24:11.074" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:24:11.175" starttime="20190118 18:24:11.128" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:24:11.226" starttime="20190118 18:24:11.179" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:24:12.234" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:24:12.237" starttime="20190118 18:24:11.230" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:24:12.285" starttime="20190118 18:24:12.239" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:12.287" starttime="20190118 18:24:11.068" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-SKTB-56067 Power testroutine</doc>
<tags>
<tag>Power testroutine</tag>
</tags>
<status endtime="20190118 18:24:12.289" critical="yes" starttime="20190118 18:23:18.773" status="FAIL">Several failures occurred:

1) '78 &lt; 5' should be true.

2) '78 &lt; 5' should be true.</status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:24:13.760" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:24:13.788" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:24:13.790" starttime="20190118 18:24:12.329" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:13.791" starttime="20190118 18:24:12.305" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:13.801" starttime="20190118 18:24:12.300" status="PASS"></status>
</kw>
<doc>Power testroutine testcase</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:24:13.802" starttime="20190118 18:23:16.881" status="FAIL"></status>
</suite>
<suite name="SKTB-56094" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56094.robot" id="s1-s16">
<kw name="Setup Actions" library="chorus_resource" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190118 18:24:14.028" level="INFO">Connecting to tnt-server localhost...</msg>
<status endtime="20190118 18:24:14.030" starttime="20190118 18:24:14.024" status="PASS"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190118 18:24:14.040" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190118 18:24:14.042" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190118 18:24:15.752" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status endtime="20190118 18:24:15.753" starttime="20190118 18:24:14.033" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:15.756" starttime="20190118 18:24:14.018" status="PASS"></status>
</kw>
<test name="SKTB-SKTB-56094" id="s1-s16-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:24:15.833" starttime="20190118 18:24:15.784" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:24:15.897" starttime="20190118 18:24:15.836" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:24:15.953" starttime="20190118 18:24:15.903" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:24:17.961" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:24:17.963" starttime="20190118 18:24:15.955" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:24:18.013" starttime="20190118 18:24:17.966" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:24:19.021" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:24:19.023" starttime="20190118 18:24:18.016" status="PASS"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status endtime="20190118 18:24:19.073" starttime="20190118 18:24:19.026" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:24:21.081" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:24:21.083" starttime="20190118 18:24:19.076" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:24:21.133" starttime="20190118 18:24:21.086" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status endtime="20190118 18:24:21.182" starttime="20190118 18:24:21.136" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status endtime="20190118 18:24:21.233" starttime="20190118 18:24:21.186" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status endtime="20190118 18:24:21.282" starttime="20190118 18:24:21.236" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:21.285" starttime="20190118 18:24:15.771" status="PASS"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate if necessary</doc>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:21.360" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4153', 'request': '41'}</msg>
<status endtime="20190118 18:24:21.361" starttime="20190118 18:24:21.299" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:21.388" level="INFO">${value} = True</msg>
<status endtime="20190118 18:24:21.389" starttime="20190118 18:24:21.364" status="PASS"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status endtime="20190118 18:24:21.398" starttime="20190118 18:24:21.392" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:24:22.405" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:24:22.407" starttime="20190118 18:24:21.400" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:22.409" starttime="20190118 18:24:21.293" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:22.477" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4153', 'request': '41'}</msg>
<status endtime="20190118 18:24:22.478" starttime="20190118 18:24:22.417" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:22.505" level="INFO">${value} = True</msg>
<status endtime="20190118 18:24:22.506" starttime="20190118 18:24:22.481" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:24:22.513" starttime="20190118 18:24:22.509" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:24:23.520" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:24:23.522" starttime="20190118 18:24:22.516" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:23.525" starttime="20190118 18:24:22.411" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:23.527" starttime="20190118 18:24:21.287" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the rtestroutine and init it</doc>
<kw name="Step_load">
<arguments>
<arg>${VEHICLE_TR_PATH}</arg>
</arguments>
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${TESTROUTINE_FILEPATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190118 18:24:23.557" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_*.bin</msg>
<msg timestamp="20190118 18:24:23.584" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:23.599" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:23.602" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:24:23.603" starttime="20190118 18:24:23.551" status="PASS"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190118 18:24:23.615" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status endtime="20190118 18:24:23.616" starttime="20190118 18:24:23.609" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:24:23.624" level="INFO">1 lines returned</msg>
<msg timestamp="20190118 18:24:23.626" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin']</msg>
<status endtime="20190118 18:24:23.627" starttime="20190118 18:24:23.620" status="PASS"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190118 18:24:23.635" level="INFO">${path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status endtime="20190118 18:24:23.636" starttime="20190118 18:24:23.630" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status endtime="20190118 18:24:23.644" starttime="20190118 18:24:23.639" status="PASS"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190118 18:24:23.652" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status endtime="20190118 18:24:23.654" starttime="20190118 18:24:23.647" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:24:23.659" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status endtime="20190118 18:24:23.659" starttime="20190118 18:24:23.541" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:24.254" level="INFO">${res_dict} = {'data': 'd8dd0dd1', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:24:24.255" starttime="20190118 18:24:23.662" status="PASS"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190118 18:24:24.268" level="INFO">{'data': 'd8dd0dd1', 'flowctrl': '', 'status': True, 'request': '', 'response': 'TS', 'result': '5453'}</msg>
<status endtime="20190118 18:24:24.284" starttime="20190118 18:24:24.263" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190118 18:24:26.298" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:24:26.300" starttime="20190118 18:24:24.286" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:26.329" level="INFO">${value} = 5453</msg>
<status endtime="20190118 18:24:26.330" starttime="20190118 18:24:26.303" status="PASS"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:24:26.338" starttime="20190118 18:24:26.332" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:26.340" starttime="20190118 18:24:23.534" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:26.411" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '4953', 'request': '49'}</msg>
<status endtime="20190118 18:24:26.412" starttime="20190118 18:24:26.349" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:26.439" level="INFO">${value} = True</msg>
<status endtime="20190118 18:24:26.440" starttime="20190118 18:24:26.415" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status endtime="20190118 18:24:26.447" starttime="20190118 18:24:26.443" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:24:27.454" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:24:27.457" starttime="20190118 18:24:26.450" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:27.459" starttime="20190118 18:24:26.342" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:27.530" level="INFO">${res_dict} = {'data': '0101', 'status': True, 'result': '475653', 'request': '4756'}</msg>
<status endtime="20190118 18:24:27.531" starttime="20190118 18:24:27.467" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status endtime="20190118 18:24:27.540" starttime="20190118 18:24:27.534" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:24:28.547" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:24:28.550" starttime="20190118 18:24:27.543" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:28.552" starttime="20190118 18:24:27.461" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:28.554" starttime="20190118 18:24:23.529" status="PASS"></status>
</kw>
<kw name="CAN_SENDDATA_CAN1_TEST">
<doc>Test can send and receive data can 1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 1</arg>
</arguments>
<status endtime="20190118 18:24:28.567" starttime="20190118 18:24:28.562" status="PASS"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:24:28.586" starttime="20190118 18:24:28.579" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:24:28.595" level="INFO">Starting process:
sudo ip link set can0 down</msg>
<msg timestamp="20190118 18:24:28.622" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:28.695" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:28.698" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:24:28.699" starttime="20190118 18:24:28.589" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:24:28.711" starttime="20190118 18:24:28.702" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:24:28.721" level="INFO">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg timestamp="20190118 18:24:28.748" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:28.804" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:28.807" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:24:28.807" starttime="20190118 18:24:28.714" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:24:28.820" starttime="20190118 18:24:28.811" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:24:28.829" level="INFO">Starting process:
sudo ip link set can0 up</msg>
<msg timestamp="20190118 18:24:28.905" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:28.983" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:28.986" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:24:28.987" starttime="20190118 18:24:28.823" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:24:28.998" starttime="20190118 18:24:28.990" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:24:29.001" starttime="20190118 18:24:28.569" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:24:29.013" level="INFO">Starting process:
candump -t a can0,767:7FF,768:7FF</msg>
<msg timestamp="20190118 18:24:29.042" level="INFO">${candump_ID} = 207</msg>
<status endtime="20190118 18:24:29.043" starttime="20190118 18:24:29.005" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_0}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg timestamp="20190118 18:24:29.064" level="INFO">Starting process:
cangen can0 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg timestamp="20190118 18:24:29.101" level="INFO">${cangen_ID} = 208</msg>
<status endtime="20190118 18:24:29.102" starttime="20190118 18:24:29.054" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN1}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:29.184" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '534253', 'request': '53420008aabbccdd11223344'}</msg>
<status endtime="20190118 18:24:29.185" starttime="20190118 18:24:29.122" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:24:29.194" starttime="20190118 18:24:29.188" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:29.223" level="INFO">${value} = True</msg>
<status endtime="20190118 18:24:29.224" starttime="20190118 18:24:29.197" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status endtime="20190118 18:24:29.232" starttime="20190118 18:24:29.227" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:29.331" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '520153', 'request': '5201'}</msg>
<status endtime="20190118 18:24:29.333" starttime="20190118 18:24:29.235" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:24:29.351" starttime="20190118 18:24:29.336" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:29.379" level="INFO">${value} = True</msg>
<status endtime="20190118 18:24:29.380" starttime="20190118 18:24:29.354" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status endtime="20190118 18:24:29.388" starttime="20190118 18:24:29.382" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:29.455" level="INFO">${res_dict} = {'data': 'aabbccdd11223344', 'status': True, 'result': '474253', 'request': '4742'}</msg>
<status endtime="20190118 18:24:29.456" starttime="20190118 18:24:29.391" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:24:29.465" starttime="20190118 18:24:29.459" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190118 18:24:29.492" level="INFO">${status} = True</msg>
<status endtime="20190118 18:24:29.493" starttime="20190118 18:24:29.467" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status endtime="20190118 18:24:29.501" starttime="20190118 18:24:29.495" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190118 18:24:29.570" level="INFO">${data} = aabbccdd11223344</msg>
<status endtime="20190118 18:24:29.570" starttime="20190118 18:24:29.504" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:24:29.575" level="INFO">${status} = True</msg>
<msg timestamp="20190118 18:24:29.576" level="INFO">${data} = aabbccdd11223344</msg>
<status endtime="20190118 18:24:29.577" starttime="20190118 18:24:29.112" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status endtime="20190118 18:24:29.590" starttime="20190118 18:24:29.585" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:24:29.599" starttime="20190118 18:24:29.593" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:24:29.613" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:30.117" level="INFO">Process did not complete in 500 milliseconds.</msg>
<msg timestamp="20190118 18:24:30.119" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:24:30.123" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:30.125" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:24:30.126" starttime="20190118 18:24:29.609" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:24:30.134" level="INFO">4 lines returned</msg>
<msg timestamp="20190118 18:24:30.137" level="INFO">${temp} = [' (1547835869.110916)  can0  768   [8]  AA BB CC DD 11 22 33 44', ' (1547835869.266804)  can0  767   [8]  AA BB CC DD 11 22 33 44', ' (1547835869.611156)  can0  768   [8]  AA BB CC DD 11 22 33 44', '...</msg>
<status endtime="20190118 18:24:30.137" starttime="20190118 18:24:30.129" status="PASS"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg timestamp="20190118 18:24:30.144" level="INFO">${FILTER} = ['withoutfilter']</msg>
<status endtime="20190118 18:24:30.145" starttime="20190118 18:24:30.140" status="PASS"></status>
</kw>
<kw name="Set Canid Status And Filter" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status endtime="20190118 18:24:30.152" starttime="20190118 18:24:30.148" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:24:30.160" level="INFO">(1547835869.110916)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1547835869.266804)  can0  767   [8]  AA BB CC DD 11 22 33 44
 (1547835869.611156)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1547835870.111288)  can0  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg timestamp="20190118 18:24:30.162" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1547835869.110916', 'payload': 'AABBCCDD11223344', 'id': '768'}, {'channel': 'can0', 'timestamp': '1547835869.266804', 'payload': 'AABBCCDD11223344', 'id': '767'}, {...</msg>
<status endtime="20190118 18:24:30.163" starttime="20190118 18:24:30.155" status="PASS"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190118 18:24:30.179" level="INFO">${RESULT} = False</msg>
<status endtime="20190118 18:24:30.180" starttime="20190118 18:24:30.174" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:24:30.190" level="INFO">Length is 4</msg>
<msg timestamp="20190118 18:24:30.192" level="INFO">${count} = 4</msg>
<status endtime="20190118 18:24:30.193" starttime="20190118 18:24:30.183" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:24:30.202" starttime="20190118 18:24:30.196" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:24:30.209" level="INFO">${msgcount} = 0</msg>
<status endtime="20190118 18:24:30.210" starttime="20190118 18:24:30.205" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'channel': 'can0', 'timestamp': '1547835869.110916', 'payload': 'AABBCCDD11223344', 'id': '768'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:24:30.224" level="INFO">${payload} = AABBCCDD11223344</msg>
<status endtime="20190118 18:24:30.225" starttime="20190118 18:24:30.218" status="PASS"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190118 18:24:30.235" level="INFO">${can_id} = 768</msg>
<status endtime="20190118 18:24:30.235" starttime="20190118 18:24:30.228" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190118 18:24:30.246" level="INFO">${count_msg} = 1</msg>
<status endtime="20190118 18:24:30.246" starttime="20190118 18:24:30.238" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190118 18:24:30.257" level="INFO">${count_id} = 0</msg>
<status endtime="20190118 18:24:30.257" starttime="20190118 18:24:30.249" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:24:30.266" level="INFO">${msgcount} = 1</msg>
<status endtime="20190118 18:24:30.267" starttime="20190118 18:24:30.260" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190118 18:24:30.278" level="INFO">${RESULT} = False</msg>
<status endtime="20190118 18:24:30.279" starttime="20190118 18:24:30.271" status="PASS"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status endtime="20190118 18:24:30.288" starttime="20190118 18:24:30.282" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:30.289" starttime="20190118 18:24:30.214" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'channel': 'can0', 'timestamp': '1547835869.266804', 'payload': 'AABBCCDD11223344', 'id': '767'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:24:30.298" level="INFO">${payload} = AABBCCDD11223344</msg>
<status endtime="20190118 18:24:30.299" starttime="20190118 18:24:30.294" status="PASS"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190118 18:24:30.307" level="INFO">${can_id} = 767</msg>
<status endtime="20190118 18:24:30.308" starttime="20190118 18:24:30.302" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190118 18:24:30.318" level="INFO">${count_msg} = 1</msg>
<status endtime="20190118 18:24:30.319" starttime="20190118 18:24:30.311" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190118 18:24:30.329" level="INFO">${count_id} = 1</msg>
<status endtime="20190118 18:24:30.330" starttime="20190118 18:24:30.322" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:24:30.339" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:24:30.340" starttime="20190118 18:24:30.333" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190118 18:24:30.350" level="INFO">${RESULT} = True</msg>
<status endtime="20190118 18:24:30.351" starttime="20190118 18:24:30.343" status="PASS"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg timestamp="20190118 18:24:30.360" level="INFO">Exiting for loop altogether.</msg>
<status endtime="20190118 18:24:30.362" starttime="20190118 18:24:30.354" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:30.363" starttime="20190118 18:24:30.291" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:30.363" starttime="20190118 18:24:30.211" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:24:30.367" level="INFO">${res} = True</msg>
<status endtime="20190118 18:24:30.368" starttime="20190118 18:24:30.165" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status endtime="20190118 18:24:30.376" starttime="20190118 18:24:30.370" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:24:30.380" level="INFO">${res} = True</msg>
<status endtime="20190118 18:24:30.381" starttime="20190118 18:24:29.601" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:24:30.388" starttime="20190118 18:24:30.384" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:30.390" starttime="20190118 18:24:28.556" status="PASS"></status>
</kw>
<kw name="CAN_SENDDATA_CAN3_TEST">
<doc>Test can send and receive data can 2</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 2</arg>
</arguments>
<status endtime="20190118 18:24:30.403" starttime="20190118 18:24:30.398" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20190118 18:24:32.409" level="INFO">Slept 2 seconds</msg>
<status endtime="20190118 18:24:32.411" starttime="20190118 18:24:30.405" status="PASS"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status endtime="20190118 18:24:32.430" starttime="20190118 18:24:32.423" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:24:32.440" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190118 18:24:32.467" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:32.537" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:32.540" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:24:32.541" starttime="20190118 18:24:32.433" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:24:32.553" starttime="20190118 18:24:32.545" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:24:32.563" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190118 18:24:32.590" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:32.646" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:32.649" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:24:32.650" starttime="20190118 18:24:32.556" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:24:32.662" starttime="20190118 18:24:32.654" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190118 18:24:32.673" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190118 18:24:32.700" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:32.782" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:32.785" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status endtime="20190118 18:24:32.786" starttime="20190118 18:24:32.665" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status endtime="20190118 18:24:32.798" starttime="20190118 18:24:32.790" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status endtime="20190118 18:24:32.801" starttime="20190118 18:24:32.414" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_2},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190118 18:24:32.815" level="INFO">Starting process:
candump -t a can2,767:7FF,768:7FF</msg>
<msg timestamp="20190118 18:24:32.845" level="INFO">${candump_ID} = 212</msg>
<status endtime="20190118 18:24:32.846" starttime="20190118 18:24:32.804" status="PASS"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_2}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg timestamp="20190118 18:24:32.874" level="INFO">Starting process:
cangen can2 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg timestamp="20190118 18:24:32.904" level="INFO">${cangen_ID} = 213</msg>
<status endtime="20190118 18:24:32.908" starttime="20190118 18:24:32.857" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN3}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:33.005" level="INFO">${res_dict} = {'data': '', 'status': False, 'result': '1efd54', 'request': '53420008aabbccdd11223344'}</msg>
<status endtime="20190118 18:24:33.006" starttime="20190118 18:24:32.928" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:24:33.015" starttime="20190118 18:24:33.009" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:33.044" level="INFO">${value} = False</msg>
<status endtime="20190118 18:24:33.045" starttime="20190118 18:24:33.018" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status endtime="20190118 18:24:33.054" starttime="20190118 18:24:33.048" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:33.117" level="INFO">${res_dict} = {'data': '', 'status': True, 'result': '520353', 'request': '5203'}</msg>
<status endtime="20190118 18:24:33.118" starttime="20190118 18:24:33.057" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:24:33.127" starttime="20190118 18:24:33.122" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190118 18:24:33.155" level="INFO">${value} = True</msg>
<status endtime="20190118 18:24:33.156" starttime="20190118 18:24:33.130" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status endtime="20190118 18:24:33.164" starttime="20190118 18:24:33.159" status="PASS"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190118 18:24:33.231" level="INFO">${res_dict} = {'data': 'aabbccdd11223344', 'status': True, 'result': '474253', 'request': '4742'}</msg>
<status endtime="20190118 18:24:33.233" starttime="20190118 18:24:33.167" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status endtime="20190118 18:24:33.241" starttime="20190118 18:24:33.236" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190118 18:24:33.269" level="INFO">${status} = True</msg>
<status endtime="20190118 18:24:33.269" starttime="20190118 18:24:33.244" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status endtime="20190118 18:24:33.279" starttime="20190118 18:24:33.272" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190118 18:24:33.307" level="INFO">${data} = aabbccdd11223344</msg>
<status endtime="20190118 18:24:33.308" starttime="20190118 18:24:33.282" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:24:33.312" level="INFO">${status} = True</msg>
<msg timestamp="20190118 18:24:33.314" level="INFO">${data} = aabbccdd11223344</msg>
<status endtime="20190118 18:24:33.314" starttime="20190118 18:24:32.911" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status endtime="20190118 18:24:33.322" starttime="20190118 18:24:33.317" status="PASS"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status endtime="20190118 18:24:33.331" starttime="20190118 18:24:33.324" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190118 18:24:33.345" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:33.849" level="INFO">Process did not complete in 500 milliseconds.</msg>
<msg timestamp="20190118 18:24:33.850" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190118 18:24:33.855" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:33.857" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status endtime="20190118 18:24:33.858" starttime="20190118 18:24:33.340" status="PASS"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190118 18:24:33.866" level="INFO">3 lines returned</msg>
<msg timestamp="20190118 18:24:33.869" level="INFO">${temp} = [' (1547835872.921615)  can2  768   [8]  AA BB CC DD 11 22 33 44', ' (1547835873.088079)  can2  767   [8]  AA BB CC DD 11 22 33 44', ' (1547835873.421952)  can2  768   [8]  AA BB CC DD 11 22 33 44']</msg>
<status endtime="20190118 18:24:33.869" starttime="20190118 18:24:33.861" status="PASS"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg timestamp="20190118 18:24:33.876" level="INFO">${FILTER} = ['withoutfilter']</msg>
<status endtime="20190118 18:24:33.877" starttime="20190118 18:24:33.872" status="PASS"></status>
</kw>
<kw name="Set Canid Status And Filter" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status endtime="20190118 18:24:33.884" starttime="20190118 18:24:33.880" status="PASS"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190118 18:24:33.892" level="INFO">(1547835872.921615)  can2  768   [8]  AA BB CC DD 11 22 33 44
 (1547835873.088079)  can2  767   [8]  AA BB CC DD 11 22 33 44
 (1547835873.421952)  can2  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg timestamp="20190118 18:24:33.894" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1547835872.921615', 'payload': 'AABBCCDD11223344', 'id': '768'}, {'channel': 'can2', 'timestamp': '1547835873.088079', 'payload': 'AABBCCDD11223344', 'id': '767'}, {...</msg>
<status endtime="20190118 18:24:33.895" starttime="20190118 18:24:33.887" status="PASS"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190118 18:24:33.911" level="INFO">${RESULT} = False</msg>
<status endtime="20190118 18:24:33.912" starttime="20190118 18:24:33.906" status="PASS"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190118 18:24:33.919" level="INFO">Length is 3</msg>
<msg timestamp="20190118 18:24:33.921" level="INFO">${count} = 3</msg>
<status endtime="20190118 18:24:33.922" starttime="20190118 18:24:33.915" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status endtime="20190118 18:24:33.932" starttime="20190118 18:24:33.925" status="PASS"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:24:33.943" level="INFO">${msgcount} = 0</msg>
<status endtime="20190118 18:24:33.944" starttime="20190118 18:24:33.935" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'channel': 'can2', 'timestamp': '1547835872.921615', 'payload': 'AABBCCDD11223344', 'id': '768'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:24:33.957" level="INFO">${payload} = AABBCCDD11223344</msg>
<status endtime="20190118 18:24:33.958" starttime="20190118 18:24:33.952" status="PASS"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190118 18:24:33.968" level="INFO">${can_id} = 768</msg>
<status endtime="20190118 18:24:33.969" starttime="20190118 18:24:33.961" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190118 18:24:33.980" level="INFO">${count_msg} = 1</msg>
<status endtime="20190118 18:24:33.981" starttime="20190118 18:24:33.973" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190118 18:24:33.993" level="INFO">${count_id} = 0</msg>
<status endtime="20190118 18:24:33.994" starttime="20190118 18:24:33.986" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:24:34.003" level="INFO">${msgcount} = 1</msg>
<status endtime="20190118 18:24:34.004" starttime="20190118 18:24:33.997" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190118 18:24:34.014" level="INFO">${RESULT} = False</msg>
<status endtime="20190118 18:24:34.015" starttime="20190118 18:24:34.007" status="PASS"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status endtime="20190118 18:24:34.025" starttime="20190118 18:24:34.018" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:34.025" starttime="20190118 18:24:33.949" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'channel': 'can2', 'timestamp': '1547835873.088079', 'payload': 'AABBCCDD11223344', 'id': '767'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190118 18:24:34.036" level="INFO">${payload} = AABBCCDD11223344</msg>
<status endtime="20190118 18:24:34.037" starttime="20190118 18:24:34.030" status="PASS"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190118 18:24:34.045" level="INFO">${can_id} = 767</msg>
<status endtime="20190118 18:24:34.046" starttime="20190118 18:24:34.039" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190118 18:24:34.057" level="INFO">${count_msg} = 1</msg>
<status endtime="20190118 18:24:34.057" starttime="20190118 18:24:34.049" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190118 18:24:34.067" level="INFO">${count_id} = 1</msg>
<status endtime="20190118 18:24:34.068" starttime="20190118 18:24:34.060" status="PASS"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190118 18:24:34.078" level="INFO">${msgcount} = 2</msg>
<status endtime="20190118 18:24:34.079" starttime="20190118 18:24:34.071" status="PASS"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190118 18:24:34.089" level="INFO">${RESULT} = True</msg>
<status endtime="20190118 18:24:34.090" starttime="20190118 18:24:34.082" status="PASS"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg timestamp="20190118 18:24:34.099" level="INFO">Exiting for loop altogether.</msg>
<status endtime="20190118 18:24:34.101" starttime="20190118 18:24:34.093" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:34.102" starttime="20190118 18:24:34.027" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:34.102" starttime="20190118 18:24:33.946" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:24:34.106" level="INFO">${res} = True</msg>
<status endtime="20190118 18:24:34.107" starttime="20190118 18:24:33.897" status="PASS"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status endtime="20190118 18:24:34.116" starttime="20190118 18:24:34.110" status="PASS"></status>
</kw>
<msg timestamp="20190118 18:24:34.119" level="INFO">${res} = True</msg>
<status endtime="20190118 18:24:34.120" starttime="20190118 18:24:33.333" status="PASS"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status endtime="20190118 18:24:34.127" starttime="20190118 18:24:34.123" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:34.129" starttime="20190118 18:24:30.392" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:24:34.186" starttime="20190118 18:24:34.139" status="PASS"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:24:34.239" starttime="20190118 18:24:34.189" status="PASS"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status endtime="20190118 18:24:34.297" starttime="20190118 18:24:34.242" status="PASS"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190118 18:24:35.304" level="INFO">Slept 1 second</msg>
<status endtime="20190118 18:24:35.306" starttime="20190118 18:24:34.299" status="PASS"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status endtime="20190118 18:24:35.357" starttime="20190118 18:24:35.309" status="PASS"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg timestamp="20190118 18:24:35.364" level="INFO">Starting process:
pkill candump</msg>
<msg timestamp="20190118 18:24:35.393" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190118 18:24:35.425" level="INFO">Process completed.</msg>
<msg timestamp="20190118 18:24:35.427" level="INFO">${rm_res} = &lt;result object with rc 1&gt;</msg>
<status endtime="20190118 18:24:35.429" starttime="20190118 18:24:35.360" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:35.431" starttime="20190118 18:24:34.133" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-56094 Vehicle buses testroutine</doc>
<tags>
<tag>Vehicle buses testroutine</tag>
</tags>
<status endtime="20190118 18:24:35.433" critical="yes" starttime="20190118 18:24:15.757" status="PASS"></status>
</test>
<kw name="Teardown Actions" library="chorus_resource" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190118 18:24:36.912" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190118 18:24:36.958" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status endtime="20190118 18:24:36.961" starttime="20190118 18:24:35.478" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:36.972" starttime="20190118 18:24:35.452" status="PASS"></status>
</kw>
<status endtime="20190118 18:24:37.000" starttime="20190118 18:24:35.444" status="PASS"></status>
</kw>
<doc>Vehicle buses testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status endtime="20190118 18:24:37.001" starttime="20190118 18:24:13.871" status="PASS"></status>
</suite>
<status endtime="20190118 18:24:37.075" starttime="20190118 18:15:30.826" status="FAIL"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="4">Critical Tests</stat>
<stat pass="12" fail="4">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">CAN 1 diagnose test</stat>
<stat pass="1" fail="0">CAN 3 test</stat>
<stat pass="1" fail="0">CAN 3 test TX</stat>
<stat pass="1" fail="0">EEPROM</stat>
<stat pass="4" fail="0">FBUS</stat>
<stat pass="1" fail="0">Flashing</stat>
<stat pass="0" fail="2">GpioAdc testroutine</stat>
<stat pass="2" fail="1">GPIO Test</stat>
<stat pass="0" fail="1">Power testroutine</stat>
<stat pass="1" fail="0">Vehicle buses testroutine</stat>
</tag>
<suite>
<stat pass="12" fail="4" name="Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094" id="s1">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094</stat>
<stat pass="1" fail="0" name="Update-Nad" id="s1-s1">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.Update-Nad</stat>
<stat pass="1" fail="0" name="CI update chorus" id="s1-s2">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.CI update chorus</stat>
<stat pass="0" fail="1" name="SKTB-31405" id="s1-s3">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-31405</stat>
<stat pass="0" fail="1" name="SKTB-33244" id="s1-s4">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-33244</stat>
<stat pass="1" fail="0" name="SKTB-13351" id="s1-s5">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-13351</stat>
<stat pass="1" fail="0" name="SKTB-34994" id="s1-s6">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-34994</stat>
<stat pass="1" fail="0" name="SKTB-41635" id="s1-s7">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-41635</stat>
<stat pass="1" fail="0" name="SKTB-46886" id="s1-s8">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-46886</stat>
<stat pass="1" fail="0" name="SKTB-47669" id="s1-s9">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-47669</stat>
<stat pass="1" fail="0" name="SKTB-48413" id="s1-s10">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-48413</stat>
<stat pass="0" fail="1" name="SKTB-49038" id="s1-s11">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-49038</stat>
<stat pass="1" fail="0" name="SKTB-49357" id="s1-s12">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-49357</stat>
<stat pass="1" fail="0" name="SKTB-41553" id="s1-s13">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-41553</stat>
<stat pass="1" fail="0" name="SKTB-56663" id="s1-s14">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-56663</stat>
<stat pass="0" fail="1" name="SKTB-56067" id="s1-s15">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-56067</stat>
<stat pass="1" fail="0" name="SKTB-56094" id="s1-s16">Update-Nad &amp; CI update chorus &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094.SKTB-56094</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
