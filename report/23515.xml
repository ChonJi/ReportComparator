<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.2 (Python 3.5.3 on linux)" generated="20190121 11:31:38.870">
<suite id="s1" name="Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571">
<suite id="s1-s1" name="Update-Nad" source="/usr/share/robot-framework-scripts/robot-framework-chorus/update-nad.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:31:44.328" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:31:44.323" endtime="20190121 11:31:44.330" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:31:44.342" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:31:44.343" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:31:46.417" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:31:44.333" endtime="20190121 11:31:46.419" status="PASS"></status>
</kw>
<status starttime="20190121 11:31:44.317" endtime="20190121 11:31:46.421" status="PASS"></status>
</kw>
<test id="s1-s1-t1" name="SKTB-13351 FBUS test">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:31:46.438" endtime="20190121 11:31:46.511" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:31:46.514" endtime="20190121 11:31:46.567" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:31:46.570" endtime="20190121 11:31:46.625" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:31:48.633" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:31:46.628" endtime="20190121 11:31:48.635" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:31:48.638" endtime="20190121 11:31:48.685" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:31:48.688" endtime="20190121 11:31:48.737" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>45s</arg>
</arguments>
<msg timestamp="20190121 11:32:33.744" level="INFO">Slept 45 seconds</msg>
<status starttime="20190121 11:31:48.740" endtime="20190121 11:32:33.746" status="PASS"></status>
</kw>
<status starttime="20190121 11:31:46.433" endtime="20190121 11:32:33.748" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:32:33.761" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</msg>
<msg timestamp="20190121 11:32:33.784" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:32:39.326" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:32:39.329" level="INFO">${info} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:32:33.757" endtime="20190121 11:32:39.330" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status starttime="20190121 11:32:39.333" endtime="20190121 11:32:39.340" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:32:39.347" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</msg>
<msg timestamp="20190121 11:32:39.370" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:32:42.901" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:32:42.904" level="INFO">${info} = &lt;result object with rc 100&gt;</msg>
<status starttime="20190121 11:32:39.343" endtime="20190121 11:32:42.909" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status starttime="20190121 11:32:42.945" endtime="20190121 11:32:42.991" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:32:43.028" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</msg>
<msg timestamp="20190121 11:32:43.102" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:32:45.382" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:32:45.386" level="INFO">${info} = &lt;result object with rc 100&gt;</msg>
<status starttime="20190121 11:32:42.998" endtime="20190121 11:32:45.387" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status starttime="20190121 11:32:45.391" endtime="20190121 11:32:45.398" status="PASS"></status>
</kw>
<status starttime="20190121 11:32:33.751" endtime="20190121 11:32:45.401" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:32:45.411" endtime="20190121 11:32:45.462" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:32:45.465" endtime="20190121 11:32:45.557" status="PASS"></status>
</kw>
<status starttime="20190121 11:32:45.404" endtime="20190121 11:32:45.560" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-update-nad</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status starttime="20190121 11:31:46.423" critical="yes" endtime="20190121 11:32:45.576" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:32:47.299" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:32:47.365" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:32:45.807" endtime="20190121 11:32:47.381" status="PASS"></status>
</kw>
<status starttime="20190121 11:32:45.648" endtime="20190121 11:32:47.382" status="PASS"></status>
</kw>
<status starttime="20190121 11:32:45.621" endtime="20190121 11:32:47.384" status="PASS"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:31:39.346" endtime="20190121 11:32:47.385" status="PASS"></status>
</suite>
<suite id="s1-s2" name="CI update chorus" source="/usr/share/robot-framework-scripts/robot-framework-chorus/CI_update_chorus.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:32:47.967" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:32:47.948" endtime="20190121 11:32:47.983" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:32:47.999" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:32:48.001" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:32:50.173" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:32:47.986" endtime="20190121 11:32:50.186" status="PASS"></status>
</kw>
<status starttime="20190121 11:32:47.942" endtime="20190121 11:32:50.188" status="PASS"></status>
</kw>
<test id="s1-s2-t1" name="Ci_update_chorus Chorus SW Flashing">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:32:50.242" endtime="20190121 11:32:50.337" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:32:50.340" endtime="20190121 11:32:50.443" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:32:50.446" endtime="20190121 11:32:50.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:32:52.550" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:32:50.546" endtime="20190121 11:32:52.552" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:32:52.555" endtime="20190121 11:32:52.600" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status starttime="20190121 11:32:52.603" endtime="20190121 11:32:52.649" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:32:52.653" endtime="20190121 11:32:52.702" status="PASS"></status>
</kw>
<status starttime="20190121 11:32:50.221" endtime="20190121 11:32:52.704" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:32:54.717" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:32:52.713" endtime="20190121 11:32:54.720" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:34:25.035" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:32:54.722" endtime="20190121 11:34:25.036" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:34:25.043" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:34:25.039" endtime="20190121 11:34:25.046" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:34:25.049" endtime="20190121 11:34:25.054" status="PASS"></status>
</kw>
<status starttime="20190121 11:32:52.707" endtime="20190121 11:34:25.056" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:34:25.066" endtime="20190121 11:34:25.114" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:34:25.117" endtime="20190121 11:34:25.163" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:34:25.166" endtime="20190121 11:34:25.213" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:34:25.216" endtime="20190121 11:34:25.281" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:34:25.287" endtime="20190121 11:34:25.354" status="PASS"></status>
</kw>
<status starttime="20190121 11:34:25.060" endtime="20190121 11:34:25.356" status="PASS"></status>
</kw>
<doc>Implements Test Task Ci_update_chorus</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status starttime="20190121 11:32:50.190" critical="yes" endtime="20190121 11:34:25.362" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:34:26.891" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:34:26.922" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:34:25.406" endtime="20190121 11:34:26.924" status="PASS"></status>
</kw>
<status starttime="20190121 11:34:25.384" endtime="20190121 11:34:26.925" status="PASS"></status>
</kw>
<status starttime="20190121 11:34:25.378" endtime="20190121 11:34:26.928" status="PASS"></status>
</kw>
<doc>Serial flashing test fof CI</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:32:47.502" endtime="20190121 11:34:26.944" status="PASS"></status>
</suite>
<suite id="s1-s3" name="SKTB-31396" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-31396.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:34:27.517" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:34:27.507" endtime="20190121 11:34:27.526" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:34:27.541" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:34:27.543" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:34:29.585" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:34:27.529" endtime="20190121 11:34:29.587" status="PASS"></status>
</kw>
<status starttime="20190121 11:34:27.502" endtime="20190121 11:34:29.590" status="PASS"></status>
</kw>
<test id="s1-s3-t1" name="SKTB-31396 Chorus SW Flashing">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:34:29.607" endtime="20190121 11:34:29.723" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:34:29.726" endtime="20190121 11:34:29.818" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:34:29.821" endtime="20190121 11:34:29.910" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:34:31.918" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:34:29.913" endtime="20190121 11:34:31.920" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:34:31.923" endtime="20190121 11:34:31.972" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status starttime="20190121 11:34:31.975" endtime="20190121 11:34:32.037" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:34:32.039" endtime="20190121 11:34:32.139" status="PASS"></status>
</kw>
<status starttime="20190121 11:34:29.602" endtime="20190121 11:34:32.141" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:34:34.163" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:34:32.159" endtime="20190121 11:34:34.165" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:36:02.142" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:34:34.168" endtime="20190121 11:36:02.143" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:36:02.150" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:36:02.146" endtime="20190121 11:36:02.153" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:36:04.160" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:36:02.156" endtime="20190121 11:36:04.162" status="PASS"></status>
</kw>
<status starttime="20190121 11:34:32.144" endtime="20190121 11:36:04.164" status="PASS"></status>
</kw>
<kw name="Step_2">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:36:06.185" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:36:04.173" endtime="20190121 11:36:06.189" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:37:42.684" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:36:06.192" endtime="20190121 11:37:42.685" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:37:42.692" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:37:42.688" endtime="20190121 11:37:42.695" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:37:42.697" endtime="20190121 11:37:42.702" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:37:44.709" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:37:42.705" endtime="20190121 11:37:44.711" status="PASS"></status>
</kw>
<status starttime="20190121 11:36:04.166" endtime="20190121 11:37:44.713" status="PASS"></status>
</kw>
<kw name="Step_3">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:37:46.725" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:37:44.720" endtime="20190121 11:37:46.727" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH_PBL_CORRUPT}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:38:32.746" level="INFO">${RESULT} = Error transferring from pos: 114176</msg>
<status starttime="20190121 11:37:46.730" endtime="20190121 11:38:32.747" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:38:32.755" level="INFO">Error transferring from pos: 114176</msg>
<status starttime="20190121 11:38:32.750" endtime="20190121 11:38:32.758" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Contain">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:38:32.761" endtime="20190121 11:38:32.765" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:38:34.772" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:38:32.768" endtime="20190121 11:38:34.774" status="PASS"></status>
</kw>
<status starttime="20190121 11:37:44.715" endtime="20190121 11:38:34.776" status="PASS"></status>
</kw>
<kw name="Step_4">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:38:36.788" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:38:34.784" endtime="20190121 11:38:36.790" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH_APPL_CORRUPT}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:40:03.193" level="INFO">${RESULT} = Error transferring from pos: 453120</msg>
<status starttime="20190121 11:38:36.793" endtime="20190121 11:40:03.194" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:40:03.202" level="INFO">Error transferring from pos: 453120</msg>
<status starttime="20190121 11:40:03.197" endtime="20190121 11:40:03.205" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Contain">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:40:03.207" endtime="20190121 11:40:03.212" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:40:05.229" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:40:03.215" endtime="20190121 11:40:05.231" status="PASS"></status>
</kw>
<status starttime="20190121 11:38:34.778" endtime="20190121 11:40:05.237" status="PASS"></status>
</kw>
<kw name="Step_5">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:40:07.271" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:40:05.266" endtime="20190121 11:40:07.273" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:41:35.043" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:40:07.276" endtime="20190121 11:41:35.044" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:41:35.051" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:41:35.047" endtime="20190121 11:41:35.054" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:41:35.056" endtime="20190121 11:41:35.061" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:41:37.068" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:41:35.064" endtime="20190121 11:41:37.070" status="PASS"></status>
</kw>
<status starttime="20190121 11:40:05.239" endtime="20190121 11:41:37.072" status="PASS"></status>
</kw>
<kw name="Step_6">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:41:39.084" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:41:37.080" endtime="20190121 11:41:39.086" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:43:12.193" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:41:39.089" endtime="20190121 11:43:12.194" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:43:12.210" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:43:12.205" endtime="20190121 11:43:12.212" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:43:12.215" endtime="20190121 11:43:12.220" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:43:14.226" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:43:12.223" endtime="20190121 11:43:14.229" status="PASS"></status>
</kw>
<status starttime="20190121 11:41:37.074" endtime="20190121 11:43:14.231" status="PASS"></status>
</kw>
<kw name="Step_7">
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:43:16.243" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:43:14.239" endtime="20190121 11:43:16.245" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:44:49.634" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:43:16.248" endtime="20190121 11:44:49.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:44:49.642" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:44:49.638" endtime="20190121 11:44:49.644" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:44:49.647" endtime="20190121 11:44:49.652" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:44:51.659" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:44:49.655" endtime="20190121 11:44:51.661" status="PASS"></status>
</kw>
<status starttime="20190121 11:43:14.233" endtime="20190121 11:44:51.663" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:44:51.673" endtime="20190121 11:44:51.721" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:44:51.724" endtime="20190121 11:44:51.770" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:44:51.772" endtime="20190121 11:44:51.819" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:44:51.822" endtime="20190121 11:44:51.869" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:44:51.872" endtime="20190121 11:44:51.919" status="PASS"></status>
</kw>
<status starttime="20190121 11:44:51.666" endtime="20190121 11:44:51.922" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-31396</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status starttime="20190121 11:34:29.592" critical="yes" endtime="20190121 11:44:51.924" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:44:53.451" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:44:53.522" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:44:51.961" endtime="20190121 11:44:53.523" status="PASS"></status>
</kw>
<status starttime="20190121 11:44:51.939" endtime="20190121 11:44:53.525" status="PASS"></status>
</kw>
<status starttime="20190121 11:44:51.933" endtime="20190121 11:44:53.546" status="PASS"></status>
</kw>
<doc>Serial flashing test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:34:27.095" endtime="20190121 11:44:53.547" status="PASS"></status>
</suite>
<suite id="s1-s4" name="SKTB-31405" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-31405.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:44:54.196" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:44:54.172" endtime="20190121 11:44:54.210" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:44:54.242" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:44:54.243" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:44:56.400" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:44:54.213" endtime="20190121 11:44:56.402" status="PASS"></status>
</kw>
<status starttime="20190121 11:44:54.167" endtime="20190121 11:44:56.404" status="PASS"></status>
</kw>
<test id="s1-s4-t1" name="SKTB-31405 GpioAdc testroutine">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:44:56.439" endtime="20190121 11:44:56.565" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:44:56.568" endtime="20190121 11:44:56.648" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:44:56.651" endtime="20190121 11:44:56.751" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:44:58.784" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:44:56.758" endtime="20190121 11:44:58.787" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:44:58.789" endtime="20190121 11:44:58.838" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:44:59.846" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:44:58.842" endtime="20190121 11:44:59.848" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:44:59.851" endtime="20190121 11:44:59.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:45:01.906" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:44:59.902" endtime="20190121 11:45:01.908" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:45:01.911" endtime="20190121 11:45:01.957" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:45:01.960" endtime="20190121 11:45:02.006" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:45:02.009" endtime="20190121 11:45:02.055" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:45:02.059" endtime="20190121 11:45:02.105" status="PASS"></status>
</kw>
<status starttime="20190121 11:44:56.433" endtime="20190121 11:45:02.107" status="PASS"></status>
</kw>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:02.190" level="INFO">${res_dict} = {'result': '4153', 'data': '', 'status': True, 'request': '41'}</msg>
<status starttime="20190121 11:45:02.116" endtime="20190121 11:45:02.191" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:02.244" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:02.195" endtime="20190121 11:45:02.245" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:45:02.257" endtime="20190121 11:45:02.266" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:03.273" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:02.268" endtime="20190121 11:45:03.275" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:02.110" endtime="20190121 11:45:03.277" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:03.346" level="INFO">${res_dict} = {'result': '4153', 'data': '', 'status': True, 'request': '41'}</msg>
<status starttime="20190121 11:45:03.285" endtime="20190121 11:45:03.347" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:03.373" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:03.350" endtime="20190121 11:45:03.373" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:03.376" endtime="20190121 11:45:03.380" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:04.392" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:03.383" endtime="20190121 11:45:04.394" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:03.279" endtime="20190121 11:45:04.397" status="PASS"></status>
</kw>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:45:04.438" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg timestamp="20190121 11:45:04.465" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:45:04.481" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:45:04.484" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:45:04.429" endtime="20190121 11:45:04.485" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:45:04.494" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:45:04.488" endtime="20190121 11:45:04.494" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:45:04.501" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:45:04.503" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status starttime="20190121 11:45:04.497" endtime="20190121 11:45:04.504" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:45:04.515" level="INFO">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:45:04.507" endtime="20190121 11:45:04.516" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:45:04.519" endtime="20190121 11:45:04.525" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190121 11:45:04.532" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:45:04.528" endtime="20190121 11:45:04.534" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:45:04.538" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:45:04.411" endtime="20190121 11:45:04.539" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:04.706" level="INFO">${res_dict} = {'result': '5453', 'request': '', 'data': '5d2b7873', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:45:04.542" endtime="20190121 11:45:04.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:45:04.722" level="INFO">{'result': '5453', 'request': '', 'data': '5d2b7873', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:45:04.715" endtime="20190121 11:45:04.725" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:45:06.732" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:45:04.728" endtime="20190121 11:45:06.734" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:06.761" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:45:06.737" endtime="20190121 11:45:06.761" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:45:06.764" endtime="20190121 11:45:06.770" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:04.399" endtime="20190121 11:45:06.772" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:06.840" level="INFO">${res_dict} = {'result': '4953', 'data': '', 'status': True, 'request': '49'}</msg>
<status starttime="20190121 11:45:06.780" endtime="20190121 11:45:06.841" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:06.867" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:06.844" endtime="20190121 11:45:06.868" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:06.871" endtime="20190121 11:45:06.875" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:07.892" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:06.877" endtime="20190121 11:45:07.898" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:06.774" endtime="20190121 11:45:07.900" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:08.197" level="INFO">${res_dict} = {'result': '475653', 'data': '0201', 'status': True, 'request': '4756'}</msg>
<status starttime="20190121 11:45:07.965" endtime="20190121 11:45:08.198" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:09.241" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:08.226" endtime="20190121 11:45:09.243" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:07.934" endtime="20190121 11:45:09.246" status="PASS"></status>
</kw>
<kw name="Step_gpio_select">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:09.589" level="INFO">${res_dict} = {'result': '534653', 'data': '', 'status': True, 'request': '53460000006d'}</msg>
<status starttime="20190121 11:45:09.266" endtime="20190121 11:45:09.590" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:09.657" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:09.593" endtime="20190121 11:45:09.658" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:09.660" endtime="20190121 11:45:09.665" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:09.786" level="INFO">${res_dict} = {'result': '520153', 'data': '', 'status': True, 'request': '5201'}</msg>
<status starttime="20190121 11:45:09.674" endtime="20190121 11:45:09.786" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:09.845" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:09.800" endtime="20190121 11:45:09.845" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:09.849" endtime="20190121 11:45:09.888" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:10.907" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:09.891" endtime="20190121 11:45:10.909" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:09.247" endtime="20190121 11:45:10.912" status="PASS"></status>
</kw>
<kw name="Step_gpio_write">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:10.980" level="INFO">${res_dict} = {'result': '534653', 'data': '', 'status': True, 'request': '534600000001'}</msg>
<status starttime="20190121 11:45:10.919" endtime="20190121 11:45:10.982" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:11.009" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:10.985" endtime="20190121 11:45:11.010" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:11.012" endtime="20190121 11:45:11.017" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${GpioWrite}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:11.094" level="INFO">${res_dict} = {'result': '1efd54', 'data': '', 'status': False, 'request': '5204'}</msg>
<status starttime="20190121 11:45:11.019" endtime="20190121 11:45:11.095" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:11.121" level="INFO">${value} = False</msg>
<status starttime="20190121 11:45:11.099" endtime="20190121 11:45:11.122" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20190121 11:45:11.131" level="FAIL">'False' should be true.</msg>
<status starttime="20190121 11:45:11.125" endtime="20190121 11:45:11.132" status="FAIL"></status>
</kw>
<status starttime="20190121 11:45:10.914" endtime="20190121 11:45:11.135" status="FAIL"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:11.148" endtime="20190121 11:45:11.212" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:11.215" endtime="20190121 11:45:11.285" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:11.288" endtime="20190121 11:45:11.346" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:45:13.355" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:45:11.350" endtime="20190121 11:45:13.357" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:45:13.360" endtime="20190121 11:45:13.405" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:11.139" endtime="20190121 11:45:13.408" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-31405</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status starttime="20190121 11:44:56.415" critical="yes" endtime="20190121 11:45:13.409" status="FAIL">'False' should be true.</status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:45:14.960" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:45:15.029" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:45:13.451" endtime="20190121 11:45:15.031" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:13.425" endtime="20190121 11:45:15.032" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:13.419" endtime="20190121 11:45:15.087" status="PASS"></status>
</kw>
<doc>Chorus GpioAdc testing with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:44:53.724" endtime="20190121 11:45:15.088" status="FAIL"></status>
</suite>
<suite id="s1-s5" name="SKTB-33244" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-33244.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:45:15.761" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:45:15.744" endtime="20190121 11:45:15.783" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:45:15.801" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:45:15.803" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:45:18.032" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:45:15.786" endtime="20190121 11:45:18.033" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:15.738" endtime="20190121 11:45:18.045" status="PASS"></status>
</kw>
<test id="s1-s5-t1" name="SKTB-33244 Test ADC channels">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:18.097" endtime="20190121 11:45:18.204" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:18.206" endtime="20190121 11:45:18.318" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:18.321" endtime="20190121 11:45:18.458" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:45:20.477" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:45:18.463" endtime="20190121 11:45:20.479" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:45:20.482" endtime="20190121 11:45:20.530" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:21.538" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:20.534" endtime="20190121 11:45:21.540" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:45:21.543" endtime="20190121 11:45:21.591" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:45:23.599" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:45:21.594" endtime="20190121 11:45:23.601" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:45:23.604" endtime="20190121 11:45:23.706" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:45:23.709" endtime="20190121 11:45:23.778" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:45:23.781" endtime="20190121 11:45:23.848" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:45:23.851" endtime="20190121 11:45:23.937" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:18.078" endtime="20190121 11:45:23.940" status="PASS"></status>
</kw>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:24.019" level="INFO">${res_dict} = {'result': '4153', 'data': '', 'status': True, 'request': '41'}</msg>
<status starttime="20190121 11:45:23.956" endtime="20190121 11:45:24.021" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:24.053" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:24.024" endtime="20190121 11:45:24.054" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:45:24.057" endtime="20190121 11:45:24.063" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:25.070" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:24.066" endtime="20190121 11:45:25.072" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:23.947" endtime="20190121 11:45:25.075" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:25.142" level="INFO">${res_dict} = {'result': '4153', 'data': '', 'status': True, 'request': '41'}</msg>
<status starttime="20190121 11:45:25.083" endtime="20190121 11:45:25.143" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:25.176" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:25.147" endtime="20190121 11:45:25.177" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:25.180" endtime="20190121 11:45:25.184" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:26.191" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:25.187" endtime="20190121 11:45:26.193" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:25.077" endtime="20190121 11:45:26.195" status="PASS"></status>
</kw>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:45:26.218" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg timestamp="20190121 11:45:26.243" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:45:26.258" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:45:26.261" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:45:26.212" endtime="20190121 11:45:26.262" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:45:26.271" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:45:26.266" endtime="20190121 11:45:26.272" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:45:26.282" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:45:26.284" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status starttime="20190121 11:45:26.275" endtime="20190121 11:45:26.285" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:45:26.294" level="INFO">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:45:26.288" endtime="20190121 11:45:26.295" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:45:26.298" endtime="20190121 11:45:26.303" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190121 11:45:26.311" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:45:26.306" endtime="20190121 11:45:26.312" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:45:26.316" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status starttime="20190121 11:45:26.204" endtime="20190121 11:45:26.317" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:26.479" level="INFO">${res_dict} = {'result': '5453', 'request': '', 'data': '5d2b7873', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:45:26.320" endtime="20190121 11:45:26.480" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:45:28.493" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:45:26.488" endtime="20190121 11:45:28.495" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:28.527" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:45:28.498" endtime="20190121 11:45:28.528" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:45:28.531" endtime="20190121 11:45:28.537" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:26.198" endtime="20190121 11:45:28.539" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:28.610" level="INFO">${res_dict} = {'result': '4953', 'data': '', 'status': True, 'request': '49'}</msg>
<status starttime="20190121 11:45:28.547" endtime="20190121 11:45:28.611" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:28.644" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:28.614" endtime="20190121 11:45:28.644" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:28.647" endtime="20190121 11:45:28.651" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:29.661" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:28.654" endtime="20190121 11:45:29.663" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:28.541" endtime="20190121 11:45:29.665" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:29.750" level="INFO">${res_dict} = {'result': '475653', 'data': '0201', 'status': True, 'request': '4756'}</msg>
<status starttime="20190121 11:45:29.685" endtime="20190121 11:45:29.751" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:30.760" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:29.755" endtime="20190121 11:45:30.762" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:29.667" endtime="20190121 11:45:30.764" status="PASS"></status>
</kw>
<kw name="Step_gpio_select">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:30.835" level="INFO">${res_dict} = {'result': '534653', 'data': '', 'status': True, 'request': '53460000006d'}</msg>
<status starttime="20190121 11:45:30.773" endtime="20190121 11:45:30.836" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:30.869" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:30.839" endtime="20190121 11:45:30.869" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:30.872" endtime="20190121 11:45:30.876" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:30.941" level="INFO">${res_dict} = {'result': '520153', 'data': '', 'status': True, 'request': '5201'}</msg>
<status starttime="20190121 11:45:30.879" endtime="20190121 11:45:30.942" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:30.977" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:30.948" endtime="20190121 11:45:30.978" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:30.981" endtime="20190121 11:45:30.986" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:31.993" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:30.988" endtime="20190121 11:45:31.995" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:30.767" endtime="20190121 11:45:31.997" status="PASS"></status>
</kw>
<kw name="Step_gpio_write">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:32.067" level="INFO">${res_dict} = {'result': '534653', 'data': '', 'status': True, 'request': '534600000001'}</msg>
<status starttime="20190121 11:45:32.005" endtime="20190121 11:45:32.068" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:32.102" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:32.072" endtime="20190121 11:45:32.103" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:32.105" endtime="20190121 11:45:32.110" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${GpioWrite}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:32.174" level="INFO">${res_dict} = {'result': '520453', 'data': '', 'status': True, 'request': '5204'}</msg>
<status starttime="20190121 11:45:32.112" endtime="20190121 11:45:32.175" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:32.210" level="INFO">${value} = True</msg>
<status starttime="20190121 11:45:32.178" endtime="20190121 11:45:32.211" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:45:32.214" endtime="20190121 11:45:32.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:45:33.234" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:32.229" endtime="20190121 11:45:33.236" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:31.999" endtime="20190121 11:45:33.238" status="PASS"></status>
</kw>
<kw name="Step_adc_read_channel">
<kw name="check_analog_channel">
<arguments>
<arg>${CARBAT_V_SENSE}</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:45:33.334" level="INFO">${res_dict} = {'result': '1efd54', 'data': '', 'status': False, 'request': '53460000004d'}</msg>
<status starttime="20190121 11:45:33.252" endtime="20190121 11:45:33.335" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:45:33.367" level="INFO">${value} = False</msg>
<status starttime="20190121 11:45:33.338" endtime="20190121 11:45:33.368" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20190121 11:45:33.376" level="FAIL">'False' should be true.</msg>
<status starttime="20190121 11:45:33.371" endtime="20190121 11:45:33.378" status="FAIL"></status>
</kw>
<status starttime="20190121 11:45:33.245" endtime="20190121 11:45:33.380" status="FAIL"></status>
</kw>
<status starttime="20190121 11:45:33.240" endtime="20190121 11:45:33.383" status="FAIL"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:33.393" endtime="20190121 11:45:33.441" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:33.444" endtime="20190121 11:45:33.497" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:33.499" endtime="20190121 11:45:33.577" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:45:35.588" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:45:33.580" endtime="20190121 11:45:35.590" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:45:35.603" endtime="20190121 11:45:35.702" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:33.387" endtime="20190121 11:45:35.705" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-33244</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status starttime="20190121 11:45:18.059" critical="yes" endtime="20190121 11:45:35.706" status="FAIL">'False' should be true.</status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:45:37.346" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:45:37.386" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:45:35.846" endtime="20190121 11:45:37.387" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:35.767" endtime="20190121 11:45:37.389" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:35.743" endtime="20190121 11:45:37.391" status="PASS"></status>
</kw>
<doc>Chorus GpioAdc's test with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:45:15.248" endtime="20190121 11:45:37.400" status="FAIL"></status>
</suite>
<suite id="s1-s6" name="SKTB-13351" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-13351.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:45:38.025" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:45:38.013" endtime="20190121 11:45:38.037" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:45:38.068" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:45:38.074" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:45:40.403" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:45:38.040" endtime="20190121 11:45:40.407" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:38.007" endtime="20190121 11:45:40.410" status="PASS"></status>
</kw>
<test id="s1-s6-t1" name="SKTB-13351 FBUS test">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:40.519" endtime="20190121 11:45:40.717" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:40.734" endtime="20190121 11:45:40.839" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:40.842" endtime="20190121 11:45:40.948" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:45:42.966" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:45:40.962" endtime="20190121 11:45:42.969" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:45:42.971" endtime="20190121 11:45:43.018" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:45:43.021" endtime="20190121 11:45:43.069" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:45:43.072" endtime="20190121 11:45:43.118" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:45:43.121" endtime="20190121 11:45:43.212" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:45:43.215" endtime="20190121 11:45:43.309" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status starttime="20190121 11:45:43.313" endtime="20190121 11:45:43.400" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:45:45.433" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:45:43.414" endtime="20190121 11:45:45.436" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:40.482" endtime="20190121 11:45:45.438" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${PN_POWER_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:45:45.644" level="INFO">${info} = 1E 14 54 8D 00 08 00 0C 01 01 00 00 01 43 4A DF</msg>
<status starttime="20190121 11:45:45.446" endtime="20190121 11:45:45.646" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:45:45.653" level="INFO">1E 14 54 8D 00 08 00 0C 01 01 00 00 01 43 4A DF</msg>
<status starttime="20190121 11:45:45.649" endtime="20190121 11:45:45.655" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_POWER_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:45:45.658" endtime="20190121 11:45:45.664" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:45.440" endtime="20190121 11:45:45.666" status="PASS"></status>
</kw>
<kw name="Step_2">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${PN_DIAG_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:45:45.890" level="INFO">${info} = 1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 44 4A DE</msg>
<status starttime="20190121 11:45:45.674" endtime="20190121 11:45:45.891" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:45:45.898" level="INFO">1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 44 4A DE</msg>
<status starttime="20190121 11:45:45.894" endtime="20190121 11:45:45.900" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_DIAG_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:45:45.903" endtime="20190121 11:45:45.909" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:45.668" endtime="20190121 11:45:45.911" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:45.921" endtime="20190121 11:45:45.975" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:45.983" endtime="20190121 11:45:46.082" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:46.091" endtime="20190121 11:45:46.147" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:45:48.154" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:45:46.150" endtime="20190121 11:45:48.157" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:45:48.160" endtime="20190121 11:45:48.206" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:45:48.210" endtime="20190121 11:45:48.256" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:45.914" endtime="20190121 11:45:48.259" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-13351</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status starttime="20190121 11:45:40.412" critical="yes" endtime="20190121 11:45:48.260" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:45:49.774" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:45:49.800" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:45:48.299" endtime="20190121 11:45:49.816" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:48.275" endtime="20190121 11:45:49.818" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:48.270" endtime="20190121 11:45:49.820" status="PASS"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:45:37.565" endtime="20190121 11:45:49.821" status="PASS"></status>
</suite>
<suite id="s1-s7" name="SKTB-34994" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-34994.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:45:50.527" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:45:50.517" endtime="20190121 11:45:50.541" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:45:50.564" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:45:50.566" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:45:52.824" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:45:50.544" endtime="20190121 11:45:52.826" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:50.511" endtime="20190121 11:45:52.828" status="PASS"></status>
</kw>
<test id="s1-s7-t1" name="SKTB-34994 CAN 3 testing">
<kw name="Test_precondition" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:45:52.947" level="INFO">"Test_precondition"</msg>
<status starttime="20190121 11:45:52.917" endtime="20190121 11:45:52.956" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:52.959" endtime="20190121 11:45:53.046" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:45:53.063" endtime="20190121 11:45:53.204" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:45:55.237" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:45:53.212" endtime="20190121 11:45:55.239" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:45:55.242" endtime="20190121 11:45:55.289" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:45:56.296" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:45:55.292" endtime="20190121 11:45:56.298" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:45:56.301" endtime="20190121 11:45:56.347" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20190121 11:45:59.355" level="INFO">Slept 3 seconds</msg>
<status starttime="20190121 11:45:56.351" endtime="20190121 11:45:59.357" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>ping ${HOST_IP}</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20190121 11:45:59.365" level="INFO">Starting process:
ping 192.168.1.101</msg>
<status starttime="20190121 11:45:59.360" endtime="20190121 11:45:59.392" status="PASS"></status>
</kw>
<kw name="WAIT_UNTIL_DEVICE_IS_READY">
<doc>Waiting for device to be ready, up to 90 seconds</doc>
<assign>
<var>${status}</var>
</assign>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Waiting for device to be ready, up to 90 seconds\n</arg>
<arg>console=true</arg>
</arguments>
<msg timestamp="20190121 11:45:59.419" level="INFO">Waiting for device to be ready, up to 90 seconds
</msg>
<status starttime="20190121 11:45:59.414" endtime="20190121 11:45:59.421" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Return Status">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait until keyword succeeds</arg>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:45:59.451" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:45:59.477" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:45:59.498" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:45:59.501" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:45:59.444" endtime="20190121 11:45:59.502" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:45:59.515" level="INFO">${resp} = </msg>
<status starttime="20190121 11:45:59.506" endtime="20190121 11:45:59.515" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:45:59.526" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:45:59.518" endtime="20190121 11:45:59.527" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:45:59.437" endtime="20190121 11:45:59.530" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:45:59.670" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:45:59.695" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:45:59.717" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:45:59.720" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:45:59.661" endtime="20190121 11:45:59.721" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:45:59.735" level="INFO">${resp} = </msg>
<status starttime="20190121 11:45:59.726" endtime="20190121 11:45:59.736" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:45:59.746" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:45:59.738" endtime="20190121 11:45:59.748" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:45:59.654" endtime="20190121 11:45:59.751" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:45:59.888" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:45:59.914" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:45:59.934" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:45:59.937" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:45:59.882" endtime="20190121 11:45:59.938" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:45:59.950" level="INFO">${resp} = </msg>
<status starttime="20190121 11:45:59.941" endtime="20190121 11:45:59.951" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:45:59.963" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:45:59.955" endtime="20190121 11:45:59.965" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:45:59.874" endtime="20190121 11:45:59.967" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:00.106" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:00.134" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:00.156" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:00.159" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:00.099" endtime="20190121 11:46:00.159" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:00.172" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:00.163" endtime="20190121 11:46:00.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:00.183" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:00.176" endtime="20190121 11:46:00.185" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:00.091" endtime="20190121 11:46:00.188" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:00.326" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:00.351" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:00.371" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:00.374" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:00.319" endtime="20190121 11:46:00.375" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:00.388" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:00.379" endtime="20190121 11:46:00.389" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:00.400" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:00.392" endtime="20190121 11:46:00.401" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:00.311" endtime="20190121 11:46:00.404" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:00.545" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:00.570" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:00.590" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:00.601" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:00.538" endtime="20190121 11:46:00.602" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:00.643" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:00.622" endtime="20190121 11:46:00.644" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:00.663" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:00.647" endtime="20190121 11:46:00.665" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:00.527" endtime="20190121 11:46:00.668" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:00.806" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:00.831" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:00.851" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:00.854" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:00.799" endtime="20190121 11:46:00.855" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:00.868" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:00.859" endtime="20190121 11:46:00.869" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:00.907" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:00.893" endtime="20190121 11:46:00.913" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:00.791" endtime="20190121 11:46:00.916" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:01.054" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:01.079" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:01.100" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:01.103" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:01.047" endtime="20190121 11:46:01.104" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:01.116" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:01.107" endtime="20190121 11:46:01.117" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:01.129" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:01.120" endtime="20190121 11:46:01.130" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:01.039" endtime="20190121 11:46:01.133" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:01.271" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:01.296" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:01.316" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:01.319" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:01.265" endtime="20190121 11:46:01.320" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:01.333" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:01.324" endtime="20190121 11:46:01.334" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:01.344" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:01.337" endtime="20190121 11:46:01.346" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:01.257" endtime="20190121 11:46:01.349" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:01.496" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:01.521" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:01.541" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:01.544" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:01.486" endtime="20190121 11:46:01.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:01.559" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:01.550" endtime="20190121 11:46:01.560" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:01.570" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:01.562" endtime="20190121 11:46:01.572" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:01.478" endtime="20190121 11:46:01.575" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:01.712" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:01.737" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:01.758" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:01.761" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:01.705" endtime="20190121 11:46:01.762" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:01.775" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:01.766" endtime="20190121 11:46:01.775" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:01.786" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:01.778" endtime="20190121 11:46:01.788" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:01.698" endtime="20190121 11:46:01.791" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:01.928" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:01.954" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:01.974" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:01.977" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:01.922" endtime="20190121 11:46:01.978" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:01.990" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:01.982" endtime="20190121 11:46:01.991" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:02.002" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:01.994" endtime="20190121 11:46:02.004" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:01.914" endtime="20190121 11:46:02.007" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:02.144" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:02.170" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:02.190" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:02.194" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:02.138" endtime="20190121 11:46:02.195" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:02.207" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:02.198" endtime="20190121 11:46:02.208" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:02.218" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:02.211" endtime="20190121 11:46:02.221" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:02.130" endtime="20190121 11:46:02.224" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:02.380" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:02.406" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:02.426" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:02.429" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:02.355" endtime="20190121 11:46:02.430" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:02.443" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:02.434" endtime="20190121 11:46:02.443" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:02.454" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:02.446" endtime="20190121 11:46:02.456" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:02.347" endtime="20190121 11:46:02.459" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:02.596" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:02.622" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:02.642" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:02.646" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:02.590" endtime="20190121 11:46:02.647" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:02.659" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:02.650" endtime="20190121 11:46:02.660" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:02.671" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:02.663" endtime="20190121 11:46:02.672" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:02.582" endtime="20190121 11:46:02.676" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:02.813" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:02.839" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:02.859" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:02.862" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:02.807" endtime="20190121 11:46:02.863" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:02.876" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:02.867" endtime="20190121 11:46:02.876" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:02.887" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:02.879" endtime="20190121 11:46:02.888" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:02.799" endtime="20190121 11:46:02.891" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:03.029" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:03.055" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:03.076" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:03.078" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:03.023" endtime="20190121 11:46:03.079" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:03.092" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:03.083" endtime="20190121 11:46:03.093" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:03.103" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:03.096" endtime="20190121 11:46:03.105" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:03.015" endtime="20190121 11:46:03.108" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:03.247" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:03.277" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:03.297" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:03.301" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:03.239" endtime="20190121 11:46:03.302" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:03.314" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:03.305" endtime="20190121 11:46:03.315" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:03.326" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:03.318" endtime="20190121 11:46:03.327" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:03.231" endtime="20190121 11:46:03.330" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:03.468" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:03.496" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:03.520" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:03.523" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:03.462" endtime="20190121 11:46:03.524" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:03.541" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:03.530" endtime="20190121 11:46:03.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:03.553" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:03.545" endtime="20190121 11:46:03.555" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:03.454" endtime="20190121 11:46:03.558" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:03.695" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:03.721" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:03.741" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:03.745" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:03.689" endtime="20190121 11:46:03.746" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:03.758" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:03.749" endtime="20190121 11:46:03.759" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:03.770" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:03.762" endtime="20190121 11:46:03.771" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:03.681" endtime="20190121 11:46:03.774" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:03.912" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:03.937" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:03.959" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:03.962" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:03.905" endtime="20190121 11:46:03.963" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:03.975" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:03.967" endtime="20190121 11:46:03.976" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:03.987" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:03.979" endtime="20190121 11:46:03.988" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:03.897" endtime="20190121 11:46:03.991" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:04.129" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:04.155" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:04.176" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:04.178" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:04.123" endtime="20190121 11:46:04.179" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:04.196" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:04.183" endtime="20190121 11:46:04.197" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:04.207" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:04.200" endtime="20190121 11:46:04.209" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:04.114" endtime="20190121 11:46:04.212" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:04.350" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:04.376" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:04.397" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:04.400" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:04.343" endtime="20190121 11:46:04.401" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:04.413" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:04.405" endtime="20190121 11:46:04.414" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:04.425" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:04.417" endtime="20190121 11:46:04.426" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:04.335" endtime="20190121 11:46:04.429" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:04.568" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:04.594" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:04.614" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:04.617" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:04.562" endtime="20190121 11:46:04.618" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:04.631" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:04.622" endtime="20190121 11:46:04.632" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:04.643" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:04.635" endtime="20190121 11:46:04.645" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:04.552" endtime="20190121 11:46:04.647" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:04.786" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:04.811" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:04.832" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:04.835" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:04.779" endtime="20190121 11:46:04.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:04.849" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:04.840" endtime="20190121 11:46:04.850" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:04.861" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:04.853" endtime="20190121 11:46:04.862" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:04.771" endtime="20190121 11:46:04.865" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:05.004" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:05.030" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:05.052" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:05.055" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:04.997" endtime="20190121 11:46:05.056" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:05.073" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:05.060" endtime="20190121 11:46:05.074" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:05.085" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:05.077" endtime="20190121 11:46:05.087" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:04.988" endtime="20190121 11:46:05.089" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:05.227" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:05.252" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:05.273" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:05.276" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:05.220" endtime="20190121 11:46:05.277" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:05.289" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:05.281" endtime="20190121 11:46:05.290" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:05.301" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:05.293" endtime="20190121 11:46:05.302" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:05.212" endtime="20190121 11:46:05.305" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:05.443" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:05.469" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:05.489" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:05.492" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:05.436" endtime="20190121 11:46:05.493" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:05.506" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:05.497" endtime="20190121 11:46:05.507" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:05.517" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:05.510" endtime="20190121 11:46:05.519" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:05.428" endtime="20190121 11:46:05.522" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:05.661" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:05.686" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:05.706" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:05.710" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:05.653" endtime="20190121 11:46:05.711" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:05.723" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:05.714" endtime="20190121 11:46:05.724" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:05.735" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:05.727" endtime="20190121 11:46:05.736" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:05.645" endtime="20190121 11:46:05.740" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:05.877" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:05.903" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:05.923" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:05.926" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:05.871" endtime="20190121 11:46:05.927" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:05.944" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:05.931" endtime="20190121 11:46:05.945" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:05.955" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:05.947" endtime="20190121 11:46:05.957" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:05.863" endtime="20190121 11:46:05.960" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:06.098" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:06.123" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:06.144" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:06.147" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:06.091" endtime="20190121 11:46:06.148" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:06.161" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:06.152" endtime="20190121 11:46:06.162" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:06.173" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:06.165" endtime="20190121 11:46:06.174" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:06.083" endtime="20190121 11:46:06.177" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:06.315" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:06.341" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:06.361" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:06.364" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:06.308" endtime="20190121 11:46:06.365" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:06.378" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:06.369" endtime="20190121 11:46:06.379" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:06.391" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:06.382" endtime="20190121 11:46:06.392" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:06.300" endtime="20190121 11:46:06.396" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:06.534" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:06.560" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:06.580" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:06.583" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:06.527" endtime="20190121 11:46:06.584" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:06.597" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:06.588" endtime="20190121 11:46:06.598" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:06.609" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:06.601" endtime="20190121 11:46:06.610" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:06.519" endtime="20190121 11:46:06.613" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:06.751" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:06.778" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:06.799" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:06.802" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:06.744" endtime="20190121 11:46:06.803" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:06.820" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:06.807" endtime="20190121 11:46:06.821" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:06.831" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:06.823" endtime="20190121 11:46:06.832" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:06.736" endtime="20190121 11:46:06.835" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:06.973" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:06.999" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:07.019" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:07.023" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:06.966" endtime="20190121 11:46:07.024" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:07.037" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:07.028" endtime="20190121 11:46:07.038" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:07.048" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:07.040" endtime="20190121 11:46:07.050" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:06.958" endtime="20190121 11:46:07.053" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:07.190" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:07.216" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:07.236" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:07.239" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:07.184" endtime="20190121 11:46:07.240" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:07.253" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:07.244" endtime="20190121 11:46:07.254" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:07.265" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:07.257" endtime="20190121 11:46:07.266" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:07.176" endtime="20190121 11:46:07.270" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:07.407" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:07.433" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:07.453" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:07.456" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:07.401" endtime="20190121 11:46:07.457" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:07.470" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:07.461" endtime="20190121 11:46:07.471" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:07.481" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:07.474" endtime="20190121 11:46:07.483" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:07.393" endtime="20190121 11:46:07.486" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:07.623" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:07.649" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:07.669" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:07.672" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:07.617" endtime="20190121 11:46:07.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:07.690" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:07.677" endtime="20190121 11:46:07.691" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:07.701" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:07.693" endtime="20190121 11:46:07.703" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:07.609" endtime="20190121 11:46:07.705" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:07.843" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:07.894" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:07.955" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:07.968" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:07.836" endtime="20190121 11:46:07.969" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:08.004" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:07.986" endtime="20190121 11:46:08.005" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:08.027" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:08.008" endtime="20190121 11:46:08.029" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:07.828" endtime="20190121 11:46:08.032" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:08.178" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:08.204" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:08.224" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:08.227" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:08.171" endtime="20190121 11:46:08.228" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:08.241" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:08.232" endtime="20190121 11:46:08.242" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:08.258" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:08.245" endtime="20190121 11:46:08.260" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:08.163" endtime="20190121 11:46:08.272" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:08.410" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:08.435" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:08.456" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:08.459" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:08.403" endtime="20190121 11:46:08.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:08.473" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:08.464" endtime="20190121 11:46:08.474" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:08.485" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:08.477" endtime="20190121 11:46:08.486" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:08.395" endtime="20190121 11:46:08.490" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:08.627" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:08.654" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:08.674" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:08.678" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:08.621" endtime="20190121 11:46:08.679" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:08.696" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:08.682" endtime="20190121 11:46:08.697" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:08.712" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:08.700" endtime="20190121 11:46:08.713" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:08.613" endtime="20190121 11:46:08.716" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:08.854" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:08.880" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:08.900" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:08.903" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:08.847" endtime="20190121 11:46:08.904" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:08.917" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:08.908" endtime="20190121 11:46:08.918" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:08.928" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:08.921" endtime="20190121 11:46:08.930" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:08.839" endtime="20190121 11:46:08.933" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:09.106" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:09.162" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:09.182" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:09.192" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:09.074" endtime="20190121 11:46:09.193" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:09.257" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:09.220" endtime="20190121 11:46:09.258" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:09.275" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:09.261" endtime="20190121 11:46:09.297" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:09.059" endtime="20190121 11:46:09.300" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:09.438" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:09.464" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:09.485" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:09.488" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:09.431" endtime="20190121 11:46:09.489" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:09.502" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:09.493" endtime="20190121 11:46:09.503" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:09.513" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:09.506" endtime="20190121 11:46:09.515" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:09.423" endtime="20190121 11:46:09.518" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:09.656" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:09.684" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:09.705" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:09.708" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:09.649" endtime="20190121 11:46:09.709" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:09.726" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:09.713" endtime="20190121 11:46:09.727" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:09.738" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:09.730" endtime="20190121 11:46:09.739" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:09.641" endtime="20190121 11:46:09.742" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:09.879" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:09.905" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:09.926" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:09.929" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:09.873" endtime="20190121 11:46:09.930" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:09.942" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:09.933" endtime="20190121 11:46:09.943" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:09.954" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:09.946" endtime="20190121 11:46:09.955" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:09.865" endtime="20190121 11:46:09.958" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:10.096" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:10.122" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:10.142" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:10.146" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:10.090" endtime="20190121 11:46:10.146" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:10.159" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:10.150" endtime="20190121 11:46:10.160" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:10.170" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:10.163" endtime="20190121 11:46:10.172" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:10.081" endtime="20190121 11:46:10.175" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:10.312" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:10.338" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:10.358" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:10.362" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:10.306" endtime="20190121 11:46:10.363" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:10.377" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:10.367" endtime="20190121 11:46:10.377" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:10.388" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:10.380" endtime="20190121 11:46:10.390" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:10.298" endtime="20190121 11:46:10.393" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:10.531" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:10.556" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:10.577" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:10.580" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:10.524" endtime="20190121 11:46:10.581" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:10.597" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:10.585" endtime="20190121 11:46:10.598" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:10.609" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:10.601" endtime="20190121 11:46:10.610" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:10.516" endtime="20190121 11:46:10.613" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:10.751" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:10.777" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:10.797" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:10.801" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:10.745" endtime="20190121 11:46:10.801" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:10.814" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:10.805" endtime="20190121 11:46:10.815" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:10.825" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:10.818" endtime="20190121 11:46:10.827" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:10.736" endtime="20190121 11:46:10.830" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:10.967" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:10.993" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:11.013" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:11.017" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:10.961" endtime="20190121 11:46:11.018" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:11.030" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:11.022" endtime="20190121 11:46:11.031" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:11.042" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:11.034" endtime="20190121 11:46:11.043" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:10.953" endtime="20190121 11:46:11.046" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:11.184" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:11.209" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:11.230" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:11.233" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:11.177" endtime="20190121 11:46:11.234" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:11.246" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:11.237" endtime="20190121 11:46:11.247" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:11.257" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:11.250" endtime="20190121 11:46:11.259" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:11.169" endtime="20190121 11:46:11.262" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:11.400" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:11.426" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:11.446" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:11.449" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:11.394" endtime="20190121 11:46:11.450" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:11.467" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:11.454" endtime="20190121 11:46:11.468" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:11.480" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:11.471" endtime="20190121 11:46:11.481" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:11.385" endtime="20190121 11:46:11.484" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:11.622" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:11.648" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:11.669" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:11.672" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:11.615" endtime="20190121 11:46:11.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:11.686" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:11.677" endtime="20190121 11:46:11.687" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:11.699" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:11.690" endtime="20190121 11:46:11.700" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:11.607" endtime="20190121 11:46:11.703" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:11.841" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:11.867" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:11.888" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:11.891" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:11.834" endtime="20190121 11:46:11.892" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:11.905" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:11.896" endtime="20190121 11:46:11.906" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:11.917" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:11.908" endtime="20190121 11:46:11.918" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:11.827" endtime="20190121 11:46:11.921" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:12.059" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:12.085" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:12.105" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:12.109" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:12.052" endtime="20190121 11:46:12.110" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:12.122" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:12.113" endtime="20190121 11:46:12.123" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:12.133" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:12.126" endtime="20190121 11:46:12.135" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:12.044" endtime="20190121 11:46:12.138" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:12.275" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:12.301" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:12.321" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:12.324" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:12.269" endtime="20190121 11:46:12.325" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:12.342" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:12.329" endtime="20190121 11:46:12.343" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:12.354" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:12.346" endtime="20190121 11:46:12.355" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:12.261" endtime="20190121 11:46:12.358" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:12.495" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:12.521" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:12.543" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:12.546" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:12.489" endtime="20190121 11:46:12.547" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:12.560" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:12.551" endtime="20190121 11:46:12.561" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:12.572" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:12.563" endtime="20190121 11:46:12.574" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:12.481" endtime="20190121 11:46:12.577" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:12.714" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:12.740" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:12.760" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:12.763" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:12.708" endtime="20190121 11:46:12.764" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:12.776" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:12.768" endtime="20190121 11:46:12.778" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:12.789" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:12.781" endtime="20190121 11:46:12.791" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:12.700" endtime="20190121 11:46:12.794" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:12.932" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:12.957" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:12.977" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:12.981" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:12.925" endtime="20190121 11:46:12.982" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:12.994" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:12.985" endtime="20190121 11:46:12.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:13.006" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:12.998" endtime="20190121 11:46:13.007" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:12.917" endtime="20190121 11:46:13.010" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:13.148" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:13.173" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:13.194" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:13.197" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:13.141" endtime="20190121 11:46:13.198" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:13.223" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:13.202" endtime="20190121 11:46:13.224" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:13.235" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:13.227" endtime="20190121 11:46:13.236" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:13.133" endtime="20190121 11:46:13.239" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:13.376" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:13.402" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:13.423" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:13.426" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:13.370" endtime="20190121 11:46:13.427" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:13.461" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:13.439" endtime="20190121 11:46:13.462" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:13.497" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:13.465" endtime="20190121 11:46:13.498" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:13.362" endtime="20190121 11:46:13.503" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:13.646" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:13.672" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:13.693" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:13.696" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:13.640" endtime="20190121 11:46:13.697" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:13.710" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:13.701" endtime="20190121 11:46:13.711" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:13.722" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:13.714" endtime="20190121 11:46:13.724" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:13.632" endtime="20190121 11:46:13.727" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:13.864" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:13.890" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:13.910" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:13.913" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:13.858" endtime="20190121 11:46:13.914" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:13.927" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:13.918" endtime="20190121 11:46:13.928" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:13.941" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:13.930" endtime="20190121 11:46:13.942" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:13.850" endtime="20190121 11:46:13.945" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:14.083" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:14.109" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:14.129" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:14.133" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:14.076" endtime="20190121 11:46:14.134" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:14.146" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:14.137" endtime="20190121 11:46:14.147" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:14.161" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:14.150" endtime="20190121 11:46:14.163" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:14.068" endtime="20190121 11:46:14.166" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:14.303" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:14.329" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:14.350" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:14.353" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:14.297" endtime="20190121 11:46:14.354" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:14.367" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:14.358" endtime="20190121 11:46:14.368" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:14.379" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:14.371" endtime="20190121 11:46:14.380" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:14.289" endtime="20190121 11:46:14.383" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:14.521" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:14.547" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:14.567" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:14.570" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:14.514" endtime="20190121 11:46:14.571" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:14.584" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:14.575" endtime="20190121 11:46:14.585" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:14.596" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:14.588" endtime="20190121 11:46:14.597" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:14.507" endtime="20190121 11:46:14.600" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:14.738" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:14.763" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:14.783" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:14.786" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:14.731" endtime="20190121 11:46:14.787" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:14.800" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:14.791" endtime="20190121 11:46:14.801" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:14.812" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:14.804" endtime="20190121 11:46:14.813" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:14.723" endtime="20190121 11:46:14.817" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:14.955" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:14.980" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:15.001" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:15.005" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:14.948" endtime="20190121 11:46:15.006" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:15.019" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:15.010" endtime="20190121 11:46:15.020" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:15.035" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:15.023" endtime="20190121 11:46:15.036" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:14.941" endtime="20190121 11:46:15.039" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:15.179" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:15.205" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:15.225" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:15.229" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:15.173" endtime="20190121 11:46:15.230" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:15.242" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:15.234" endtime="20190121 11:46:15.243" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:15.254" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:15.246" endtime="20190121 11:46:15.255" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:15.165" endtime="20190121 11:46:15.258" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:15.396" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:15.422" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:15.442" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:15.446" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:15.390" endtime="20190121 11:46:15.447" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:15.460" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:15.451" endtime="20190121 11:46:15.460" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:15.471" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:15.463" endtime="20190121 11:46:15.472" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:15.381" endtime="20190121 11:46:15.475" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:15.613" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:15.638" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:15.658" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:15.662" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:15.606" endtime="20190121 11:46:15.662" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:15.675" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:15.666" endtime="20190121 11:46:15.676" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:15.687" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:15.679" endtime="20190121 11:46:15.688" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:15.598" endtime="20190121 11:46:15.691" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:15.829" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:15.854" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:15.874" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:15.877" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:15.822" endtime="20190121 11:46:15.878" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:15.891" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:15.882" endtime="20190121 11:46:15.892" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:15.902" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:15.895" endtime="20190121 11:46:15.904" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:15.814" endtime="20190121 11:46:15.907" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:16.049" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:16.075" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:16.095" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:16.098" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:16.043" endtime="20190121 11:46:16.099" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:16.111" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:16.103" endtime="20190121 11:46:16.112" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:16.123" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:16.115" endtime="20190121 11:46:16.125" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:16.031" endtime="20190121 11:46:16.127" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:16.266" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:16.292" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:16.312" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:16.315" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:16.259" endtime="20190121 11:46:16.316" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:16.329" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:16.320" endtime="20190121 11:46:16.330" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:16.341" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:16.333" endtime="20190121 11:46:16.342" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:16.251" endtime="20190121 11:46:16.345" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:16.483" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:16.509" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:16.529" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:16.532" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:16.477" endtime="20190121 11:46:16.533" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:16.546" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:16.537" endtime="20190121 11:46:16.547" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:16.557" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:16.550" endtime="20190121 11:46:16.559" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:16.469" endtime="20190121 11:46:16.562" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:16.700" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:16.725" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:16.745" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:16.748" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:16.693" endtime="20190121 11:46:16.750" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:16.762" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:16.753" endtime="20190121 11:46:16.763" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:16.773" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:16.766" endtime="20190121 11:46:16.775" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:16.685" endtime="20190121 11:46:16.778" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:16.959" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:17.022" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:17.047" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:17.050" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:16.941" endtime="20190121 11:46:17.051" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:17.076" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:17.055" endtime="20190121 11:46:17.077" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:17.100" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:17.080" endtime="20190121 11:46:17.101" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:16.913" endtime="20190121 11:46:17.105" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:17.255" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:17.281" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:17.301" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:17.304" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:17.248" endtime="20190121 11:46:17.306" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:17.320" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:17.310" endtime="20190121 11:46:17.320" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:17.331" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:17.323" endtime="20190121 11:46:17.333" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:17.240" endtime="20190121 11:46:17.336" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:17.474" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:17.499" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:17.520" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:17.523" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:17.467" endtime="20190121 11:46:17.524" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:17.536" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:17.527" endtime="20190121 11:46:17.537" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:17.548" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:17.540" endtime="20190121 11:46:17.549" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:17.459" endtime="20190121 11:46:17.552" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:17.690" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:17.715" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:17.735" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:17.738" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:17.683" endtime="20190121 11:46:17.739" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:17.752" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:17.743" endtime="20190121 11:46:17.753" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:17.763" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:17.756" endtime="20190121 11:46:17.765" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:17.675" endtime="20190121 11:46:17.768" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:17.936" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:17.963" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:18.047" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:18.054" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:17.923" endtime="20190121 11:46:18.055" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:18.121" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:18.091" endtime="20190121 11:46:18.122" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:18.146" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:18.125" endtime="20190121 11:46:18.158" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:17.898" endtime="20190121 11:46:18.161" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:18.299" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:18.325" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:18.345" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:18.348" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:18.292" endtime="20190121 11:46:18.350" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:18.362" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:18.353" endtime="20190121 11:46:18.363" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:18.374" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:18.366" endtime="20190121 11:46:18.375" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:18.284" endtime="20190121 11:46:18.378" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:18.516" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:18.633" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:18.655" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:18.658" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:18.510" endtime="20190121 11:46:18.659" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:18.672" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:18.662" endtime="20190121 11:46:18.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:18.683" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:18.675" endtime="20190121 11:46:18.685" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:18.502" endtime="20190121 11:46:18.688" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:18.825" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:18.851" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:18.871" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:18.874" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:18.819" endtime="20190121 11:46:18.875" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:18.888" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:18.879" endtime="20190121 11:46:18.888" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:18.899" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:18.891" endtime="20190121 11:46:18.901" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:18.811" endtime="20190121 11:46:18.904" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:19.046" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:19.072" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:19.093" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:19.096" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:19.036" endtime="20190121 11:46:19.097" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:19.110" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:19.101" endtime="20190121 11:46:19.111" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:19.121" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:19.114" endtime="20190121 11:46:19.123" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:19.027" endtime="20190121 11:46:19.126" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:19.264" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:19.290" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:19.311" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:19.314" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:19.258" endtime="20190121 11:46:19.315" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:19.328" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:19.319" endtime="20190121 11:46:19.329" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:19.339" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:19.331" endtime="20190121 11:46:19.341" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:19.249" endtime="20190121 11:46:19.344" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:19.481" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:19.507" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:19.527" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:19.530" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:19.475" endtime="20190121 11:46:19.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:19.544" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:19.535" endtime="20190121 11:46:19.545" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:19.556" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:19.547" endtime="20190121 11:46:19.557" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:19.467" endtime="20190121 11:46:19.560" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:19.698" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:19.723" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:19.745" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:19.748" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:19.691" endtime="20190121 11:46:19.749" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:19.762" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:19.753" endtime="20190121 11:46:19.762" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:19.773" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:19.765" endtime="20190121 11:46:19.774" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:19.683" endtime="20190121 11:46:19.777" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:19.915" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:19.948" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:19.966" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:19.969" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:19.909" endtime="20190121 11:46:19.970" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:19.982" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:19.973" endtime="20190121 11:46:19.983" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:19.993" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:19.986" endtime="20190121 11:46:19.995" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:19.901" endtime="20190121 11:46:19.998" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:20.135" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:20.161" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:20.181" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:20.184" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:20.129" endtime="20190121 11:46:20.185" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:20.198" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:20.189" endtime="20190121 11:46:20.199" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:20.210" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:20.202" endtime="20190121 11:46:20.211" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:20.121" endtime="20190121 11:46:20.214" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:20.352" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:20.377" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:20.398" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:20.401" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:20.345" endtime="20190121 11:46:20.402" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:20.415" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:20.406" endtime="20190121 11:46:20.416" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:20.426" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:20.418" endtime="20190121 11:46:20.428" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:20.337" endtime="20190121 11:46:20.431" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:20.568" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:20.594" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:20.614" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:20.617" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:20.562" endtime="20190121 11:46:20.618" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:20.631" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:20.622" endtime="20190121 11:46:20.632" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:20.642" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:20.635" endtime="20190121 11:46:20.644" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:20.554" endtime="20190121 11:46:20.647" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:20.784" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:20.810" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:20.830" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:20.833" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:20.778" endtime="20190121 11:46:20.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:20.852" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:20.839" endtime="20190121 11:46:20.852" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:20.863" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:20.855" endtime="20190121 11:46:20.864" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:20.770" endtime="20190121 11:46:20.867" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:21.006" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:21.031" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:21.052" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:21.055" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:20.998" endtime="20190121 11:46:21.056" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:21.069" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:21.060" endtime="20190121 11:46:21.070" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:21.081" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:21.073" endtime="20190121 11:46:21.082" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:20.990" endtime="20190121 11:46:21.085" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:21.223" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:21.248" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:21.268" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:21.271" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:21.216" endtime="20190121 11:46:21.272" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:21.285" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:21.276" endtime="20190121 11:46:21.286" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:21.296" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:21.288" endtime="20190121 11:46:21.298" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:21.208" endtime="20190121 11:46:21.301" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:21.449" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:21.514" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:21.538" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:21.542" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:21.432" endtime="20190121 11:46:21.543" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:21.561" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:21.552" endtime="20190121 11:46:21.562" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:21.572" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:21.565" endtime="20190121 11:46:21.574" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:21.424" endtime="20190121 11:46:21.577" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:21.715" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:21.740" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:21.760" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:21.763" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:21.708" endtime="20190121 11:46:21.764" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:21.780" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:21.768" endtime="20190121 11:46:21.781" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:21.792" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:21.784" endtime="20190121 11:46:21.793" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:21.700" endtime="20190121 11:46:21.796" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:21.943" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:21.970" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:21.990" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:21.993" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:21.932" endtime="20190121 11:46:21.994" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:22.009" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:21.998" endtime="20190121 11:46:22.010" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:22.020" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:22.013" endtime="20190121 11:46:22.022" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:21.924" endtime="20190121 11:46:22.025" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:22.163" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:22.188" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:22.209" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:22.212" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:22.156" endtime="20190121 11:46:22.213" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:22.226" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:22.217" endtime="20190121 11:46:22.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:22.237" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:22.229" endtime="20190121 11:46:22.238" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:22.148" endtime="20190121 11:46:22.242" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:22.380" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:22.406" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:22.426" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:22.430" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:22.373" endtime="20190121 11:46:22.431" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:22.444" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:22.434" endtime="20190121 11:46:22.445" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:22.461" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:22.448" endtime="20190121 11:46:22.463" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:22.365" endtime="20190121 11:46:22.466" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:22.603" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:22.630" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:22.650" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:22.653" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:22.597" endtime="20190121 11:46:22.654" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:22.670" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:22.657" endtime="20190121 11:46:22.671" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:22.682" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:22.674" endtime="20190121 11:46:22.683" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:22.589" endtime="20190121 11:46:22.686" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:22.823" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:22.849" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:22.870" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:22.873" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:22.817" endtime="20190121 11:46:22.874" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:22.887" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:22.878" endtime="20190121 11:46:22.888" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:22.898" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:22.891" endtime="20190121 11:46:22.900" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:22.809" endtime="20190121 11:46:22.903" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:23.041" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:23.067" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:23.087" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:23.090" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:23.035" endtime="20190121 11:46:23.091" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:23.105" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:23.095" endtime="20190121 11:46:23.106" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:23.117" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:23.109" endtime="20190121 11:46:23.118" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:23.026" endtime="20190121 11:46:23.121" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:23.259" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:23.286" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:23.306" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:23.309" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:23.252" endtime="20190121 11:46:23.310" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:23.323" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:23.314" endtime="20190121 11:46:23.324" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:23.334" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:23.327" endtime="20190121 11:46:23.336" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:23.244" endtime="20190121 11:46:23.339" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:23.479" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:23.507" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:23.527" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:23.530" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:23.471" endtime="20190121 11:46:23.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:23.547" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:23.535" endtime="20190121 11:46:23.548" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:23.559" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:23.551" endtime="20190121 11:46:23.560" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:23.463" endtime="20190121 11:46:23.563" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:23.701" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:23.729" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:23.750" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:23.753" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:23.694" endtime="20190121 11:46:23.754" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:23.766" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:23.757" endtime="20190121 11:46:23.767" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:23.778" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:23.770" endtime="20190121 11:46:23.779" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:23.686" endtime="20190121 11:46:23.782" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:23.921" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:23.947" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:23.967" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:23.970" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:23.915" endtime="20190121 11:46:23.971" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:23.984" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:23.975" endtime="20190121 11:46:23.985" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:23.996" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:23.988" endtime="20190121 11:46:23.997" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:23.907" endtime="20190121 11:46:24.000" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:24.138" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:24.165" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:24.185" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:24.188" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:24.132" endtime="20190121 11:46:24.189" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:24.203" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:24.193" endtime="20190121 11:46:24.203" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:24.224" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:24.215" endtime="20190121 11:46:24.226" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:24.124" endtime="20190121 11:46:24.229" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:24.367" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:24.393" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:24.415" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:24.418" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:24.361" endtime="20190121 11:46:24.419" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:24.444" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:24.423" endtime="20190121 11:46:24.445" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:24.455" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:24.447" endtime="20190121 11:46:24.456" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:24.353" endtime="20190121 11:46:24.459" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:24.614" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:24.661" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:24.703" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:24.706" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:46:24.598" endtime="20190121 11:46:24.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:24.737" level="INFO">${resp} = </msg>
<status starttime="20190121 11:46:24.715" endtime="20190121 11:46:24.738" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:46:24.762" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:46:24.745" endtime="20190121 11:46:24.763" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:24.583" endtime="20190121 11:46:24.771" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:24.926" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:46:25.043" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:25.154" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:25.164" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:24.911" endtime="20190121 11:46:25.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:46:25.205" level="INFO">${resp} = 56: usb_max: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast state DOWN group default qlen 1000
    inet 192.168.1.100/24 brd 192.168.1.255 scope global usb_max</msg>
<status starttime="20190121 11:46:25.184" endtime="20190121 11:46:25.206" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<status starttime="20190121 11:46:25.209" endtime="20190121 11:46:25.215" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:24.894" endtime="20190121 11:46:25.218" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:59.431" endtime="20190121 11:46:25.219" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:46:25.221" level="INFO">${STATUS} = True</msg>
<status starttime="20190121 11:45:59.425" endtime="20190121 11:46:25.222" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DUT ready status: ${STATUS}</arg>
</arguments>
<status starttime="20190121 11:46:25.225" endtime="20190121 11:46:25.230" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3 seconds</arg>
</arguments>
<msg timestamp="20190121 11:46:28.237" level="INFO">Slept 3 seconds</msg>
<status starttime="20190121 11:46:25.233" endtime="20190121 11:46:28.239" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:46:28.243" level="INFO">${status} = True</msg>
<status starttime="20190121 11:45:59.398" endtime="20190121 11:46:28.244" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Device does not exist</arg>
</arguments>
<status starttime="20190121 11:46:28.247" endtime="20190121 11:46:28.251" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:28.259" level="INFO">"Setup ssh"</msg>
<status starttime="20190121 11:46:28.254" endtime="20190121 11:46:28.261" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Open Ssh Connection">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg timestamp="20190121 11:46:28.278" level="INFO">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status starttime="20190121 11:46:28.272" endtime="20190121 11:46:30.336" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:28.264" endtime="20190121 11:46:30.338" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh done!"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:30.347" level="INFO">"Setup ssh done!"</msg>
<status starttime="20190121 11:46:30.341" endtime="20190121 11:46:30.350" status="PASS"></status>
</kw>
<status starttime="20190121 11:45:52.895" endtime="20190121 11:46:30.353" status="PASS"></status>
</kw>
<kw name="cansend_500k">
<doc>Can 3 send message test with baudrate 500k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:30.380" level="INFO">Start test with can2 and bitrate: 500000</msg>
<status starttime="20190121 11:46:30.373" endtime="20190121 11:46:30.382" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:46:30.394" endtime="20190121 11:46:30.402" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:30.411" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:46:30.439" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:30.512" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:30.515" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:30.405" endtime="20190121 11:46:30.516" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:30.520" endtime="20190121 11:46:30.529" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:30.539" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:46:30.568" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:30.624" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:30.627" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:30.532" endtime="20190121 11:46:30.628" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:30.632" endtime="20190121 11:46:30.641" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:30.651" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:46:30.678" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:30.775" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:30.778" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:30.644" endtime="20190121 11:46:30.779" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:30.791" endtime="20190121 11:46:30.801" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:46:30.385" endtime="20190121 11:46:30.804" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:46:30.816" endtime="20190121 11:46:30.822" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:30.831" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:46:30.932" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:30.934" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:30.825" endtime="20190121 11:46:30.935" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:31.450" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:30.938" endtime="20190121 11:46:31.452" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:31.462" level="INFO">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:46:31.515" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:31.517" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:31.455" endtime="20190121 11:46:31.518" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:32.033" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:31.521" endtime="20190121 11:46:32.035" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:32.044" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:46:32.087" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:32.089" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:32.038" endtime="20190121 11:46:32.090" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:32.598" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:32.093" endtime="20190121 11:46:32.600" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:30.806" endtime="20190121 11:46:32.602" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:46:32.606" endtime="20190121 11:46:32.763" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:46:32.767" endtime="20190121 11:46:32.813" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status starttime="20190121 11:46:32.817" endtime="20190121 11:46:32.823" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:46:32.826" endtime="20190121 11:46:32.882" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status starttime="20190121 11:46:32.893" endtime="20190121 11:46:32.914" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:46:33.446" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:32.929" endtime="20190121 11:46:33.448" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status starttime="20190121 11:46:33.455" endtime="20190121 11:46:33.469" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:46:33.492" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:46:33.562" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:46:33.477" endtime="20190121 11:46:33.564" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:46:33.599" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:46:33.694" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:46:33.575" endtime="20190121 11:46:33.696" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:46:33.734" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:46:33.826" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:46:33.706" endtime="20190121 11:46:33.828" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:46:34.366" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:33.844" endtime="20190121 11:46:34.368" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:46:34.437" level="INFO">${res_list} = [{'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:33.569663', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:33.708946', 'payload': '11223344556677BB'}, {'id': '0x1a', ...</msg>
<status starttime="20190121 11:46:34.371" endtime="20190121 11:46:34.438" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:34.447" level="INFO">[{'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:33.569663', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:33.708946', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:33.839346', 'payload': '11223344556677BB'}]</msg>
<status starttime="20190121 11:46:34.441" endtime="20190121 11:46:34.449" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:46:34.458" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:46:34.460" level="INFO">${MSG_LENGTH} = 3</msg>
<status starttime="20190121 11:46:34.453" endtime="20190121 11:46:34.465" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:34.478" endtime="20190121 11:46:34.484" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:34.469" endtime="20190121 11:46:34.486" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:34.511" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:46:34.513" level="INFO">${count} = 3</msg>
<status starttime="20190121 11:46:34.506" endtime="20190121 11:46:34.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:34.517" endtime="20190121 11:46:34.523" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:34.532" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:46:34.526" endtime="20190121 11:46:34.533" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:33.569663', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:34.548" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:46:34.541" endtime="20190121 11:46:34.548" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:34.559" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:46:34.551" endtime="20190121 11:46:34.560" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:34.571" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:46:34.564" endtime="20190121 11:46:34.572" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:34.538" endtime="20190121 11:46:34.573" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:33.708946', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:34.587" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:46:34.578" endtime="20190121 11:46:34.588" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:34.599" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:46:34.591" endtime="20190121 11:46:34.600" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:34.611" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:46:34.604" endtime="20190121 11:46:34.612" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:34.574" endtime="20190121 11:46:34.613" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:33.839346', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:34.623" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:46:34.617" endtime="20190121 11:46:34.624" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:34.635" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:46:34.627" endtime="20190121 11:46:34.636" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:34.646" level="INFO">${msgcount} = 3</msg>
<status starttime="20190121 11:46:34.639" endtime="20190121 11:46:34.647" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:34.614" endtime="20190121 11:46:34.648" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:34.534" endtime="20190121 11:46:34.649" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:34.651" endtime="20190121 11:46:34.658" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:46:34.661" endtime="20190121 11:46:34.667" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:34.497" endtime="20190121 11:46:34.671" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:34.489" endtime="20190121 11:46:34.672" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status starttime="20190121 11:46:30.364" endtime="20190121 11:46:34.674" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:30.358" endtime="20190121 11:46:34.677" status="PASS"></status>
</kw>
<kw name="can_loopback_500k">
<doc>Can 3 loopback test with baudrate 500k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:34.698" level="INFO">Can channel loopback: can2 with bitrate: 500000</msg>
<status starttime="20190121 11:46:34.693" endtime="20190121 11:46:34.701" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:46:34.713" endtime="20190121 11:46:34.720" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:34.730" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:46:34.757" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:34.850" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:34.853" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:34.723" endtime="20190121 11:46:34.854" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:34.858" endtime="20190121 11:46:34.866" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:34.876" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:46:34.903" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:34.959" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:34.963" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:34.869" endtime="20190121 11:46:34.964" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:34.968" endtime="20190121 11:46:34.978" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:34.987" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:46:35.015" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:35.117" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:35.120" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:34.981" endtime="20190121 11:46:35.121" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:35.125" endtime="20190121 11:46:35.134" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:46:34.703" endtime="20190121 11:46:35.137" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:46:35.150" endtime="20190121 11:46:35.157" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:35.166" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:46:35.219" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:35.222" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:35.160" endtime="20190121 11:46:35.222" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:35.737" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:35.225" endtime="20190121 11:46:35.739" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:35.749" level="INFO">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:46:35.796" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:35.799" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:35.742" endtime="20190121 11:46:35.799" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:36.314" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:35.802" endtime="20190121 11:46:36.316" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:36.325" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:46:36.378" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:36.380" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:36.319" endtime="20190121 11:46:36.381" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:36.896" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:36.384" endtime="20190121 11:46:36.898" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:35.139" endtime="20190121 11:46:36.900" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:36.908" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190121 11:46:36.935" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:36.948" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:36.951" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:36.903" endtime="20190121 11:46:36.952" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status starttime="20190121 11:46:36.957" endtime="20190121 11:46:36.966" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:36.974" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190121 11:46:37.033" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 500000 sample-point 0.875  	  tq 125 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190121 11:46:37.036" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 500000 sample-poi...</msg>
<status starttime="20190121 11:46:36.969" endtime="20190121 11:46:37.037" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:46:37.040" endtime="20190121 11:46:37.054" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:37.061" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:46:37.166" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:37.169" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:37.057" endtime="20190121 11:46:37.169" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status starttime="20190121 11:46:37.172" endtime="20190121 11:46:37.178" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:46:38.190" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:46:37.181" endtime="20190121 11:46:38.192" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:38.227" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190121 11:46:38.313" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:38.315" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:38.199" endtime="20190121 11:46:38.316" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status starttime="20190121 11:46:38.319" endtime="20190121 11:46:38.335" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:46:38.842" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:38.338" endtime="20190121 11:46:38.844" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:38.873" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:46:38.954" level="INFO">Returning data (537 root      0:00 candump -t a -D -B can2 can2   538 root      0:00 sh -c ps aux | grep candump   540 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:46:38.962" level="INFO">${ret} = ('537 root      0:00 candump -t a -D -B can2 can2   538 root      0:00 sh -c ps aux | grep candump   540 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:46:38.847" endtime="20190121 11:46:38.963" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:46:38.983" endtime="20190121 11:46:39.004" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:46:39.007" endtime="20190121 11:46:39.253" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:46:39.259" endtime="20190121 11:46:39.321" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:46:39.324" endtime="20190121 11:46:39.390" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:46:39.906" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:39.398" endtime="20190121 11:46:39.908" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:39.941" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190121 11:46:40.005" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:40.046" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:40.049" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:39.914" endtime="20190121 11:46:40.050" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:40.059" endtime="20190121 11:46:40.089" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:40.115" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:46:40.184" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:40.210" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:40.214" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:40.101" endtime="20190121 11:46:40.215" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:40.235" endtime="20190121 11:46:40.272" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:40.289" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190121 11:46:40.378" level="INFO">Returning data ((1548069917.716184)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548069917.892182)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190121 11:46:40.380" level="INFO">${ret} = ('(1548069917.716184)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548069917.892182)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status starttime="20190121 11:46:40.275" endtime="20190121 11:46:40.389" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:46:40.414" endtime="20190121 11:46:40.442" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:46:40.957" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:40.453" endtime="20190121 11:46:40.959" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:46:41.039" level="INFO">${res_list} = [{'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:40.032929', 'payload': 'FFEEEEDDFFAA1122'}, {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:40.053342', 'payload': 'FFEEEEDDFFAA1122'}, {'i...</msg>
<status starttime="20190121 11:46:40.966" endtime="20190121 11:46:41.040" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:41.060" level="INFO">[{'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:40.032929', 'payload': 'FFEEEEDDFFAA1122'}, {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:40.053342', 'payload': 'FFEEEEDDFFAA1122'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:40.220971', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:40.237378', 'payload': '11223344556677BB'}]</msg>
<status starttime="20190121 11:46:41.047" endtime="20190121 11:46:41.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:46:41.078" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:46:41.080" level="INFO">${MSG_LENGTH} = 4</msg>
<status starttime="20190121 11:46:41.070" endtime="20190121 11:46:41.085" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:41.106" endtime="20190121 11:46:41.115" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:41.088" endtime="20190121 11:46:41.121" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:41.167" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:46:41.173" level="INFO">${count} = 4</msg>
<status starttime="20190121 11:46:41.155" endtime="20190121 11:46:41.174" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:41.182" endtime="20190121 11:46:41.191" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:41.207" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:46:41.198" endtime="20190121 11:46:41.208" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:40.032929', 'payload': 'FFEEEEDDFFAA1122'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:41.269" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:46:41.223" endtime="20190121 11:46:41.270" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:41.293" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:46:41.277" endtime="20190121 11:46:41.294" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:41.311" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:46:41.301" endtime="20190121 11:46:41.312" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:41.220" endtime="20190121 11:46:41.317" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:40.053342', 'payload': 'FFEEEEDDFFAA1122'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:41.334" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:46:41.325" endtime="20190121 11:46:41.335" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:41.374" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:46:41.342" endtime="20190121 11:46:41.380" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:41.404" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:46:41.384" endtime="20190121 11:46:41.405" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:41.318" endtime="20190121 11:46:41.406" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:40.220971', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:41.424" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:46:41.414" endtime="20190121 11:46:41.429" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:41.448" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:46:41.432" endtime="20190121 11:46:41.451" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:41.461" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:46:41.455" endtime="20190121 11:46:41.462" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:41.408" endtime="20190121 11:46:41.463" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:40.237378', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:41.476" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:46:41.467" endtime="20190121 11:46:41.477" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:41.488" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:46:41.480" endtime="20190121 11:46:41.489" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:41.497" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:46:41.491" endtime="20190121 11:46:41.498" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:41.464" endtime="20190121 11:46:41.499" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:41.213" endtime="20190121 11:46:41.500" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:41.502" endtime="20190121 11:46:41.513" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:46:41.516" endtime="20190121 11:46:41.538" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:41.140" endtime="20190121 11:46:41.541" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:41.124" endtime="20190121 11:46:41.543" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:41.558" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:46:41.662" level="INFO">Returning data (537 root      0:00 candump -t a -D -B can2 can2   554 root      0:00 sh -c ps aux | grep candump   557 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:46:41.668" level="INFO">${ret} = ('537 root      0:00 candump -t a -D -B can2 can2   554 root      0:00 sh -c ps aux | grep candump   557 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:46:41.550" endtime="20190121 11:46:41.679" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status starttime="20190121 11:46:41.686" endtime="20190121 11:46:41.703" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:41.717" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:46:41.819" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:41.821" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:41.706" endtime="20190121 11:46:41.822" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:46:42.835" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:46:41.825" endtime="20190121 11:46:42.838" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:34.684" endtime="20190121 11:46:42.840" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:34.679" endtime="20190121 11:46:42.846" status="PASS"></status>
</kw>
<kw name="cansend_250k">
<doc>Can 3 send message test with baudrate 250k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:42.894" level="INFO">Start test with can2 and bitrate: 250000</msg>
<status starttime="20190121 11:46:42.879" endtime="20190121 11:46:42.901" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:46:42.926" endtime="20190121 11:46:42.942" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:42.954" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:46:43.006" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:43.087" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:43.091" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:42.947" endtime="20190121 11:46:43.092" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:43.108" endtime="20190121 11:46:43.130" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:43.153" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:46:43.195" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:43.294" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:43.297" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:43.137" endtime="20190121 11:46:43.298" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:43.302" endtime="20190121 11:46:43.319" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:43.341" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:46:43.405" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:43.498" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:43.502" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:43.322" endtime="20190121 11:46:43.503" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:43.506" endtime="20190121 11:46:43.515" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:46:42.904" endtime="20190121 11:46:43.518" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:46:43.530" endtime="20190121 11:46:43.536" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:43.549" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:46:43.580" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:43.585" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:43.539" endtime="20190121 11:46:43.585" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:44.099" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:43.593" endtime="20190121 11:46:44.102" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:44.112" level="INFO">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:46:44.160" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:44.163" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:44.105" endtime="20190121 11:46:44.163" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:44.678" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:44.166" endtime="20190121 11:46:44.680" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:44.689" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:46:44.739" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:44.742" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:44.683" endtime="20190121 11:46:44.743" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:45.262" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:44.752" endtime="20190121 11:46:45.264" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:43.521" endtime="20190121 11:46:45.271" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:46:45.298" endtime="20190121 11:46:45.901" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:46:45.904" endtime="20190121 11:46:46.100" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status starttime="20190121 11:46:46.107" endtime="20190121 11:46:46.138" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:46:46.142" endtime="20190121 11:46:46.232" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status starttime="20190121 11:46:46.239" endtime="20190121 11:46:46.299" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:46:46.829" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:46.306" endtime="20190121 11:46:46.831" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status starttime="20190121 11:46:46.838" endtime="20190121 11:46:46.890" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:46:46.915" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:46:46.967" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:46:46.897" endtime="20190121 11:46:46.975" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:46:47.004" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:46:47.096" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:46:46.978" endtime="20190121 11:46:47.103" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:46:47.134" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:46:47.238" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:46:47.111" endtime="20190121 11:46:47.240" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:46:47.764" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:47.247" endtime="20190121 11:46:47.766" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:46:47.830" level="INFO">${res_list} = [{'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:46.980073', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:47.106291', 'payload': '11223344556677BB'}, {'id': '0x1a', ...</msg>
<status starttime="20190121 11:46:47.775" endtime="20190121 11:46:47.831" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:47.839" level="INFO">[{'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:46.980073', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:47.106291', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:47.242581', 'payload': '11223344556677BB'}]</msg>
<status starttime="20190121 11:46:47.834" endtime="20190121 11:46:47.842" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:46:47.850" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:46:47.853" level="INFO">${MSG_LENGTH} = 3</msg>
<status starttime="20190121 11:46:47.845" endtime="20190121 11:46:47.853" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:47.862" endtime="20190121 11:46:47.869" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:47.856" endtime="20190121 11:46:47.870" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:47.895" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:46:47.897" level="INFO">${count} = 3</msg>
<status starttime="20190121 11:46:47.889" endtime="20190121 11:46:47.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:47.901" endtime="20190121 11:46:47.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:47.918" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:46:47.911" endtime="20190121 11:46:47.918" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:46.980073', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:47.933" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:46:47.926" endtime="20190121 11:46:47.934" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:47.944" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:46:47.937" endtime="20190121 11:46:47.945" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:47.989" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:46:47.948" endtime="20190121 11:46:47.990" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:47.923" endtime="20190121 11:46:47.997" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:47.106291', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:48.134" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:46:48.038" endtime="20190121 11:46:48.134" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:48.242" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:46:48.151" endtime="20190121 11:46:48.242" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:48.277" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:46:48.249" endtime="20190121 11:46:48.278" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:47.999" endtime="20190121 11:46:48.279" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:47.242581', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:48.389" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:46:48.336" endtime="20190121 11:46:48.390" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:48.459" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:46:48.422" endtime="20190121 11:46:48.460" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:48.507" level="INFO">${msgcount} = 3</msg>
<status starttime="20190121 11:46:48.467" endtime="20190121 11:46:48.508" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:48.332" endtime="20190121 11:46:48.541" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:47.919" endtime="20190121 11:46:48.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:48.551" endtime="20190121 11:46:48.587" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:46:48.595" endtime="20190121 11:46:48.663" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:47.881" endtime="20190121 11:46:48.671" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:47.873" endtime="20190121 11:46:48.709" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status starttime="20190121 11:46:42.862" endtime="20190121 11:46:48.711" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:42.848" endtime="20190121 11:46:48.718" status="PASS"></status>
</kw>
<kw name="can_loopback_250k">
<doc>Can 3 loopback test with baudrate 250k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:48.838" level="INFO">Can channel loopback: can2 with bitrate: 250000</msg>
<status starttime="20190121 11:46:48.800" endtime="20190121 11:46:48.863" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:46:48.903" endtime="20190121 11:46:48.953" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:49.006" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:46:49.161" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:49.309" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:49.312" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:48.961" endtime="20190121 11:46:49.317" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:49.355" endtime="20190121 11:46:49.405" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:49.465" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:46:49.570" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:49.729" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:49.736" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:49.409" endtime="20190121 11:46:49.738" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:49.781" endtime="20190121 11:46:49.808" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:49.880" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:46:50.034" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:50.203" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:50.206" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:49.847" endtime="20190121 11:46:50.207" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:50.219" endtime="20190121 11:46:50.253" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:46:48.869" endtime="20190121 11:46:50.256" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:46:50.282" endtime="20190121 11:46:50.307" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:50.325" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:46:50.403" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:50.405" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:50.310" endtime="20190121 11:46:50.406" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:50.939" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:50.429" endtime="20190121 11:46:50.941" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:50.963" level="INFO">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:46:51.038" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:51.040" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:50.944" endtime="20190121 11:46:51.041" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:51.569" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:51.044" endtime="20190121 11:46:51.571" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:51.592" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:46:51.649" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:51.651" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:51.574" endtime="20190121 11:46:51.653" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:52.179" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:51.655" endtime="20190121 11:46:52.181" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:50.259" endtime="20190121 11:46:52.184" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:52.192" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190121 11:46:52.222" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:52.235" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:52.238" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:52.187" endtime="20190121 11:46:52.239" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status starttime="20190121 11:46:52.252" endtime="20190121 11:46:52.261" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:52.270" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190121 11:46:52.324" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 250000 sample-point 0.875  	  tq 250 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190121 11:46:52.326" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 250000 sample-poi...</msg>
<status starttime="20190121 11:46:52.264" endtime="20190121 11:46:52.327" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:46:52.330" endtime="20190121 11:46:52.344" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:52.351" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:46:52.455" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:52.457" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:52.347" endtime="20190121 11:46:52.458" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status starttime="20190121 11:46:52.461" endtime="20190121 11:46:52.468" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:46:53.475" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:46:52.471" endtime="20190121 11:46:53.477" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:53.486" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190121 11:46:53.534" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:53.536" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:53.480" endtime="20190121 11:46:53.537" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status starttime="20190121 11:46:53.540" endtime="20190121 11:46:53.547" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:46:54.053" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:53.550" endtime="20190121 11:46:54.055" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:54.062" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:46:54.125" level="INFO">Returning data (583 root      0:00 candump -t a -D -B can2 can2   584 root      0:00 sh -c ps aux | grep candump   586 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:46:54.128" level="INFO">${ret} = ('583 root      0:00 candump -t a -D -B can2 can2   584 root      0:00 sh -c ps aux | grep candump   586 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:46:54.058" endtime="20190121 11:46:54.129" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:46:54.132" endtime="20190121 11:46:54.145" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:46:54.148" endtime="20190121 11:46:54.299" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:46:54.303" endtime="20190121 11:46:54.351" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:46:54.355" endtime="20190121 11:46:54.404" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:46:54.918" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:54.410" endtime="20190121 11:46:54.920" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:54.938" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190121 11:46:54.998" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:55.019" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:55.022" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:54.923" endtime="20190121 11:46:55.023" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:55.038" endtime="20190121 11:46:55.061" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:55.075" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:46:55.132" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:55.156" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:55.159" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:55.065" endtime="20190121 11:46:55.160" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:55.168" endtime="20190121 11:46:55.193" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:55.210" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190121 11:46:55.270" level="INFO">Returning data ((1548069932.669469)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548069932.803950)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190121 11:46:55.277" level="INFO">${ret} = ('(1548069932.669469)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548069932.803950)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status starttime="20190121 11:46:55.201" endtime="20190121 11:46:55.278" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:46:55.297" endtime="20190121 11:46:55.307" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:46:55.823" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:55.314" endtime="20190121 11:46:55.825" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:46:55.886" level="INFO">${res_list} = [{'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:55.029226', 'payload': 'FFEEEEDDFFAA1122'}, {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:55.041702', 'payload': 'FFEEEEDDFFAA1122'}, {'i...</msg>
<status starttime="20190121 11:46:55.828" endtime="20190121 11:46:55.887" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:55.894" level="INFO">[{'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:55.029226', 'payload': 'FFEEEEDDFFAA1122'}, {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:55.041702', 'payload': 'FFEEEEDDFFAA1122'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:55.161921', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:55.173429', 'payload': '11223344556677BB'}]</msg>
<status starttime="20190121 11:46:55.890" endtime="20190121 11:46:55.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:46:55.905" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:46:55.907" level="INFO">${MSG_LENGTH} = 4</msg>
<status starttime="20190121 11:46:55.901" endtime="20190121 11:46:55.908" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:55.918" endtime="20190121 11:46:55.923" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:55.911" endtime="20190121 11:46:55.924" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:55.951" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:46:55.953" level="INFO">${count} = 4</msg>
<status starttime="20190121 11:46:55.947" endtime="20190121 11:46:55.954" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:55.957" endtime="20190121 11:46:55.963" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:55.970" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:46:55.966" endtime="20190121 11:46:55.971" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:55.029226', 'payload': 'FFEEEEDDFFAA1122'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:55.986" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:46:55.979" endtime="20190121 11:46:55.987" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:55.998" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:46:55.990" endtime="20190121 11:46:55.998" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:56.008" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:46:56.002" endtime="20190121 11:46:56.009" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:55.976" endtime="20190121 11:46:56.010" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:46:55.041702', 'payload': 'FFEEEEDDFFAA1122'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:56.019" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:46:56.014" endtime="20190121 11:46:56.020" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:56.032" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:46:56.023" endtime="20190121 11:46:56.033" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:56.042" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:46:56.035" endtime="20190121 11:46:56.043" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:56.011" endtime="20190121 11:46:56.043" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:55.161921', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:56.053" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:46:56.048" endtime="20190121 11:46:56.054" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:56.064" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:46:56.056" endtime="20190121 11:46:56.065" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:56.074" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:46:56.067" endtime="20190121 11:46:56.074" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:56.045" endtime="20190121 11:46:56.075" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:46:55.173429', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:46:56.087" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:46:56.080" endtime="20190121 11:46:56.087" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:46:56.098" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:46:56.091" endtime="20190121 11:46:56.099" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:46:56.125" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:46:56.110" endtime="20190121 11:46:56.126" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:56.077" endtime="20190121 11:46:56.127" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:55.973" endtime="20190121 11:46:56.128" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:46:56.133" endtime="20190121 11:46:56.141" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:46:56.144" endtime="20190121 11:46:56.150" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:55.935" endtime="20190121 11:46:56.154" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:55.927" endtime="20190121 11:46:56.155" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:56.161" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:46:56.227" level="INFO">Returning data (583 root      0:00 candump -t a -D -B can2 can2   588 root      0:00 sh -c ps aux | grep candump   590 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:46:56.229" level="INFO">${ret} = ('583 root      0:00 candump -t a -D -B can2 can2   588 root      0:00 sh -c ps aux | grep candump   590 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:46:56.158" endtime="20190121 11:46:56.230" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status starttime="20190121 11:46:56.233" endtime="20190121 11:46:56.243" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:56.250" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:46:56.364" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:56.367" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:56.246" endtime="20190121 11:46:56.368" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:46:57.381" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:46:56.371" endtime="20190121 11:46:57.384" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:48.758" endtime="20190121 11:46:57.386" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:48.720" endtime="20190121 11:46:57.389" status="PASS"></status>
</kw>
<kw name="cansend_125k">
<doc>Can 3 send message test with baudrate 125k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:46:57.413" level="INFO">Start test with can2 and bitrate: 125000</msg>
<status starttime="20190121 11:46:57.406" endtime="20190121 11:46:57.415" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:46:57.427" endtime="20190121 11:46:57.434" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:57.444" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:46:57.473" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:57.541" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:57.545" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:57.437" endtime="20190121 11:46:57.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:57.550" endtime="20190121 11:46:57.558" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:57.568" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:46:57.604" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:57.654" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:57.657" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:57.561" endtime="20190121 11:46:57.658" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:57.662" endtime="20190121 11:46:57.671" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:46:57.680" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:46:57.709" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:46:57.803" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:46:57.807" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:46:57.674" endtime="20190121 11:46:57.808" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:46:57.813" endtime="20190121 11:46:57.822" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:46:57.417" endtime="20190121 11:46:57.825" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:46:57.837" endtime="20190121 11:46:57.843" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:57.853" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:46:57.889" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:57.892" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:57.846" endtime="20190121 11:46:57.893" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:58.408" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:57.896" endtime="20190121 11:46:58.410" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:58.421" level="INFO">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:46:58.470" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:58.473" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:58.413" endtime="20190121 11:46:58.474" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:58.987" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:58.481" endtime="20190121 11:46:58.989" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:46:58.999" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:46:59.038" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:46:59.041" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:46:58.992" endtime="20190121 11:46:59.042" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:46:59.557" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:59.045" endtime="20190121 11:46:59.559" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:46:57.827" endtime="20190121 11:46:59.562" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:46:59.565" endtime="20190121 11:46:59.718" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:46:59.722" endtime="20190121 11:46:59.768" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status starttime="20190121 11:46:59.771" endtime="20190121 11:46:59.777" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:46:59.780" endtime="20190121 11:46:59.828" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status starttime="20190121 11:46:59.835" endtime="20190121 11:46:59.850" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:47:00.361" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:46:59.852" endtime="20190121 11:47:00.364" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status starttime="20190121 11:47:00.371" endtime="20190121 11:47:00.387" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:47:00.409" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:47:00.467" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:47:00.390" endtime="20190121 11:47:00.470" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:47:00.496" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:47:00.608" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:47:00.485" endtime="20190121 11:47:00.610" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190121 11:47:00.628" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:47:00.731" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:47:00.613" endtime="20190121 11:47:00.742" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:47:01.262" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:47:00.745" endtime="20190121 11:47:01.264" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:47:01.328" level="INFO">${res_list} = [{'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:00.473749', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:00.603413', 'payload': '11223344556677BB'}, {'id': '0x1a', ...</msg>
<status starttime="20190121 11:47:01.271" endtime="20190121 11:47:01.330" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:47:01.338" level="INFO">[{'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:00.473749', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:00.603413', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:00.734680', 'payload': '11223344556677BB'}]</msg>
<status starttime="20190121 11:47:01.333" endtime="20190121 11:47:01.341" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:47:01.349" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:47:01.351" level="INFO">${MSG_LENGTH} = 3</msg>
<status starttime="20190121 11:47:01.344" endtime="20190121 11:47:01.352" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:47:01.361" endtime="20190121 11:47:01.368" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:01.355" endtime="20190121 11:47:01.369" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:47:01.394" level="INFO">Length is 3</msg>
<msg timestamp="20190121 11:47:01.397" level="INFO">${count} = 3</msg>
<status starttime="20190121 11:47:01.388" endtime="20190121 11:47:01.398" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:47:01.400" endtime="20190121 11:47:01.410" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:47:01.419" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:47:01.413" endtime="20190121 11:47:01.420" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:00.473749', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:47:01.434" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:47:01.427" endtime="20190121 11:47:01.434" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:47:01.445" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:47:01.437" endtime="20190121 11:47:01.446" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:47:01.456" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:47:01.449" endtime="20190121 11:47:01.457" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:01.424" endtime="20190121 11:47:01.458" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:00.603413', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:47:01.469" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:47:01.463" endtime="20190121 11:47:01.470" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:47:01.480" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:47:01.473" endtime="20190121 11:47:01.481" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:47:01.491" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:47:01.484" endtime="20190121 11:47:01.492" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:01.459" endtime="20190121 11:47:01.493" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:00.734680', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:47:01.504" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:47:01.497" endtime="20190121 11:47:01.504" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:47:01.515" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:47:01.507" endtime="20190121 11:47:01.515" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:47:01.526" level="INFO">${msgcount} = 3</msg>
<status starttime="20190121 11:47:01.518" endtime="20190121 11:47:01.527" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:01.494" endtime="20190121 11:47:01.528" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:01.421" endtime="20190121 11:47:01.529" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:47:01.531" endtime="20190121 11:47:01.538" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:47:01.541" endtime="20190121 11:47:01.547" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:01.379" endtime="20190121 11:47:01.551" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:01.372" endtime="20190121 11:47:01.552" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status starttime="20190121 11:46:57.397" endtime="20190121 11:47:01.554" status="PASS"></status>
</kw>
<status starttime="20190121 11:46:57.391" endtime="20190121 11:47:01.557" status="PASS"></status>
</kw>
<kw name="can_loopback_125k">
<doc>Can 3 loopback test with baudrate 125k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:47:01.578" level="INFO">Can channel loopback: can2 with bitrate: 125000</msg>
<status starttime="20190121 11:47:01.573" endtime="20190121 11:47:01.580" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:47:01.592" endtime="20190121 11:47:01.599" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:47:01.626" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:47:01.656" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:01.762" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:01.765" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:01.611" endtime="20190121 11:47:01.778" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:47:01.782" endtime="20190121 11:47:01.793" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:47:01.804" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:47:01.831" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:01.882" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:01.885" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:01.797" endtime="20190121 11:47:01.886" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:47:01.890" endtime="20190121 11:47:01.899" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:47:01.909" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:47:01.936" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:02.028" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:02.031" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:01.902" endtime="20190121 11:47:02.032" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:47:02.036" endtime="20190121 11:47:02.044" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:47:01.583" endtime="20190121 11:47:02.047" status="PASS"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status starttime="20190121 11:47:02.060" endtime="20190121 11:47:02.065" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:02.074" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190121 11:47:02.118" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:47:02.121" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:47:02.068" endtime="20190121 11:47:02.122" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:47:02.637" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:47:02.125" endtime="20190121 11:47:02.638" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:02.648" level="INFO">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:47:02.705" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:47:02.708" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:47:02.641" endtime="20190121 11:47:02.708" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:47:03.221" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:47:02.711" endtime="20190121 11:47:03.224" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:03.233" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190121 11:47:03.284" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:47:03.288" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:47:03.227" endtime="20190121 11:47:03.289" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190121 11:47:03.804" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:47:03.292" endtime="20190121 11:47:03.806" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:47:02.050" endtime="20190121 11:47:03.810" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:03.818" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190121 11:47:03.846" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:03.859" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:03.862" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:03.813" endtime="20190121 11:47:03.863" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status starttime="20190121 11:47:03.867" endtime="20190121 11:47:03.875" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:03.884" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190121 11:47:03.959" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 125000 sample-point 0.875  	  tq 500 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190121 11:47:03.962" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 125000 sample-poi...</msg>
<status starttime="20190121 11:47:03.878" endtime="20190121 11:47:03.963" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:47:03.966" endtime="20190121 11:47:03.979" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:03.987" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:47:04.086" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:47:04.089" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:47:03.982" endtime="20190121 11:47:04.090" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status starttime="20190121 11:47:04.095" endtime="20190121 11:47:04.100" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:47:05.107" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:47:04.103" endtime="20190121 11:47:05.109" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:05.118" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190121 11:47:05.162" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:47:05.164" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:47:05.112" endtime="20190121 11:47:05.165" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status starttime="20190121 11:47:05.168" endtime="20190121 11:47:05.179" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:47:05.685" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:47:05.182" endtime="20190121 11:47:05.687" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:05.694" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:47:05.782" level="INFO">Returning data (604 root      0:00 candump -t a -D -B can2 can2   605 root      0:00 sh -c ps aux | grep candump   607 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:47:05.789" level="INFO">${ret} = ('604 root      0:00 candump -t a -D -B can2 can2   605 root      0:00 sh -c ps aux | grep candump   607 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:47:05.690" endtime="20190121 11:47:05.790" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:47:05.802" endtime="20190121 11:47:05.810" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Create Socket">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status starttime="20190121 11:47:05.813" endtime="20190121 11:47:05.958" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Clear Socket">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:47:05.962" endtime="20190121 11:47:06.007" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Start Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status starttime="20190121 11:47:06.046" endtime="20190121 11:47:06.223" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:47:06.753" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:47:06.226" endtime="20190121 11:47:06.755" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:06.825" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190121 11:47:06.958" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:06.970" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:06.978" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:06.762" endtime="20190121 11:47:06.979" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:47:07.015" endtime="20190121 11:47:07.069" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:07.153" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190121 11:47:07.279" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:07.322" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:07.345" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:07.075" endtime="20190121 11:47:07.346" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status starttime="20190121 11:47:07.381" endtime="20190121 11:47:07.460" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:07.493" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190121 11:47:07.636" level="INFO">Returning data ((1548071226.929159)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548071227.269786)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190121 11:47:07.642" level="INFO">${ret} = ('(1548071226.929159)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548071227.269786)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status starttime="20190121 11:47:07.463" endtime="20190121 11:47:07.643" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status starttime="20190121 11:47:07.687" endtime="20190121 11:47:07.722" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190121 11:47:08.273" level="INFO">Slept 500 milliseconds</msg>
<status starttime="20190121 11:47:07.730" endtime="20190121 11:47:08.275" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Can Stop Sniffing Asynchronously">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190121 11:47:08.501" level="INFO">${res_list} = [{'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:47:07.017478', 'payload': 'FFEEEEDDFFAA1122'}, {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:47:07.056911', 'payload': 'FFEEEEDDFFAA1122'}, {'i...</msg>
<status starttime="20190121 11:47:08.282" endtime="20190121 11:47:08.502" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:47:08.573" level="INFO">[{'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:47:07.017478', 'payload': 'FFEEEEDDFFAA1122'}, {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:47:07.056911', 'payload': 'FFEEEEDDFFAA1122'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:07.348434', 'payload': '11223344556677BB'}, {'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:07.373382', 'payload': '11223344556677BB'}]</msg>
<status starttime="20190121 11:47:08.528" endtime="20190121 11:47:08.589" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190121 11:47:08.645" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:47:08.647" level="INFO">${MSG_LENGTH} = 4</msg>
<status starttime="20190121 11:47:08.597" endtime="20190121 11:47:08.648" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:47:08.722" endtime="20190121 11:47:08.732" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:08.656" endtime="20190121 11:47:08.742" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:47:08.791" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:47:08.793" level="INFO">${count} = 4</msg>
<status starttime="20190121 11:47:08.774" endtime="20190121 11:47:08.794" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:47:08.797" endtime="20190121 11:47:08.810" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:47:08.819" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:47:08.813" endtime="20190121 11:47:08.869" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:47:07.017478', 'payload': 'FFEEEEDDFFAA1122'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:47:08.924" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:47:08.918" endtime="20190121 11:47:08.925" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:47:08.959" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:47:08.935" endtime="20190121 11:47:08.960" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:47:08.984" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:47:08.963" endtime="20190121 11:47:08.985" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:08.882" endtime="20190121 11:47:08.986" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x18ef7777', 'timestamp': '21-01-2019 - 11:47:07.056911', 'payload': 'FFEEEEDDFFAA1122'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:47:09.017" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status starttime="20190121 11:47:09.011" endtime="20190121 11:47:09.018" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:47:09.034" level="INFO">${count} = 1</msg>
<status starttime="20190121 11:47:09.021" endtime="20190121 11:47:09.035" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:47:09.056" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:47:09.050" endtime="20190121 11:47:09.057" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:08.987" endtime="20190121 11:47:09.069" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:07.348434', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:47:09.089" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:47:09.074" endtime="20190121 11:47:09.090" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:47:09.118" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:47:09.093" endtime="20190121 11:47:09.118" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:47:09.142" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:47:09.122" endtime="20190121 11:47:09.143" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:09.070" endtime="20190121 11:47:09.144" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'id': '0x1a', 'timestamp': '21-01-2019 - 11:47:07.373382', 'payload': '11223344556677BB'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:47:09.179" level="INFO">${payload} = 11223344556677BB</msg>
<status starttime="20190121 11:47:09.148" endtime="20190121 11:47:09.180" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:47:09.202" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:47:09.184" endtime="20190121 11:47:09.203" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:47:09.229" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:47:09.213" endtime="20190121 11:47:09.229" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:09.145" endtime="20190121 11:47:09.230" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:08.870" endtime="20190121 11:47:09.231" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:47:09.234" endtime="20190121 11:47:09.254" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status starttime="20190121 11:47:09.257" endtime="20190121 11:47:09.272" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:08.753" endtime="20190121 11:47:09.275" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:08.745" endtime="20190121 11:47:09.276" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:09.287" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190121 11:47:09.421" level="INFO">Returning data (604 root      0:00 candump -t a -D -B can2 can2   609 root      0:00 sh -c ps aux | grep candump   611 root      0:00 grep candump, )</msg>
<msg timestamp="20190121 11:47:09.424" level="INFO">${ret} = ('604 root      0:00 candump -t a -D -B can2 can2   609 root      0:00 sh -c ps aux | grep candump   611 root      0:00 grep candump', '')</msg>
<status starttime="20190121 11:47:09.279" endtime="20190121 11:47:09.425" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status starttime="20190121 11:47:09.428" endtime="20190121 11:47:09.471" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:09.478" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190121 11:47:09.577" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:47:09.579" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:47:09.474" endtime="20190121 11:47:09.580" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:47:10.599" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:47:09.583" endtime="20190121 11:47:10.601" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:01.564" endtime="20190121 11:47:10.603" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:01.559" endtime="20190121 11:47:10.606" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill ping</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:47:10.620" level="INFO">Starting process:
pkill ping</msg>
<msg timestamp="20190121 11:47:10.650" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:10.684" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:10.687" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:10.616" endtime="20190121 11:47:10.688" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_Teardown_Action"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:47:10.695" level="INFO">"Test_Teardown_Action"</msg>
<status starttime="20190121 11:47:10.692" endtime="20190121 11:47:10.698" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>systemctl poweroff</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:47:10.705" level="INFO">Sending command to DUT systemctl poweroff</msg>
<msg timestamp="20190121 11:47:10.809" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:47:10.812" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:47:10.701" endtime="20190121 11:47:10.813" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHUTDOWN_TIME}</arg>
</arguments>
<msg timestamp="20190121 11:47:25.828" level="INFO">Slept 15 seconds</msg>
<status starttime="20190121 11:47:10.816" endtime="20190121 11:47:25.830" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Close Ssh Connection">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190121 11:47:25.837" level="INFO">Closing SSH connection to 192.168.1.101</msg>
<status starttime="20190121 11:47:25.833" endtime="20190121 11:47:25.839" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:47:25.841" endtime="20190121 11:47:25.890" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:47:25.894" endtime="20190121 11:47:25.941" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:10.609" endtime="20190121 11:47:25.944" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-34994</doc>
<tags>
<tag>CAN 3 test</tag>
</tags>
<status starttime="20190121 11:45:52.830" critical="yes" endtime="20190121 11:47:25.945" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:47:27.501" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:47:27.562" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:47:25.988" endtime="20190121 11:47:27.564" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:25.962" endtime="20190121 11:47:27.565" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:25.957" endtime="20190121 11:47:27.567" status="PASS"></status>
</kw>
<doc>CAN 3 test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:45:49.994" endtime="20190121 11:47:27.581" status="PASS"></status>
</suite>
<suite id="s1-s8" name="SKTB-40097" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-40097.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:47:28.313" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:47:28.302" endtime="20190121 11:47:28.330" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:47:28.359" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:47:28.360" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:47:30.629" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:47:28.333" endtime="20190121 11:47:30.631" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:28.296" endtime="20190121 11:47:30.656" status="PASS"></status>
</kw>
<test id="s1-s8-t1" name="SKTB-40097 Read Write OTP Values">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:47:30.704" endtime="20190121 11:47:30.810" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:47:30.813" endtime="20190121 11:47:30.937" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:47:32.944" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:47:30.939" endtime="20190121 11:47:32.946" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:47:32.949" endtime="20190121 11:47:32.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:47:34.004" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:47:32.999" endtime="20190121 11:47:34.006" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:47:34.009" endtime="20190121 11:47:34.056" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:47:36.064" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:47:34.060" endtime="20190121 11:47:36.066" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:47:36.069" endtime="20190121 11:47:36.116" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:47:36.119" endtime="20190121 11:47:36.165" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:47:36.168" endtime="20190121 11:47:36.214" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:47:36.217" endtime="20190121 11:47:36.263" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:30.682" endtime="20190121 11:47:36.266" status="PASS"></status>
</kw>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:36.346" level="INFO">${res_dict} = {'result': '4153', 'data': '', 'status': True, 'request': '41'}</msg>
<status starttime="20190121 11:47:36.276" endtime="20190121 11:47:36.347" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:47:36.406" level="INFO">${value} = True</msg>
<status starttime="20190121 11:47:36.355" endtime="20190121 11:47:36.407" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:47:36.414" endtime="20190121 11:47:36.426" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:47:37.433" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:47:36.429" endtime="20190121 11:47:37.436" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:36.270" endtime="20190121 11:47:37.438" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:37.506" level="INFO">${res_dict} = {'result': '4153', 'data': '', 'status': True, 'request': '41'}</msg>
<status starttime="20190121 11:47:37.446" endtime="20190121 11:47:37.507" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:47:37.534" level="INFO">${value} = True</msg>
<status starttime="20190121 11:47:37.510" endtime="20190121 11:47:37.535" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:47:37.538" endtime="20190121 11:47:37.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:47:38.549" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:47:37.545" endtime="20190121 11:47:38.551" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:37.440" endtime="20190121 11:47:38.553" status="PASS"></status>
</kw>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${MEM_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:47:38.574" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineMemory_OLU_*.bin</msg>
<msg timestamp="20190121 11:47:38.603" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:38.618" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:38.621" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:38.568" endtime="20190121 11:47:38.622" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:47:38.632" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status starttime="20190121 11:47:38.627" endtime="20190121 11:47:38.633" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:47:38.640" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:47:38.642" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin']</msg>
<status starttime="20190121 11:47:38.636" endtime="20190121 11:47:38.643" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:47:38.651" level="INFO">${path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status starttime="20190121 11:47:38.646" endtime="20190121 11:47:38.651" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:47:38.654" endtime="20190121 11:47:38.705" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190121 11:47:38.713" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:47:38.708" endtime="20190121 11:47:38.715" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:47:38.718" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status starttime="20190121 11:47:38.561" endtime="20190121 11:47:38.719" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:39.063" level="INFO">${res_dict} = {'result': '5453', 'request': '', 'data': 'ae49cfd0', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:47:38.722" endtime="20190121 11:47:39.064" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${matched_path}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:47:39.092" level="INFO">/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status starttime="20190121 11:47:39.074" endtime="20190121 11:47:39.103" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:47:39.116" level="INFO">{'result': '5453', 'request': '', 'data': 'ae49cfd0', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:47:39.106" endtime="20190121 11:47:39.119" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:47:41.126" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:47:39.122" endtime="20190121 11:47:41.128" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:47:41.157" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:47:41.131" endtime="20190121 11:47:41.158" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:47:41.160" endtime="20190121 11:47:41.166" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:38.555" endtime="20190121 11:47:41.168" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:41.238" level="INFO">${res_dict} = {'result': '4953', 'data': '', 'status': True, 'request': '49'}</msg>
<status starttime="20190121 11:47:41.176" endtime="20190121 11:47:41.239" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:47:41.267" level="INFO">${value} = True</msg>
<status starttime="20190121 11:47:41.242" endtime="20190121 11:47:41.267" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:47:41.270" endtime="20190121 11:47:41.274" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:47:42.282" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:47:41.277" endtime="20190121 11:47:42.284" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:41.170" endtime="20190121 11:47:42.286" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:42.358" level="INFO">${res_dict} = {'result': '475653', 'data': '0202', 'status': True, 'request': '4756'}</msg>
<status starttime="20190121 11:47:42.294" endtime="20190121 11:47:42.359" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:47:43.366" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:47:42.361" endtime="20190121 11:47:43.368" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:42.288" endtime="20190121 11:47:43.370" status="PASS"></status>
</kw>
<kw name="WRITE_OTP_CARIF_PSN_DEFAULT">
<doc>Write carif psn default value</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write carif psn default value</arg>
</arguments>
<status starttime="20190121 11:47:43.378" endtime="20190121 11:47:43.382" status="PASS"></status>
</kw>
<kw name="WRITE_OTP_VALUE">
<arguments>
<arg>${OTP_CARIF_PSN_ID}</arg>
<arg>${OTP_CARIF_PSN_DEFAULT}</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${OTP_ID}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:43.455" level="INFO">${res_dict} = {'result': '534653', 'data': '', 'status': True, 'request': '53460000fffe'}</msg>
<status starttime="20190121 11:47:43.393" endtime="20190121 11:47:43.455" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:47:43.492" level="INFO">${value} = True</msg>
<status starttime="20190121 11:47:43.462" endtime="20190121 11:47:43.493" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:43.559" level="INFO">${res_dict} = {'result': '534253', 'data': '', 'status': True, 'request': '534200104c616972642050534e20787878787878'}</msg>
<status starttime="20190121 11:47:43.497" endtime="20190121 11:47:43.560" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:47:43.590" level="INFO">${value} = True</msg>
<status starttime="20190121 11:47:43.564" endtime="20190121 11:47:43.591" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${Memory_WriteOtpIdent}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:43.654" level="INFO">${res_dict} = {'result': '520153', 'data': '', 'status': True, 'request': '5201'}</msg>
<status starttime="20190121 11:47:43.594" endtime="20190121 11:47:43.655" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:47:43.684" level="INFO">${value} = True</msg>
<status starttime="20190121 11:47:43.659" endtime="20190121 11:47:43.685" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${value}\n</arg>
</arguments>
<status starttime="20190121 11:47:43.687" endtime="20190121 11:47:43.693" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:47:43.696" endtime="20190121 11:47:43.700" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:43.385" endtime="20190121 11:47:43.703" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:43.372" endtime="20190121 11:47:43.705" status="PASS"></status>
</kw>
<kw name="READ_OTP_CARIF_PSN_DEFAULT">
<doc>Read and compare carif psn default</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read and compare carif psn default</arg>
</arguments>
<status starttime="20190121 11:47:43.713" endtime="20190121 11:47:43.717" status="PASS"></status>
</kw>
<kw name="READ_OTP_VALUE">
<arguments>
<arg>${OTP_CARIF_PSN_ID}</arg>
<arg>${OTP_CARIF_PSN_DEFAULT}</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setparam</arg>
<arg>${OTP_ID}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:43.825" level="INFO">${res_dict} = {'result': '534653', 'data': '', 'status': True, 'request': '53460000fffe'}</msg>
<status starttime="20190121 11:47:43.728" endtime="20190121 11:47:43.826" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:47:43.865" level="INFO">${value} = True</msg>
<status starttime="20190121 11:47:43.833" endtime="20190121 11:47:43.866" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${Memory_ReadOtpIdent}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:43.942" level="INFO">${res_dict} = {'result': '520246', 'data': '', 'status': False, 'request': '5202'}</msg>
<status starttime="20190121 11:47:43.869" endtime="20190121 11:47:43.943" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:47:43.975" level="INFO">${value} = False</msg>
<status starttime="20190121 11:47:43.946" endtime="20190121 11:47:43.976" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:47:44.983" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:47:43.978" endtime="20190121 11:47:44.985" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>getbuffer</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:47:45.050" level="INFO">${res_dict} = {'result': '474253', 'data': '', 'status': True, 'request': '4742'}</msg>
<status starttime="20190121 11:47:44.989" endtime="20190121 11:47:45.051" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}\n</arg>
</arguments>
<status starttime="20190121 11:47:45.054" endtime="20190121 11:47:45.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:47:45.088" level="INFO">${value} = </msg>
<status starttime="20190121 11:47:45.062" endtime="20190121 11:47:45.089" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${PARAM}</arg>
<arg>ignore_case=True</arg>
</arguments>
<msg timestamp="20190121 11:47:45.099" level="FAIL">'' does not contain '4c616972642050534e20787878787878'</msg>
<status starttime="20190121 11:47:45.092" endtime="20190121 11:47:45.101" status="FAIL"></status>
</kw>
<status starttime="20190121 11:47:43.719" endtime="20190121 11:47:45.103" status="FAIL"></status>
</kw>
<status starttime="20190121 11:47:43.707" endtime="20190121 11:47:45.106" status="FAIL"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:47:45.116" endtime="20190121 11:47:45.163" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:47:45.167" endtime="20190121 11:47:45.213" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:47:46.220" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:47:45.216" endtime="20190121 11:47:46.222" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:47:46.225" endtime="20190121 11:47:46.272" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:45.110" endtime="20190121 11:47:46.275" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-40097 read and Write otp value with testroutine</doc>
<tags>
<tag>Eeprom OTP Value</tag>
</tags>
<status starttime="20190121 11:47:30.658" critical="yes" endtime="20190121 11:47:46.276" status="FAIL">'' does not contain '4c616972642050534e20787878787878'</status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:47:47.810" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:47:47.881" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:47:46.321" endtime="20190121 11:47:47.883" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:46.293" endtime="20190121 11:47:47.884" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:46.287" endtime="20190121 11:47:47.886" status="PASS"></status>
</kw>
<doc>Eeprom OTP Value write read test with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:47:27.753" endtime="20190121 11:47:47.887" status="FAIL"></status>
</suite>
<suite id="s1-s9" name="SKTB-41635" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41635.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:47:48.625" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:47:48.592" endtime="20190121 11:47:48.650" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:47:48.669" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:47:48.671" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:47:50.880" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:47:48.653" endtime="20190121 11:47:50.882" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:48.586" endtime="20190121 11:47:50.884" status="PASS"></status>
</kw>
<test id="s1-s9-t1" name="can_diag_test">
<kw name="Test_precondition" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:47:50.948" level="INFO">"Test_precondition"</msg>
<status starttime="20190121 11:47:50.943" endtime="20190121 11:47:50.959" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:47:50.962" endtime="20190121 11:47:51.071" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:47:51.074" endtime="20190121 11:47:51.192" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:47:52.211" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:47:51.195" endtime="20190121 11:47:52.213" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:47:52.216" endtime="20190121 11:47:52.323" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<msg timestamp="20190121 11:47:52.456" level="INFO">Slept 100 milliseconds</msg>
<status starttime="20190121 11:47:52.326" endtime="20190121 11:47:52.458" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:47:52.461" endtime="20190121 11:47:52.559" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:47:54.586" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:47:52.563" endtime="20190121 11:47:54.588" status="PASS"></status>
</kw>
<kw name="set_can_channels">
<doc>set bitrate for channels</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:47:54.607" level="INFO">Starting process:
sudo ip link set can0 down</msg>
<msg timestamp="20190121 11:47:54.634" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:54.699" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:54.702" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:54.600" endtime="20190121 11:47:54.703" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:47:54.714" level="INFO">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg timestamp="20190121 11:47:54.741" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:54.790" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:54.793" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:54.706" endtime="20190121 11:47:54.794" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:47:54.805" level="INFO">Starting process:
sudo ip link set can0 up</msg>
<msg timestamp="20190121 11:47:54.832" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:54.895" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:54.898" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:54.798" endtime="20190121 11:47:54.899" status="PASS"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status starttime="20190121 11:47:54.590" endtime="20190121 11:47:54.902" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:50.926" endtime="20190121 11:47:54.905" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:47:54.914" level="INFO">Start test</msg>
<status starttime="20190121 11:47:54.909" endtime="20190121 11:47:54.918" status="PASS"></status>
</kw>
<kw name="Req_1003">
<doc>Extended session</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Extended session</arg>
</arguments>
<status starttime="20190121 11:47:54.929" endtime="20190121 11:47:54.935" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:47:54.948" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:47:54.978" level="INFO">${candump_ID} = 152</msg>
<status starttime="20190121 11:47:54.939" endtime="20190121 11:47:54.979" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>10 03</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:47:55.008" level="INFO">Starting process:
echo 10 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:47:55.039" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:55.053" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:55.055" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:54.999" endtime="20190121 11:47:55.057" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:54.991" endtime="20190121 11:47:55.060" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:47:55.075" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:56.096" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:47:56.098" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:47:56.102" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:56.105" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:47:55.069" endtime="20190121 11:47:56.106" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:47:56.115" level="INFO">2 lines returned</msg>
<msg timestamp="20190121 11:47:56.118" level="INFO">${temp} = [' (1548071275.050273)  can0  7F8   [8]  02 10 03 00 00 00 00 00', ' (1548071275.056435)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA']</msg>
<status starttime="20190121 11:47:56.109" endtime="20190121 11:47:56.119" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:47:56.128" level="INFO">(1548071275.050273)  can0  7F8   [8]  02 10 03 00 00 00 00 00
 (1548071275.056435)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA</msg>
<msg timestamp="20190121 11:47:56.130" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1548071275.050273', 'payload': '0210030000000000', 'id': '7F8'}, {'channel': 'can0', 'timestamp': '1548071275.056435', 'payload': '065003001400C8AA', 'id': '7F7'}]</msg>
<status starttime="20190121 11:47:56.122" endtime="20190121 11:47:56.131" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:47:56.134" endtime="20190121 11:47:56.140" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:47:56.151" level="INFO">${data} = True</msg>
<status starttime="20190121 11:47:56.143" endtime="20190121 11:47:56.152" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:47:56.156" level="INFO">${res} = True</msg>
<status starttime="20190121 11:47:55.062" endtime="20190121 11:47:56.157" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:47:56.160" endtime="20190121 11:47:56.165" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:54.923" endtime="20190121 11:47:56.167" status="PASS"></status>
</kw>
<kw name="Req_F100">
<doc>Active_DiagnosticInformation</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Active_DiagnosticInformation</arg>
</arguments>
<status starttime="20190121 11:47:56.176" endtime="20190121 11:47:56.182" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:47:56.193" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:47:56.222" level="INFO">${candump_ID} = 154</msg>
<status starttime="20190121 11:47:56.184" endtime="20190121 11:47:56.223" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 00</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:47:56.250" level="INFO">Starting process:
echo 22 F1 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:47:56.277" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:56.290" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:56.294" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:56.241" endtime="20190121 11:47:56.295" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:56.233" endtime="20190121 11:47:56.298" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:47:56.313" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:57.334" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:47:57.335" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:47:57.340" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:57.342" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:47:56.308" endtime="20190121 11:47:57.343" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:47:57.360" level="INFO">3 lines returned</msg>
<msg timestamp="20190121 11:47:57.375" level="INFO">${temp} = [' (1548071276.288407)  can0  7F8   [8]  03 22 F1 00 00 00 00 00', ' (1548071276.306395)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548071276.316448)  can0  7F7   [8]  07 62 F1 00 00 01 01 03']</msg>
<status starttime="20190121 11:47:57.353" endtime="20190121 11:47:57.376" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:47:57.385" level="INFO">(1548071276.288407)  can0  7F8   [8]  03 22 F1 00 00 00 00 00
 (1548071276.306395)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548071276.316448)  can0  7F7   [8]  07 62 F1 00 00 01 01 03</msg>
<msg timestamp="20190121 11:47:57.391" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1548071276.288407', 'payload': '0322F10000000000', 'id': '7F8'}, {'channel': 'can0', 'timestamp': '1548071276.306395', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status starttime="20190121 11:47:57.379" endtime="20190121 11:47:57.391" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:47:57.394" endtime="20190121 11:47:57.401" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:47:57.411" level="INFO">None</msg>
<msg timestamp="20190121 11:47:57.414" level="INFO">${data} = True</msg>
<status starttime="20190121 11:47:57.404" endtime="20190121 11:47:57.415" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:47:57.418" level="INFO">${res} = True</msg>
<status starttime="20190121 11:47:56.300" endtime="20190121 11:47:57.419" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:47:57.422" endtime="20190121 11:47:57.428" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:56.170" endtime="20190121 11:47:57.430" status="PASS"></status>
</kw>
<kw name="Req_F10D">
<doc>DDS Package Release</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DDS Package Release</arg>
</arguments>
<status starttime="20190121 11:47:57.438" endtime="20190121 11:47:57.444" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:47:57.456" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:47:57.485" level="INFO">${candump_ID} = 156</msg>
<status starttime="20190121 11:47:57.447" endtime="20190121 11:47:57.487" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 0D</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:47:57.513" level="INFO">Starting process:
echo 22 F1 0D | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:47:57.541" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:57.558" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:57.561" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:57.505" endtime="20190121 11:47:57.562" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:57.497" endtime="20190121 11:47:57.565" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:47:57.580" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:58.591" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:47:58.593" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:47:58.597" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:58.600" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:47:57.574" endtime="20190121 11:47:58.601" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:47:58.610" level="INFO">3 lines returned</msg>
<msg timestamp="20190121 11:47:58.612" level="INFO">${temp} = [' (1548071277.560288)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00', ' (1548071277.576473)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548071277.586432)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA']</msg>
<status starttime="20190121 11:47:58.604" endtime="20190121 11:47:58.613" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:47:58.622" level="INFO">(1548071277.560288)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00
 (1548071277.576473)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548071277.586432)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA</msg>
<msg timestamp="20190121 11:47:58.624" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1548071277.560288', 'payload': '0322F10D00000000', 'id': '7F8'}, {'channel': 'can0', 'timestamp': '1548071277.576473', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status starttime="20190121 11:47:58.616" endtime="20190121 11:47:58.625" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:47:58.628" endtime="20190121 11:47:58.635" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:47:58.646" level="INFO">${data} = True</msg>
<status starttime="20190121 11:47:58.638" endtime="20190121 11:47:58.647" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:47:58.650" level="INFO">${res} = True</msg>
<status starttime="20190121 11:47:57.567" endtime="20190121 11:47:58.651" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:47:58.654" endtime="20190121 11:47:58.659" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:57.432" endtime="20190121 11:47:58.662" status="PASS"></status>
</kw>
<kw name="Req_F103">
<doc>Vedoc Relevant Information</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Vedoc Relevant Information</arg>
</arguments>
<status starttime="20190121 11:47:58.670" endtime="20190121 11:47:58.676" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:47:58.688" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:47:58.720" level="INFO">${candump_ID} = 158</msg>
<status starttime="20190121 11:47:58.679" endtime="20190121 11:47:58.721" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg timestamp="20190121 11:47:58.739" level="INFO">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:47:58.768" level="INFO">${isotprecv_ID} = 159</msg>
<status starttime="20190121 11:47:58.729" endtime="20190121 11:47:58.772" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 03</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:47:58.797" level="INFO">Starting process:
echo 22 F1 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:47:58.824" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:58.836" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:58.839" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:47:58.789" endtime="20190121 11:47:58.841" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:58.775" endtime="20190121 11:47:58.843" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:47:58.861" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:47:59.866" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:47:59.868" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:47:59.872" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:47:59.874" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:47:58.855" endtime="20190121 11:47:59.875" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:47:59.885" level="INFO">3 lines returned</msg>
<msg timestamp="20190121 11:47:59.887" level="INFO">${temp} = [' (1548071278.834339)  can0  7F8   [8]  03 22 F1 03 00 00 00 00', ' (1548071278.846501)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548071278.856525)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69']</msg>
<status starttime="20190121 11:47:59.878" endtime="20190121 11:47:59.888" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:47:59.897" level="INFO">(1548071278.834339)  can0  7F8   [8]  03 22 F1 03 00 00 00 00
 (1548071278.846501)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548071278.856525)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69</msg>
<msg timestamp="20190121 11:47:59.899" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1548071278.834339', 'payload': '0322F10300000000', 'id': '7F8'}, {'channel': 'can0', 'timestamp': '1548071278.846501', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status starttime="20190121 11:47:59.891" endtime="20190121 11:47:59.900" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:47:59.903" endtime="20190121 11:47:59.910" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:47:59.921" level="INFO">${data} = True</msg>
<status starttime="20190121 11:47:59.913" endtime="20190121 11:47:59.922" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:47:59.925" level="INFO">${res} = True</msg>
<status starttime="20190121 11:47:58.846" endtime="20190121 11:47:59.926" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:47:59.929" endtime="20190121 11:47:59.935" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:58.664" endtime="20190121 11:47:59.937" status="PASS"></status>
</kw>
<kw name="Req_F1A0">
<doc>VIN Current</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current</arg>
</arguments>
<status starttime="20190121 11:47:59.945" endtime="20190121 11:47:59.951" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:47:59.963" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:47:59.992" level="INFO">${candump_ID} = 161</msg>
<status starttime="20190121 11:47:59.954" endtime="20190121 11:47:59.996" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg timestamp="20190121 11:48:00.013" level="INFO">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:48:00.042" level="INFO">${isotprecv_ID} = 162</msg>
<status starttime="20190121 11:48:00.000" endtime="20190121 11:48:00.043" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 A0</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:48:00.074" level="INFO">Starting process:
echo 22 F1 A0 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:48:00.101" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:00.114" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:00.117" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:00.062" endtime="20190121 11:48:00.118" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:00.050" endtime="20190121 11:48:00.121" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:48:00.158" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:01.163" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:48:01.165" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:48:01.171" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:01.174" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:48:00.139" endtime="20190121 11:48:01.174" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:48:01.189" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:48:01.191" level="INFO">${temp} = [' (1548071280.111632)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00']</msg>
<status starttime="20190121 11:48:01.179" endtime="20190121 11:48:01.192" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:48:01.201" level="INFO">(1548071280.111632)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00</msg>
<msg timestamp="20190121 11:48:01.203" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1548071280.111632', 'payload': '0322F1A000000000', 'id': '7F8'}]</msg>
<status starttime="20190121 11:48:01.195" endtime="20190121 11:48:01.204" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:48:01.207" endtime="20190121 11:48:01.214" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:48:01.225" level="INFO">${data} = True</msg>
<status starttime="20190121 11:48:01.217" endtime="20190121 11:48:01.226" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:01.230" level="INFO">${res} = True</msg>
<status starttime="20190121 11:48:00.123" endtime="20190121 11:48:01.231" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:48:01.234" endtime="20190121 11:48:01.239" status="PASS"></status>
</kw>
<status starttime="20190121 11:47:59.939" endtime="20190121 11:48:01.242" status="PASS"></status>
</kw>
<kw name="Req_F1A0_WRITE">
<doc>VIN Current</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current write</arg>
</arguments>
<status starttime="20190121 11:48:01.250" endtime="20190121 11:48:01.255" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:48:01.267" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190121 11:48:01.300" level="INFO">${candump_ID} = 164</msg>
<status starttime="20190121 11:48:01.258" endtime="20190121 11:48:01.301" status="PASS"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190121 11:48:01.325" level="INFO">Starting process:
echo 2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190121 11:48:01.352" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:01.386" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:01.391" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:01.316" endtime="20190121 11:48:01.392" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:01.304" endtime="20190121 11:48:01.395" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:48:02.404" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:48:01.398" endtime="20190121 11:48:02.407" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:48:02.421" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:03.425" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:48:03.427" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:48:03.431" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:03.435" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:48:02.415" endtime="20190121 11:48:03.436" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:48:03.450" level="INFO">5 lines returned</msg>
<msg timestamp="20190121 11:48:03.452" level="INFO">${temp} = [' (1548071281.362872)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00', ' (1548071281.363493)  can0  7F7   [8]  30 08 0A AA AA AA AA AA', ' (1548071281.374039)  can0  7F8   [8]  21 00 00 00 00 00 00 00', '...</msg>
<status starttime="20190121 11:48:03.442" endtime="20190121 11:48:03.453" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:48:03.465" level="INFO">(1548071281.362872)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00
 (1548071281.363493)  can0  7F7   [8]  30 08 0A AA AA AA AA AA
 (1548071281.374039)  can0  7F8   [8]  21 00 00 00 00 00 00 00
 (1548071281.384071)  can0  7F8   [8]  22 00 00 00 00 00 00 00
 (1548071281.388320)  can0  7F7   [8]  03 7F 2E 33 AA AA AA AA</msg>
<msg timestamp="20190121 11:48:03.467" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1548071281.362872', 'payload': '10142EF1A0000000', 'id': '7F8'}, {'channel': 'can0', 'timestamp': '1548071281.363493', 'payload': '30080AAAAAAAAAAA', 'id': '7F7'}, {...</msg>
<status starttime="20190121 11:48:03.457" endtime="20190121 11:48:03.468" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:48:03.471" endtime="20190121 11:48:03.481" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Response Exist">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:48:03.492" level="INFO">None</msg>
<msg timestamp="20190121 11:48:03.494" level="INFO">${data} = False</msg>
<status starttime="20190121 11:48:03.484" endtime="20190121 11:48:03.495" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:03.498" level="INFO">${res} = False</msg>
<status starttime="20190121 11:48:02.409" endtime="20190121 11:48:03.499" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:03.508" level="INFO">False</msg>
<status starttime="20190121 11:48:03.502" endtime="20190121 11:48:03.511" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:48:03.515" endtime="20190121 11:48:03.520" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:01.244" endtime="20190121 11:48:03.522" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg timestamp="20190121 11:48:03.537" level="INFO">Starting process:
pkill candump</msg>
<msg timestamp="20190121 11:48:03.566" level="INFO">${rm_res} = 166</msg>
<status starttime="20190121 11:48:03.533" endtime="20190121 11:48:03.567" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:03.579" endtime="20190121 11:48:03.701" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:03.704" endtime="20190121 11:48:03.792" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:03.526" endtime="20190121 11:48:03.795" status="PASS"></status>
</kw>
<doc>Can diagnose test</doc>
<tags>
<tag>CAN 1 diagnose test</tag>
</tags>
<timeout value="50 seconds"></timeout>
<status starttime="20190121 11:47:50.904" critical="yes" endtime="20190121 11:48:03.796" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:48:05.346" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:48:05.375" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:48:03.847" endtime="20190121 11:48:05.399" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:03.821" endtime="20190121 11:48:05.400" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:03.815" endtime="20190121 11:48:05.402" status="PASS"></status>
</kw>
<doc>CAN 1 diagnose test</doc>
<status starttime="20190121 11:47:48.050" endtime="20190121 11:48:05.403" status="PASS"></status>
</suite>
<suite id="s1-s10" name="SKTB-46886" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-46886.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:48:06.061" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:48:06.053" endtime="20190121 11:48:06.089" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:48:06.104" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:48:06.106" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:48:08.399" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:48:06.091" endtime="20190121 11:48:08.401" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:06.040" endtime="20190121 11:48:08.420" status="PASS"></status>
</kw>
<test id="s1-s10-t1" name="SKTB-GPIO FBUS test">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:08.456" endtime="20190121 11:48:08.570" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:08.573" endtime="20190121 11:48:08.696" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:08.699" endtime="20190121 11:48:08.851" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:48:10.886" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:48:08.855" endtime="20190121 11:48:10.888" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:48:10.891" endtime="20190121 11:48:10.937" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:48:10.940" endtime="20190121 11:48:10.987" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:48:10.990" endtime="20190121 11:48:11.042" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:48:11.045" endtime="20190121 11:48:11.091" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:48:11.095" endtime="20190121 11:48:11.141" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:48:11.145" endtime="20190121 11:48:11.221" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:48:13.237" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:48:11.228" endtime="20190121 11:48:13.239" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:08.442" endtime="20190121 11:48:13.242" status="PASS"></status>
</kw>
<kw name="Test_GPIO_00">
<doc>Test HI SIDE SWITCH 01</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 01</arg>
</arguments>
<status starttime="20190121 11:48:13.250" endtime="20190121 11:48:13.255" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:13.459" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 43 3D F5</msg>
<status starttime="20190121 11:48:13.258" endtime="20190121 11:48:13.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:13.468" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 43 3D F5</msg>
<status starttime="20190121 11:48:13.464" endtime="20190121 11:48:13.471" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:13.703" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 44 3D FE</msg>
<status starttime="20190121 11:48:13.474" endtime="20190121 11:48:13.704" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:13.712" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 44 3D FE</msg>
<status starttime="20190121 11:48:13.708" endtime="20190121 11:48:13.715" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:13.718" endtime="20190121 11:48:13.726" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:13.937" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 45 3D F3</msg>
<status starttime="20190121 11:48:13.729" endtime="20190121 11:48:13.937" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:13.945" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 45 3D F3</msg>
<status starttime="20190121 11:48:13.941" endtime="20190121 11:48:13.948" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:14.172" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 00 01 46 3D FD</msg>
<status starttime="20190121 11:48:13.951" endtime="20190121 11:48:14.174" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:14.181" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 00 01 46 3D FD</msg>
<status starttime="20190121 11:48:14.177" endtime="20190121 11:48:14.183" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:14.186" endtime="20190121 11:48:14.194" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:13.244" endtime="20190121 11:48:14.197" status="PASS"></status>
</kw>
<kw name="Test_GPIO_01">
<doc>Test HI SIDE SWITCH 02</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 02</arg>
</arguments>
<status starttime="20190121 11:48:14.205" endtime="20190121 11:48:14.210" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_2}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:14.446" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 01 01 41 3D F6</msg>
<status starttime="20190121 11:48:14.213" endtime="20190121 11:48:14.447" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:14.455" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 01 01 41 3D F6</msg>
<status starttime="20190121 11:48:14.451" endtime="20190121 11:48:14.458" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_2}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:14.691" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 01 01 42 3D F9</msg>
<status starttime="20190121 11:48:14.461" endtime="20190121 11:48:14.692" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:14.702" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 01 01 42 3D F9</msg>
<status starttime="20190121 11:48:14.696" endtime="20190121 11:48:14.705" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_2} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:14.708" endtime="20190121 11:48:14.716" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_2}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:14.942" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 01 01 43 3D F4</msg>
<status starttime="20190121 11:48:14.719" endtime="20190121 11:48:14.942" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:14.955" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 01 01 43 3D F4</msg>
<status starttime="20190121 11:48:14.949" endtime="20190121 11:48:14.958" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_2}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:15.177" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 00 01 44 3D FE</msg>
<status starttime="20190121 11:48:14.961" endtime="20190121 11:48:15.178" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:15.193" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 00 01 44 3D FE</msg>
<status starttime="20190121 11:48:15.185" endtime="20190121 11:48:15.199" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_2} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:15.202" endtime="20190121 11:48:15.223" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:14.199" endtime="20190121 11:48:15.226" status="PASS"></status>
</kw>
<kw name="Test_GPIO_02">
<doc>Test HI SIDE SWITCH 03</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 03</arg>
</arguments>
<status starttime="20190121 11:48:15.235" endtime="20190121 11:48:15.239" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_3}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:15.491" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 02 01 47 3D F3</msg>
<status starttime="20190121 11:48:15.242" endtime="20190121 11:48:15.492" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:15.500" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 02 01 47 3D F3</msg>
<status starttime="20190121 11:48:15.496" endtime="20190121 11:48:15.504" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_3}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:15.726" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 01 01 40 3D F8</msg>
<status starttime="20190121 11:48:15.507" endtime="20190121 11:48:15.727" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:15.743" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 01 01 40 3D F8</msg>
<status starttime="20190121 11:48:15.734" endtime="20190121 11:48:15.750" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_3} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:15.753" endtime="20190121 11:48:15.761" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_3}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:15.986" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 02 01 41 3D F5</msg>
<status starttime="20190121 11:48:15.765" endtime="20190121 11:48:15.986" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:16.007" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 02 01 41 3D F5</msg>
<status starttime="20190121 11:48:15.993" endtime="20190121 11:48:16.010" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_3}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:16.230" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 00 01 42 3D FB</msg>
<status starttime="20190121 11:48:16.013" endtime="20190121 11:48:16.230" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:16.246" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 00 01 42 3D FB</msg>
<status starttime="20190121 11:48:16.237" endtime="20190121 11:48:16.253" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_3} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:16.256" endtime="20190121 11:48:16.267" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:15.229" endtime="20190121 11:48:16.269" status="PASS"></status>
</kw>
<kw name="Test_GPIO_03">
<doc>Test HI SIDE SWITCH 03</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 03</arg>
</arguments>
<status starttime="20190121 11:48:16.278" endtime="20190121 11:48:16.283" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_4}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:16.512" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 03 01 43 3D F6</msg>
<status starttime="20190121 11:48:16.286" endtime="20190121 11:48:16.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:16.522" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 03 01 43 3D F6</msg>
<status starttime="20190121 11:48:16.518" endtime="20190121 11:48:16.524" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_4}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:16.753" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 01 01 44 3D FD</msg>
<status starttime="20190121 11:48:16.527" endtime="20190121 11:48:16.754" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:16.784" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 01 01 44 3D FD</msg>
<status starttime="20190121 11:48:16.772" endtime="20190121 11:48:16.787" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_4} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:16.792" endtime="20190121 11:48:16.806" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_4}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:17.062" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 03 01 45 3D F0</msg>
<status starttime="20190121 11:48:16.809" endtime="20190121 11:48:17.063" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:17.071" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 03 01 45 3D F0</msg>
<status starttime="20190121 11:48:17.067" endtime="20190121 11:48:17.074" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_4}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:17.298" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 00 01 46 3D FE</msg>
<status starttime="20190121 11:48:17.077" endtime="20190121 11:48:17.298" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:17.314" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 00 01 46 3D FE</msg>
<status starttime="20190121 11:48:17.306" endtime="20190121 11:48:17.321" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_4} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:17.324" endtime="20190121 11:48:17.332" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:16.271" endtime="20190121 11:48:17.334" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:17.345" endtime="20190121 11:48:17.393" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:17.396" endtime="20190121 11:48:17.442" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:17.448" endtime="20190121 11:48:17.494" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:48:19.502" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:48:17.497" endtime="20190121 11:48:19.504" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:48:19.507" endtime="20190121 11:48:19.555" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:48:19.558" endtime="20190121 11:48:19.603" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:17.338" endtime="20190121 11:48:19.606" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-46886</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status starttime="20190121 11:48:08.422" critical="yes" endtime="20190121 11:48:19.607" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:48:21.138" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:48:21.190" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:48:19.653" endtime="20190121 11:48:21.192" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:19.623" endtime="20190121 11:48:21.193" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:19.617" endtime="20190121 11:48:21.195" status="PASS"></status>
</kw>
<doc>Chorus Fbus GPIO Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:48:05.539" endtime="20190121 11:48:21.219" status="PASS"></status>
</suite>
<suite id="s1-s11" name="SKTB-47669" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-47669.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:48:21.996" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:48:21.983" endtime="20190121 11:48:22.007" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:48:22.040" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:48:22.042" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:48:24.396" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:48:22.014" endtime="20190121 11:48:24.419" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:21.978" endtime="20190121 11:48:24.427" status="PASS"></status>
</kw>
<test id="s1-s11-t1" name="SKTB-47669">
<kw name="Test_precondition" type="setup">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status starttime="20190121 11:48:24.479" endtime="20190121 11:48:24.494" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:24.497" endtime="20190121 11:48:24.610" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:24.613" endtime="20190121 11:48:24.719" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:48:24.722" endtime="20190121 11:48:24.846" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status starttime="20190121 11:48:24.851" endtime="20190121 11:48:24.937" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:48:24.940" endtime="20190121 11:48:25.076" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:48:25.079" endtime="20190121 11:48:25.171" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:48:27.178" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:48:25.174" endtime="20190121 11:48:27.180" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:48:27.183" endtime="20190121 11:48:27.229" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:48:27.232" endtime="20190121 11:48:27.278" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${4}</arg>
</arguments>
<msg timestamp="20190121 11:48:31.286" level="INFO">Slept 4 seconds</msg>
<status starttime="20190121 11:48:27.281" endtime="20190121 11:48:31.288" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:24.461" endtime="20190121 11:48:31.291" status="PASS"></status>
</kw>
<kw name="cansend_500k">
<doc>Trigger to send can message on can with bitrate 500000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 500000</arg>
</arguments>
<status starttime="20190121 11:48:31.300" endtime="20190121 11:48:31.305" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:48:31.327" endtime="20190121 11:48:31.334" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:31.346" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:48:31.373" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:31.441" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:31.444" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:31.337" endtime="20190121 11:48:31.446" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:31.450" endtime="20190121 11:48:31.458" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:31.469" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:48:31.496" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:31.547" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:31.550" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:31.462" endtime="20190121 11:48:31.551" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:31.555" endtime="20190121 11:48:31.563" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:31.573" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:48:31.600" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:31.714" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:31.718" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:31.566" endtime="20190121 11:48:31.719" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:31.732" endtime="20190121 11:48:31.743" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:48:31.317" endtime="20190121 11:48:31.745" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:48:31.756" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190121 11:48:31.785" level="INFO">${candump_ID} = 170</msg>
<status starttime="20190121 11:48:31.749" endtime="20190121 11:48:31.786" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:48:31.808" endtime="20190121 11:48:31.813" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:31.822" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status starttime="20190121 11:48:31.816" endtime="20190121 11:48:31.823" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:31.826" endtime="20190121 11:48:31.832" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:32.056" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status starttime="20190121 11:48:31.834" endtime="20190121 11:48:32.058" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:32.065" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status starttime="20190121 11:48:32.061" endtime="20190121 11:48:32.068" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:32.071" endtime="20190121 11:48:32.078" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:31.794" endtime="20190121 11:48:32.080" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:48:32.091" endtime="20190121 11:48:32.096" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:32.106" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:48:32.099" endtime="20190121 11:48:32.106" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:32.109" endtime="20190121 11:48:32.115" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:32.347" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status starttime="20190121 11:48:32.118" endtime="20190121 11:48:32.348" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:32.356" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status starttime="20190121 11:48:32.351" endtime="20190121 11:48:32.358" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:32.361" endtime="20190121 11:48:32.369" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:32.082" endtime="20190121 11:48:32.371" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:48:32.374" endtime="20190121 11:48:32.380" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:32.401" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:32.392" endtime="20190121 11:48:32.401" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:32.404" endtime="20190121 11:48:32.410" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:32.624" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:32.413" endtime="20190121 11:48:32.625" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:32.382" endtime="20190121 11:48:32.627" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:48:32.646" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:33.652" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:48:33.653" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:48:33.658" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:33.660" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:48:32.638" endtime="20190121 11:48:33.661" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:48:33.669" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:48:33.672" level="INFO">${temp} = [' (1548071312.462317)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:48:33.664" endtime="20190121 11:48:33.672" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:48:33.680" level="INFO">(1548071312.462317)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:48:33.682" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1548071312.462317', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:48:33.675" endtime="20190121 11:48:33.683" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:48:33.686" endtime="20190121 11:48:33.691" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:33.695" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1548071312.462317', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:48:32.632" endtime="20190121 11:48:33.696" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:48:33.706" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:48:33.699" endtime="20190121 11:48:33.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:48:33.709" endtime="20190121 11:48:33.715" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:48:33.749" level="INFO">${value} = True</msg>
<status starttime="20190121 11:48:33.718" endtime="20190121 11:48:33.750" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:48:33.753" endtime="20190121 11:48:33.757" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:33.761" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:48:31.307" endtime="20190121 11:48:33.762" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:48:33.765" endtime="20190121 11:48:33.769" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:31.294" endtime="20190121 11:48:33.771" status="PASS"></status>
</kw>
<kw name="cansend_500k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 500000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 500000</arg>
</arguments>
<status starttime="20190121 11:48:33.780" endtime="20190121 11:48:33.784" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:48:33.806" endtime="20190121 11:48:33.813" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:33.823" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:48:33.850" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:33.914" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:33.917" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:33.817" endtime="20190121 11:48:33.918" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:33.922" endtime="20190121 11:48:33.935" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:33.947" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190121 11:48:33.976" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:34.025" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:34.029" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:33.938" endtime="20190121 11:48:34.030" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:34.034" endtime="20190121 11:48:34.043" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:34.052" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:48:34.079" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:34.165" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:34.168" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:34.046" endtime="20190121 11:48:34.174" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:34.179" endtime="20190121 11:48:34.188" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:48:33.796" endtime="20190121 11:48:34.190" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:48:34.201" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190121 11:48:34.230" level="INFO">${candump_ID} = 174</msg>
<status starttime="20190121 11:48:34.194" endtime="20190121 11:48:34.231" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:48:34.252" endtime="20190121 11:48:34.257" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:34.267" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status starttime="20190121 11:48:34.260" endtime="20190121 11:48:34.268" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:34.272" endtime="20190121 11:48:34.277" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:34.693" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 44 E1 C2</msg>
<status starttime="20190121 11:48:34.281" endtime="20190121 11:48:34.694" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:34.730" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 44 E1 C2</msg>
<status starttime="20190121 11:48:34.721" endtime="20190121 11:48:34.757" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:34.760" endtime="20190121 11:48:34.796" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:34.242" endtime="20190121 11:48:34.829" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:48:34.885" endtime="20190121 11:48:34.904" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:34.963" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:48:34.912" endtime="20190121 11:48:34.964" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:34.995" endtime="20190121 11:48:35.026" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:35.379" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 45 E3 C5</msg>
<status starttime="20190121 11:48:35.037" endtime="20190121 11:48:35.380" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:35.400" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 45 E3 C5</msg>
<status starttime="20190121 11:48:35.385" endtime="20190121 11:48:35.410" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:35.413" endtime="20190121 11:48:35.434" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:34.831" endtime="20190121 11:48:35.436" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:48:35.439" endtime="20190121 11:48:35.458" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:35.498" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:35.478" endtime="20190121 11:48:35.499" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:35.502" endtime="20190121 11:48:35.538" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:35.793" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:35.541" endtime="20190121 11:48:35.794" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:35.460" endtime="20190121 11:48:35.797" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:48:35.836" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:36.862" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:48:36.864" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:48:36.868" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:36.871" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:48:35.819" endtime="20190121 11:48:36.872" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:48:36.880" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:48:36.882" level="INFO">${temp} = [' (1548071315.628099)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:48:36.874" endtime="20190121 11:48:36.883" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:48:36.890" level="INFO">(1548071315.628099)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:48:36.892" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1548071315.628099', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:48:36.886" endtime="20190121 11:48:36.893" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:48:36.896" endtime="20190121 11:48:36.902" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:36.906" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1548071315.628099', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:48:35.813" endtime="20190121 11:48:36.907" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:48:36.921" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:48:36.910" endtime="20190121 11:48:36.922" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:48:36.925" endtime="20190121 11:48:36.931" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:48:36.976" level="INFO">${value} = True</msg>
<status starttime="20190121 11:48:36.936" endtime="20190121 11:48:36.977" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:48:36.979" endtime="20190121 11:48:36.984" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:36.987" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:48:33.786" endtime="20190121 11:48:36.988" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:48:36.991" endtime="20190121 11:48:36.996" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:33.774" endtime="20190121 11:48:36.998" status="PASS"></status>
</kw>
<kw name="cansend_250k">
<doc>Trigger to send can message on can with bitrate 250000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 250000</arg>
</arguments>
<status starttime="20190121 11:48:37.007" endtime="20190121 11:48:37.012" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:48:37.034" endtime="20190121 11:48:37.046" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:37.055" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:48:37.082" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:37.148" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:37.151" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:37.049" endtime="20190121 11:48:37.152" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:37.156" endtime="20190121 11:48:37.165" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:37.175" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:48:37.202" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:37.253" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:37.256" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:37.168" endtime="20190121 11:48:37.257" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:37.261" endtime="20190121 11:48:37.269" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:37.281" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:48:37.309" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:37.380" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:37.383" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:37.274" endtime="20190121 11:48:37.384" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:37.388" endtime="20190121 11:48:37.397" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:48:37.023" endtime="20190121 11:48:37.399" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:48:37.410" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190121 11:48:37.439" level="INFO">${candump_ID} = 178</msg>
<status starttime="20190121 11:48:37.403" endtime="20190121 11:48:37.440" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:48:37.461" endtime="20190121 11:48:37.466" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:37.475" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status starttime="20190121 11:48:37.469" endtime="20190121 11:48:37.476" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:37.479" endtime="20190121 11:48:37.485" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:37.638" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 46 E1 C0</msg>
<status starttime="20190121 11:48:37.488" endtime="20190121 11:48:37.639" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:37.647" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 46 E1 C0</msg>
<status starttime="20190121 11:48:37.643" endtime="20190121 11:48:37.650" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:37.653" endtime="20190121 11:48:37.660" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:37.447" endtime="20190121 11:48:37.662" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:48:37.673" endtime="20190121 11:48:37.678" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:37.688" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:48:37.681" endtime="20190121 11:48:37.689" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:37.692" endtime="20190121 11:48:37.697" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:37.848" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status starttime="20190121 11:48:37.700" endtime="20190121 11:48:37.850" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:37.857" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status starttime="20190121 11:48:37.853" endtime="20190121 11:48:37.860" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:37.863" endtime="20190121 11:48:37.883" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:37.664" endtime="20190121 11:48:37.914" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:48:37.922" endtime="20190121 11:48:37.953" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:38.026" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:37.996" endtime="20190121 11:48:38.027" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:38.030" endtime="20190121 11:48:38.062" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:38.344" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:38.065" endtime="20190121 11:48:38.355" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:37.955" endtime="20190121 11:48:38.358" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:48:38.447" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:39.468" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:48:39.470" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:48:39.474" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:39.477" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:48:38.418" endtime="20190121 11:48:39.477" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:48:39.486" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:48:39.488" level="INFO">${temp} = [' (1548071318.151601)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:48:39.480" endtime="20190121 11:48:39.489" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:48:39.496" level="INFO">(1548071318.151601)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:48:39.498" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1548071318.151601', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:48:39.492" endtime="20190121 11:48:39.499" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:48:39.502" endtime="20190121 11:48:39.508" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:39.512" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1548071318.151601', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:48:38.404" endtime="20190121 11:48:39.513" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:48:39.524" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:48:39.516" endtime="20190121 11:48:39.525" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:48:39.528" endtime="20190121 11:48:39.533" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:48:39.569" level="INFO">${value} = True</msg>
<status starttime="20190121 11:48:39.537" endtime="20190121 11:48:39.570" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:48:39.573" endtime="20190121 11:48:39.577" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:39.581" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:48:37.014" endtime="20190121 11:48:39.582" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:48:39.585" endtime="20190121 11:48:39.589" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:37.000" endtime="20190121 11:48:39.591" status="PASS"></status>
</kw>
<kw name="cansend_250k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 250000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 250000</arg>
</arguments>
<status starttime="20190121 11:48:39.600" endtime="20190121 11:48:39.604" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:48:39.626" endtime="20190121 11:48:39.634" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:39.643" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:48:39.671" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:39.735" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:39.738" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:39.637" endtime="20190121 11:48:39.739" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:39.743" endtime="20190121 11:48:39.752" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:39.762" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:48:39.789" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:39.838" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:39.842" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:39.755" endtime="20190121 11:48:39.843" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:39.846" endtime="20190121 11:48:39.855" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:39.865" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:48:39.892" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:39.983" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:39.987" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:39.859" endtime="20190121 11:48:39.988" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:39.999" endtime="20190121 11:48:40.018" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:48:39.616" endtime="20190121 11:48:40.021" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:48:40.031" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190121 11:48:40.060" level="INFO">${candump_ID} = 182</msg>
<status starttime="20190121 11:48:40.024" endtime="20190121 11:48:40.064" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:48:40.082" endtime="20190121 11:48:40.087" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:40.097" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status starttime="20190121 11:48:40.090" endtime="20190121 11:48:40.098" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:40.101" endtime="20190121 11:48:40.106" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:40.350" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 42 E1 C4</msg>
<status starttime="20190121 11:48:40.109" endtime="20190121 11:48:40.351" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:40.359" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 42 E1 C4</msg>
<status starttime="20190121 11:48:40.355" endtime="20190121 11:48:40.362" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:40.365" endtime="20190121 11:48:40.373" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:40.067" endtime="20190121 11:48:40.375" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:48:40.386" endtime="20190121 11:48:40.390" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:40.400" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:48:40.393" endtime="20190121 11:48:40.401" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:40.404" endtime="20190121 11:48:40.409" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:40.646" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 43 E3 C3</msg>
<status starttime="20190121 11:48:40.412" endtime="20190121 11:48:40.647" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:40.664" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 43 E3 C3</msg>
<status starttime="20190121 11:48:40.655" endtime="20190121 11:48:40.672" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:40.675" endtime="20190121 11:48:40.686" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:40.377" endtime="20190121 11:48:40.689" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:48:40.692" endtime="20190121 11:48:40.698" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:40.717" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:40.709" endtime="20190121 11:48:40.718" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:40.721" endtime="20190121 11:48:40.726" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:40.935" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:40.729" endtime="20190121 11:48:40.935" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:40.700" endtime="20190121 11:48:40.938" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:48:40.951" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:41.958" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:48:41.960" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:48:41.974" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:41.977" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:48:40.947" endtime="20190121 11:48:41.978" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:48:41.987" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:48:41.989" level="INFO">${temp} = [' (1548071320.779859)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:48:41.981" endtime="20190121 11:48:41.990" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:48:41.997" level="INFO">(1548071320.779859)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:48:41.999" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1548071320.779859', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:48:41.993" endtime="20190121 11:48:42.000" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:48:42.003" endtime="20190121 11:48:42.009" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:42.013" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1548071320.779859', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:48:40.941" endtime="20190121 11:48:42.014" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:48:42.023" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:48:42.017" endtime="20190121 11:48:42.024" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:48:42.027" endtime="20190121 11:48:42.033" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:48:42.067" level="INFO">${value} = True</msg>
<status starttime="20190121 11:48:42.035" endtime="20190121 11:48:42.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:48:42.070" endtime="20190121 11:48:42.075" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:42.078" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:48:39.607" endtime="20190121 11:48:42.079" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:48:42.082" endtime="20190121 11:48:42.087" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:39.594" endtime="20190121 11:48:42.089" status="PASS"></status>
</kw>
<kw name="cansend_125k">
<doc>Trigger to send can message on can with bitrate 125000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 125000</arg>
</arguments>
<status starttime="20190121 11:48:42.097" endtime="20190121 11:48:42.102" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:48:42.124" endtime="20190121 11:48:42.135" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:42.145" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:48:42.171" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:42.236" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:42.239" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:42.138" endtime="20190121 11:48:42.240" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:42.244" endtime="20190121 11:48:42.253" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:42.263" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:48:42.290" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:42.340" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:42.343" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:42.256" endtime="20190121 11:48:42.344" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:42.348" endtime="20190121 11:48:42.357" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:42.367" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:48:42.395" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:42.484" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:42.487" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:42.360" endtime="20190121 11:48:42.488" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:42.501" endtime="20190121 11:48:42.515" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:48:42.114" endtime="20190121 11:48:42.518" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:48:42.530" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190121 11:48:42.559" level="INFO">${candump_ID} = 186</msg>
<status starttime="20190121 11:48:42.521" endtime="20190121 11:48:42.560" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:48:42.581" endtime="20190121 11:48:42.586" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:42.596" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status starttime="20190121 11:48:42.589" endtime="20190121 11:48:42.597" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:42.599" endtime="20190121 11:48:42.605" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:42.843" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 44 E1 C2</msg>
<status starttime="20190121 11:48:42.608" endtime="20190121 11:48:42.844" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:42.853" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 44 E1 C2</msg>
<status starttime="20190121 11:48:42.847" endtime="20190121 11:48:42.856" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:42.859" endtime="20190121 11:48:42.866" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:42.567" endtime="20190121 11:48:42.868" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:48:42.879" endtime="20190121 11:48:42.883" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:42.893" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:48:42.887" endtime="20190121 11:48:42.894" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:42.897" endtime="20190121 11:48:42.904" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:43.147" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 45 E3 C5</msg>
<status starttime="20190121 11:48:42.909" endtime="20190121 11:48:43.148" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:43.166" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 45 E3 C5</msg>
<status starttime="20190121 11:48:43.156" endtime="20190121 11:48:43.175" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:43.178" endtime="20190121 11:48:43.190" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:42.870" endtime="20190121 11:48:43.193" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:48:43.195" endtime="20190121 11:48:43.201" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:43.220" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:43.212" endtime="20190121 11:48:43.221" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:43.224" endtime="20190121 11:48:43.230" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:43.431" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:43.233" endtime="20190121 11:48:43.432" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:43.203" endtime="20190121 11:48:43.435" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:48:43.448" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:44.457" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:48:44.458" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:48:44.463" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:44.465" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:48:43.443" endtime="20190121 11:48:44.466" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:48:44.475" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:48:44.477" level="INFO">${temp} = [' (1548071323.288994)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:48:44.470" endtime="20190121 11:48:44.479" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:48:44.487" level="INFO">(1548071323.288994)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:48:44.489" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1548071323.288994', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:48:44.482" endtime="20190121 11:48:44.490" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:48:44.493" endtime="20190121 11:48:44.507" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:44.511" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1548071323.288994', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status starttime="20190121 11:48:43.437" endtime="20190121 11:48:44.533" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:48:44.554" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:48:44.537" endtime="20190121 11:48:44.555" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:48:44.558" endtime="20190121 11:48:44.575" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:48:44.630" level="INFO">${value} = True</msg>
<status starttime="20190121 11:48:44.579" endtime="20190121 11:48:44.631" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:48:44.634" endtime="20190121 11:48:44.638" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:44.642" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:48:42.104" endtime="20190121 11:48:44.643" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:48:44.645" endtime="20190121 11:48:44.650" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:42.091" endtime="20190121 11:48:44.652" status="PASS"></status>
</kw>
<kw name="cansend_125k_ex">
<doc>Trigger to send can message on can with 29 ID and bitrate 125000</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 ID and bitrate 125000</arg>
</arguments>
<status starttime="20190121 11:48:44.660" endtime="20190121 11:48:44.669" status="PASS"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:48:44.692" endtime="20190121 11:48:44.728" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:44.750" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:48:44.858" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:45.026" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:45.029" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:44.732" endtime="20190121 11:48:45.041" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:45.053" endtime="20190121 11:48:45.131" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:45.211" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:48:45.290" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:45.395" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:45.398" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:45.138" endtime="20190121 11:48:45.399" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:45.429" endtime="20190121 11:48:45.464" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:45.482" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:48:45.536" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:45.674" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:45.677" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:45.467" endtime="20190121 11:48:45.678" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:45.692" endtime="20190121 11:48:45.731" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:48:44.682" endtime="20190121 11:48:45.737" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:48:45.806" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190121 11:48:45.876" level="INFO">${candump_ID} = 190</msg>
<status starttime="20190121 11:48:45.777" endtime="20190121 11:48:45.881" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status starttime="20190121 11:48:45.920" endtime="20190121 11:48:45.937" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:45.974" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status starttime="20190121 11:48:45.952" endtime="20190121 11:48:45.975" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:45.978" endtime="20190121 11:48:46.000" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:46.250" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 46 E1 C0</msg>
<status starttime="20190121 11:48:46.003" endtime="20190121 11:48:46.251" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:46.259" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 46 E1 C0</msg>
<status starttime="20190121 11:48:46.254" endtime="20190121 11:48:46.261" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:46.264" endtime="20190121 11:48:46.272" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:45.884" endtime="20190121 11:48:46.274" status="PASS"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:48:46.285" endtime="20190121 11:48:46.290" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:46.300" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status starttime="20190121 11:48:46.293" endtime="20190121 11:48:46.301" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:46.303" endtime="20190121 11:48:46.309" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:46.546" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status starttime="20190121 11:48:46.312" endtime="20190121 11:48:46.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:46.554" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status starttime="20190121 11:48:46.549" endtime="20190121 11:48:46.556" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:46.559" endtime="20190121 11:48:46.567" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:46.276" endtime="20190121 11:48:46.569" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status starttime="20190121 11:48:46.572" endtime="20190121 11:48:46.578" status="PASS"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:46.597" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:46.588" endtime="20190121 11:48:46.598" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:46.609" endtime="20190121 11:48:46.624" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:46.847" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:46.627" endtime="20190121 11:48:46.848" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:46.580" endtime="20190121 11:48:46.851" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:48:46.864" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:47.869" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:48:47.871" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:48:47.875" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:47.878" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:48:46.860" endtime="20190121 11:48:47.878" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:48:47.887" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:48:47.889" level="INFO">${temp} = [' (1548071326.709330)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status starttime="20190121 11:48:47.882" endtime="20190121 11:48:47.890" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:48:47.897" level="INFO">(1548071326.709330)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:48:47.899" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1548071326.709330', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:48:47.893" endtime="20190121 11:48:47.900" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:48:47.904" endtime="20190121 11:48:47.909" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:47.913" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1548071326.709330', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status starttime="20190121 11:48:46.853" endtime="20190121 11:48:47.914" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:48:47.923" level="INFO">${res_dict} = {'count': 1, 'status': True}</msg>
<status starttime="20190121 11:48:47.917" endtime="20190121 11:48:47.924" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:48:47.927" endtime="20190121 11:48:47.933" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:48:47.968" level="INFO">${value} = True</msg>
<status starttime="20190121 11:48:47.936" endtime="20190121 11:48:47.968" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:48:47.972" endtime="20190121 11:48:47.976" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:47.980" level="INFO">${resp} = True</msg>
<status starttime="20190121 11:48:44.672" endtime="20190121 11:48:47.980" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:48:47.983" endtime="20190121 11:48:47.987" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:44.654" endtime="20190121 11:48:47.990" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate_1000k_negativtest">
<doc>Can setup channel and not supported bitrate 1000k negativtest</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and not supported bitrate 1000k negativtest</arg>
</arguments>
<status starttime="20190121 11:48:47.998" endtime="20190121 11:48:48.003" status="PASS"></status>
</kw>
<kw name="can_setup_bitrate_negativtest">
<doc>Can setup channel and bitrate negativtest</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${1000_KBAUD}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate negativtest</arg>
</arguments>
<status starttime="20190121 11:48:48.014" endtime="20190121 11:48:48.019" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:48.032" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 03</msg>
<status starttime="20190121 11:48:48.022" endtime="20190121 11:48:48.033" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:48.036" endtime="20190121 11:48:48.042" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:48.320" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 04 00 01 40 E5 C6</msg>
<status starttime="20190121 11:48:48.045" endtime="20190121 11:48:48.325" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:48.373" level="INFO">1E 10 54 93 00 08 00 0E AA 03 04 00 01 40 E5 C6</msg>
<status starttime="20190121 11:48:48.360" endtime="20190121 11:48:48.412" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Contain">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:48.415" endtime="20190121 11:48:48.479" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:48.006" endtime="20190121 11:48:48.488" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:47.992" endtime="20190121 11:48:48.491" status="PASS"></status>
</kw>
<kw name="trigger_can_message_125k">
<doc>Trigger to send 5 can messages on specified can channel without change any settings</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send 5 can messages on specified can channel without change any settings</arg>
</arguments>
<status starttime="20190121 11:48:48.509" endtime="20190121 11:48:48.531" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:48:48.553" endtime="20190121 11:48:48.579" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:48.596" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:48:48.624" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:48.724" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:48.727" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:48.582" endtime="20190121 11:48:48.728" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:48.732" endtime="20190121 11:48:48.741" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:48.751" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:48:48.779" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:48.828" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:48.831" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:48.744" endtime="20190121 11:48:48.832" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:48.836" endtime="20190121 11:48:48.845" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:48.857" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:48:48.885" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:48.975" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:48.979" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:48.849" endtime="20190121 11:48:48.980" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:48.990" endtime="20190121 11:48:49.006" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:48:48.533" endtime="20190121 11:48:49.009" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:48:49.019" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190121 11:48:49.056" level="INFO">${candump_ID} = 194</msg>
<status starttime="20190121 11:48:49.012" endtime="20190121 11:48:49.057" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Repeat Keyword">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg timestamp="20190121 11:48:49.070" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:49.090" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:49.082" endtime="20190121 11:48:49.091" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:49.094" endtime="20190121 11:48:49.100" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:49.319" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:49.103" endtime="20190121 11:48:49.320" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:49.073" endtime="20190121 11:48:49.326" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:49.327" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:49.352" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:49.343" endtime="20190121 11:48:49.352" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:49.356" endtime="20190121 11:48:49.362" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:49.578" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:49.365" endtime="20190121 11:48:49.579" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:49.334" endtime="20190121 11:48:49.587" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:49.588" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:49.635" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:49.614" endtime="20190121 11:48:49.636" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:49.639" endtime="20190121 11:48:49.645" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:49.860" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:49.648" endtime="20190121 11:48:49.867" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:49.594" endtime="20190121 11:48:49.870" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:49.871" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:49.906" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:49.898" endtime="20190121 11:48:49.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:49.910" endtime="20190121 11:48:49.916" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:50.132" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:49.919" endtime="20190121 11:48:50.138" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:49.878" endtime="20190121 11:48:50.144" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:50.146" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:50.183" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:50.175" endtime="20190121 11:48:50.184" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:50.187" endtime="20190121 11:48:50.193" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:50.487" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:50.196" endtime="20190121 11:48:50.488" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:50.158" endtime="20190121 11:48:50.490" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:49.065" endtime="20190121 11:48:50.492" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:48:50.510" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:51.537" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:48:51.539" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:48:51.543" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:51.545" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:48:50.506" endtime="20190121 11:48:51.546" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:48:51.555" level="INFO">5 lines returned</msg>
<msg timestamp="20190121 11:48:51.557" level="INFO">${temp} = [' (1548071329.155486)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1548071329.415373)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1548071329.698629)  can2  18EF1B05   [8]  11 22 33 44 ...</msg>
<status starttime="20190121 11:48:51.549" endtime="20190121 11:48:51.558" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:48:51.566" level="INFO">(1548071329.155486)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548071329.415373)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548071329.698629)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548071329.969891)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548071330.245757)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190121 11:48:51.568" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1548071329.155486', 'payload': '1122334455667788', 'id': '18EF1B05'}, {'channel': 'can2', 'timestamp': '1548071329.415373', 'payload': '1122334455667788', 'id': '18E...</msg>
<status starttime="20190121 11:48:51.561" endtime="20190121 11:48:51.569" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:48:51.572" endtime="20190121 11:48:51.578" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:51.582" level="INFO">${resp_list} = [{'channel': 'can2', 'timestamp': '1548071329.155486', 'payload': '1122334455667788', 'id': '18EF1B05'}, {'channel': 'can2', 'timestamp': '1548071329.415373', 'payload': '1122334455667788', 'id': '18E...</msg>
<status starttime="20190121 11:48:50.494" endtime="20190121 11:48:51.583" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:48:51.593" level="INFO">${res_dict} = {'count': 5, 'status': True}</msg>
<status starttime="20190121 11:48:51.586" endtime="20190121 11:48:51.594" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:48:51.596" endtime="20190121 11:48:51.602" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:48:51.635" level="INFO">${value} = True</msg>
<status starttime="20190121 11:48:51.605" endtime="20190121 11:48:51.636" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:48:51.639" endtime="20190121 11:48:51.643" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:48:51.677" level="INFO">${count} = 5</msg>
<status starttime="20190121 11:48:51.646" endtime="20190121 11:48:51.678" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${5}</arg>
<arg>${count}</arg>
</arguments>
<status starttime="20190121 11:48:51.680" endtime="20190121 11:48:51.686" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:48.493" endtime="20190121 11:48:51.689" status="PASS"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:48:51.705" endtime="20190121 11:48:51.709" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:51.719" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status starttime="20190121 11:48:51.712" endtime="20190121 11:48:51.720" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:51.723" endtime="20190121 11:48:51.729" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:51.932" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 41 E3 C1</msg>
<status starttime="20190121 11:48:51.733" endtime="20190121 11:48:51.933" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:51.941" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 41 E3 C1</msg>
<status starttime="20190121 11:48:51.936" endtime="20190121 11:48:51.943" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:51.946" endtime="20190121 11:48:51.954" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:51.696" endtime="20190121 11:48:51.957" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:51.691" endtime="20190121 11:48:51.959" status="PASS"></status>
</kw>
<kw name="channel_off_trigger_can_message_125k_negativtest">
<doc>Set the channel off and trigger to send 5 can messages on specified can channel</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the channel off and trigger to send 5 can messages on specified can channel</arg>
</arguments>
<status starttime="20190121 11:48:51.967" endtime="20190121 11:48:51.972" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:48:51.984" endtime="20190121 11:48:51.991" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:52.000" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:48:52.028" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:52.125" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:52.128" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:51.994" endtime="20190121 11:48:52.133" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:52.144" endtime="20190121 11:48:52.162" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:52.181" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190121 11:48:52.208" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:52.268" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:52.271" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:52.171" endtime="20190121 11:48:52.272" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:52.276" endtime="20190121 11:48:52.285" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:48:52.295" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:48:52.322" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:52.417" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:52.419" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:48:52.288" endtime="20190121 11:48:52.421" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:48:52.424" endtime="20190121 11:48:52.433" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:48:51.974" endtime="20190121 11:48:52.436" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:48:52.446" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190121 11:48:52.475" level="INFO">${candump_ID} = 198</msg>
<status starttime="20190121 11:48:52.439" endtime="20190121 11:48:52.476" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Repeat Keyword">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg timestamp="20190121 11:48:52.492" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:52.513" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:52.505" endtime="20190121 11:48:52.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:52.517" endtime="20190121 11:48:52.523" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:52.715" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:52.526" endtime="20190121 11:48:52.717" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:52.495" endtime="20190121 11:48:52.719" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:52.720" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:52.741" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:52.731" endtime="20190121 11:48:52.742" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:52.745" endtime="20190121 11:48:52.750" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:52.952" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:52.753" endtime="20190121 11:48:52.954" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:52.723" endtime="20190121 11:48:52.962" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:52.963" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:53.014" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:52.995" endtime="20190121 11:48:53.015" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:53.026" endtime="20190121 11:48:53.040" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:53.353" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:53.043" endtime="20190121 11:48:53.354" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:52.969" endtime="20190121 11:48:53.356" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:53.358" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:53.393" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:53.381" endtime="20190121 11:48:53.394" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:53.397" endtime="20190121 11:48:53.402" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:53.607" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:53.405" endtime="20190121 11:48:53.609" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:53.360" endtime="20190121 11:48:53.612" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:53.613" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:53.634" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status starttime="20190121 11:48:53.625" endtime="20190121 11:48:53.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:53.655" endtime="20190121 11:48:53.685" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:54.217" level="INFO">${info} = </msg>
<status starttime="20190121 11:48:53.690" endtime="20190121 11:48:54.218" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:53.616" endtime="20190121 11:48:54.220" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:52.484" endtime="20190121 11:48:54.250" status="PASS"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:48:54.322" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:48:55.394" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190121 11:48:55.396" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:48:55.411" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:48:55.413" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:48:54.301" endtime="20190121 11:48:55.414" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:48:55.436" level="INFO">0 lines returned</msg>
<msg timestamp="20190121 11:48:55.438" level="INFO">${temp} = []</msg>
<status starttime="20190121 11:48:55.418" endtime="20190121 11:48:55.439" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:48:55.452" level="INFO">${ret_list} = []</msg>
<status starttime="20190121 11:48:55.442" endtime="20190121 11:48:55.453" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status starttime="20190121 11:48:55.456" endtime="20190121 11:48:55.484" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:48:55.488" level="INFO">${resp_list} = []</msg>
<status starttime="20190121 11:48:54.256" endtime="20190121 11:48:55.489" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Check If Id With Msg Exist">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:48:55.509" level="INFO">${res_dict} = {'count': 0, 'status': False}</msg>
<status starttime="20190121 11:48:55.492" endtime="20190121 11:48:55.510" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:48:55.536" endtime="20190121 11:48:55.551" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:48:55.622" level="INFO">${value} = False</msg>
<status starttime="20190121 11:48:55.554" endtime="20190121 11:48:55.623" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:48:55.626" endtime="20190121 11:48:55.630" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:48:55.663" level="INFO">${count} = 0</msg>
<status starttime="20190121 11:48:55.633" endtime="20190121 11:48:55.664" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Integers">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${0}</arg>
<arg>${count}</arg>
</arguments>
<status starttime="20190121 11:48:55.667" endtime="20190121 11:48:55.673" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:51.961" endtime="20190121 11:48:55.676" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status starttime="20190121 11:48:55.687" endtime="20190121 11:48:55.692" status="PASS"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status starttime="20190121 11:48:55.709" endtime="20190121 11:48:55.714" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:48:55.724" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status starttime="20190121 11:48:55.717" endtime="20190121 11:48:55.725" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:48:55.728" endtime="20190121 11:48:55.734" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:48:56.007" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status starttime="20190121 11:48:55.737" endtime="20190121 11:48:56.008" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:48:56.015" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status starttime="20190121 11:48:56.011" endtime="20190121 11:48:56.018" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:48:56.021" endtime="20190121 11:48:56.028" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:55.700" endtime="20190121 11:48:56.030" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:55.694" endtime="20190121 11:48:56.038" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:56.061" endtime="20190121 11:48:56.159" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:48:56.162" endtime="20190121 11:48:56.218" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:48:56.222" endtime="20190121 11:48:56.307" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:55.680" endtime="20190121 11:48:56.314" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-47669 for can3 channel</doc>
<tags>
<tag>CAN 3 test TX</tag>
</tags>
<status starttime="20190121 11:48:24.431" critical="yes" endtime="20190121 11:48:56.315" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:48:57.991" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:48:58.044" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:48:56.520" endtime="20190121 11:48:58.046" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:56.391" endtime="20190121 11:48:58.047" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:56.348" endtime="20190121 11:48:58.049" status="PASS"></status>
</kw>
<doc>CAN 3 test TX with FBUS</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:48:21.388" endtime="20190121 11:48:58.050" status="PASS"></status>
</suite>
<suite id="s1-s12" name="SKTB-48413" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-48413.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:48:58.873" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:48:58.861" endtime="20190121 11:48:58.886" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:48:58.895" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:48:58.908" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:49:01.148" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:48:58.889" endtime="20190121 11:49:01.150" status="PASS"></status>
</kw>
<status starttime="20190121 11:48:58.855" endtime="20190121 11:49:01.163" status="PASS"></status>
</kw>
<test id="s1-s12-t1" name="SKTB-48413 FBUS test">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:01.216" endtime="20190121 11:49:01.363" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:01.366" endtime="20190121 11:49:01.435" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:01.439" endtime="20190121 11:49:01.568" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:49:03.590" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:49:01.571" endtime="20190121 11:49:03.592" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:49:03.594" endtime="20190121 11:49:03.642" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:49:03.645" endtime="20190121 11:49:03.692" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:49:03.695" endtime="20190121 11:49:03.739" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:49:03.743" endtime="20190121 11:49:03.789" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:49:03.792" endtime="20190121 11:49:03.840" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:49:03.843" endtime="20190121 11:49:03.918" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status starttime="20190121 11:49:03.929" endtime="20190121 11:49:03.998" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:49:06.009" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:49:04.004" endtime="20190121 11:49:06.011" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:01.192" endtime="20190121 11:49:06.025" status="PASS"></status>
</kw>
<kw name="digit_out_led1_freq">
<doc>Toggle digital output led 1 with the supported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle digital output led 1 with the supported frequency</arg>
</arguments>
<status starttime="20190121 11:49:06.073" endtime="20190121 11:49:06.090" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:06.134" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 01</msg>
<status starttime="20190121 11:49:06.115" endtime="20190121 11:49:06.135" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:06.138" endtime="20190121 11:49:06.155" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:06.415" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 04 01 43 3D F5</msg>
<status starttime="20190121 11:49:06.158" endtime="20190121 11:49:06.416" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:06.422" endtime="20190121 11:49:06.442" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:06.446" endtime="20190121 11:49:06.468" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:06.093" endtime="20190121 11:49:06.470" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:49:06.473" endtime="20190121 11:49:06.491" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:06.514" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status starttime="20190121 11:49:06.508" endtime="20190121 11:49:06.515" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:06.518" endtime="20190121 11:49:06.524" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:06.765" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 44 3E FB</msg>
<status starttime="20190121 11:49:06.527" endtime="20190121 11:49:06.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:06.769" endtime="20190121 11:49:06.777" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:06.785" endtime="20190121 11:49:06.801" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:06.822" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '44', '3E', 'FB']</msg>
<status starttime="20190121 11:49:06.804" endtime="20190121 11:49:06.824" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:06.840" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:49:06.831" endtime="20190121 11:49:06.841" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:06.493" endtime="20190121 11:49:06.845" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:06.042" endtime="20190121 11:49:06.847" status="PASS"></status>
</kw>
<kw name="digit_out_led1_freq_negativtest">
<doc>Toggle the digital output led 1 with the notsupported frequency negativ test</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 1 with the notsupported frequency negativtest</arg>
</arguments>
<status starttime="20190121 11:49:06.872" endtime="20190121 11:49:06.887" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:06.912" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 0B</msg>
<status starttime="20190121 11:49:06.905" endtime="20190121 11:49:06.913" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:06.916" endtime="20190121 11:49:06.921" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:07.184" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 04 01 47 3C F1</msg>
<status starttime="20190121 11:49:06.931" endtime="20190121 11:49:07.186" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:07.189" endtime="20190121 11:49:07.194" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:07.197" endtime="20190121 11:49:07.205" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:06.894" endtime="20190121 11:49:07.207" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:49:07.210" endtime="20190121 11:49:07.214" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:07.232" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status starttime="20190121 11:49:07.226" endtime="20190121 11:49:07.233" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:07.235" endtime="20190121 11:49:07.241" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:07.488" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 40 3E FF</msg>
<status starttime="20190121 11:49:07.244" endtime="20190121 11:49:07.495" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:07.509" endtime="20190121 11:49:07.541" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:07.544" endtime="20190121 11:49:07.571" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:07.598" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '40', '3E', 'FF']</msg>
<status starttime="20190121 11:49:07.593" endtime="20190121 11:49:07.599" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:07.657" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:49:07.627" endtime="20190121 11:49:07.658" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:07.217" endtime="20190121 11:49:07.661" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:06.849" endtime="20190121 11:49:07.679" status="PASS"></status>
</kw>
<kw name="digit_out_led1_high">
<doc>Set the digital output led 1 high and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 high and test it</arg>
</arguments>
<status starttime="20190121 11:49:07.696" endtime="20190121 11:49:07.710" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:07.735" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 01</msg>
<status starttime="20190121 11:49:07.728" endtime="20190121 11:49:07.736" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:07.739" endtime="20190121 11:49:07.744" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:07.950" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 43 3D F1</msg>
<status starttime="20190121 11:49:07.747" endtime="20190121 11:49:07.951" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:07.956" endtime="20190121 11:49:07.961" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:07.964" endtime="20190121 11:49:07.972" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:07.712" endtime="20190121 11:49:07.974" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:07.992" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status starttime="20190121 11:49:07.986" endtime="20190121 11:49:07.993" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:07.996" endtime="20190121 11:49:08.002" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:08.326" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 01 01 44 3D FA</msg>
<status starttime="20190121 11:49:08.013" endtime="20190121 11:49:08.326" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:08.334" endtime="20190121 11:49:08.343" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:08.346" endtime="20190121 11:49:08.356" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:08.364" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '01', '01', '44', '3D', 'FA']</msg>
<status starttime="20190121 11:49:08.359" endtime="20190121 11:49:08.365" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:08.373" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:49:08.368" endtime="20190121 11:49:08.374" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:08.378" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:49:07.976" endtime="20190121 11:49:08.378" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:49:08.381" endtime="20190121 11:49:08.386" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:07.681" endtime="20190121 11:49:08.389" status="PASS"></status>
</kw>
<kw name="digit_out_led1_low">
<doc>Set the digital output led 1 low and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 low and test it</arg>
</arguments>
<status starttime="20190121 11:49:08.397" endtime="20190121 11:49:08.401" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:08.421" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 00</msg>
<status starttime="20190121 11:49:08.414" endtime="20190121 11:49:08.421" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:08.424" endtime="20190121 11:49:08.430" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:08.652" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 45 3D F7</msg>
<status starttime="20190121 11:49:08.433" endtime="20190121 11:49:08.654" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:08.657" endtime="20190121 11:49:08.662" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:08.665" endtime="20190121 11:49:08.672" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:08.403" endtime="20190121 11:49:08.675" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:08.692" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status starttime="20190121 11:49:08.686" endtime="20190121 11:49:08.693" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:08.696" endtime="20190121 11:49:08.701" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:08.928" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 00 01 46 3D F9</msg>
<status starttime="20190121 11:49:08.704" endtime="20190121 11:49:08.930" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:08.933" endtime="20190121 11:49:08.939" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:08.943" endtime="20190121 11:49:08.953" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:08.962" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '00', '01', '46', '3D', 'F9']</msg>
<status starttime="20190121 11:49:08.956" endtime="20190121 11:49:08.963" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:08.972" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:49:08.966" endtime="20190121 11:49:08.973" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:08.977" level="INFO">${res} = 00</msg>
<status starttime="20190121 11:49:08.677" endtime="20190121 11:49:08.978" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status starttime="20190121 11:49:08.982" endtime="20190121 11:49:08.993" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:08.390" endtime="20190121 11:49:08.996" status="PASS"></status>
</kw>
<kw name="digit_out_led2_freq">
<doc>Toggle the digital output led 2 with the supported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2</arg>
<arg>with the supported frequency</arg>
</arguments>
<status starttime="20190121 11:49:09.007" endtime="20190121 11:49:09.013" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:09.042" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 01</msg>
<status starttime="20190121 11:49:09.030" endtime="20190121 11:49:09.043" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:09.048" endtime="20190121 11:49:09.055" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:09.286" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 05 01 47 3D F0</msg>
<status starttime="20190121 11:49:09.058" endtime="20190121 11:49:09.287" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:09.292" endtime="20190121 11:49:09.298" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:09.301" endtime="20190121 11:49:09.308" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:09.015" endtime="20190121 11:49:09.310" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:49:09.313" endtime="20190121 11:49:09.318" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:09.336" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status starttime="20190121 11:49:09.330" endtime="20190121 11:49:09.336" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:09.339" endtime="20190121 11:49:09.345" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:09.573" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 40 3E FE</msg>
<status starttime="20190121 11:49:09.348" endtime="20190121 11:49:09.574" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:09.576" endtime="20190121 11:49:09.582" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:09.585" endtime="20190121 11:49:09.593" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:09.601" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '40', '3E', 'FE']</msg>
<status starttime="20190121 11:49:09.596" endtime="20190121 11:49:09.602" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:09.610" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:49:09.605" endtime="20190121 11:49:09.611" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:09.320" endtime="20190121 11:49:09.614" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:08.998" endtime="20190121 11:49:09.617" status="PASS"></status>
</kw>
<kw name="digit_out_led2_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status starttime="20190121 11:49:09.625" endtime="20190121 11:49:09.630" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:09.650" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 0B</msg>
<status starttime="20190121 11:49:09.642" endtime="20190121 11:49:09.651" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:09.654" endtime="20190121 11:49:09.660" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:09.890" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 05 01 41 3C F6</msg>
<status starttime="20190121 11:49:09.664" endtime="20190121 11:49:09.891" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:09.895" endtime="20190121 11:49:09.900" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:09.903" endtime="20190121 11:49:09.911" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:09.632" endtime="20190121 11:49:09.913" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:49:09.916" endtime="20190121 11:49:09.921" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:09.943" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status starttime="20190121 11:49:09.936" endtime="20190121 11:49:09.943" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:09.946" endtime="20190121 11:49:09.952" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:10.293" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 42 3E FC</msg>
<status starttime="20190121 11:49:09.955" endtime="20190121 11:49:10.294" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:10.301" endtime="20190121 11:49:10.320" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:10.323" endtime="20190121 11:49:10.344" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:10.352" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '42', '3E', 'FC']</msg>
<status starttime="20190121 11:49:10.347" endtime="20190121 11:49:10.353" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:10.374" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:49:10.368" endtime="20190121 11:49:10.375" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:09.923" endtime="20190121 11:49:10.390" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:09.619" endtime="20190121 11:49:10.392" status="PASS"></status>
</kw>
<kw name="digit_out_led2_high">
<doc>Set the digital output led 2 high and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 high and test it</arg>
</arguments>
<status starttime="20190121 11:49:10.401" endtime="20190121 11:49:10.433" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:10.479" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 01</msg>
<status starttime="20190121 11:49:10.458" endtime="20190121 11:49:10.480" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:10.483" endtime="20190121 11:49:10.509" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:10.757" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 40 3D F3</msg>
<status starttime="20190121 11:49:10.512" endtime="20190121 11:49:10.758" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:10.761" endtime="20190121 11:49:10.767" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:10.770" endtime="20190121 11:49:10.777" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:10.436" endtime="20190121 11:49:10.779" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:10.797" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status starttime="20190121 11:49:10.791" endtime="20190121 11:49:10.798" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:10.802" endtime="20190121 11:49:10.807" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:11.039" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 01 01 45 3D FA</msg>
<status starttime="20190121 11:49:10.810" endtime="20190121 11:49:11.040" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:11.043" endtime="20190121 11:49:11.049" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:11.051" endtime="20190121 11:49:11.059" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:11.067" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '01', '01', '45', '3D', 'FA']</msg>
<status starttime="20190121 11:49:11.062" endtime="20190121 11:49:11.068" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:11.077" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:49:11.071" endtime="20190121 11:49:11.077" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:11.081" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:49:10.782" endtime="20190121 11:49:11.082" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:49:11.085" endtime="20190121 11:49:11.089" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:10.394" endtime="20190121 11:49:11.092" status="PASS"></status>
</kw>
<kw name="digit_out_led2_low">
<doc>Set the digital output led 2 low and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 low and test it</arg>
</arguments>
<status starttime="20190121 11:49:11.109" endtime="20190121 11:49:11.117" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:11.153" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 00</msg>
<status starttime="20190121 11:49:11.146" endtime="20190121 11:49:11.154" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:11.157" endtime="20190121 11:49:11.162" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:11.366" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 46 3D F5</msg>
<status starttime="20190121 11:49:11.165" endtime="20190121 11:49:11.366" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:11.369" endtime="20190121 11:49:11.375" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:11.378" endtime="20190121 11:49:11.385" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:11.120" endtime="20190121 11:49:11.387" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:11.406" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status starttime="20190121 11:49:11.399" endtime="20190121 11:49:11.407" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:11.410" endtime="20190121 11:49:11.415" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:11.647" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 00 01 47 3D F9</msg>
<status starttime="20190121 11:49:11.419" endtime="20190121 11:49:11.647" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:11.651" endtime="20190121 11:49:11.656" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:11.659" endtime="20190121 11:49:11.667" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:11.675" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '00', '01', '47', '3D', 'F9']</msg>
<status starttime="20190121 11:49:11.671" endtime="20190121 11:49:11.676" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:11.686" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:49:11.680" endtime="20190121 11:49:11.687" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:11.690" level="INFO">${res} = 00</msg>
<status starttime="20190121 11:49:11.389" endtime="20190121 11:49:11.691" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status starttime="20190121 11:49:11.695" endtime="20190121 11:49:11.700" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:11.094" endtime="20190121 11:49:11.702" status="PASS"></status>
</kw>
<kw name="digit_out_crm_freq">
<doc>Toggle the digital output CRM with the supported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output CRM with the supported frequency</arg>
</arguments>
<status starttime="20190121 11:49:11.711" endtime="20190121 11:49:11.715" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:11.734" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 01</msg>
<status starttime="20190121 11:49:11.727" endtime="20190121 11:49:11.735" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:11.738" endtime="20190121 11:49:11.743" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:11.975" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 06 01 40 3D F4</msg>
<status starttime="20190121 11:49:11.747" endtime="20190121 11:49:11.976" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:11.979" endtime="20190121 11:49:11.985" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:11.988" endtime="20190121 11:49:11.996" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:11.718" endtime="20190121 11:49:11.998" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:49:12.001" endtime="20190121 11:49:12.006" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:12.024" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status starttime="20190121 11:49:12.017" endtime="20190121 11:49:12.024" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:12.027" endtime="20190121 11:49:12.033" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:12.277" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 41 3E FC</msg>
<status starttime="20190121 11:49:12.036" endtime="20190121 11:49:12.278" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:12.281" endtime="20190121 11:49:12.286" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:12.289" endtime="20190121 11:49:12.297" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:12.305" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '41', '3E', 'FC']</msg>
<status starttime="20190121 11:49:12.300" endtime="20190121 11:49:12.306" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:12.314" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:49:12.309" endtime="20190121 11:49:12.315" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:12.008" endtime="20190121 11:49:12.318" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:11.704" endtime="20190121 11:49:12.321" status="PASS"></status>
</kw>
<kw name="digit_out_crm_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status starttime="20190121 11:49:12.329" endtime="20190121 11:49:12.334" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:12.361" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 0B</msg>
<status starttime="20190121 11:49:12.346" endtime="20190121 11:49:12.362" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:12.373" endtime="20190121 11:49:12.388" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:12.590" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 06 01 42 3C F6</msg>
<status starttime="20190121 11:49:12.391" endtime="20190121 11:49:12.591" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:12.594" endtime="20190121 11:49:12.599" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:12.602" endtime="20190121 11:49:12.610" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:12.336" endtime="20190121 11:49:12.613" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status starttime="20190121 11:49:12.615" endtime="20190121 11:49:12.620" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:12.638" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status starttime="20190121 11:49:12.632" endtime="20190121 11:49:12.639" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:12.641" endtime="20190121 11:49:12.647" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:12.875" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 43 3E FE</msg>
<status starttime="20190121 11:49:12.650" endtime="20190121 11:49:12.876" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:12.880" endtime="20190121 11:49:12.885" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:12.888" endtime="20190121 11:49:12.896" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:12.904" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '43', '3E', 'FE']</msg>
<status starttime="20190121 11:49:12.899" endtime="20190121 11:49:12.905" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:12.914" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:49:12.908" endtime="20190121 11:49:12.915" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:12.622" endtime="20190121 11:49:12.918" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:12.323" endtime="20190121 11:49:12.920" status="PASS"></status>
</kw>
<kw name="digit_out_crm_high">
<doc>Set the digital output crm high and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm high and test it</arg>
</arguments>
<status starttime="20190121 11:49:12.929" endtime="20190121 11:49:12.933" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:12.954" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 01</msg>
<status starttime="20190121 11:49:12.947" endtime="20190121 11:49:12.955" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:12.957" endtime="20190121 11:49:12.963" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:13.206" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 44 3D F4</msg>
<status starttime="20190121 11:49:12.966" endtime="20190121 11:49:13.207" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:13.211" endtime="20190121 11:49:13.216" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:13.221" endtime="20190121 11:49:13.230" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:12.935" endtime="20190121 11:49:13.232" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:13.250" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status starttime="20190121 11:49:13.244" endtime="20190121 11:49:13.251" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:13.254" endtime="20190121 11:49:13.259" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:13.489" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 01 01 45 3D F9</msg>
<status starttime="20190121 11:49:13.262" endtime="20190121 11:49:13.490" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:13.493" endtime="20190121 11:49:13.498" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:13.501" endtime="20190121 11:49:13.512" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:13.524" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '01', '01', '45', '3D', 'F9']</msg>
<status starttime="20190121 11:49:13.518" endtime="20190121 11:49:13.525" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:13.536" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:49:13.528" endtime="20190121 11:49:13.537" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:13.541" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:49:13.234" endtime="20190121 11:49:13.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:49:13.545" endtime="20190121 11:49:13.549" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:12.922" endtime="20190121 11:49:13.553" status="PASS"></status>
</kw>
<kw name="digit_out_crm_low">
<doc>Set the digital output crm low and test it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm low and test it</arg>
</arguments>
<status starttime="20190121 11:49:13.563" endtime="20190121 11:49:13.568" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:13.587" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 00</msg>
<status starttime="20190121 11:49:13.580" endtime="20190121 11:49:13.587" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:13.590" endtime="20190121 11:49:13.596" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:13.828" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 46 3D F6</msg>
<status starttime="20190121 11:49:13.599" endtime="20190121 11:49:13.829" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:13.832" endtime="20190121 11:49:13.859" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:13.862" endtime="20190121 11:49:13.882" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:13.570" endtime="20190121 11:49:13.885" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:13.923" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status starttime="20190121 11:49:13.912" endtime="20190121 11:49:13.924" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:13.927" endtime="20190121 11:49:13.933" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:14.165" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 00 01 47 3D FA</msg>
<status starttime="20190121 11:49:13.936" endtime="20190121 11:49:14.166" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:14.169" endtime="20190121 11:49:14.174" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:14.177" endtime="20190121 11:49:14.186" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:14.193" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '00', '01', '47', '3D', 'FA']</msg>
<status starttime="20190121 11:49:14.188" endtime="20190121 11:49:14.194" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:14.206" level="INFO">${value} = 00</msg>
<status starttime="20190121 11:49:14.197" endtime="20190121 11:49:14.207" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:14.211" level="INFO">${res} = 00</msg>
<status starttime="20190121 11:49:13.887" endtime="20190121 11:49:14.211" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status starttime="20190121 11:49:14.214" endtime="20190121 11:49:14.219" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:13.557" endtime="20190121 11:49:14.222" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:14.233" endtime="20190121 11:49:14.313" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:14.316" endtime="20190121 11:49:14.365" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:14.368" endtime="20190121 11:49:14.413" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:49:16.421" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:49:14.416" endtime="20190121 11:49:16.423" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:49:16.426" endtime="20190121 11:49:16.473" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:49:16.476" endtime="20190121 11:49:16.520" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:14.225" endtime="20190121 11:49:16.523" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-48413 toggle Digital Output Leds</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status starttime="20190121 11:49:01.165" critical="yes" endtime="20190121 11:49:16.524" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:49:18.047" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:49:18.113" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:49:16.574" endtime="20190121 11:49:18.114" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:16.540" endtime="20190121 11:49:18.116" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:16.535" endtime="20190121 11:49:18.118" status="PASS"></status>
</kw>
<doc>Chorus GPIO LED1, LED2, CRM test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:48:58.239" endtime="20190121 11:49:18.130" status="PASS"></status>
</suite>
<suite id="s1-s13" name="SKTB-49038" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49038.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:49:18.899" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:49:18.878" endtime="20190121 11:49:18.914" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:49:18.940" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:49:18.942" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:49:21.216" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:49:18.917" endtime="20190121 11:49:21.218" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:18.872" endtime="20190121 11:49:21.221" status="PASS"></status>
</kw>
<test id="s1-s13-t1" name="SKTB-GPIO FBUS test">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:21.283" endtime="20190121 11:49:21.393" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:21.396" endtime="20190121 11:49:21.517" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:21.531" endtime="20190121 11:49:21.641" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Bidir Wake Up">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:49:21.646" endtime="20190121 11:49:22.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:49:24.242" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:49:22.230" endtime="20190121 11:49:24.244" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:49:24.247" endtime="20190121 11:49:24.297" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:49:24.301" endtime="20190121 11:49:24.348" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:49:24.351" endtime="20190121 11:49:24.398" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:49:24.401" endtime="20190121 11:49:24.448" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:49:24.451" endtime="20190121 11:49:24.497" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:49:24.501" endtime="20190121 11:49:24.578" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:49:26.594" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:49:24.581" endtime="20190121 11:49:26.596" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:21.259" endtime="20190121 11:49:26.598" status="PASS"></status>
</kw>
<kw name="digit_input_1">
<doc>Get digital input 1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 1</arg>
</arguments>
<status starttime="20190121 11:49:26.607" endtime="20190121 11:49:26.612" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_1_BUTTON_1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:26.630" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0A</msg>
<status starttime="20190121 11:49:26.624" endtime="20190121 11:49:26.630" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:26.633" endtime="20190121 11:49:26.639" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:26.842" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0A 00 01 01 43 3D F3</msg>
<status starttime="20190121 11:49:26.642" endtime="20190121 11:49:26.843" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:26.846" endtime="20190121 11:49:26.851" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:26.854" endtime="20190121 11:49:26.863" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:26.871" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0A', '00', '01', '01', '43', '3D', 'F3']</msg>
<status starttime="20190121 11:49:26.866" endtime="20190121 11:49:26.872" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:26.880" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:49:26.874" endtime="20190121 11:49:26.881" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:26.884" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:49:26.614" endtime="20190121 11:49:26.885" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:49:26.888" endtime="20190121 11:49:26.893" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:26.601" endtime="20190121 11:49:26.895" status="PASS"></status>
</kw>
<kw name="digit_input_2">
<doc>Get digital input 2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 2</arg>
</arguments>
<status starttime="20190121 11:49:26.904" endtime="20190121 11:49:26.908" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_2_BUTTON_2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:26.930" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0B</msg>
<status starttime="20190121 11:49:26.924" endtime="20190121 11:49:26.930" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:26.933" endtime="20190121 11:49:26.939" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:27.168" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0B 00 01 01 44 3D F5</msg>
<status starttime="20190121 11:49:26.942" endtime="20190121 11:49:27.169" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:27.172" endtime="20190121 11:49:27.177" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:27.180" endtime="20190121 11:49:27.188" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:27.196" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0B', '00', '01', '01', '44', '3D', 'F5']</msg>
<status starttime="20190121 11:49:27.191" endtime="20190121 11:49:27.197" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:27.205" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:49:27.200" endtime="20190121 11:49:27.206" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:27.210" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:49:26.911" endtime="20190121 11:49:27.210" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:49:27.213" endtime="20190121 11:49:27.218" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:26.897" endtime="20190121 11:49:27.221" status="PASS"></status>
</kw>
<kw name="digit_input_3">
<doc>Get digital input 3</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 3</arg>
</arguments>
<status starttime="20190121 11:49:27.229" endtime="20190121 11:49:27.233" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_3_AIRB_PWM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:27.251" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0C</msg>
<status starttime="20190121 11:49:27.245" endtime="20190121 11:49:27.252" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:27.255" endtime="20190121 11:49:27.260" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:27.491" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0C 00 01 01 45 3D F3</msg>
<status starttime="20190121 11:49:27.263" endtime="20190121 11:49:27.491" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:27.495" endtime="20190121 11:49:27.500" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:27.503" endtime="20190121 11:49:27.511" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:27.519" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0C', '00', '01', '01', '45', '3D', 'F3']</msg>
<status starttime="20190121 11:49:27.514" endtime="20190121 11:49:27.520" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:27.531" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:49:27.525" endtime="20190121 11:49:27.531" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:27.535" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:49:27.236" endtime="20190121 11:49:27.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status starttime="20190121 11:49:27.539" endtime="20190121 11:49:27.543" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:27.223" endtime="20190121 11:49:27.546" status="PASS"></status>
</kw>
<kw name="digit_input_bid">
<doc>Get digital input BIDR WUL</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input BIDR WUL</arg>
</arguments>
<status starttime="20190121 11:49:27.554" endtime="20190121 11:49:27.559" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${BIDIR_WUL_IN}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:27.577" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0E</msg>
<status starttime="20190121 11:49:27.571" endtime="20190121 11:49:27.578" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:27.580" endtime="20190121 11:49:27.586" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:49:27.815" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0E 00 01 01 40 3D F4</msg>
<status starttime="20190121 11:49:27.589" endtime="20190121 11:49:27.815" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status starttime="20190121 11:49:27.819" endtime="20190121 11:49:27.824" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:27.827" endtime="20190121 11:49:27.839" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:27.847" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0E', '00', '01', '01', '40', '3D', 'F4']</msg>
<status starttime="20190121 11:49:27.842" endtime="20190121 11:49:27.848" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:49:27.912" level="INFO">${value} = 01</msg>
<status starttime="20190121 11:49:27.870" endtime="20190121 11:49:27.919" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:27.923" level="INFO">${res} = 01</msg>
<status starttime="20190121 11:49:27.561" endtime="20190121 11:49:27.948" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<msg timestamp="20190121 11:49:27.969" level="FAIL">'01' does not contain '00'</msg>
<status starttime="20190121 11:49:27.951" endtime="20190121 11:49:27.971" status="FAIL"></status>
</kw>
<status starttime="20190121 11:49:27.548" endtime="20190121 11:49:27.974" status="FAIL"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:27.992" endtime="20190121 11:49:28.042" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:28.045" endtime="20190121 11:49:28.091" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:28.095" endtime="20190121 11:49:28.140" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:49:30.148" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:49:28.143" endtime="20190121 11:49:30.150" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:49:30.153" endtime="20190121 11:49:30.199" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:49:30.202" endtime="20190121 11:49:30.247" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:27.985" endtime="20190121 11:49:30.250" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-49038</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status starttime="20190121 11:49:21.240" critical="yes" endtime="20190121 11:49:30.251" status="FAIL">'01' does not contain '00'</status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:49:31.766" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:49:31.818" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:49:30.301" endtime="20190121 11:49:31.819" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:30.267" endtime="20190121 11:49:31.821" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:30.262" endtime="20190121 11:49:31.823" status="PASS"></status>
</kw>
<doc>Chorus GPIO input 1,2,3 BID_wul test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:49:18.296" endtime="20190121 11:49:31.824" status="FAIL"></status>
</suite>
<suite id="s1-s14" name="SKTB-49357" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49357.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:49:32.629" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:49:32.617" endtime="20190121 11:49:32.654" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:49:32.682" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:49:32.684" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:49:34.796" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:49:32.657" endtime="20190121 11:49:34.817" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:32.611" endtime="20190121 11:49:34.819" status="PASS"></status>
</kw>
<test id="s1-s14-t1" name="SKTB-49357 Gpio pwm test">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:34.867" endtime="20190121 11:49:34.954" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:34.957" endtime="20190121 11:49:35.051" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:49:35.082" endtime="20190121 11:49:35.177" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:49:37.189" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:49:35.180" endtime="20190121 11:49:37.191" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:49:37.193" endtime="20190121 11:49:37.239" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:49:37.243" endtime="20190121 11:49:37.289" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:49:37.293" endtime="20190121 11:49:37.337" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:49:37.340" endtime="20190121 11:49:37.390" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:49:37.393" endtime="20190121 11:49:37.439" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:49:37.442" endtime="20190121 11:49:37.521" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status starttime="20190121 11:49:37.524" endtime="20190121 11:49:37.600" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:49:38.608" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:49:37.603" endtime="20190121 11:49:38.610" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:34.861" endtime="20190121 11:49:38.612" status="PASS"></status>
</kw>
<kw name="digit_out_hs_1">
<doc>Set pwm for the digital output hs 1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 1</arg>
</arguments>
<status starttime="20190121 11:49:38.623" endtime="20190121 11:49:38.628" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_1}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:38.637" endtime="20190121 11:49:38.642" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:38.662" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 20</msg>
<status starttime="20190121 11:49:38.654" endtime="20190121 11:49:38.663" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:38.666" endtime="20190121 11:49:38.674" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:38.878" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 43 3D F7</msg>
<status starttime="20190121 11:49:38.677" endtime="20190121 11:49:38.879" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:38.882" endtime="20190121 11:49:38.888" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:38.890" endtime="20190121 11:49:38.896" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:38.904" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '43', '3D', 'F7']</msg>
<status starttime="20190121 11:49:38.899" endtime="20190121 11:49:38.905" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:38.913" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:49:38.908" endtime="20190121 11:49:38.914" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:38.917" endtime="20190121 11:49:38.922" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:38.931" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:38.925" endtime="20190121 11:49:38.931" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:38.935" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:38.644" endtime="20190121 11:49:38.937" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:38.939" endtime="20190121 11:49:38.945" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:38.948" endtime="20190121 11:49:38.952" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:38.972" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0064 64</msg>
<status starttime="20190121 11:49:38.965" endtime="20190121 11:49:38.973" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:38.976" endtime="20190121 11:49:38.982" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:39.210" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 44 3D F0</msg>
<status starttime="20190121 11:49:38.985" endtime="20190121 11:49:39.211" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:39.215" endtime="20190121 11:49:39.220" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:39.223" endtime="20190121 11:49:39.229" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:39.236" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '44', '3D', 'F0']</msg>
<status starttime="20190121 11:49:39.232" endtime="20190121 11:49:39.237" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:39.246" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:49:39.240" endtime="20190121 11:49:39.247" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:39.249" endtime="20190121 11:49:39.255" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:39.264" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:39.258" endtime="20190121 11:49:39.265" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:39.268" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:38.955" endtime="20190121 11:49:39.269" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:39.272" endtime="20190121 11:49:39.277" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:39.281" endtime="20190121 11:49:39.285" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:39.305" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0001 01</msg>
<status starttime="20190121 11:49:39.298" endtime="20190121 11:49:39.306" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:39.309" endtime="20190121 11:49:39.314" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:39.545" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 45 3D F1</msg>
<status starttime="20190121 11:49:39.317" endtime="20190121 11:49:39.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:39.549" endtime="20190121 11:49:39.557" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:39.560" endtime="20190121 11:49:39.566" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:39.574" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '45', '3D', 'F1']</msg>
<status starttime="20190121 11:49:39.569" endtime="20190121 11:49:39.575" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:39.583" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:49:39.577" endtime="20190121 11:49:39.584" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:39.587" endtime="20190121 11:49:39.592" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:39.615" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:39.596" endtime="20190121 11:49:39.616" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:39.619" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:39.287" endtime="20190121 11:49:39.620" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:39.627" endtime="20190121 11:49:39.647" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:39.653" endtime="20190121 11:49:39.660" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:39.685" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0065 65</msg>
<status starttime="20190121 11:49:39.674" endtime="20190121 11:49:39.686" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:39.689" endtime="20190121 11:49:39.696" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:39.919" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 46 3C F2</msg>
<status starttime="20190121 11:49:39.699" endtime="20190121 11:49:39.921" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:39.924" endtime="20190121 11:49:39.929" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:39.932" endtime="20190121 11:49:39.938" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:39.946" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '46', '3C', 'F2']</msg>
<status starttime="20190121 11:49:39.941" endtime="20190121 11:49:39.947" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:39.955" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:49:39.950" endtime="20190121 11:49:39.956" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:39.959" endtime="20190121 11:49:39.964" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:39.973" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:39.967" endtime="20190121 11:49:39.974" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:39.977" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:39.662" endtime="20190121 11:49:39.978" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:39.981" endtime="20190121 11:49:39.987" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:39.990" endtime="20190121 11:49:39.994" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:40.015" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 65</msg>
<status starttime="20190121 11:49:40.008" endtime="20190121 11:49:40.016" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:40.018" endtime="20190121 11:49:40.024" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:40.258" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 47 3C F3</msg>
<status starttime="20190121 11:49:40.027" endtime="20190121 11:49:40.258" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:40.262" endtime="20190121 11:49:40.268" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:40.271" endtime="20190121 11:49:40.276" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:40.284" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '47', '3C', 'F3']</msg>
<status starttime="20190121 11:49:40.279" endtime="20190121 11:49:40.285" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:40.295" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:49:40.288" endtime="20190121 11:49:40.296" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:40.299" endtime="20190121 11:49:40.307" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:40.316" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:40.310" endtime="20190121 11:49:40.317" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:40.321" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:39.997" endtime="20190121 11:49:40.322" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:40.324" endtime="20190121 11:49:40.330" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:40.333" endtime="20190121 11:49:40.338" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:40.378" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0065 20</msg>
<status starttime="20190121 11:49:40.359" endtime="20190121 11:49:40.379" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:40.385" endtime="20190121 11:49:40.399" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:40.603" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 42 3C F6</msg>
<status starttime="20190121 11:49:40.402" endtime="20190121 11:49:40.604" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:40.607" endtime="20190121 11:49:40.614" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:40.617" endtime="20190121 11:49:40.622" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:40.630" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '42', '3C', 'F6']</msg>
<status starttime="20190121 11:49:40.625" endtime="20190121 11:49:40.631" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:40.640" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:49:40.634" endtime="20190121 11:49:40.641" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:40.645" endtime="20190121 11:49:40.650" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:40.659" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:40.653" endtime="20190121 11:49:40.660" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:40.664" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:40.340" endtime="20190121 11:49:40.665" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:40.667" endtime="20190121 11:49:40.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:40.676" endtime="20190121 11:49:40.681" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:40.758" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 00</msg>
<status starttime="20190121 11:49:40.726" endtime="20190121 11:49:40.759" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:40.766" endtime="20190121 11:49:40.795" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:41.113" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 43 3C F7</msg>
<status starttime="20190121 11:49:40.801" endtime="20190121 11:49:41.114" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:41.117" endtime="20190121 11:49:41.154" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:41.157" endtime="20190121 11:49:41.186" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:41.206" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '43', '3C', 'F7']</msg>
<status starttime="20190121 11:49:41.189" endtime="20190121 11:49:41.207" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:41.235" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:49:41.210" endtime="20190121 11:49:41.236" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:41.239" endtime="20190121 11:49:41.258" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:41.280" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:41.262" endtime="20190121 11:49:41.281" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:41.284" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:40.683" endtime="20190121 11:49:41.285" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:41.288" endtime="20190121 11:49:41.319" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:41.323" endtime="20190121 11:49:41.339" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:41.407" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0000 20</msg>
<status starttime="20190121 11:49:41.390" endtime="20190121 11:49:41.408" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:41.410" endtime="20190121 11:49:41.416" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:41.618" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 46 3C F2</msg>
<status starttime="20190121 11:49:41.419" endtime="20190121 11:49:41.619" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:41.623" endtime="20190121 11:49:41.628" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:41.631" endtime="20190121 11:49:41.637" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:41.644" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '46', '3C', 'F2']</msg>
<status starttime="20190121 11:49:41.640" endtime="20190121 11:49:41.646" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:41.655" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:49:41.649" endtime="20190121 11:49:41.656" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:41.659" endtime="20190121 11:49:41.664" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:41.673" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:41.667" endtime="20190121 11:49:41.673" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:41.677" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:41.342" endtime="20190121 11:49:41.678" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:41.681" endtime="20190121 11:49:41.687" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:41.689" endtime="20190121 11:49:41.694" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:41.716" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0000 00</msg>
<status starttime="20190121 11:49:41.709" endtime="20190121 11:49:41.717" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:41.720" endtime="20190121 11:49:41.726" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:41.968" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 47 3C F3</msg>
<status starttime="20190121 11:49:41.728" endtime="20190121 11:49:41.969" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:41.972" endtime="20190121 11:49:41.978" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:41.982" endtime="20190121 11:49:41.987" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:41.995" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '47', '3C', 'F3']</msg>
<status starttime="20190121 11:49:41.990" endtime="20190121 11:49:41.996" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:42.005" level="INFO">${gpio_id} = 00</msg>
<status starttime="20190121 11:49:41.999" endtime="20190121 11:49:42.006" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:42.009" endtime="20190121 11:49:42.014" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:42.023" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:42.017" endtime="20190121 11:49:42.024" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:42.027" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:41.697" endtime="20190121 11:49:42.028" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:42.031" endtime="20190121 11:49:42.037" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:38.630" endtime="20190121 11:49:42.039" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:38.617" endtime="20190121 11:49:42.041" status="PASS"></status>
</kw>
<kw name="digit_out_hs_2">
<doc>Set pwm for the digital output hs 2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 2</arg>
</arguments>
<status starttime="20190121 11:49:42.049" endtime="20190121 11:49:42.054" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_2}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:42.063" endtime="20190121 11:49:42.068" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:42.112" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 20</msg>
<status starttime="20190121 11:49:42.081" endtime="20190121 11:49:42.117" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:42.120" endtime="20190121 11:49:42.133" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:42.343" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 40 3D F5</msg>
<status starttime="20190121 11:49:42.140" endtime="20190121 11:49:42.345" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:42.348" endtime="20190121 11:49:42.353" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:42.356" endtime="20190121 11:49:42.362" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:42.370" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '40', '3D', 'F5']</msg>
<status starttime="20190121 11:49:42.365" endtime="20190121 11:49:42.371" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:42.379" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:49:42.373" endtime="20190121 11:49:42.380" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:42.383" endtime="20190121 11:49:42.388" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:42.397" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:42.391" endtime="20190121 11:49:42.398" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:42.401" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:42.071" endtime="20190121 11:49:42.402" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:42.405" endtime="20190121 11:49:42.410" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:42.413" endtime="20190121 11:49:42.418" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:42.440" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0064 64</msg>
<status starttime="20190121 11:49:42.433" endtime="20190121 11:49:42.441" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:42.443" endtime="20190121 11:49:42.449" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:42.684" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 41 3D F4</msg>
<status starttime="20190121 11:49:42.452" endtime="20190121 11:49:42.685" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:42.688" endtime="20190121 11:49:42.694" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:42.697" endtime="20190121 11:49:42.702" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:42.711" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '41', '3D', 'F4']</msg>
<status starttime="20190121 11:49:42.705" endtime="20190121 11:49:42.712" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:42.720" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:49:42.714" endtime="20190121 11:49:42.721" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:42.724" endtime="20190121 11:49:42.729" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:42.738" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:42.732" endtime="20190121 11:49:42.739" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:42.742" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:42.420" endtime="20190121 11:49:42.743" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:42.746" endtime="20190121 11:49:42.751" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:42.754" endtime="20190121 11:49:42.759" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:42.779" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0001 01</msg>
<status starttime="20190121 11:49:42.772" endtime="20190121 11:49:42.780" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:42.783" endtime="20190121 11:49:42.788" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:43.022" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 42 3D F7</msg>
<status starttime="20190121 11:49:42.792" endtime="20190121 11:49:43.023" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:43.026" endtime="20190121 11:49:43.032" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:43.035" endtime="20190121 11:49:43.044" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:43.052" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '42', '3D', 'F7']</msg>
<status starttime="20190121 11:49:43.047" endtime="20190121 11:49:43.053" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:43.062" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:49:43.055" endtime="20190121 11:49:43.063" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:43.066" endtime="20190121 11:49:43.071" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:43.080" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:43.074" endtime="20190121 11:49:43.081" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:43.084" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:42.761" endtime="20190121 11:49:43.085" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:43.088" endtime="20190121 11:49:43.094" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:43.098" endtime="20190121 11:49:43.111" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:43.149" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0065 65</msg>
<status starttime="20190121 11:49:43.139" endtime="20190121 11:49:43.150" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:43.153" endtime="20190121 11:49:43.159" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:43.365" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 43 3C F6</msg>
<status starttime="20190121 11:49:43.162" endtime="20190121 11:49:43.366" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:43.370" endtime="20190121 11:49:43.375" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:43.378" endtime="20190121 11:49:43.384" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:43.414" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '43', '3C', 'F6']</msg>
<status starttime="20190121 11:49:43.395" endtime="20190121 11:49:43.415" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:43.436" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:49:43.418" endtime="20190121 11:49:43.437" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:43.440" endtime="20190121 11:49:43.459" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:43.498" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:43.468" endtime="20190121 11:49:43.499" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:43.513" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:43.113" endtime="20190121 11:49:43.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:43.517" endtime="20190121 11:49:43.533" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:43.536" endtime="20190121 11:49:43.551" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:43.576" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 65</msg>
<status starttime="20190121 11:49:43.569" endtime="20190121 11:49:43.577" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:43.580" endtime="20190121 11:49:43.585" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:43.814" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 44 3C F1</msg>
<status starttime="20190121 11:49:43.588" endtime="20190121 11:49:43.815" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:43.819" endtime="20190121 11:49:43.824" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:43.827" endtime="20190121 11:49:43.833" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:43.841" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '44', '3C', 'F1']</msg>
<status starttime="20190121 11:49:43.835" endtime="20190121 11:49:43.842" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:43.857" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:49:43.844" endtime="20190121 11:49:43.859" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:43.866" endtime="20190121 11:49:43.882" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:43.895" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:43.889" endtime="20190121 11:49:43.900" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:43.904" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:43.553" endtime="20190121 11:49:43.905" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:43.907" endtime="20190121 11:49:43.916" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:43.919" endtime="20190121 11:49:43.924" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:43.944" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0065 20</msg>
<status starttime="20190121 11:49:43.937" endtime="20190121 11:49:43.945" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:43.949" endtime="20190121 11:49:43.954" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:44.158" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 45 3C F0</msg>
<status starttime="20190121 11:49:43.957" endtime="20190121 11:49:44.159" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:44.162" endtime="20190121 11:49:44.167" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:44.170" endtime="20190121 11:49:44.177" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:44.185" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '45', '3C', 'F0']</msg>
<status starttime="20190121 11:49:44.180" endtime="20190121 11:49:44.186" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:44.194" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:49:44.189" endtime="20190121 11:49:44.195" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:44.198" endtime="20190121 11:49:44.204" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:44.212" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:44.206" endtime="20190121 11:49:44.213" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:44.217" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:43.927" endtime="20190121 11:49:44.218" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:44.221" endtime="20190121 11:49:44.227" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:44.230" endtime="20190121 11:49:44.235" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:44.256" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 00</msg>
<status starttime="20190121 11:49:44.248" endtime="20190121 11:49:44.257" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:44.259" endtime="20190121 11:49:44.266" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:44.495" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 47 3C F2</msg>
<status starttime="20190121 11:49:44.269" endtime="20190121 11:49:44.496" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:44.499" endtime="20190121 11:49:44.505" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:44.508" endtime="20190121 11:49:44.514" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:44.522" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '47', '3C', 'F2']</msg>
<status starttime="20190121 11:49:44.517" endtime="20190121 11:49:44.522" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:44.531" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:49:44.525" endtime="20190121 11:49:44.532" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:44.534" endtime="20190121 11:49:44.541" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:44.550" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:44.544" endtime="20190121 11:49:44.550" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:44.554" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:44.237" endtime="20190121 11:49:44.555" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:44.557" endtime="20190121 11:49:44.563" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:44.566" endtime="20190121 11:49:44.571" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:44.594" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0000 20</msg>
<status starttime="20190121 11:49:44.583" endtime="20190121 11:49:44.595" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:44.598" endtime="20190121 11:49:44.617" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:44.833" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 40 3C F5</msg>
<status starttime="20190121 11:49:44.621" endtime="20190121 11:49:44.834" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:44.838" endtime="20190121 11:49:44.843" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:44.846" endtime="20190121 11:49:44.852" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:44.859" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '40', '3C', 'F5']</msg>
<status starttime="20190121 11:49:44.855" endtime="20190121 11:49:44.860" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:44.869" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:49:44.864" endtime="20190121 11:49:44.870" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:44.873" endtime="20190121 11:49:44.878" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:44.887" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:44.881" endtime="20190121 11:49:44.888" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:44.891" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:44.573" endtime="20190121 11:49:44.892" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:44.895" endtime="20190121 11:49:44.901" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:44.904" endtime="20190121 11:49:44.908" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:44.928" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0000 00</msg>
<status starttime="20190121 11:49:44.921" endtime="20190121 11:49:44.929" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:44.932" endtime="20190121 11:49:44.938" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:45.167" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 41 3C F4</msg>
<status starttime="20190121 11:49:44.941" endtime="20190121 11:49:45.168" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:45.171" endtime="20190121 11:49:45.178" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:45.180" endtime="20190121 11:49:45.186" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:45.194" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '41', '3C', 'F4']</msg>
<status starttime="20190121 11:49:45.189" endtime="20190121 11:49:45.196" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:45.205" level="INFO">${gpio_id} = 01</msg>
<status starttime="20190121 11:49:45.199" endtime="20190121 11:49:45.206" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:45.208" endtime="20190121 11:49:45.214" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:45.222" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:45.217" endtime="20190121 11:49:45.223" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:45.227" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:44.910" endtime="20190121 11:49:45.227" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:45.230" endtime="20190121 11:49:45.236" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:42.056" endtime="20190121 11:49:45.238" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:42.043" endtime="20190121 11:49:45.240" status="PASS"></status>
</kw>
<kw name="digit_out_hs_3">
<doc>Set pwm for the digital output hs 3</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 3</arg>
</arguments>
<status starttime="20190121 11:49:45.248" endtime="20190121 11:49:45.253" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_3}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:45.263" endtime="20190121 11:49:45.267" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:45.287" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 20</msg>
<status starttime="20190121 11:49:45.280" endtime="20190121 11:49:45.288" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:45.291" endtime="20190121 11:49:45.297" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:45.531" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 42 3D F4</msg>
<status starttime="20190121 11:49:45.300" endtime="20190121 11:49:45.532" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:45.536" endtime="20190121 11:49:45.541" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:45.544" endtime="20190121 11:49:45.550" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:45.558" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '42', '3D', 'F4']</msg>
<status starttime="20190121 11:49:45.553" endtime="20190121 11:49:45.558" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:45.567" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:49:45.561" endtime="20190121 11:49:45.568" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:45.570" endtime="20190121 11:49:45.576" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:45.584" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:45.579" endtime="20190121 11:49:45.585" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:45.589" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:45.270" endtime="20190121 11:49:45.590" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:45.592" endtime="20190121 11:49:45.598" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:45.610" endtime="20190121 11:49:45.619" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:45.650" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0064 64</msg>
<status starttime="20190121 11:49:45.643" endtime="20190121 11:49:45.651" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:45.654" endtime="20190121 11:49:45.659" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:45.862" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 43 3D F5</msg>
<status starttime="20190121 11:49:45.663" endtime="20190121 11:49:45.865" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:45.869" endtime="20190121 11:49:45.874" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:45.877" endtime="20190121 11:49:45.883" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:45.891" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '43', '3D', 'F5']</msg>
<status starttime="20190121 11:49:45.886" endtime="20190121 11:49:45.892" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:45.901" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:49:45.895" endtime="20190121 11:49:45.902" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:45.904" endtime="20190121 11:49:45.910" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:45.918" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:45.913" endtime="20190121 11:49:45.919" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:45.923" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:45.621" endtime="20190121 11:49:45.924" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:45.926" endtime="20190121 11:49:45.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:45.935" endtime="20190121 11:49:45.940" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:45.960" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0001 01</msg>
<status starttime="20190121 11:49:45.952" endtime="20190121 11:49:45.961" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:45.963" endtime="20190121 11:49:45.969" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:46.203" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 44 3D F2</msg>
<status starttime="20190121 11:49:45.972" endtime="20190121 11:49:46.205" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:46.208" endtime="20190121 11:49:46.213" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:46.216" endtime="20190121 11:49:46.222" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:46.231" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '44', '3D', 'F2']</msg>
<status starttime="20190121 11:49:46.226" endtime="20190121 11:49:46.232" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:46.240" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:49:46.235" endtime="20190121 11:49:46.241" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:46.244" endtime="20190121 11:49:46.253" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:46.262" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:46.256" endtime="20190121 11:49:46.263" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:46.266" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:45.942" endtime="20190121 11:49:46.267" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:46.270" endtime="20190121 11:49:46.275" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:46.278" endtime="20190121 11:49:46.283" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:46.304" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0065 65</msg>
<status starttime="20190121 11:49:46.296" endtime="20190121 11:49:46.306" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:46.309" endtime="20190121 11:49:46.315" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:46.547" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 45 3C F3</msg>
<status starttime="20190121 11:49:46.318" endtime="20190121 11:49:46.548" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:46.551" endtime="20190121 11:49:46.557" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:46.560" endtime="20190121 11:49:46.566" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:46.573" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '45', '3C', 'F3']</msg>
<status starttime="20190121 11:49:46.568" endtime="20190121 11:49:46.574" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:46.583" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:49:46.577" endtime="20190121 11:49:46.583" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:46.586" endtime="20190121 11:49:46.592" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:46.609" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:46.595" endtime="20190121 11:49:46.610" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:46.622" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:46.285" endtime="20190121 11:49:46.623" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:46.626" endtime="20190121 11:49:46.636" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:46.642" endtime="20190121 11:49:46.647" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:46.667" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 65</msg>
<status starttime="20190121 11:49:46.659" endtime="20190121 11:49:46.668" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:46.671" endtime="20190121 11:49:46.676" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:46.880" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 46 3C F0</msg>
<status starttime="20190121 11:49:46.680" endtime="20190121 11:49:46.881" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:46.884" endtime="20190121 11:49:46.890" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:46.893" endtime="20190121 11:49:46.898" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:46.906" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '46', '3C', 'F0']</msg>
<status starttime="20190121 11:49:46.901" endtime="20190121 11:49:46.907" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:46.916" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:49:46.910" endtime="20190121 11:49:46.917" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:46.919" endtime="20190121 11:49:46.925" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:46.933" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:46.928" endtime="20190121 11:49:46.934" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:46.938" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:46.649" endtime="20190121 11:49:46.938" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:46.943" endtime="20190121 11:49:46.948" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:46.951" endtime="20190121 11:49:46.956" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:46.980" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0065 20</msg>
<status starttime="20190121 11:49:46.969" endtime="20190121 11:49:46.981" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:46.984" endtime="20190121 11:49:46.990" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:47.219" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 47 3C F1</msg>
<status starttime="20190121 11:49:46.993" endtime="20190121 11:49:47.221" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:47.224" endtime="20190121 11:49:47.230" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:47.233" endtime="20190121 11:49:47.238" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:47.246" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '47', '3C', 'F1']</msg>
<status starttime="20190121 11:49:47.241" endtime="20190121 11:49:47.247" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:47.255" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:49:47.250" endtime="20190121 11:49:47.256" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:47.259" endtime="20190121 11:49:47.265" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:47.273" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:47.267" endtime="20190121 11:49:47.274" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:47.278" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:46.958" endtime="20190121 11:49:47.279" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:47.281" endtime="20190121 11:49:47.287" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:47.290" endtime="20190121 11:49:47.294" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:47.315" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 00</msg>
<status starttime="20190121 11:49:47.308" endtime="20190121 11:49:47.316" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:47.319" endtime="20190121 11:49:47.325" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:47.555" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 40 3C F6</msg>
<status starttime="20190121 11:49:47.327" endtime="20190121 11:49:47.557" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:47.560" endtime="20190121 11:49:47.565" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:47.568" endtime="20190121 11:49:47.574" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:47.582" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '40', '3C', 'F6']</msg>
<status starttime="20190121 11:49:47.577" endtime="20190121 11:49:47.583" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:47.591" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:49:47.586" endtime="20190121 11:49:47.592" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:47.595" endtime="20190121 11:49:47.609" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:47.629" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:47.615" endtime="20190121 11:49:47.630" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:47.638" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:47.297" endtime="20190121 11:49:47.639" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:47.645" endtime="20190121 11:49:47.651" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:47.654" endtime="20190121 11:49:47.659" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:47.679" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0000 20</msg>
<status starttime="20190121 11:49:47.672" endtime="20190121 11:49:47.681" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:47.684" endtime="20190121 11:49:47.690" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:47.934" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 41 3C F7</msg>
<status starttime="20190121 11:49:47.693" endtime="20190121 11:49:47.935" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:47.939" endtime="20190121 11:49:47.944" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:47.947" endtime="20190121 11:49:47.953" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:47.961" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '41', '3C', 'F7']</msg>
<status starttime="20190121 11:49:47.956" endtime="20190121 11:49:47.962" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:47.970" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:49:47.965" endtime="20190121 11:49:47.971" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:47.974" endtime="20190121 11:49:47.979" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:47.988" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:47.982" endtime="20190121 11:49:47.989" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:47.993" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:47.661" endtime="20190121 11:49:47.993" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:47.996" endtime="20190121 11:49:48.002" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:48.018" endtime="20190121 11:49:48.040" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:48.118" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0000 00</msg>
<status starttime="20190121 11:49:48.078" endtime="20190121 11:49:48.119" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:48.154" endtime="20190121 11:49:48.167" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:48.406" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 44 3C F2</msg>
<status starttime="20190121 11:49:48.170" endtime="20190121 11:49:48.407" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:48.410" endtime="20190121 11:49:48.415" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:48.418" endtime="20190121 11:49:48.424" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:48.432" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '44', '3C', 'F2']</msg>
<status starttime="20190121 11:49:48.427" endtime="20190121 11:49:48.433" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:48.441" level="INFO">${gpio_id} = 02</msg>
<status starttime="20190121 11:49:48.435" endtime="20190121 11:49:48.442" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:48.445" endtime="20190121 11:49:48.450" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:48.460" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:48.453" endtime="20190121 11:49:48.461" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:48.464" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:48.043" endtime="20190121 11:49:48.465" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:48.468" endtime="20190121 11:49:48.473" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:45.255" endtime="20190121 11:49:48.476" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:45.242" endtime="20190121 11:49:48.478" status="PASS"></status>
</kw>
<kw name="digit_out_hs_4">
<doc>Set for the digital output hs 4</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set for the digital output hs 4</arg>
</arguments>
<status starttime="20190121 11:49:48.486" endtime="20190121 11:49:48.491" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_4}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:48.501" endtime="20190121 11:49:48.505" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:48.526" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 20</msg>
<status starttime="20190121 11:49:48.518" endtime="20190121 11:49:48.527" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:48.530" endtime="20190121 11:49:48.536" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:48.772" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 45 3D F2</msg>
<status starttime="20190121 11:49:48.539" endtime="20190121 11:49:48.773" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:48.777" endtime="20190121 11:49:48.782" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:48.785" endtime="20190121 11:49:48.794" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:48.803" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '45', '3D', 'F2']</msg>
<status starttime="20190121 11:49:48.798" endtime="20190121 11:49:48.804" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:48.812" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:49:48.806" endtime="20190121 11:49:48.813" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:48.816" endtime="20190121 11:49:48.822" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:48.830" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:48.824" endtime="20190121 11:49:48.831" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:48.834" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:48.508" endtime="20190121 11:49:48.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:48.838" endtime="20190121 11:49:48.844" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:48.847" endtime="20190121 11:49:48.859" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:48.900" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0064 64</msg>
<status starttime="20190121 11:49:48.889" endtime="20190121 11:49:48.901" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:48.903" endtime="20190121 11:49:48.909" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:49.150" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 46 3D F1</msg>
<status starttime="20190121 11:49:48.912" endtime="20190121 11:49:49.150" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:49.160" endtime="20190121 11:49:49.166" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:49.169" endtime="20190121 11:49:49.175" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:49.185" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '46', '3D', 'F1']</msg>
<status starttime="20190121 11:49:49.178" endtime="20190121 11:49:49.185" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:49.194" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:49:49.188" endtime="20190121 11:49:49.195" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:49.198" endtime="20190121 11:49:49.203" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:49.212" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:49.206" endtime="20190121 11:49:49.213" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:49.216" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:48.865" endtime="20190121 11:49:49.217" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:49.220" endtime="20190121 11:49:49.225" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:49.228" endtime="20190121 11:49:49.233" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:49.253" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0001 01</msg>
<status starttime="20190121 11:49:49.246" endtime="20190121 11:49:49.254" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:49.257" endtime="20190121 11:49:49.262" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:49.494" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 47 3D F0</msg>
<status starttime="20190121 11:49:49.265" endtime="20190121 11:49:49.495" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:49.498" endtime="20190121 11:49:49.504" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:49.507" endtime="20190121 11:49:49.513" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:49.522" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '47', '3D', 'F0']</msg>
<status starttime="20190121 11:49:49.517" endtime="20190121 11:49:49.522" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:49.531" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:49:49.525" endtime="20190121 11:49:49.532" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:49.534" endtime="20190121 11:49:49.540" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:49.549" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:49.543" endtime="20190121 11:49:49.550" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:49.554" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:49.235" endtime="20190121 11:49:49.555" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:49.558" endtime="20190121 11:49:49.567" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:49.570" endtime="20190121 11:49:49.575" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:49.595" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0065 65</msg>
<status starttime="20190121 11:49:49.588" endtime="20190121 11:49:49.596" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:49.599" endtime="20190121 11:49:49.617" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:49.834" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 40 3C F7</msg>
<status starttime="20190121 11:49:49.625" endtime="20190121 11:49:49.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:49.838" endtime="20190121 11:49:49.845" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:49.848" endtime="20190121 11:49:49.853" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:49.861" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '40', '3C', 'F7']</msg>
<status starttime="20190121 11:49:49.856" endtime="20190121 11:49:49.862" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:49.870" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:49:49.865" endtime="20190121 11:49:49.871" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:49.874" endtime="20190121 11:49:49.880" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:49.889" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:49.883" endtime="20190121 11:49:49.890" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:49.893" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:49.577" endtime="20190121 11:49:49.894" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:49.897" endtime="20190121 11:49:49.903" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:49.906" endtime="20190121 11:49:49.910" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:49.932" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 65</msg>
<status starttime="20190121 11:49:49.925" endtime="20190121 11:49:49.933" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:49.936" endtime="20190121 11:49:49.941" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:50.170" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 41 3C F6</msg>
<status starttime="20190121 11:49:49.944" endtime="20190121 11:49:50.171" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:50.175" endtime="20190121 11:49:50.180" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:50.183" endtime="20190121 11:49:50.190" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:50.198" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '41', '3C', 'F6']</msg>
<status starttime="20190121 11:49:50.193" endtime="20190121 11:49:50.199" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:50.207" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:49:50.202" endtime="20190121 11:49:50.208" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:50.211" endtime="20190121 11:49:50.216" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:50.225" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:50.219" endtime="20190121 11:49:50.226" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:50.229" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:49.913" endtime="20190121 11:49:50.230" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:50.233" endtime="20190121 11:49:50.239" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:50.242" endtime="20190121 11:49:50.246" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:50.270" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0065 20</msg>
<status starttime="20190121 11:49:50.259" endtime="20190121 11:49:50.271" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:50.274" endtime="20190121 11:49:50.280" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:50.514" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 42 3C F5</msg>
<status starttime="20190121 11:49:50.284" endtime="20190121 11:49:50.515" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:50.518" endtime="20190121 11:49:50.524" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:50.527" endtime="20190121 11:49:50.532" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:50.540" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '42', '3C', 'F5']</msg>
<status starttime="20190121 11:49:50.535" endtime="20190121 11:49:50.541" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:50.550" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:49:50.544" endtime="20190121 11:49:50.551" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:50.554" endtime="20190121 11:49:50.559" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:50.568" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:50.562" endtime="20190121 11:49:50.569" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:50.572" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:50.249" endtime="20190121 11:49:50.573" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:50.576" endtime="20190121 11:49:50.582" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:50.584" endtime="20190121 11:49:50.589" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:50.623" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 00</msg>
<status starttime="20190121 11:49:50.610" endtime="20190121 11:49:50.624" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:50.635" endtime="20190121 11:49:50.643" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:50.846" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 43 3C F4</msg>
<status starttime="20190121 11:49:50.646" endtime="20190121 11:49:50.847" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:50.850" endtime="20190121 11:49:50.855" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:50.858" endtime="20190121 11:49:50.864" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:50.871" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '43', '3C', 'F4']</msg>
<status starttime="20190121 11:49:50.867" endtime="20190121 11:49:50.872" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:50.881" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:49:50.875" endtime="20190121 11:49:50.882" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:50.885" endtime="20190121 11:49:50.890" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:50.899" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:50.893" endtime="20190121 11:49:50.899" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:50.904" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:50.591" endtime="20190121 11:49:50.905" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:50.907" endtime="20190121 11:49:50.913" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:50.916" endtime="20190121 11:49:50.921" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:50.947" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0000 20</msg>
<status starttime="20190121 11:49:50.934" endtime="20190121 11:49:50.948" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:50.951" endtime="20190121 11:49:50.957" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:51.190" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 44 3C F3</msg>
<status starttime="20190121 11:49:50.960" endtime="20190121 11:49:51.191" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:51.195" endtime="20190121 11:49:51.200" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:51.203" endtime="20190121 11:49:51.209" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:51.221" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '44', '3C', 'F3']</msg>
<status starttime="20190121 11:49:51.212" endtime="20190121 11:49:51.222" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:51.230" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:49:51.225" endtime="20190121 11:49:51.231" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:51.234" endtime="20190121 11:49:51.239" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:51.248" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:51.242" endtime="20190121 11:49:51.249" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:51.252" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:50.923" endtime="20190121 11:49:51.253" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:51.256" endtime="20190121 11:49:51.262" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:51.264" endtime="20190121 11:49:51.269" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:51.289" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0000 00</msg>
<status starttime="20190121 11:49:51.282" endtime="20190121 11:49:51.290" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:51.293" endtime="20190121 11:49:51.299" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:51.527" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 45 3C F2</msg>
<status starttime="20190121 11:49:51.302" endtime="20190121 11:49:51.527" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:51.531" endtime="20190121 11:49:51.537" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:51.539" endtime="20190121 11:49:51.545" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:51.553" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '45', '3C', 'F2']</msg>
<status starttime="20190121 11:49:51.548" endtime="20190121 11:49:51.554" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:51.562" level="INFO">${gpio_id} = 03</msg>
<status starttime="20190121 11:49:51.557" endtime="20190121 11:49:51.563" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:51.566" endtime="20190121 11:49:51.571" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:51.580" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:51.574" endtime="20190121 11:49:51.581" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:51.585" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:51.271" endtime="20190121 11:49:51.585" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:51.588" endtime="20190121 11:49:51.594" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:48.493" endtime="20190121 11:49:51.596" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:48.480" endtime="20190121 11:49:51.598" status="PASS"></status>
</kw>
<kw name="digit_out_led1">
<doc>Set pwm for the digital output led1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output led1</arg>
</arguments>
<status starttime="20190121 11:49:51.626" endtime="20190121 11:49:51.637" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:51.649" endtime="20190121 11:49:51.654" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:51.674" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 20</msg>
<status starttime="20190121 11:49:51.667" endtime="20190121 11:49:51.675" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:51.678" endtime="20190121 11:49:51.683" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:51.886" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 46 3D F6</msg>
<status starttime="20190121 11:49:51.686" endtime="20190121 11:49:51.887" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:51.890" endtime="20190121 11:49:51.896" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:51.899" endtime="20190121 11:49:51.905" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:51.913" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '46', '3D', 'F6']</msg>
<status starttime="20190121 11:49:51.908" endtime="20190121 11:49:51.913" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:51.930" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:49:51.916" endtime="20190121 11:49:51.931" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:51.934" endtime="20190121 11:49:51.939" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:51.948" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:51.942" endtime="20190121 11:49:51.949" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:51.952" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:51.656" endtime="20190121 11:49:51.953" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:51.956" endtime="20190121 11:49:51.962" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:51.964" endtime="20190121 11:49:51.969" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:51.989" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0064 64</msg>
<status starttime="20190121 11:49:51.982" endtime="20190121 11:49:51.990" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:51.993" endtime="20190121 11:49:51.998" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:52.229" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 47 3D F7</msg>
<status starttime="20190121 11:49:52.001" endtime="20190121 11:49:52.230" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:52.233" endtime="20190121 11:49:52.238" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:52.241" endtime="20190121 11:49:52.247" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:52.255" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '47', '3D', 'F7']</msg>
<status starttime="20190121 11:49:52.250" endtime="20190121 11:49:52.255" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:52.273" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:49:52.258" endtime="20190121 11:49:52.274" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:52.277" endtime="20190121 11:49:52.283" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:52.292" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:52.286" endtime="20190121 11:49:52.293" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:52.297" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:51.971" endtime="20190121 11:49:52.298" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:52.301" endtime="20190121 11:49:52.306" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:52.309" endtime="20190121 11:49:52.314" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:52.334" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0001 01</msg>
<status starttime="20190121 11:49:52.327" endtime="20190121 11:49:52.335" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:52.338" endtime="20190121 11:49:52.344" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:52.577" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 40 3D F0</msg>
<status starttime="20190121 11:49:52.347" endtime="20190121 11:49:52.578" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:52.581" endtime="20190121 11:49:52.586" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:52.589" endtime="20190121 11:49:52.595" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:52.603" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '40', '3D', 'F0']</msg>
<status starttime="20190121 11:49:52.598" endtime="20190121 11:49:52.604" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:52.612" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:49:52.607" endtime="20190121 11:49:52.613" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:52.616" endtime="20190121 11:49:52.622" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:52.630" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:52.625" endtime="20190121 11:49:52.631" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:52.635" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:52.316" endtime="20190121 11:49:52.636" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:52.639" endtime="20190121 11:49:52.645" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:52.647" endtime="20190121 11:49:52.652" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:52.676" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0065 65</msg>
<status starttime="20190121 11:49:52.669" endtime="20190121 11:49:52.677" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:52.680" endtime="20190121 11:49:52.686" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:52.918" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 41 3C F1</msg>
<status starttime="20190121 11:49:52.689" endtime="20190121 11:49:52.918" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:52.922" endtime="20190121 11:49:52.928" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:52.931" endtime="20190121 11:49:52.936" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:52.944" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '41', '3C', 'F1']</msg>
<status starttime="20190121 11:49:52.939" endtime="20190121 11:49:52.945" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:52.955" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:49:52.948" endtime="20190121 11:49:52.956" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:52.958" endtime="20190121 11:49:52.964" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:52.973" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:52.967" endtime="20190121 11:49:52.973" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:52.977" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:52.654" endtime="20190121 11:49:52.978" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:52.981" endtime="20190121 11:49:52.986" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:52.989" endtime="20190121 11:49:53.002" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:53.058" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 65</msg>
<status starttime="20190121 11:49:53.046" endtime="20190121 11:49:53.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:53.062" endtime="20190121 11:49:53.068" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:53.298" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 42 3C F2</msg>
<status starttime="20190121 11:49:53.071" endtime="20190121 11:49:53.299" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:53.303" endtime="20190121 11:49:53.308" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:53.311" endtime="20190121 11:49:53.317" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:53.325" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '42', '3C', 'F2']</msg>
<status starttime="20190121 11:49:53.320" endtime="20190121 11:49:53.326" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:53.335" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:49:53.329" endtime="20190121 11:49:53.335" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:53.338" endtime="20190121 11:49:53.344" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:53.364" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:53.347" endtime="20190121 11:49:53.365" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:53.373" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:53.019" endtime="20190121 11:49:53.374" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:53.381" endtime="20190121 11:49:53.391" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:53.397" endtime="20190121 11:49:53.401" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:53.422" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0065 20</msg>
<status starttime="20190121 11:49:53.414" endtime="20190121 11:49:53.423" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:53.426" endtime="20190121 11:49:53.431" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:53.643" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 43 3C F3</msg>
<status starttime="20190121 11:49:53.434" endtime="20190121 11:49:53.643" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:53.647" endtime="20190121 11:49:53.652" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:53.655" endtime="20190121 11:49:53.662" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:53.670" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '43', '3C', 'F3']</msg>
<status starttime="20190121 11:49:53.666" endtime="20190121 11:49:53.671" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:53.680" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:49:53.674" endtime="20190121 11:49:53.681" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:53.683" endtime="20190121 11:49:53.689" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:53.699" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:53.692" endtime="20190121 11:49:53.700" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:53.703" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:53.403" endtime="20190121 11:49:53.704" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:53.707" endtime="20190121 11:49:53.712" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:53.715" endtime="20190121 11:49:53.720" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:53.740" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 00</msg>
<status starttime="20190121 11:49:53.733" endtime="20190121 11:49:53.741" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:53.744" endtime="20190121 11:49:53.753" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:53.986" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 44 3C F4</msg>
<status starttime="20190121 11:49:53.755" endtime="20190121 11:49:53.987" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:53.990" endtime="20190121 11:49:53.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:53.998" endtime="20190121 11:49:54.005" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:54.013" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '44', '3C', 'F4']</msg>
<status starttime="20190121 11:49:54.008" endtime="20190121 11:49:54.014" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:54.022" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:49:54.016" endtime="20190121 11:49:54.023" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:54.026" endtime="20190121 11:49:54.032" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:54.040" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:54.035" endtime="20190121 11:49:54.041" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:54.045" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:53.722" endtime="20190121 11:49:54.046" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:54.049" endtime="20190121 11:49:54.054" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:54.057" endtime="20190121 11:49:54.062" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:54.082" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0000 20</msg>
<status starttime="20190121 11:49:54.074" endtime="20190121 11:49:54.083" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:54.085" endtime="20190121 11:49:54.091" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:54.319" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 45 3C F5</msg>
<status starttime="20190121 11:49:54.094" endtime="20190121 11:49:54.320" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:54.325" endtime="20190121 11:49:54.331" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:54.334" endtime="20190121 11:49:54.339" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:54.347" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '45', '3C', 'F5']</msg>
<status starttime="20190121 11:49:54.342" endtime="20190121 11:49:54.348" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:54.357" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:49:54.351" endtime="20190121 11:49:54.357" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:54.360" endtime="20190121 11:49:54.369" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:54.378" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:54.372" endtime="20190121 11:49:54.379" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:54.383" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:54.064" endtime="20190121 11:49:54.383" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:54.386" endtime="20190121 11:49:54.392" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:54.395" endtime="20190121 11:49:54.399" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:54.419" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0000 00</msg>
<status starttime="20190121 11:49:54.412" endtime="20190121 11:49:54.420" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:54.424" endtime="20190121 11:49:54.430" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:54.658" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 46 3C F6</msg>
<status starttime="20190121 11:49:54.433" endtime="20190121 11:49:54.659" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:54.662" endtime="20190121 11:49:54.668" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:54.671" endtime="20190121 11:49:54.677" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:54.685" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '46', '3C', 'F6']</msg>
<status starttime="20190121 11:49:54.680" endtime="20190121 11:49:54.686" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:54.696" level="INFO">${gpio_id} = 04</msg>
<status starttime="20190121 11:49:54.689" endtime="20190121 11:49:54.697" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:54.700" endtime="20190121 11:49:54.705" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:54.714" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:54.708" endtime="20190121 11:49:54.715" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:54.718" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:54.401" endtime="20190121 11:49:54.719" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:54.722" endtime="20190121 11:49:54.728" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:51.640" endtime="20190121 11:49:54.730" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:51.610" endtime="20190121 11:49:54.732" status="PASS"></status>
</kw>
<kw name="digit_out_led2">
<doc>Set pwm for the digital output led2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output led2</arg>
</arguments>
<status starttime="20190121 11:49:54.740" endtime="20190121 11:49:54.745" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:54.755" endtime="20190121 11:49:54.759" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:54.781" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 20</msg>
<status starttime="20190121 11:49:54.773" endtime="20190121 11:49:54.782" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:54.784" endtime="20190121 11:49:54.790" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:55.026" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 47 3D F6</msg>
<status starttime="20190121 11:49:54.793" endtime="20190121 11:49:55.027" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:55.030" endtime="20190121 11:49:55.036" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:55.039" endtime="20190121 11:49:55.045" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:55.053" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '47', '3D', 'F6']</msg>
<status starttime="20190121 11:49:55.048" endtime="20190121 11:49:55.054" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:55.062" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:49:55.057" endtime="20190121 11:49:55.063" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:55.066" endtime="20190121 11:49:55.072" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:55.080" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:55.075" endtime="20190121 11:49:55.081" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:55.085" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:54.762" endtime="20190121 11:49:55.086" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:55.088" endtime="20190121 11:49:55.098" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:55.110" endtime="20190121 11:49:55.118" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:55.154" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0064 64</msg>
<status starttime="20190121 11:49:55.146" endtime="20190121 11:49:55.154" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:55.157" endtime="20190121 11:49:55.163" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:55.365" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 40 3D F1</msg>
<status starttime="20190121 11:49:55.166" endtime="20190121 11:49:55.366" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:55.370" endtime="20190121 11:49:55.375" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:55.378" endtime="20190121 11:49:55.384" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:55.392" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '40', '3D', 'F1']</msg>
<status starttime="20190121 11:49:55.387" endtime="20190121 11:49:55.393" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:55.401" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:49:55.395" endtime="20190121 11:49:55.402" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:55.405" endtime="20190121 11:49:55.410" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:55.419" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:55.413" endtime="20190121 11:49:55.420" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:55.423" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:55.121" endtime="20190121 11:49:55.424" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:55.427" endtime="20190121 11:49:55.434" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:55.437" endtime="20190121 11:49:55.442" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:55.463" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0001 01</msg>
<status starttime="20190121 11:49:55.455" endtime="20190121 11:49:55.463" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:55.466" endtime="20190121 11:49:55.474" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:55.707" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 41 3D F0</msg>
<status starttime="20190121 11:49:55.477" endtime="20190121 11:49:55.708" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:55.712" endtime="20190121 11:49:55.717" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:55.720" endtime="20190121 11:49:55.726" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:55.734" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '41', '3D', 'F0']</msg>
<status starttime="20190121 11:49:55.729" endtime="20190121 11:49:55.735" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:55.743" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:49:55.738" endtime="20190121 11:49:55.744" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:55.747" endtime="20190121 11:49:55.753" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:55.761" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:55.755" endtime="20190121 11:49:55.762" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:55.766" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:55.444" endtime="20190121 11:49:55.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:55.770" endtime="20190121 11:49:55.775" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:55.778" endtime="20190121 11:49:55.783" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:55.807" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0065 65</msg>
<status starttime="20190121 11:49:55.796" endtime="20190121 11:49:55.808" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:55.811" endtime="20190121 11:49:55.816" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:56.050" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 42 3C F3</msg>
<status starttime="20190121 11:49:55.819" endtime="20190121 11:49:56.051" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:56.054" endtime="20190121 11:49:56.060" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:56.063" endtime="20190121 11:49:56.069" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:56.077" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '42', '3C', 'F3']</msg>
<status starttime="20190121 11:49:56.072" endtime="20190121 11:49:56.077" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:56.086" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:49:56.080" endtime="20190121 11:49:56.087" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:56.090" endtime="20190121 11:49:56.095" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:56.117" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:56.098" endtime="20190121 11:49:56.118" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:56.126" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:55.785" endtime="20190121 11:49:56.127" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:56.130" endtime="20190121 11:49:56.143" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:56.146" endtime="20190121 11:49:56.151" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:56.171" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 65</msg>
<status starttime="20190121 11:49:56.164" endtime="20190121 11:49:56.172" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:56.175" endtime="20190121 11:49:56.180" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:56.382" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 43 3C F2</msg>
<status starttime="20190121 11:49:56.183" endtime="20190121 11:49:56.383" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:56.387" endtime="20190121 11:49:56.392" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:56.395" endtime="20190121 11:49:56.401" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:56.409" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '43', '3C', 'F2']</msg>
<status starttime="20190121 11:49:56.404" endtime="20190121 11:49:56.410" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:56.418" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:49:56.413" endtime="20190121 11:49:56.419" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:56.422" endtime="20190121 11:49:56.427" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:56.436" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:56.430" endtime="20190121 11:49:56.437" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:56.441" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:56.153" endtime="20190121 11:49:56.442" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:56.444" endtime="20190121 11:49:56.450" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:56.453" endtime="20190121 11:49:56.457" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:56.478" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0065 20</msg>
<status starttime="20190121 11:49:56.470" endtime="20190121 11:49:56.478" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:56.482" endtime="20190121 11:49:56.487" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:56.717" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 44 3C F5</msg>
<status starttime="20190121 11:49:56.490" endtime="20190121 11:49:56.718" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:56.722" endtime="20190121 11:49:56.727" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:56.731" endtime="20190121 11:49:56.736" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:56.748" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '44', '3C', 'F5']</msg>
<status starttime="20190121 11:49:56.739" endtime="20190121 11:49:56.749" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:56.757" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:49:56.751" endtime="20190121 11:49:56.758" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:56.762" endtime="20190121 11:49:56.767" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:56.776" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:56.770" endtime="20190121 11:49:56.777" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:56.780" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:56.460" endtime="20190121 11:49:56.781" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:56.784" endtime="20190121 11:49:56.790" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:56.793" endtime="20190121 11:49:56.797" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:56.817" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 00</msg>
<status starttime="20190121 11:49:56.810" endtime="20190121 11:49:56.818" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:56.821" endtime="20190121 11:49:56.826" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:57.058" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 45 3C F4</msg>
<status starttime="20190121 11:49:56.830" endtime="20190121 11:49:57.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:57.062" endtime="20190121 11:49:57.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:57.070" endtime="20190121 11:49:57.076" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:57.084" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '45', '3C', 'F4']</msg>
<status starttime="20190121 11:49:57.079" endtime="20190121 11:49:57.085" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:57.093" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:49:57.087" endtime="20190121 11:49:57.094" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:57.097" endtime="20190121 11:49:57.111" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:57.128" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:57.118" endtime="20190121 11:49:57.137" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:57.141" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:56.799" endtime="20190121 11:49:57.142" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:57.147" endtime="20190121 11:49:57.153" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:57.156" endtime="20190121 11:49:57.160" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:57.181" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0000 20</msg>
<status starttime="20190121 11:49:57.173" endtime="20190121 11:49:57.182" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:57.185" endtime="20190121 11:49:57.190" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:57.393" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 46 3C F7</msg>
<status starttime="20190121 11:49:57.193" endtime="20190121 11:49:57.394" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:57.398" endtime="20190121 11:49:57.403" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:57.406" endtime="20190121 11:49:57.412" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:57.419" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '46', '3C', 'F7']</msg>
<status starttime="20190121 11:49:57.415" endtime="20190121 11:49:57.421" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:57.430" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:49:57.424" endtime="20190121 11:49:57.431" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:57.434" endtime="20190121 11:49:57.439" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:57.448" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:57.442" endtime="20190121 11:49:57.449" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:57.452" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:57.163" endtime="20190121 11:49:57.453" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:57.456" endtime="20190121 11:49:57.462" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:57.464" endtime="20190121 11:49:57.469" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:57.493" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0000 00</msg>
<status starttime="20190121 11:49:57.486" endtime="20190121 11:49:57.494" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:57.497" endtime="20190121 11:49:57.502" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:57.733" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 47 3C F6</msg>
<status starttime="20190121 11:49:57.505" endtime="20190121 11:49:57.733" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:57.737" endtime="20190121 11:49:57.742" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:57.745" endtime="20190121 11:49:57.751" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:57.759" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '47', '3C', 'F6']</msg>
<status starttime="20190121 11:49:57.754" endtime="20190121 11:49:57.760" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:57.768" level="INFO">${gpio_id} = 05</msg>
<status starttime="20190121 11:49:57.763" endtime="20190121 11:49:57.769" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:57.772" endtime="20190121 11:49:57.778" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:57.786" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:57.780" endtime="20190121 11:49:57.787" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:57.790" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:57.471" endtime="20190121 11:49:57.791" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:57.794" endtime="20190121 11:49:57.800" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:54.747" endtime="20190121 11:49:57.803" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:54.734" endtime="20190121 11:49:57.805" status="PASS"></status>
</kw>
<kw name="digit_out_crm">
<doc>Set pwm for the digital output crm</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output crm</arg>
</arguments>
<status starttime="20190121 11:49:57.813" endtime="20190121 11:49:57.818" status="PASS"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:57.827" endtime="20190121 11:49:57.832" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:57.860" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 20</msg>
<status starttime="20190121 11:49:57.845" endtime="20190121 11:49:57.865" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:57.868" endtime="20190121 11:49:57.882" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:58.160" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 40 3D F2</msg>
<status starttime="20190121 11:49:57.889" endtime="20190121 11:49:58.165" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:58.197" endtime="20190121 11:49:58.214" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:58.218" endtime="20190121 11:49:58.223" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:58.243" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '40', '3D', 'F2']</msg>
<status starttime="20190121 11:49:58.238" endtime="20190121 11:49:58.244" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:58.262" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:49:58.256" endtime="20190121 11:49:58.263" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:58.273" endtime="20190121 11:49:58.279" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:58.301" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:58.294" endtime="20190121 11:49:58.301" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:58.305" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:57.834" endtime="20190121 11:49:58.308" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:58.311" endtime="20190121 11:49:58.316" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:58.319" endtime="20190121 11:49:58.324" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:58.348" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0064 64</msg>
<status starttime="20190121 11:49:58.341" endtime="20190121 11:49:58.349" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:58.360" endtime="20190121 11:49:58.373" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:58.600" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 41 3D F3</msg>
<status starttime="20190121 11:49:58.384" endtime="20190121 11:49:58.602" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:58.605" endtime="20190121 11:49:58.610" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:58.613" endtime="20190121 11:49:58.619" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:58.627" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '41', '3D', 'F3']</msg>
<status starttime="20190121 11:49:58.622" endtime="20190121 11:49:58.628" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:58.637" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:49:58.631" endtime="20190121 11:49:58.638" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:58.641" endtime="20190121 11:49:58.646" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:58.655" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:58.649" endtime="20190121 11:49:58.655" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:58.659" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:58.326" endtime="20190121 11:49:58.660" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:58.663" endtime="20190121 11:49:58.668" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status starttime="20190121 11:49:58.671" endtime="20190121 11:49:58.676" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:58.696" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0001 01</msg>
<status starttime="20190121 11:49:58.689" endtime="20190121 11:49:58.698" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:58.701" endtime="20190121 11:49:58.708" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:58.901" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 42 3D F0</msg>
<status starttime="20190121 11:49:58.711" endtime="20190121 11:49:58.902" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:58.905" endtime="20190121 11:49:58.910" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:58.913" endtime="20190121 11:49:58.919" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:58.927" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '42', '3D', 'F0']</msg>
<status starttime="20190121 11:49:58.922" endtime="20190121 11:49:58.928" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:58.937" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:49:58.931" endtime="20190121 11:49:58.938" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:58.940" endtime="20190121 11:49:58.946" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:58.954" level="INFO">${ret_val} = 00</msg>
<status starttime="20190121 11:49:58.949" endtime="20190121 11:49:58.955" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:58.959" level="INFO">${resp} = 00</msg>
<status starttime="20190121 11:49:58.678" endtime="20190121 11:49:58.960" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:58.963" endtime="20190121 11:49:58.968" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:58.971" endtime="20190121 11:49:58.976" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:58.996" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0065 65</msg>
<status starttime="20190121 11:49:58.989" endtime="20190121 11:49:58.997" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:59.000" endtime="20190121 11:49:59.006" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:59.187" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 43 3C F1</msg>
<status starttime="20190121 11:49:59.009" endtime="20190121 11:49:59.188" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:59.192" endtime="20190121 11:49:59.198" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:59.200" endtime="20190121 11:49:59.207" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:59.215" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '43', '3C', 'F1']</msg>
<status starttime="20190121 11:49:59.210" endtime="20190121 11:49:59.216" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:59.224" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:49:59.219" endtime="20190121 11:49:59.225" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:59.228" endtime="20190121 11:49:59.234" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:59.242" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:59.237" endtime="20190121 11:49:59.243" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:59.247" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:58.978" endtime="20190121 11:49:59.248" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:59.250" endtime="20190121 11:49:59.256" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:59.259" endtime="20190121 11:49:59.263" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:59.285" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 65</msg>
<status starttime="20190121 11:49:59.278" endtime="20190121 11:49:59.286" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:59.289" endtime="20190121 11:49:59.294" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:59.472" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 44 3C F6</msg>
<status starttime="20190121 11:49:59.297" endtime="20190121 11:49:59.473" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:59.476" endtime="20190121 11:49:59.482" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:59.485" endtime="20190121 11:49:59.490" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:59.498" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '44', '3C', 'F6']</msg>
<status starttime="20190121 11:49:59.493" endtime="20190121 11:49:59.499" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:59.508" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:49:59.502" endtime="20190121 11:49:59.509" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:59.511" endtime="20190121 11:49:59.517" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:59.526" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:59.520" endtime="20190121 11:49:59.527" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:59.530" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:59.267" endtime="20190121 11:49:59.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:59.534" endtime="20190121 11:49:59.540" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:59.543" endtime="20190121 11:49:59.547" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:59.568" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0065 20</msg>
<status starttime="20190121 11:49:59.560" endtime="20190121 11:49:59.568" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:59.571" endtime="20190121 11:49:59.577" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:49:59.755" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 45 3C F7</msg>
<status starttime="20190121 11:49:59.580" endtime="20190121 11:49:59.756" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:49:59.760" endtime="20190121 11:49:59.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:59.769" endtime="20190121 11:49:59.775" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:49:59.783" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '45', '3C', 'F7']</msg>
<status starttime="20190121 11:49:59.778" endtime="20190121 11:49:59.783" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:49:59.792" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:49:59.786" endtime="20190121 11:49:59.793" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:59.796" endtime="20190121 11:49:59.805" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:49:59.814" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:49:59.808" endtime="20190121 11:49:59.814" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:49:59.818" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:59.550" endtime="20190121 11:49:59.819" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:49:59.822" endtime="20190121 11:49:59.828" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:49:59.831" endtime="20190121 11:49:59.836" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:49:59.856" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 00</msg>
<status starttime="20190121 11:49:59.849" endtime="20190121 11:49:59.857" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:49:59.860" endtime="20190121 11:49:59.866" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:00.045" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 46 3C F4</msg>
<status starttime="20190121 11:49:59.869" endtime="20190121 11:50:00.046" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:00.049" endtime="20190121 11:50:00.054" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:00.057" endtime="20190121 11:50:00.063" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:00.071" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '46', '3C', 'F4']</msg>
<status starttime="20190121 11:50:00.066" endtime="20190121 11:50:00.072" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:50:00.080" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:50:00.075" endtime="20190121 11:50:00.081" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:00.084" endtime="20190121 11:50:00.089" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:50:00.098" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:50:00.092" endtime="20190121 11:50:00.099" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:00.102" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:49:59.838" endtime="20190121 11:50:00.103" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:00.106" endtime="20190121 11:50:00.112" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status starttime="20190121 11:50:00.115" endtime="20190121 11:50:00.123" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:00.145" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0000 20</msg>
<status starttime="20190121 11:50:00.136" endtime="20190121 11:50:00.146" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:00.149" endtime="20190121 11:50:00.155" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:00.334" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 47 3C F5</msg>
<status starttime="20190121 11:50:00.158" endtime="20190121 11:50:00.335" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:00.339" endtime="20190121 11:50:00.344" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:00.347" endtime="20190121 11:50:00.353" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:00.361" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '47', '3C', 'F5']</msg>
<status starttime="20190121 11:50:00.356" endtime="20190121 11:50:00.362" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:50:00.370" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:50:00.365" endtime="20190121 11:50:00.371" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:00.374" endtime="20190121 11:50:00.379" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:50:00.389" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:50:00.382" endtime="20190121 11:50:00.390" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:00.394" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:50:00.125" endtime="20190121 11:50:00.395" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:00.398" endtime="20190121 11:50:00.403" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status starttime="20190121 11:50:00.406" endtime="20190121 11:50:00.411" status="PASS"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:00.435" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0000 00</msg>
<status starttime="20190121 11:50:00.424" endtime="20190121 11:50:00.436" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:00.439" endtime="20190121 11:50:00.444" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:00.671" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 40 3C F2</msg>
<status starttime="20190121 11:50:00.447" endtime="20190121 11:50:00.672" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:00.675" endtime="20190121 11:50:00.689" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:00.692" endtime="20190121 11:50:00.698" status="PASS"></status>
</kw>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:00.706" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '40', '3C', 'F2']</msg>
<status starttime="20190121 11:50:00.701" endtime="20190121 11:50:00.706" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190121 11:50:00.715" level="INFO">${gpio_id} = 06</msg>
<status starttime="20190121 11:50:00.709" endtime="20190121 11:50:00.716" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:00.719" endtime="20190121 11:50:00.724" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190121 11:50:00.733" level="INFO">${ret_val} = 01</msg>
<status starttime="20190121 11:50:00.727" endtime="20190121 11:50:00.733" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:00.737" level="INFO">${resp} = 01</msg>
<status starttime="20190121 11:50:00.413" endtime="20190121 11:50:00.738" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:00.741" endtime="20190121 11:50:00.747" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:57.820" endtime="20190121 11:50:00.749" status="PASS"></status>
</kw>
<status starttime="20190121 11:49:57.807" endtime="20190121 11:50:00.751" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:00.761" endtime="20190121 11:50:00.798" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:00.801" endtime="20190121 11:50:00.837" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:00.841" endtime="20190121 11:50:00.877" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:50:00.881" endtime="20190121 11:50:00.915" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:00.754" endtime="20190121 11:50:00.918" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-49357 set pwm on Digital Outputs</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status starttime="20190121 11:49:34.821" critical="yes" endtime="20190121 11:50:00.920" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:50:02.450" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:50:02.519" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:50:00.972" endtime="20190121 11:50:02.521" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:00.935" endtime="20190121 11:50:02.538" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:00.930" endtime="20190121 11:50:02.541" status="PASS"></status>
</kw>
<doc>Chorus GPIO outputs set pwm</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:49:31.967" endtime="20190121 11:50:02.541" status="PASS"></status>
</suite>
<suite id="s1-s15" name="SKTB-41553" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41553.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:50:03.317" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:50:03.308" endtime="20190121 11:50:03.331" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:50:03.340" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:50:03.350" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:50:05.513" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:50:03.334" endtime="20190121 11:50:05.538" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:03.288" endtime="20190121 11:50:05.541" status="PASS"></status>
</kw>
<test id="s1-s15-t1" name="SKTB-41553">
<kw name="Test_precondition" type="setup">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status starttime="20190121 11:50:05.589" endtime="20190121 11:50:05.602" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:05.606" endtime="20190121 11:50:05.682" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:05.685" endtime="20190121 11:50:05.763" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:50:05.766" endtime="20190121 11:50:05.850" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status starttime="20190121 11:50:05.865" endtime="20190121 11:50:05.964" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:50:05.967" endtime="20190121 11:50:06.082" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:50:06.085" endtime="20190121 11:50:06.181" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:50:08.207" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:06.184" endtime="20190121 11:50:08.209" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:08.211" endtime="20190121 11:50:08.247" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:08.251" endtime="20190121 11:50:08.288" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:05.569" endtime="20190121 11:50:08.291" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_PSN">
<doc>Test PSN value, write default value and read it, then write new value and read it</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test PSN value, write and read default value</arg>
</arguments>
<status starttime="20190121 11:50:08.300" endtime="20190121 11:50:08.304" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read default otp value</arg>
</arguments>
<status starttime="20190121 11:50:08.307" endtime="20190121 11:50:08.312" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_PSN}</arg>
<arg>${PSN_LEN}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:08.329" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FE 00 10</msg>
<status starttime="20190121 11:50:08.323" endtime="20190121 11:50:08.330" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:08.334" endtime="20190121 11:50:08.341" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:08.551" level="INFO">${resp} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 78 78 78 78 78 78 01 45 00 26 58</msg>
<status starttime="20190121 11:50:08.344" endtime="20190121 11:50:08.553" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:08.556" endtime="20190121 11:50:08.576" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:08.622" level="INFO">${temp1} = 1E105494001B000BEE04FFFE0010004C616972642050534E207878787878780145002658</msg>
<status starttime="20190121 11:50:08.594" endtime="20190121 11:50:08.623" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:08.650" level="INFO">${temp2} = EE04FFFE001000</msg>
<status starttime="20190121 11:50:08.626" endtime="20190121 11:50:08.651" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:08.654" endtime="20190121 11:50:08.672" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:08.578" endtime="20190121 11:50:08.674" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:08.678" level="INFO">${res} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 78 78 78 78 78 78 01 45 00 26 58</msg>
<status starttime="20190121 11:50:08.314" endtime="20190121 11:50:08.678" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:08.294" endtime="20190121 11:50:08.681" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_PART_NO">
<doc>READ_OTP_CARIF_HW_PART_NO</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read otp_carif_hw_part_no</arg>
</arguments>
<status starttime="20190121 11:50:08.689" endtime="20190121 11:50:08.694" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_PART_NO}</arg>
<arg>${HW_PART_NO_LEN}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:08.715" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FD 00 0A</msg>
<status starttime="20190121 11:50:08.707" endtime="20190121 11:50:08.716" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:08.719" endtime="20190121 11:50:08.725" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:08.934" level="INFO">${resp} = 1E 10 54 94 00 15 00 0B EE 04 FF FD 00 0A 00 4C 61 69 72 64 20 30 31 32 33 01 44 00 2E 2B</msg>
<status starttime="20190121 11:50:08.728" endtime="20190121 11:50:08.935" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:08.938" endtime="20190121 11:50:08.944" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:08.963" level="INFO">${temp1} = 1E1054940015000BEE04FFFD000A004C6169726420303132330144002E2B</msg>
<status starttime="20190121 11:50:08.957" endtime="20190121 11:50:08.964" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:08.973" level="INFO">${temp2} = EE04FFFD000A00</msg>
<status starttime="20190121 11:50:08.967" endtime="20190121 11:50:08.974" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:08.976" endtime="20190121 11:50:08.982" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:08.946" endtime="20190121 11:50:08.984" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:08.697" endtime="20190121 11:50:08.988" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:08.683" endtime="20190121 11:50:08.990" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_VERSION_INFO">
<doc>READ_OTP_CARIF_HW_VERSION_INFO</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_VERSION_INFO</arg>
</arguments>
<status starttime="20190121 11:50:08.998" endtime="20190121 11:50:09.003" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_VERSION_INFO}</arg>
<arg>${HW_VERSION_INFO_LEN}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:09.021" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FC 00 04</msg>
<status starttime="20190121 11:50:09.015" endtime="20190121 11:50:09.022" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:09.025" endtime="20190121 11:50:09.031" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:09.255" level="INFO">${resp} = 1E 10 54 94 00 0F 00 0B EE 04 FF FC 00 04 00 03 01 06 55 01 45 00 4A 78</msg>
<status starttime="20190121 11:50:09.034" endtime="20190121 11:50:09.256" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:09.260" endtime="20190121 11:50:09.265" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:09.316" level="INFO">${temp1} = 1E105494000F000BEE04FFFC000400030106550145004A78</msg>
<status starttime="20190121 11:50:09.304" endtime="20190121 11:50:09.317" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:09.339" level="INFO">${temp2} = EE04FFFC000400</msg>
<status starttime="20190121 11:50:09.320" endtime="20190121 11:50:09.340" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:09.343" endtime="20190121 11:50:09.380" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:09.267" endtime="20190121 11:50:09.396" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:09.006" endtime="20190121 11:50:09.407" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:08.992" endtime="20190121 11:50:09.410" status="PASS"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_SUPPLIER_INFO">
<doc>READ_OTP_CARIF_HW_SUPPLIER_INFO</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_SUPPLIER_INFO</arg>
</arguments>
<status starttime="20190121 11:50:09.426" endtime="20190121 11:50:09.431" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_SUPPLIER_INFO}</arg>
<arg>${HW_SUPPLIER_INFO_LEN}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:09.449" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FB 00 02</msg>
<status starttime="20190121 11:50:09.442" endtime="20190121 11:50:09.450" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:09.453" endtime="20190121 11:50:09.459" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:09.662" level="INFO">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF FB 00 02 00 30 31 01 46 00 2C 4E</msg>
<status starttime="20190121 11:50:09.462" endtime="20190121 11:50:09.664" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:09.668" endtime="20190121 11:50:09.673" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:09.692" level="INFO">${temp1} = 1E105494000D000BEE04FFFB00020030310146002C4E</msg>
<status starttime="20190121 11:50:09.687" endtime="20190121 11:50:09.693" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:09.702" level="INFO">${temp2} = EE04FFFB000200</msg>
<status starttime="20190121 11:50:09.696" endtime="20190121 11:50:09.702" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:09.705" endtime="20190121 11:50:09.711" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:09.676" endtime="20190121 11:50:09.713" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:09.433" endtime="20190121 11:50:09.716" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:09.412" endtime="20190121 11:50:09.719" status="PASS"></status>
</kw>
<kw name="TEST_EEPROM_SW_SPARE_PART_NUMBER">
<doc>Write and read the EEPROM_SW_SPARE_PART_NUMBER</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_SW_SPARE_PART_NUMBER</arg>
</arguments>
<status starttime="20190121 11:50:09.727" endtime="20190121 11:50:09.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write eeprom sw spare part number with default value</arg>
</arguments>
<status starttime="20190121 11:50:09.734" endtime="20190121 11:50:09.739" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:09.759" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 4e</msg>
<status starttime="20190121 11:50:09.752" endtime="20190121 11:50:09.759" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:09.775" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', '4e']</msg>
<status starttime="20190121 11:50:09.770" endtime="20190121 11:50:09.775" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:09.782" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:50:09.784" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:50:09.778" endtime="20190121 11:50:09.785" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:09.788" endtime="20190121 11:50:09.793" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:09.801" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:50:09.796" endtime="20190121 11:50:09.802" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:09.811" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:50:09.805" endtime="20190121 11:50:09.812" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:09.814" endtime="20190121 11:50:09.819" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:09.829" level="INFO">${res} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status starttime="20190121 11:50:09.822" endtime="20190121 11:50:09.830" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:09.833" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status starttime="20190121 11:50:09.762" endtime="20190121 11:50:09.834" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:09.837" endtime="20190121 11:50:09.843" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:10.426" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 47 5A 3E</msg>
<status starttime="20190121 11:50:09.846" endtime="20190121 11:50:10.427" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:10.436" endtime="20190121 11:50:10.446" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:10.465" level="INFO">${temp1} = 1E105494000A000BEE06FFFA000001475A3E</msg>
<status starttime="20190121 11:50:10.459" endtime="20190121 11:50:10.466" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:10.475" level="INFO">${temp2} = EE06FFFA00</msg>
<status starttime="20190121 11:50:10.469" endtime="20190121 11:50:10.476" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:10.479" endtime="20190121 11:50:10.485" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:10.448" endtime="20190121 11:50:10.487" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:09.741" endtime="20190121 11:50:10.489" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write eeprom sw spare part number with Different value</arg>
</arguments>
<status starttime="20190121 11:50:10.492" endtime="20190121 11:50:10.497" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:10.516" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 AA</msg>
<status starttime="20190121 11:50:10.509" endtime="20190121 11:50:10.517" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:10.532" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', 'AA']</msg>
<status starttime="20190121 11:50:10.527" endtime="20190121 11:50:10.533" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:10.539" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:50:10.541" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:50:10.535" endtime="20190121 11:50:10.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:10.545" endtime="20190121 11:50:10.550" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:10.558" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:50:10.553" endtime="20190121 11:50:10.559" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:10.568" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:50:10.562" endtime="20190121 11:50:10.569" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:10.572" endtime="20190121 11:50:10.577" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:10.589" level="INFO">${res} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status starttime="20190121 11:50:10.580" endtime="20190121 11:50:10.589" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:10.593" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status starttime="20190121 11:50:10.519" endtime="20190121 11:50:10.594" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:10.597" endtime="20190121 11:50:10.604" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:10.949" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 40 5A 39</msg>
<status starttime="20190121 11:50:10.607" endtime="20190121 11:50:10.950" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:10.967" endtime="20190121 11:50:10.981" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:11.018" level="INFO">${temp1} = 1E105494000A000BEE06FFFA000001405A39</msg>
<status starttime="20190121 11:50:11.006" endtime="20190121 11:50:11.019" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:11.029" level="INFO">${temp2} = EE06FFFA00</msg>
<status starttime="20190121 11:50:11.022" endtime="20190121 11:50:11.029" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:11.033" endtime="20190121 11:50:11.043" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:10.983" endtime="20190121 11:50:11.048" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:10.499" endtime="20190121 11:50:11.051" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:11.059" endtime="20190121 11:50:11.119" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:11.123" endtime="20190121 11:50:11.189" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:50:13.206" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:11.192" endtime="20190121 11:50:13.208" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:13.211" endtime="20190121 11:50:13.259" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:13.263" endtime="20190121 11:50:13.311" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:11.053" endtime="20190121 11:50:13.315" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:13.336" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FA 00 0C</msg>
<status starttime="20190121 11:50:13.330" endtime="20190121 11:50:13.337" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:13.340" endtime="20190121 11:50:13.346" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:13.678" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 43 00 85 3E</msg>
<status starttime="20190121 11:50:13.350" endtime="20190121 11:50:13.679" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:13.682" endtime="20190121 11:50:13.687" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:13.706" level="INFO">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014300853E</msg>
<status starttime="20190121 11:50:13.700" endtime="20190121 11:50:13.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:13.716" level="INFO">${temp2} = EE04FFFA000C00</msg>
<status starttime="20190121 11:50:13.710" endtime="20190121 11:50:13.717" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:13.720" endtime="20190121 11:50:13.725" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:13.689" endtime="20190121 11:50:13.727" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:13.732" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 43 00 85 3E</msg>
<status starttime="20190121 11:50:13.317" endtime="20190121 11:50:13.733" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN} ${EEPROM_APP_OK} ${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:13.750" level="INFO">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014300853E</msg>
<status starttime="20190121 11:50:13.745" endtime="20190121 11:50:13.751" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:13.760" level="INFO">${temp2} = 000C005370617265205061727420AA</msg>
<status starttime="20190121 11:50:13.754" endtime="20190121 11:50:13.761" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:13.764" endtime="20190121 11:50:13.769" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:13.735" endtime="20190121 11:50:13.771" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:09.721" endtime="20190121 11:50:13.774" status="PASS"></status>
</kw>
<kw name="TEST_PRODUCT_NAME">
<doc>Write and read the EEPROM_PRODUCT_NAME</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_PRODUCT_NAME</arg>
</arguments>
<status starttime="20190121 11:50:13.782" endtime="20190121 11:50:13.787" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write default value</arg>
</arguments>
<status starttime="20190121 11:50:13.790" endtime="20190121 11:50:13.795" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:13.814" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 69</msg>
<status starttime="20190121 11:50:13.807" endtime="20190121 11:50:13.814" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:13.830" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', '69']</msg>
<status starttime="20190121 11:50:13.824" endtime="20190121 11:50:13.830" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:13.837" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:50:13.839" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:50:13.833" endtime="20190121 11:50:13.841" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:13.844" endtime="20190121 11:50:13.849" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:13.873" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:50:13.859" endtime="20190121 11:50:13.874" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:13.885" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:50:13.878" endtime="20190121 11:50:13.886" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:13.889" endtime="20190121 11:50:13.894" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:13.904" level="INFO">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status starttime="20190121 11:50:13.897" endtime="20190121 11:50:13.904" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:13.908" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status starttime="20190121 11:50:13.817" endtime="20190121 11:50:13.909" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:13.912" endtime="20190121 11:50:13.918" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:15.630" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 44 5A 3E</msg>
<status starttime="20190121 11:50:13.921" endtime="20190121 11:50:15.631" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:15.634" endtime="20190121 11:50:15.640" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:15.663" level="INFO">${temp1} = 1E105494000A000BEE06FFF9000001445A3E</msg>
<status starttime="20190121 11:50:15.657" endtime="20190121 11:50:15.664" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:15.672" level="INFO">${temp2} = EE06FFF900</msg>
<status starttime="20190121 11:50:15.667" endtime="20190121 11:50:15.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:15.676" endtime="20190121 11:50:15.682" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:15.642" endtime="20190121 11:50:15.684" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:13.797" endtime="20190121 11:50:15.686" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:15.705" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 BB</msg>
<status starttime="20190121 11:50:15.698" endtime="20190121 11:50:15.706" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:15.720" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', 'BB']</msg>
<status starttime="20190121 11:50:15.715" endtime="20190121 11:50:15.721" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:15.728" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:50:15.730" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:50:15.724" endtime="20190121 11:50:15.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:15.734" endtime="20190121 11:50:15.739" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:15.748" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:50:15.742" endtime="20190121 11:50:15.748" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:15.757" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:50:15.751" endtime="20190121 11:50:15.758" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:15.760" endtime="20190121 11:50:15.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:15.775" level="INFO">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status starttime="20190121 11:50:15.769" endtime="20190121 11:50:15.777" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:15.781" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status starttime="20190121 11:50:15.708" endtime="20190121 11:50:15.782" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:15.785" endtime="20190121 11:50:15.790" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:16.136" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 45 5A 3F</msg>
<status starttime="20190121 11:50:15.793" endtime="20190121 11:50:16.138" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:16.141" endtime="20190121 11:50:16.146" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:16.165" level="INFO">${temp1} = 1E105494000A000BEE06FFF9000001455A3F</msg>
<status starttime="20190121 11:50:16.159" endtime="20190121 11:50:16.166" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:16.174" level="INFO">${temp2} = EE06FFF900</msg>
<status starttime="20190121 11:50:16.169" endtime="20190121 11:50:16.175" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:16.178" endtime="20190121 11:50:16.184" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:16.149" endtime="20190121 11:50:16.186" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:15.688" endtime="20190121 11:50:16.188" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:16.196" endtime="20190121 11:50:16.245" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:16.248" endtime="20190121 11:50:16.296" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:50:18.305" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:16.300" endtime="20190121 11:50:18.307" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:18.310" endtime="20190121 11:50:18.358" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:18.362" endtime="20190121 11:50:18.411" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:16.190" endtime="20190121 11:50:18.414" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:18.431" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F9 00 0C</msg>
<status starttime="20190121 11:50:18.425" endtime="20190121 11:50:18.432" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:18.436" endtime="20190121 11:50:18.446" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:18.767" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 43 00 AD 4E</msg>
<status starttime="20190121 11:50:18.450" endtime="20190121 11:50:18.768" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:18.771" endtime="20190121 11:50:18.777" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:18.796" level="INFO">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014300AD4E</msg>
<status starttime="20190121 11:50:18.790" endtime="20190121 11:50:18.797" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:18.805" level="INFO">${temp2} = EE04FFF9000C00</msg>
<status starttime="20190121 11:50:18.799" endtime="20190121 11:50:18.806" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:18.809" endtime="20190121 11:50:18.814" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:18.779" endtime="20190121 11:50:18.817" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:18.820" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 43 00 AD 4E</msg>
<status starttime="20190121 11:50:18.416" endtime="20190121 11:50:18.821" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN} ${EEPROM_APP_OK} ${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:18.839" level="INFO">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014300AD4E</msg>
<status starttime="20190121 11:50:18.833" endtime="20190121 11:50:18.839" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:18.849" level="INFO">${temp2} = 000C004f4c5520436f6e6e656374BB</msg>
<status starttime="20190121 11:50:18.843" endtime="20190121 11:50:18.850" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:18.853" endtime="20190121 11:50:18.858" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:18.823" endtime="20190121 11:50:18.861" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:13.776" endtime="20190121 11:50:18.863" status="PASS"></status>
</kw>
<kw name="TEST_LAST_POWER_STATE">
<doc>Write and read the EEPROM_LAST_POWER_STATE</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_LAST_POWER_STATE</arg>
</arguments>
<status starttime="20190121 11:50:18.871" endtime="20190121 11:50:18.876" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:18.895" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 FF</msg>
<status starttime="20190121 11:50:18.888" endtime="20190121 11:50:18.896" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:18.911" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'FF']</msg>
<status starttime="20190121 11:50:18.906" endtime="20190121 11:50:18.912" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:18.919" level="INFO">Length is 15</msg>
<msg timestamp="20190121 11:50:18.921" level="INFO">${length} = 15</msg>
<status starttime="20190121 11:50:18.915" endtime="20190121 11:50:18.922" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:18.924" endtime="20190121 11:50:18.930" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:18.938" level="INFO">${value} = 9</msg>
<status starttime="20190121 11:50:18.932" endtime="20190121 11:50:18.939" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:18.948" level="INFO">${res} = 09</msg>
<status starttime="20190121 11:50:18.942" endtime="20190121 11:50:18.949" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:18.952" endtime="20190121 11:50:18.957" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:18.967" level="INFO">${res} = 1E54109400090000EE05FFF80001FF</msg>
<status starttime="20190121 11:50:18.960" endtime="20190121 11:50:18.968" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:18.971" level="INFO">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001FF</msg>
<status starttime="20190121 11:50:18.898" endtime="20190121 11:50:18.972" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:18.975" endtime="20190121 11:50:18.981" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:20.696" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 44 5A 3F</msg>
<status starttime="20190121 11:50:18.983" endtime="20190121 11:50:20.697" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:20.700" endtime="20190121 11:50:20.708" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:20.731" level="INFO">${temp1} = 1E105494000A000BEE06FFF8000001445A3F</msg>
<status starttime="20190121 11:50:20.721" endtime="20190121 11:50:20.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:20.740" level="INFO">${temp2} = EE06FFF800</msg>
<status starttime="20190121 11:50:20.734" endtime="20190121 11:50:20.741" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:20.744" endtime="20190121 11:50:20.749" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:20.710" endtime="20190121 11:50:20.752" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:18.878" endtime="20190121 11:50:20.754" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:20.773" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 AA</msg>
<status starttime="20190121 11:50:20.766" endtime="20190121 11:50:20.775" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:20.790" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'AA']</msg>
<status starttime="20190121 11:50:20.785" endtime="20190121 11:50:20.791" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:20.798" level="INFO">Length is 15</msg>
<msg timestamp="20190121 11:50:20.800" level="INFO">${length} = 15</msg>
<status starttime="20190121 11:50:20.794" endtime="20190121 11:50:20.801" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:20.804" endtime="20190121 11:50:20.809" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:20.818" level="INFO">${value} = 9</msg>
<status starttime="20190121 11:50:20.812" endtime="20190121 11:50:20.818" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:20.827" level="INFO">${res} = 09</msg>
<status starttime="20190121 11:50:20.821" endtime="20190121 11:50:20.828" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:20.831" endtime="20190121 11:50:20.836" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:20.845" level="INFO">${res} = 1E54109400090000EE05FFF80001AA</msg>
<status starttime="20190121 11:50:20.838" endtime="20190121 11:50:20.845" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:20.849" level="INFO">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001AA</msg>
<status starttime="20190121 11:50:20.777" endtime="20190121 11:50:20.857" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:20.860" endtime="20190121 11:50:20.873" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:21.259" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 45 5A 3E</msg>
<status starttime="20190121 11:50:20.879" endtime="20190121 11:50:21.260" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:21.263" endtime="20190121 11:50:21.280" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:21.303" level="INFO">${temp1} = 1E105494000A000BEE06FFF8000001455A3E</msg>
<status starttime="20190121 11:50:21.297" endtime="20190121 11:50:21.304" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:21.312" level="INFO">${temp2} = EE06FFF800</msg>
<status starttime="20190121 11:50:21.307" endtime="20190121 11:50:21.313" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:21.316" endtime="20190121 11:50:21.321" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:21.282" endtime="20190121 11:50:21.324" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:20.756" endtime="20190121 11:50:21.326" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:21.334" endtime="20190121 11:50:21.381" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:21.384" endtime="20190121 11:50:21.455" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:50:23.463" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:21.458" endtime="20190121 11:50:23.465" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:23.468" endtime="20190121 11:50:23.519" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:23.523" endtime="20190121 11:50:23.569" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:21.328" endtime="20190121 11:50:23.573" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:23.591" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F8 00 01</msg>
<status starttime="20190121 11:50:23.585" endtime="20190121 11:50:23.592" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:23.595" endtime="20190121 11:50:23.600" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:23.929" level="INFO">${resp} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 43 5A 97</msg>
<status starttime="20190121 11:50:23.603" endtime="20190121 11:50:23.931" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:23.934" endtime="20190121 11:50:23.944" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:23.963" level="INFO">${temp1} = 1E105494000C000BEE04FFF8000100AA01435A97</msg>
<status starttime="20190121 11:50:23.957" endtime="20190121 11:50:23.963" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:23.972" level="INFO">${temp2} = EE04FFF8000100</msg>
<status starttime="20190121 11:50:23.966" endtime="20190121 11:50:23.973" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:23.976" endtime="20190121 11:50:23.981" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:23.946" endtime="20190121 11:50:23.984" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:23.987" level="INFO">${RESP} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 43 5A 97</msg>
<status starttime="20190121 11:50:23.575" endtime="20190121 11:50:23.988" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN} ${EEPROM_APP_OK} ${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:24.007" level="INFO">${temp1} = 1E105494000C000BEE04FFF8000100AA01435A97</msg>
<status starttime="20190121 11:50:24.000" endtime="20190121 11:50:24.007" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:24.016" level="INFO">${temp2} = 000100AA</msg>
<status starttime="20190121 11:50:24.010" endtime="20190121 11:50:24.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:24.020" endtime="20190121 11:50:24.025" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:23.990" endtime="20190121 11:50:24.027" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:18.865" endtime="20190121 11:50:24.029" status="PASS"></status>
</kw>
<kw name="TEST_WAKE_BARRIERS">
<doc>Write and read the EEPROM_WAKE_BARRIERS</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_WAKE_BARRIERS</arg>
</arguments>
<status starttime="20190121 11:50:24.038" endtime="20190121 11:50:24.043" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:24.062" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 FF FF</msg>
<status starttime="20190121 11:50:24.055" endtime="20190121 11:50:24.063" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:24.078" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'FF', 'FF']</msg>
<status starttime="20190121 11:50:24.073" endtime="20190121 11:50:24.078" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:24.086" level="INFO">Length is 16</msg>
<msg timestamp="20190121 11:50:24.088" level="INFO">${length} = 16</msg>
<status starttime="20190121 11:50:24.082" endtime="20190121 11:50:24.088" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:24.091" endtime="20190121 11:50:24.096" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:24.118" level="INFO">${value} = 10</msg>
<status starttime="20190121 11:50:24.099" endtime="20190121 11:50:24.119" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:24.129" level="INFO">${res} = 0A</msg>
<status starttime="20190121 11:50:24.124" endtime="20190121 11:50:24.130" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:24.133" endtime="20190121 11:50:24.139" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:24.148" level="INFO">${res} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status starttime="20190121 11:50:24.142" endtime="20190121 11:50:24.149" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:24.152" level="INFO">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status starttime="20190121 11:50:24.065" endtime="20190121 11:50:24.153" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:24.156" endtime="20190121 11:50:24.162" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:25.770" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 44 5A 30</msg>
<status starttime="20190121 11:50:24.165" endtime="20190121 11:50:25.771" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:25.774" endtime="20190121 11:50:25.779" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:25.798" level="INFO">${temp1} = 1E105494000A000BEE06FFF7000001445A30</msg>
<status starttime="20190121 11:50:25.793" endtime="20190121 11:50:25.799" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:25.808" level="INFO">${temp2} = EE06FFF700</msg>
<status starttime="20190121 11:50:25.802" endtime="20190121 11:50:25.809" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:25.812" endtime="20190121 11:50:25.821" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:25.781" endtime="20190121 11:50:25.823" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:24.045" endtime="20190121 11:50:25.826" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:25.845" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 AA BB</msg>
<status starttime="20190121 11:50:25.838" endtime="20190121 11:50:25.845" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:25.860" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'AA', 'BB']</msg>
<status starttime="20190121 11:50:25.855" endtime="20190121 11:50:25.861" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:25.868" level="INFO">Length is 16</msg>
<msg timestamp="20190121 11:50:25.870" level="INFO">${length} = 16</msg>
<status starttime="20190121 11:50:25.864" endtime="20190121 11:50:25.871" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:25.874" endtime="20190121 11:50:25.879" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:25.887" level="INFO">${value} = 10</msg>
<status starttime="20190121 11:50:25.882" endtime="20190121 11:50:25.888" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:25.897" level="INFO">${res} = 0A</msg>
<status starttime="20190121 11:50:25.891" endtime="20190121 11:50:25.898" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:25.900" endtime="20190121 11:50:25.906" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:25.915" level="INFO">${res} = 1E541094000A0000EE05FFF70002AABB</msg>
<status starttime="20190121 11:50:25.909" endtime="20190121 11:50:25.916" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:25.919" level="INFO">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002AABB</msg>
<status starttime="20190121 11:50:25.847" endtime="20190121 11:50:25.920" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:25.923" endtime="20190121 11:50:25.928" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:26.262" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 45 5A 31</msg>
<status starttime="20190121 11:50:25.931" endtime="20190121 11:50:26.263" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:26.266" endtime="20190121 11:50:26.272" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:26.291" level="INFO">${temp1} = 1E105494000A000BEE06FFF7000001455A31</msg>
<status starttime="20190121 11:50:26.284" endtime="20190121 11:50:26.292" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:26.300" level="INFO">${temp2} = EE06FFF700</msg>
<status starttime="20190121 11:50:26.295" endtime="20190121 11:50:26.301" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:26.304" endtime="20190121 11:50:26.310" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:26.274" endtime="20190121 11:50:26.313" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:25.828" endtime="20190121 11:50:26.315" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:26.323" endtime="20190121 11:50:26.370" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:26.374" endtime="20190121 11:50:26.421" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:50:28.429" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:26.424" endtime="20190121 11:50:28.431" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:28.434" endtime="20190121 11:50:28.480" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:28.483" endtime="20190121 11:50:28.532" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:26.317" endtime="20190121 11:50:28.535" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:28.552" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F7 00 02</msg>
<status starttime="20190121 11:50:28.546" endtime="20190121 11:50:28.553" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:28.556" endtime="20190121 11:50:28.561" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:28.891" level="INFO">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 43 00 A3 D8</msg>
<status starttime="20190121 11:50:28.564" endtime="20190121 11:50:28.892" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:28.896" endtime="20190121 11:50:28.905" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:28.924" level="INFO">${temp1} = 1E105494000D000BEE04FFF7000200AABB014300A3D8</msg>
<status starttime="20190121 11:50:28.918" endtime="20190121 11:50:28.925" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:28.934" level="INFO">${temp2} = EE04FFF7000200</msg>
<status starttime="20190121 11:50:28.928" endtime="20190121 11:50:28.935" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:28.937" endtime="20190121 11:50:28.943" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:28.907" endtime="20190121 11:50:28.945" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:28.949" level="INFO">${RESP} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 43 00 A3 D8</msg>
<status starttime="20190121 11:50:28.537" endtime="20190121 11:50:28.950" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN} ${EEPROM_APP_OK} ${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:28.968" level="INFO">${temp1} = 1E105494000D000BEE04FFF7000200AABB014300A3D8</msg>
<status starttime="20190121 11:50:28.962" endtime="20190121 11:50:28.969" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:28.977" level="INFO">${temp2} = 000200AABB</msg>
<status starttime="20190121 11:50:28.971" endtime="20190121 11:50:28.978" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:28.981" endtime="20190121 11:50:28.986" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:28.952" endtime="20190121 11:50:28.989" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:24.031" endtime="20190121 11:50:28.991" status="PASS"></status>
</kw>
<kw name="TEST_DIAG_CODING">
<doc>Write and read the EEPROM_DIAG_CODING</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_DIAG_CODING</arg>
</arguments>
<status starttime="20190121 11:50:28.999" endtime="20190121 11:50:29.004" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:29.023" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 00</msg>
<status starttime="20190121 11:50:29.016" endtime="20190121 11:50:29.024" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:29.039" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', '00']</msg>
<status starttime="20190121 11:50:29.034" endtime="20190121 11:50:29.040" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:29.047" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:50:29.049" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:50:29.043" endtime="20190121 11:50:29.050" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:29.053" endtime="20190121 11:50:29.058" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:29.067" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:50:29.061" endtime="20190121 11:50:29.068" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:29.076" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:50:29.070" endtime="20190121 11:50:29.077" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:29.080" endtime="20190121 11:50:29.085" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:29.094" level="INFO">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status starttime="20190121 11:50:29.088" endtime="20190121 11:50:29.095" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:29.099" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status starttime="20190121 11:50:29.026" endtime="20190121 11:50:29.099" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:29.111" endtime="20190121 11:50:29.123" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:30.744" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 44 5A 31</msg>
<status starttime="20190121 11:50:29.126" endtime="20190121 11:50:30.746" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:30.749" endtime="20190121 11:50:30.754" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:30.773" level="INFO">${temp1} = 1E105494000A000BEE06FFF6000001445A31</msg>
<status starttime="20190121 11:50:30.767" endtime="20190121 11:50:30.774" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:30.782" level="INFO">${temp2} = EE06FFF600</msg>
<status starttime="20190121 11:50:30.777" endtime="20190121 11:50:30.783" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:30.786" endtime="20190121 11:50:30.802" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:30.756" endtime="20190121 11:50:30.804" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:29.006" endtime="20190121 11:50:30.807" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:30.826" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 CC</msg>
<status starttime="20190121 11:50:30.819" endtime="20190121 11:50:30.827" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:30.843" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', 'CC']</msg>
<status starttime="20190121 11:50:30.838" endtime="20190121 11:50:30.844" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:30.851" level="INFO">Length is 26</msg>
<msg timestamp="20190121 11:50:30.853" level="INFO">${length} = 26</msg>
<status starttime="20190121 11:50:30.847" endtime="20190121 11:50:30.854" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:30.857" endtime="20190121 11:50:30.862" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:30.871" level="INFO">${value} = 20</msg>
<status starttime="20190121 11:50:30.865" endtime="20190121 11:50:30.871" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:30.880" level="INFO">${res} = 14</msg>
<status starttime="20190121 11:50:30.874" endtime="20190121 11:50:30.881" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:30.883" endtime="20190121 11:50:30.889" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:30.899" level="INFO">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status starttime="20190121 11:50:30.892" endtime="20190121 11:50:30.900" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:30.903" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status starttime="20190121 11:50:30.829" endtime="20190121 11:50:30.904" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:30.907" endtime="20190121 11:50:30.912" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:31.251" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 45 5A 30</msg>
<status starttime="20190121 11:50:30.915" endtime="20190121 11:50:31.252" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:31.255" endtime="20190121 11:50:31.261" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:31.280" level="INFO">${temp1} = 1E105494000A000BEE06FFF6000001455A30</msg>
<status starttime="20190121 11:50:31.274" endtime="20190121 11:50:31.281" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:31.289" level="INFO">${temp2} = EE06FFF600</msg>
<status starttime="20190121 11:50:31.284" endtime="20190121 11:50:31.290" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:31.293" endtime="20190121 11:50:31.299" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:31.263" endtime="20190121 11:50:31.302" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:30.809" endtime="20190121 11:50:31.304" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:31.312" endtime="20190121 11:50:31.359" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:31.362" endtime="20190121 11:50:31.439" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:50:33.478" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:31.446" endtime="20190121 11:50:33.480" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:33.483" endtime="20190121 11:50:33.564" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:33.566" endtime="20190121 11:50:33.649" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:31.306" endtime="20190121 11:50:33.652" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:33.690" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F6 00 0C</msg>
<status starttime="20190121 11:50:33.673" endtime="20190121 11:50:33.691" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:33.694" endtime="20190121 11:50:33.726" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:35.703" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 43 00 D5 0E</msg>
<status starttime="20190121 11:50:33.730" endtime="20190121 11:50:35.705" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:35.708" endtime="20190121 11:50:35.714" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:35.733" level="INFO">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014300D50E</msg>
<status starttime="20190121 11:50:35.727" endtime="20190121 11:50:35.734" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:35.742" level="INFO">${temp2} = EE04FFF6000C00</msg>
<status starttime="20190121 11:50:35.737" endtime="20190121 11:50:35.743" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:35.746" endtime="20190121 11:50:35.751" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:35.716" endtime="20190121 11:50:35.754" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:35.757" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 43 00 D5 0E</msg>
<status starttime="20190121 11:50:33.654" endtime="20190121 11:50:35.758" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_DIAG_CODING_LEN} ${EEPROM_APP_OK} ${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:35.777" level="INFO">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014300D50E</msg>
<status starttime="20190121 11:50:35.770" endtime="20190121 11:50:35.778" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:35.786" level="INFO">${temp2} = 000C001115051501FF00017CFF00CC</msg>
<status starttime="20190121 11:50:35.781" endtime="20190121 11:50:35.787" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:35.790" endtime="20190121 11:50:35.796" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:35.760" endtime="20190121 11:50:35.798" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:28.993" endtime="20190121 11:50:35.800" status="PASS"></status>
</kw>
<kw name="TEST_RESET_BUFFER">
<doc>Write and read the EEPROM_RESET_BUFFER</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_RESET_BUFFER</arg>
</arguments>
<status starttime="20190121 11:50:35.809" endtime="20190121 11:50:35.813" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DEFDATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:35.834" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 00000000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:50:35.826" endtime="20190121 11:50:35.835" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:35.850" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', '00000000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status starttime="20190121 11:50:35.845" endtime="20190121 11:50:35.851" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:35.857" level="INFO">Length is 18</msg>
<msg timestamp="20190121 11:50:35.859" level="INFO">${length} = 18</msg>
<status starttime="20190121 11:50:35.853" endtime="20190121 11:50:35.860" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:35.863" endtime="20190121 11:50:35.868" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:35.876" level="INFO">${value} = 12</msg>
<status starttime="20190121 11:50:35.871" endtime="20190121 11:50:35.877" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:35.886" level="INFO">${res} = 0C</msg>
<status starttime="20190121 11:50:35.880" endtime="20190121 11:50:35.887" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:35.889" endtime="20190121 11:50:35.894" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:35.904" level="INFO">${res} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:50:35.898" endtime="20190121 11:50:35.905" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:35.908" level="INFO">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:50:35.837" endtime="20190121 11:50:35.909" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:35.912" endtime="20190121 11:50:35.918" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:36.280" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 44 5A 32</msg>
<status starttime="20190121 11:50:35.921" endtime="20190121 11:50:36.282" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:36.285" endtime="20190121 11:50:36.290" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:36.308" level="INFO">${temp1} = 1E105494000A000BEE06FFF5000001445A32</msg>
<status starttime="20190121 11:50:36.302" endtime="20190121 11:50:36.309" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:36.323" level="INFO">${temp2} = EE06FFF500</msg>
<status starttime="20190121 11:50:36.312" endtime="20190121 11:50:36.324" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:36.327" endtime="20190121 11:50:36.332" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:36.292" endtime="20190121 11:50:36.336" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:35.815" endtime="20190121 11:50:36.338" status="PASS"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:36.357" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 AABB0000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:50:36.350" endtime="20190121 11:50:36.358" status="PASS"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:50:36.373" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', 'AABB0000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status starttime="20190121 11:50:36.368" endtime="20190121 11:50:36.374" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190121 11:50:36.381" level="INFO">Length is 18</msg>
<msg timestamp="20190121 11:50:36.383" level="INFO">${length} = 18</msg>
<status starttime="20190121 11:50:36.377" endtime="20190121 11:50:36.384" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status starttime="20190121 11:50:36.386" endtime="20190121 11:50:36.392" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:50:36.400" level="INFO">${value} = 12</msg>
<status starttime="20190121 11:50:36.395" endtime="20190121 11:50:36.401" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:36.409" level="INFO">${res} = 0C</msg>
<status starttime="20190121 11:50:36.404" endtime="20190121 11:50:36.410" status="PASS"></status>
</kw>
<kw library="Collections" name="Set List Value">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:50:36.413" endtime="20190121 11:50:36.418" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:50:36.427" level="INFO">${res} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:50:36.421" endtime="20190121 11:50:36.428" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:36.432" level="INFO">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:50:36.360" endtime="20190121 11:50:36.433" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status starttime="20190121 11:50:36.436" endtime="20190121 11:50:36.441" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:36.798" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 47 5A 31</msg>
<status starttime="20190121 11:50:36.444" endtime="20190121 11:50:36.799" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:36.802" endtime="20190121 11:50:36.808" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:36.827" level="INFO">${temp1} = 1E105494000A000BEE06FFF5000001475A31</msg>
<status starttime="20190121 11:50:36.820" endtime="20190121 11:50:36.828" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:36.837" level="INFO">${temp2} = EE06FFF500</msg>
<status starttime="20190121 11:50:36.831" endtime="20190121 11:50:36.837" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:36.840" endtime="20190121 11:50:36.846" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:36.810" endtime="20190121 11:50:36.848" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:36.340" endtime="20190121 11:50:36.850" status="PASS"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:36.858" endtime="20190121 11:50:36.905" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:36.908" endtime="20190121 11:50:36.955" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:50:38.963" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:36.959" endtime="20190121 11:50:38.966" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:38.968" endtime="20190121 11:50:39.017" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:39.020" endtime="20190121 11:50:39.067" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:36.852" endtime="20190121 11:50:39.070" status="PASS"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190121 11:50:39.088" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F5 00 42</msg>
<status starttime="20190121 11:50:39.081" endtime="20190121 11:50:39.089" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status starttime="20190121 11:50:39.092" endtime="20190121 11:50:39.097" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:39.425" level="INFO">${resp} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status starttime="20190121 11:50:39.100" endtime="20190121 11:50:39.426" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status starttime="20190121 11:50:39.429" endtime="20190121 11:50:39.438" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:39.458" level="INFO">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014300A5DC</msg>
<status starttime="20190121 11:50:39.452" endtime="20190121 11:50:39.459" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:39.467" level="INFO">${temp2} = EE04FFF5004200</msg>
<status starttime="20190121 11:50:39.462" endtime="20190121 11:50:39.468" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:39.471" endtime="20190121 11:50:39.477" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:39.441" endtime="20190121 11:50:39.479" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:50:39.482" level="INFO">${RESP} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status starttime="20190121 11:50:39.073" endtime="20190121 11:50:39.483" status="PASS"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN} ${EEPROM_APP_OK} ${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190121 11:50:39.501" level="INFO">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014300A5DC</msg>
<status starttime="20190121 11:50:39.495" endtime="20190121 11:50:39.502" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190121 11:50:39.511" level="INFO">${temp2} = 004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status starttime="20190121 11:50:39.505" endtime="20190121 11:50:39.512" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:39.514" endtime="20190121 11:50:39.520" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:39.485" endtime="20190121 11:50:39.522" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:35.802" endtime="20190121 11:50:39.525" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status starttime="20190121 11:50:39.535" endtime="20190121 11:50:39.539" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:39.542" endtime="20190121 11:50:39.612" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:39.615" endtime="20190121 11:50:39.663" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:50:39.667" endtime="20190121 11:50:39.711" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:39.528" endtime="20190121 11:50:39.714" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-41553</doc>
<tags>
<tag>EEPROM</tag>
</tags>
<status starttime="20190121 11:50:05.543" critical="yes" endtime="20190121 11:50:39.715" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:50:41.282" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:50:41.326" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:50:39.771" endtime="20190121 11:50:41.327" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:39.731" endtime="20190121 11:50:41.329" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:39.726" endtime="20190121 11:50:41.331" status="PASS"></status>
</kw>
<doc>EEPROM write read test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:50:02.679" endtime="20190121 11:50:41.331" status="PASS"></status>
</suite>
<suite id="s1-s16" name="SKTB-56663" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56663.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:50:42.038" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:50:42.033" endtime="20190121 11:50:42.047" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:50:42.056" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:50:42.075" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:50:44.313" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:50:42.050" endtime="20190121 11:50:44.315" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:42.020" endtime="20190121 11:50:44.318" status="PASS"></status>
</kw>
<test id="s1-s16-t1" name="SKTB-56663">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:44.379" endtime="20190121 11:50:44.462" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:44.465" endtime="20190121 11:50:44.558" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:44.561" endtime="20190121 11:50:44.654" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:50:46.675" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:44.662" endtime="20190121 11:50:46.678" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:46.681" endtime="20190121 11:50:46.727" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:50:46.730" endtime="20190121 11:50:46.777" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:50:46.781" endtime="20190121 11:50:46.825" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:50:46.828" endtime="20190121 11:50:46.881" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:50:46.884" endtime="20190121 11:50:46.931" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status starttime="20190121 11:50:46.935" endtime="20190121 11:50:47.012" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:50:49.028" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:47.019" endtime="20190121 11:50:49.030" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:44.353" endtime="20190121 11:50:49.032" status="PASS"></status>
</kw>
<kw name="Step_1">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:49.246" level="INFO">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F 7D 01 43 65 A0</msg>
<status starttime="20190121 11:50:49.041" endtime="20190121 11:50:49.247" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:50:49.255" level="INFO">1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F 7D 01 43 65 A0</msg>
<status starttime="20190121 11:50:49.251" endtime="20190121 11:50:49.257" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:49.260" endtime="20190121 11:50:49.267" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:49.035" endtime="20190121 11:50:49.270" status="PASS"></status>
</kw>
<kw name="Step_2">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} 00</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:50:49.514" level="INFO">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 44 B4 24</msg>
<status starttime="20190121 11:50:49.278" endtime="20190121 11:50:49.515" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:50:49.522" level="INFO">1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 44 B4 24</msg>
<status starttime="20190121 11:50:49.518" endtime="20190121 11:50:49.525" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:49.528" endtime="20190121 11:50:49.535" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:49.272" endtime="20190121 11:50:49.537" status="PASS"></status>
</kw>
<kw name="Step_3">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:50:49.782" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 45 4A DF</msg>
<status starttime="20190121 11:50:49.545" endtime="20190121 11:50:49.783" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:50:49.790" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 45 4A DF</msg>
<status starttime="20190121 11:50:49.786" endtime="20190121 11:50:49.795" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:49.798" endtime="20190121 11:50:49.806" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:49.539" endtime="20190121 11:50:49.809" status="PASS"></status>
</kw>
<kw name="Step_4">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_EXCEED} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:50:50.059" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 40 4A DA</msg>
<status starttime="20190121 11:50:49.817" endtime="20190121 11:50:50.061" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:50:50.069" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 40 4A DA</msg>
<status starttime="20190121 11:50:50.065" endtime="20190121 11:50:50.090" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:50.093" endtime="20190121 11:50:50.109" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:49.811" endtime="20190121 11:50:50.112" status="PASS"></status>
</kw>
<kw name="Step_5">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_INVALID} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:50:50.364" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 01 01 41 4B DB</msg>
<status starttime="20190121 11:50:50.128" endtime="20190121 11:50:50.365" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:50:50.373" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 01 01 01 41 4B DB</msg>
<status starttime="20190121 11:50:50.368" endtime="20190121 11:50:50.375" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:50.378" endtime="20190121 11:50:50.385" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:50.118" endtime="20190121 11:50:50.388" status="PASS"></status>
</kw>
<kw name="Step_6">
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} 00 ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190121 11:50:50.635" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 00 01 42 4B D9</msg>
<status starttime="20190121 11:50:50.397" endtime="20190121 11:50:50.636" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:50:50.643" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 01 00 01 42 4B D9</msg>
<status starttime="20190121 11:50:50.639" endtime="20190121 11:50:50.646" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:50:50.649" endtime="20190121 11:50:50.655" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:50.390" endtime="20190121 11:50:50.658" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:50.667" endtime="20190121 11:50:50.739" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:50.747" endtime="20190121 11:50:50.850" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:50.853" endtime="20190121 11:50:51.018" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:50:53.026" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:51.021" endtime="20190121 11:50:53.028" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:50:53.031" endtime="20190121 11:50:53.077" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:50:53.080" endtime="20190121 11:50:53.125" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:50.661" endtime="20190121 11:50:53.128" status="PASS"></status>
</kw>
<doc>Implements SW Test Case SKTB-56663</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status starttime="20190121 11:50:44.320" critical="yes" endtime="20190121 11:50:53.129" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:50:54.647" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:50:54.732" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:50:53.171" endtime="20190121 11:50:54.738" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:53.145" endtime="20190121 11:50:54.740" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:53.140" endtime="20190121 11:50:54.746" status="PASS"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:50:41.490" endtime="20190121 11:50:54.747" status="PASS"></status>
</suite>
<suite id="s1-s17" name="SKTB-56067" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56067.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:50:55.491" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:50:55.478" endtime="20190121 11:50:55.501" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:50:55.525" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:50:55.527" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:50:57.683" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:50:55.504" endtime="20190121 11:50:57.698" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:55.473" endtime="20190121 11:50:57.700" status="PASS"></status>
</kw>
<test id="s1-s17-t1" name="SKTB-SKTB-56067">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:57.748" endtime="20190121 11:50:57.847" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:57.898" endtime="20190121 11:50:58.021" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:50:58.024" endtime="20190121 11:50:58.157" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:51:00.164" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:50:58.160" endtime="20190121 11:51:00.166" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:51:00.169" endtime="20190121 11:51:00.218" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:01.226" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:00.221" endtime="20190121 11:51:01.230" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:51:01.233" endtime="20190121 11:51:01.279" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:51:03.287" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:51:01.283" endtime="20190121 11:51:03.289" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:51:03.292" endtime="20190121 11:51:03.337" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:51:03.340" endtime="20190121 11:51:03.385" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:51:03.388" endtime="20190121 11:51:03.434" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:51:03.437" endtime="20190121 11:51:03.488" status="PASS"></status>
</kw>
<status starttime="20190121 11:50:57.741" endtime="20190121 11:51:03.491" status="PASS"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate</doc>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:03.586" level="INFO">${res_dict} = {'result': '4153', 'data': '', 'status': True, 'request': '41'}</msg>
<status starttime="20190121 11:51:03.504" endtime="20190121 11:51:03.587" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:03.644" level="INFO">${value} = True</msg>
<status starttime="20190121 11:51:03.594" endtime="20190121 11:51:03.645" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:51:03.650" endtime="20190121 11:51:03.656" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:04.667" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:03.662" endtime="20190121 11:51:04.669" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:03.498" endtime="20190121 11:51:04.671" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:04.738" level="INFO">${res_dict} = {'result': '4153', 'data': '', 'status': True, 'request': '41'}</msg>
<status starttime="20190121 11:51:04.679" endtime="20190121 11:51:04.739" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:04.764" level="INFO">${value} = True</msg>
<status starttime="20190121 11:51:04.743" endtime="20190121 11:51:04.765" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:51:04.768" endtime="20190121 11:51:04.772" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:05.779" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:04.774" endtime="20190121 11:51:05.782" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:04.673" endtime="20190121 11:51:05.792" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:03.493" endtime="20190121 11:51:05.795" status="PASS"></status>
</kw>
<kw name="POWER_ON_NAD">
<doc>Test the POWER_ON_NAD functionality</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the POWER_ON_NAD</arg>
<arg>functionality</arg>
</arguments>
<status starttime="20190121 11:51:05.809" endtime="20190121 11:51:05.813" status="PASS"></status>
</kw>
<kw name="POWERCYCLE">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:05.821" endtime="20190121 11:51:05.868" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:05.871" endtime="20190121 11:51:05.917" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:05.921" endtime="20190121 11:51:05.966" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:51:07.974" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:51:05.970" endtime="20190121 11:51:07.977" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:51:07.981" endtime="20190121 11:51:08.065" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:09.084" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:08.068" endtime="20190121 11:51:09.086" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:51:09.089" endtime="20190121 11:51:09.136" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:05.815" endtime="20190121 11:51:09.139" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:51:09.168" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190121 11:51:09.195" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:51:09.209" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:51:09.212" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:51:09.162" endtime="20190121 11:51:09.213" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:51:09.222" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:51:09.217" endtime="20190121 11:51:09.223" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:51:09.231" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:51:09.233" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status starttime="20190121 11:51:09.226" endtime="20190121 11:51:09.233" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:51:09.242" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:51:09.236" endtime="20190121 11:51:09.243" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:51:09.245" endtime="20190121 11:51:09.251" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190121 11:51:09.258" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:51:09.253" endtime="20190121 11:51:09.260" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:51:09.264" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:51:09.154" endtime="20190121 11:51:09.265" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:09.443" level="INFO">${res_dict} = {'result': '5453', 'request': '', 'data': 'b774d66a', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:51:09.267" endtime="20190121 11:51:09.444" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:51:09.461" level="INFO">{'result': '5453', 'request': '', 'data': 'b774d66a', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:51:09.454" endtime="20190121 11:51:09.464" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:51:11.471" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:51:09.466" endtime="20190121 11:51:11.473" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:11.498" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:51:11.476" endtime="20190121 11:51:11.499" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:51:11.502" endtime="20190121 11:51:11.507" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:09.146" endtime="20190121 11:51:11.510" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:11.580" level="INFO">${res_dict} = {'result': '4953', 'data': '', 'status': True, 'request': '49'}</msg>
<status starttime="20190121 11:51:11.517" endtime="20190121 11:51:11.581" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:11.606" level="INFO">${value} = True</msg>
<status starttime="20190121 11:51:11.584" endtime="20190121 11:51:11.606" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:51:11.609" endtime="20190121 11:51:11.613" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:12.620" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:11.616" endtime="20190121 11:51:12.623" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:11.511" endtime="20190121 11:51:12.625" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:12.697" level="INFO">${res_dict} = {'result': '475653', 'data': '0100', 'status': True, 'request': '4756'}</msg>
<status starttime="20190121 11:51:12.633" endtime="20190121 11:51:12.698" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status starttime="20190121 11:51:12.701" endtime="20190121 11:51:12.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:13.714" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:12.710" endtime="20190121 11:51:13.716" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:12.627" endtime="20190121 11:51:13.718" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:09.141" endtime="20190121 11:51:13.721" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_POWERONNAD}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:13.799" level="INFO">${res_dict} = {'result': '520153', 'data': '', 'status': True, 'request': '5201'}</msg>
<status starttime="20190121 11:51:13.730" endtime="20190121 11:51:13.802" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:51:13.805" endtime="20190121 11:51:13.810" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:13.834" level="INFO">${value} = True</msg>
<status starttime="20190121 11:51:13.813" endtime="20190121 11:51:13.835" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:51:13.839" level="INFO">${value} = True</msg>
<status starttime="20190121 11:51:13.723" endtime="20190121 11:51:13.840" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:51:13.842" endtime="20190121 11:51:13.847" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20190121 11:51:23.854" level="INFO">Slept 10 seconds</msg>
<status starttime="20190121 11:51:13.850" endtime="20190121 11:51:23.856" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:51:23.914" level="INFO">${KLEMME30} = [[12200, 128], [12175, 137]]</msg>
<status starttime="20190121 11:51:23.864" endtime="20190121 11:51:23.915" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:51:23.940" level="INFO">${CURR_VCARBAT} = 128</msg>
<status starttime="20190121 11:51:23.918" endtime="20190121 11:51:23.941" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:51:23.966" level="INFO">${CURR_KL30} = 137</msg>
<status starttime="20190121 11:51:23.943" endtime="20190121 11:51:23.966" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:51:23.974" level="INFO">${TIMENOW} = 1548071483</msg>
<status starttime="20190121 11:51:23.969" endtime="20190121 11:51:23.975" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:51:23.977" endtime="20190121 11:51:23.987" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:51:23.993" level="INFO">${TIMENOW} = 1548071483</msg>
<msg timestamp="20190121 11:51:23.994" level="INFO">${CURR_VCARBAT} = 128</msg>
<msg timestamp="20190121 11:51:23.995" level="INFO">${CURR_KL30} = 137</msg>
<status starttime="20190121 11:51:23.858" endtime="20190121 11:51:23.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<status starttime="20190121 11:51:24.004" endtime="20190121 11:51:24.010" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:51:24.011" level="INFO">${fbus_resp} = None</msg>
<status starttime="20190121 11:51:23.999" endtime="20190121 11:51:24.012" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:05.802" endtime="20190121 11:51:24.014" status="PASS"></status>
</kw>
<kw name="SHUTDOWNSYSTEM">
<doc>Test the shutdownsystem functionality</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the shutdownsystem functionality</arg>
</arguments>
<status starttime="20190121 11:51:24.022" endtime="20190121 11:51:24.027" status="PASS"></status>
</kw>
<kw name="POWERCYCLE">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:24.035" endtime="20190121 11:51:24.083" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:24.086" endtime="20190121 11:51:24.145" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:24.148" endtime="20190121 11:51:24.212" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:51:26.220" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:51:24.215" endtime="20190121 11:51:26.222" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:51:26.225" endtime="20190121 11:51:26.271" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:27.279" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:26.275" endtime="20190121 11:51:27.281" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:51:27.284" endtime="20190121 11:51:27.333" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:24.029" endtime="20190121 11:51:27.335" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:51:27.366" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190121 11:51:27.394" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:51:27.409" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:51:27.412" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:51:27.356" endtime="20190121 11:51:27.413" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:51:27.422" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:51:27.417" endtime="20190121 11:51:27.424" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:51:27.431" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:51:27.433" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status starttime="20190121 11:51:27.427" endtime="20190121 11:51:27.434" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:51:27.442" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:51:27.437" endtime="20190121 11:51:27.443" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:51:27.445" endtime="20190121 11:51:27.451" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190121 11:51:27.458" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:51:27.453" endtime="20190121 11:51:27.461" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:51:27.465" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:51:27.349" endtime="20190121 11:51:27.466" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:27.658" level="INFO">${res_dict} = {'result': '5453', 'request': '', 'data': 'b774d66a', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:51:27.469" endtime="20190121 11:51:27.659" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:51:27.676" level="INFO">{'result': '5453', 'request': '', 'data': 'b774d66a', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:51:27.672" endtime="20190121 11:51:27.681" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:51:29.688" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:51:27.684" endtime="20190121 11:51:29.691" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:29.716" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:51:29.694" endtime="20190121 11:51:29.717" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:51:29.720" endtime="20190121 11:51:29.725" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:27.343" endtime="20190121 11:51:29.728" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:29.797" level="INFO">${res_dict} = {'result': '4953', 'data': '', 'status': True, 'request': '49'}</msg>
<status starttime="20190121 11:51:29.736" endtime="20190121 11:51:29.798" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:29.834" level="INFO">${value} = True</msg>
<status starttime="20190121 11:51:29.801" endtime="20190121 11:51:29.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:51:29.838" endtime="20190121 11:51:29.842" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:30.849" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:29.845" endtime="20190121 11:51:30.851" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:29.730" endtime="20190121 11:51:30.853" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:30.925" level="INFO">${res_dict} = {'result': '475653', 'data': '0100', 'status': True, 'request': '4756'}</msg>
<status starttime="20190121 11:51:30.861" endtime="20190121 11:51:30.926" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status starttime="20190121 11:51:30.929" endtime="20190121 11:51:30.935" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:31.942" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:30.938" endtime="20190121 11:51:31.944" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:30.855" endtime="20190121 11:51:31.946" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:27.338" endtime="20190121 11:51:31.948" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_SHUTDOWNSYSTEM}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:32.038" level="INFO">${res_dict} = {'result': '520246', 'data': '', 'status': False, 'request': '5202'}</msg>
<status starttime="20190121 11:51:31.958" endtime="20190121 11:51:32.039" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:51:32.042" endtime="20190121 11:51:32.047" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:32.072" level="INFO">${value} = False</msg>
<status starttime="20190121 11:51:32.050" endtime="20190121 11:51:32.072" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:51:32.076" level="INFO">${value} = False</msg>
<status starttime="20190121 11:51:31.950" endtime="20190121 11:51:32.077" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:51:32.080" endtime="20190121 11:51:32.085" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20190121 11:51:37.092" level="INFO">Slept 5 seconds</msg>
<status starttime="20190121 11:51:32.088" endtime="20190121 11:51:37.094" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:51:37.154" level="INFO">${KLEMME30} = [[12225, 78], [12200, 96]]</msg>
<status starttime="20190121 11:51:37.102" endtime="20190121 11:51:37.155" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:51:37.180" level="INFO">${CURR_VCARBAT} = 78</msg>
<status starttime="20190121 11:51:37.158" endtime="20190121 11:51:37.181" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:51:37.206" level="INFO">${CURR_KL30} = 96</msg>
<status starttime="20190121 11:51:37.184" endtime="20190121 11:51:37.207" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:51:37.214" level="INFO">${TIMENOW} = 1548071497</msg>
<status starttime="20190121 11:51:37.210" endtime="20190121 11:51:37.215" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:51:37.218" endtime="20190121 11:51:37.225" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:51:37.230" level="INFO">${TIMENOW} = 1548071497</msg>
<msg timestamp="20190121 11:51:37.231" level="INFO">${CURR_VCARBAT} = 78</msg>
<msg timestamp="20190121 11:51:37.232" level="INFO">${CURR_KL30} = 96</msg>
<status starttime="20190121 11:51:37.096" endtime="20190121 11:51:37.232" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<msg timestamp="20190121 11:51:37.248" level="FAIL">'78 &lt; 5' should be true.</msg>
<status starttime="20190121 11:51:37.241" endtime="20190121 11:51:37.249" status="FAIL"></status>
</kw>
<msg timestamp="20190121 11:51:37.251" level="INFO">${fbus_resp} = None</msg>
<status starttime="20190121 11:51:37.235" endtime="20190121 11:51:37.252" status="FAIL"></status>
</kw>
<status starttime="20190121 11:51:24.016" endtime="20190121 11:51:37.255" status="FAIL"></status>
</kw>
<kw name="MCUSTANDBY">
<doc>Test the mcu stanby functionality</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the mcu stanby functionality</arg>
</arguments>
<status starttime="20190121 11:51:37.263" endtime="20190121 11:51:37.267" status="PASS"></status>
</kw>
<kw name="POWERCYCLE">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:37.275" endtime="20190121 11:51:37.323" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:37.326" endtime="20190121 11:51:37.385" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:37.388" endtime="20190121 11:51:37.451" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:51:39.464" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:51:37.454" endtime="20190121 11:51:39.466" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:51:39.469" endtime="20190121 11:51:39.558" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:40.566" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:39.561" endtime="20190121 11:51:40.568" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:51:40.570" endtime="20190121 11:51:40.618" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:37.269" endtime="20190121 11:51:40.621" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:51:40.647" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190121 11:51:40.674" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:51:40.689" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:51:40.692" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:51:40.641" endtime="20190121 11:51:40.693" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:51:40.702" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:51:40.697" endtime="20190121 11:51:40.703" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:51:40.710" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:51:40.712" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status starttime="20190121 11:51:40.706" endtime="20190121 11:51:40.713" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:51:40.720" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:51:40.715" endtime="20190121 11:51:40.721" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:51:40.725" endtime="20190121 11:51:40.731" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190121 11:51:40.738" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:51:40.734" endtime="20190121 11:51:40.740" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:51:40.744" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status starttime="20190121 11:51:40.634" endtime="20190121 11:51:40.745" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:40.926" level="INFO">${res_dict} = {'result': '5453', 'request': '', 'data': 'b774d66a', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:51:40.748" endtime="20190121 11:51:40.927" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:51:40.942" level="INFO">{'result': '5453', 'request': '', 'data': 'b774d66a', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:51:40.936" endtime="20190121 11:51:40.945" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:51:42.953" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:51:40.948" endtime="20190121 11:51:42.955" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:42.980" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:51:42.958" endtime="20190121 11:51:42.981" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:51:42.984" endtime="20190121 11:51:42.990" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:40.629" endtime="20190121 11:51:42.992" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:43.062" level="INFO">${res_dict} = {'result': '4953', 'data': '', 'status': True, 'request': '49'}</msg>
<status starttime="20190121 11:51:43.000" endtime="20190121 11:51:43.063" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:43.088" level="INFO">${value} = True</msg>
<status starttime="20190121 11:51:43.066" endtime="20190121 11:51:43.089" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:51:43.092" endtime="20190121 11:51:43.096" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:44.103" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:43.099" endtime="20190121 11:51:44.106" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:42.994" endtime="20190121 11:51:44.109" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:44.181" level="INFO">${res_dict} = {'result': '475653', 'data': '0100', 'status': True, 'request': '4756'}</msg>
<status starttime="20190121 11:51:44.117" endtime="20190121 11:51:44.182" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status starttime="20190121 11:51:44.185" endtime="20190121 11:51:44.191" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:45.198" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:44.194" endtime="20190121 11:51:45.201" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:44.111" endtime="20190121 11:51:45.203" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:40.623" endtime="20190121 11:51:45.205" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_MCUSTANDBY}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:51:45.295" level="INFO">${res_dict} = {'result': '520346', 'data': '', 'status': False, 'request': '5203'}</msg>
<status starttime="20190121 11:51:45.214" endtime="20190121 11:51:45.296" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:51:45.299" endtime="20190121 11:51:45.305" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:51:45.330" level="INFO">${value} = False</msg>
<status starttime="20190121 11:51:45.308" endtime="20190121 11:51:45.330" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:51:45.334" level="INFO">${value} = False</msg>
<status starttime="20190121 11:51:45.207" endtime="20190121 11:51:45.335" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Not Be True">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:51:45.338" endtime="20190121 11:51:45.342" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20190121 11:51:50.362" level="INFO">Slept 5 seconds</msg>
<status starttime="20190121 11:51:45.344" endtime="20190121 11:51:50.364" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:51:50.479" level="INFO">${KLEMME30} = [[12200, 79], [12175, 91]]</msg>
<status starttime="20190121 11:51:50.381" endtime="20190121 11:51:50.480" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:51:50.532" level="INFO">${CURR_VCARBAT} = 79</msg>
<status starttime="20190121 11:51:50.483" endtime="20190121 11:51:50.533" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:51:50.606" level="INFO">${CURR_KL30} = 91</msg>
<status starttime="20190121 11:51:50.536" endtime="20190121 11:51:50.607" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:51:50.615" level="INFO">${TIMENOW} = 1548071510</msg>
<status starttime="20190121 11:51:50.610" endtime="20190121 11:51:50.615" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:51:50.623" endtime="20190121 11:51:50.647" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:51:50.652" level="INFO">${TIMENOW} = 1548071510</msg>
<msg timestamp="20190121 11:51:50.653" level="INFO">${CURR_VCARBAT} = 79</msg>
<msg timestamp="20190121 11:51:50.654" level="INFO">${CURR_KL30} = 91</msg>
<status starttime="20190121 11:51:50.366" endtime="20190121 11:51:50.655" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Continue On Failure">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<msg timestamp="20190121 11:51:50.690" level="FAIL">'79 &lt; 5' should be true.</msg>
<status starttime="20190121 11:51:50.683" endtime="20190121 11:51:50.691" status="FAIL"></status>
</kw>
<msg timestamp="20190121 11:51:50.693" level="INFO">${fbus_resp} = None</msg>
<status starttime="20190121 11:51:50.665" endtime="20190121 11:51:50.706" status="FAIL"></status>
</kw>
<status starttime="20190121 11:51:37.257" endtime="20190121 11:51:50.710" status="FAIL"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:50.730" endtime="20190121 11:51:50.807" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:50.810" endtime="20190121 11:51:50.857" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:50.860" endtime="20190121 11:51:50.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:51:51.915" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:50.910" endtime="20190121 11:51:51.917" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:51:51.920" endtime="20190121 11:51:51.965" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:50.723" endtime="20190121 11:51:51.967" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-SKTB-56067 Power testroutine</doc>
<tags>
<tag>Power testroutine</tag>
</tags>
<status starttime="20190121 11:50:57.702" critical="yes" endtime="20190121 11:51:51.968" status="FAIL">Several failures occurred:

1) '78 &lt; 5' should be true.

2) '79 &lt; 5' should be true.</status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:51:53.507" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:51:53.590" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:51:52.009" endtime="20190121 11:51:53.591" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:51.985" endtime="20190121 11:51:53.599" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:51.980" endtime="20190121 11:51:53.602" status="PASS"></status>
</kw>
<doc>Power testroutine testcase</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:50:54.978" endtime="20190121 11:51:53.602" status="FAIL"></status>
</suite>
<suite id="s1-s18" name="SKTB-56094" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56094.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:51:54.562" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:51:54.556" endtime="20190121 11:51:54.588" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:51:54.610" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:51:54.613" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:51:56.834" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:51:54.591" endtime="20190121 11:51:56.835" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:54.543" endtime="20190121 11:51:56.866" status="PASS"></status>
</kw>
<test id="s1-s18-t1" name="SKTB-SKTB-56094">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:56.923" endtime="20190121 11:51:56.994" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:56.997" endtime="20190121 11:51:57.080" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:51:57.083" endtime="20190121 11:51:57.197" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:51:59.233" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:51:57.200" endtime="20190121 11:51:59.235" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:51:59.238" endtime="20190121 11:51:59.327" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:52:00.348" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:51:59.330" endtime="20190121 11:52:00.351" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:52:00.358" endtime="20190121 11:52:00.539" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:52:02.547" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:52:00.542" endtime="20190121 11:52:02.549" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:52:02.552" endtime="20190121 11:52:02.597" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:52:02.600" endtime="20190121 11:52:02.645" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:52:02.648" endtime="20190121 11:52:02.693" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:52:02.697" endtime="20190121 11:52:02.745" status="PASS"></status>
</kw>
<status starttime="20190121 11:51:56.907" endtime="20190121 11:52:02.748" status="PASS"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate if necessary</doc>
<kw name="Step_alive">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:02.834" level="INFO">${res_dict} = {'result': '4153', 'data': '', 'status': True, 'request': '41'}</msg>
<status starttime="20190121 11:52:02.762" endtime="20190121 11:52:02.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:52:02.895" level="INFO">${value} = True</msg>
<status starttime="20190121 11:52:02.846" endtime="20190121 11:52:02.895" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:52:02.903" endtime="20190121 11:52:02.914" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:52:03.921" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:02.917" endtime="20190121 11:52:03.923" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:02.756" endtime="20190121 11:52:03.926" status="PASS"></status>
</kw>
<kw name="Step_alive_retry">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:03.994" level="INFO">${res_dict} = {'result': '4153', 'data': '', 'status': True, 'request': '41'}</msg>
<status starttime="20190121 11:52:03.934" endtime="20190121 11:52:03.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:52:04.022" level="INFO">${value} = True</msg>
<status starttime="20190121 11:52:03.998" endtime="20190121 11:52:04.023" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:52:04.025" endtime="20190121 11:52:04.030" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:52:05.037" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:04.033" endtime="20190121 11:52:05.039" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:03.928" endtime="20190121 11:52:05.041" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:02.750" endtime="20190121 11:52:05.043" status="PASS"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the rtestroutine and init it</doc>
<kw name="Step_load">
<arguments>
<arg>${VEHICLE_TR_PATH}</arg>
</arguments>
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${TESTROUTINE_FILEPATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:52:05.071" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_*.bin</msg>
<msg timestamp="20190121 11:52:05.098" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:52:05.113" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:52:05.115" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:52:05.065" endtime="20190121 11:52:05.117" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:52:05.126" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status starttime="20190121 11:52:05.120" endtime="20190121 11:52:05.126" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:52:05.134" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:52:05.136" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin']</msg>
<status starttime="20190121 11:52:05.130" endtime="20190121 11:52:05.137" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:52:05.145" level="INFO">${path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status starttime="20190121 11:52:05.140" endtime="20190121 11:52:05.146" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:52:05.149" endtime="20190121 11:52:05.154" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190121 11:52:05.161" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:52:05.157" endtime="20190121 11:52:05.163" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:05.167" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status starttime="20190121 11:52:05.058" endtime="20190121 11:52:05.169" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:06.365" level="INFO">${res_dict} = {'result': '5453', 'request': '', 'data': '062273d4', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:52:05.172" endtime="20190121 11:52:06.366" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:52:06.415" level="INFO">{'result': '5453', 'request': '', 'data': '062273d4', 'flowctrl': '', 'status': True, 'response': 'TS'}</msg>
<status starttime="20190121 11:52:06.406" endtime="20190121 11:52:06.453" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:52:08.465" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:52:06.456" endtime="20190121 11:52:08.467" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:52:08.494" level="INFO">${value} = 5453</msg>
<status starttime="20190121 11:52:08.470" endtime="20190121 11:52:08.495" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:52:08.498" endtime="20190121 11:52:08.504" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:05.051" endtime="20190121 11:52:08.506" status="PASS"></status>
</kw>
<kw name="Step_init">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:08.574" level="INFO">${res_dict} = {'result': '4953', 'data': '', 'status': True, 'request': '49'}</msg>
<status starttime="20190121 11:52:08.514" endtime="20190121 11:52:08.575" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:52:08.602" level="INFO">${value} = True</msg>
<status starttime="20190121 11:52:08.578" endtime="20190121 11:52:08.603" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status starttime="20190121 11:52:08.605" endtime="20190121 11:52:08.610" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:52:09.626" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:08.612" endtime="20190121 11:52:09.628" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:08.508" endtime="20190121 11:52:09.654" status="PASS"></status>
</kw>
<kw name="Step_getversion">
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:09.980" level="INFO">${res_dict} = {'result': '475653', 'data': '0101', 'status': True, 'request': '4756'}</msg>
<status starttime="20190121 11:52:09.703" endtime="20190121 11:52:09.981" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status starttime="20190121 11:52:09.984" endtime="20190121 11:52:10.026" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:52:11.035" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:10.029" endtime="20190121 11:52:11.037" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:09.661" endtime="20190121 11:52:11.039" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:05.046" endtime="20190121 11:52:11.042" status="PASS"></status>
</kw>
<kw name="CAN_SENDDATA_CAN1_TEST">
<doc>Test can send and receive data can 1</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 1</arg>
</arguments>
<status starttime="20190121 11:52:11.050" endtime="20190121 11:52:11.054" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:52:11.066" endtime="20190121 11:52:11.073" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:52:11.084" level="INFO">Starting process:
sudo ip link set can0 down</msg>
<msg timestamp="20190121 11:52:11.111" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:52:11.175" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:52:11.178" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:52:11.078" endtime="20190121 11:52:11.179" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:52:11.183" endtime="20190121 11:52:11.192" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:52:11.202" level="INFO">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg timestamp="20190121 11:52:11.229" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:52:11.278" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:52:11.281" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:52:11.195" endtime="20190121 11:52:11.282" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:52:11.285" endtime="20190121 11:52:11.294" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:52:11.303" level="INFO">Starting process:
sudo ip link set can0 up</msg>
<msg timestamp="20190121 11:52:11.330" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:52:11.446" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:52:11.457" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:52:11.297" endtime="20190121 11:52:11.458" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:52:11.477" endtime="20190121 11:52:11.498" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:52:11.057" endtime="20190121 11:52:11.500" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:52:11.519" level="INFO">Starting process:
candump -t a can0,767:7FF,768:7FF</msg>
<msg timestamp="20190121 11:52:11.548" level="INFO">${candump_ID} = 206</msg>
<status starttime="20190121 11:52:11.503" endtime="20190121 11:52:11.552" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_0}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg timestamp="20190121 11:52:11.570" level="INFO">Starting process:
cangen can0 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg timestamp="20190121 11:52:11.600" level="INFO">${cangen_ID} = 207</msg>
<status starttime="20190121 11:52:11.556" endtime="20190121 11:52:11.604" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN1}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:11.723" level="INFO">${res_dict} = {'result': '1efd54', 'data': '', 'status': False, 'request': '53420008aabbccdd11223344'}</msg>
<status starttime="20190121 11:52:11.622" endtime="20190121 11:52:11.728" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:52:11.735" endtime="20190121 11:52:11.749" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:52:11.779" level="INFO">${value} = False</msg>
<status starttime="20190121 11:52:11.752" endtime="20190121 11:52:11.779" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status starttime="20190121 11:52:11.782" endtime="20190121 11:52:11.788" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:11.851" level="INFO">${res_dict} = {'result': '520153', 'data': '', 'status': True, 'request': '5201'}</msg>
<status starttime="20190121 11:52:11.790" endtime="20190121 11:52:11.852" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:52:11.855" endtime="20190121 11:52:11.860" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:52:11.888" level="INFO">${value} = True</msg>
<status starttime="20190121 11:52:11.863" endtime="20190121 11:52:11.889" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status starttime="20190121 11:52:11.891" endtime="20190121 11:52:11.897" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:12.008" level="INFO">${res_dict} = {'result': '474253', 'data': 'aabbccdd11223344', 'status': True, 'request': '4742'}</msg>
<status starttime="20190121 11:52:11.900" endtime="20190121 11:52:12.013" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:52:12.016" endtime="20190121 11:52:12.030" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190121 11:52:12.058" level="INFO">${status} = True</msg>
<status starttime="20190121 11:52:12.033" endtime="20190121 11:52:12.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status starttime="20190121 11:52:12.062" endtime="20190121 11:52:12.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:52:12.094" level="INFO">${data} = aabbccdd11223344</msg>
<status starttime="20190121 11:52:12.070" endtime="20190121 11:52:12.095" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:12.099" level="INFO">${status} = True</msg>
<msg timestamp="20190121 11:52:12.100" level="INFO">${data} = aabbccdd11223344</msg>
<status starttime="20190121 11:52:11.607" endtime="20190121 11:52:12.101" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status starttime="20190121 11:52:12.104" endtime="20190121 11:52:12.108" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:52:12.111" endtime="20190121 11:52:12.118" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:52:12.132" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:52:12.636" level="INFO">Process did not complete in 500 milliseconds.</msg>
<msg timestamp="20190121 11:52:12.637" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:52:12.641" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:52:12.644" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:52:12.128" endtime="20190121 11:52:12.645" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:52:12.653" level="INFO">4 lines returned</msg>
<msg timestamp="20190121 11:52:12.656" level="INFO">${temp} = [' (1548071531.612108)  can0  768   [8]  AA BB CC DD 11 22 33 44', ' (1548071531.821049)  can0  767   [8]  AA BB CC DD 11 22 33 44', ' (1548071532.112305)  can0  768   [8]  AA BB CC DD 11 22 33 44', '...</msg>
<status starttime="20190121 11:52:12.648" endtime="20190121 11:52:12.657" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg timestamp="20190121 11:52:12.664" level="INFO">${FILTER} = ['withoutfilter']</msg>
<status starttime="20190121 11:52:12.660" endtime="20190121 11:52:12.665" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Set Canid Status And Filter">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status starttime="20190121 11:52:12.667" endtime="20190121 11:52:12.672" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:52:12.679" level="INFO">(1548071531.612108)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1548071531.821049)  can0  767   [8]  AA BB CC DD 11 22 33 44
 (1548071532.112305)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1548071532.612446)  can0  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg timestamp="20190121 11:52:12.682" level="INFO">${ret_list} = [{'channel': 'can0', 'timestamp': '1548071531.612108', 'payload': 'AABBCCDD11223344', 'id': '768'}, {'channel': 'can0', 'timestamp': '1548071531.821049', 'payload': 'AABBCCDD11223344', 'id': '767'}, {...</msg>
<status starttime="20190121 11:52:12.675" endtime="20190121 11:52:12.682" status="PASS"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:52:12.699" level="INFO">${RESULT} = False</msg>
<status starttime="20190121 11:52:12.694" endtime="20190121 11:52:12.699" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:52:12.706" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:52:12.708" level="INFO">${count} = 4</msg>
<status starttime="20190121 11:52:12.702" endtime="20190121 11:52:12.709" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:52:12.712" endtime="20190121 11:52:12.717" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:52:12.725" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:52:12.720" endtime="20190121 11:52:12.726" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'channel': 'can0', 'timestamp': '1548071531.612108', 'payload': 'AABBCCDD11223344', 'id': '768'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:52:12.738" level="INFO">${payload} = AABBCCDD11223344</msg>
<status starttime="20190121 11:52:12.733" endtime="20190121 11:52:12.739" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190121 11:52:12.747" level="INFO">${can_id} = 768</msg>
<status starttime="20190121 11:52:12.741" endtime="20190121 11:52:12.747" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190121 11:52:12.758" level="INFO">${count_msg} = 1</msg>
<status starttime="20190121 11:52:12.750" endtime="20190121 11:52:12.759" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190121 11:52:12.769" level="INFO">${count_id} = 0</msg>
<status starttime="20190121 11:52:12.762" endtime="20190121 11:52:12.770" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:52:12.779" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:52:12.773" endtime="20190121 11:52:12.780" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:52:12.790" level="INFO">${RESULT} = False</msg>
<status starttime="20190121 11:52:12.783" endtime="20190121 11:52:12.791" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status starttime="20190121 11:52:12.793" endtime="20190121 11:52:12.800" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:12.730" endtime="20190121 11:52:12.801" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'channel': 'can0', 'timestamp': '1548071531.821049', 'payload': 'AABBCCDD11223344', 'id': '767'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:52:12.810" level="INFO">${payload} = AABBCCDD11223344</msg>
<status starttime="20190121 11:52:12.805" endtime="20190121 11:52:12.811" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190121 11:52:12.818" level="INFO">${can_id} = 767</msg>
<status starttime="20190121 11:52:12.814" endtime="20190121 11:52:12.819" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190121 11:52:12.829" level="INFO">${count_msg} = 1</msg>
<status starttime="20190121 11:52:12.822" endtime="20190121 11:52:12.830" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190121 11:52:12.841" level="INFO">${count_id} = 1</msg>
<status starttime="20190121 11:52:12.834" endtime="20190121 11:52:12.842" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:52:12.855" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:52:12.845" endtime="20190121 11:52:12.856" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:52:12.866" level="INFO">${RESULT} = True</msg>
<status starttime="20190121 11:52:12.858" endtime="20190121 11:52:12.866" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg timestamp="20190121 11:52:12.875" level="INFO">Exiting for loop altogether.</msg>
<status starttime="20190121 11:52:12.869" endtime="20190121 11:52:12.877" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:12.802" endtime="20190121 11:52:12.878" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:12.727" endtime="20190121 11:52:12.879" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:12.882" level="INFO">${res} = True</msg>
<status starttime="20190121 11:52:12.684" endtime="20190121 11:52:12.883" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status starttime="20190121 11:52:12.886" endtime="20190121 11:52:12.892" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:12.896" level="INFO">${res} = True</msg>
<status starttime="20190121 11:52:12.120" endtime="20190121 11:52:12.897" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:52:12.899" endtime="20190121 11:52:12.903" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:11.044" endtime="20190121 11:52:12.906" status="PASS"></status>
</kw>
<kw name="CAN_SENDDATA_CAN3_TEST">
<doc>Test can send and receive data can 2</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 2</arg>
</arguments>
<status starttime="20190121 11:52:12.914" endtime="20190121 11:52:12.920" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20190121 11:52:14.927" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:52:12.923" endtime="20190121 11:52:14.929" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="set_can_channel">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status starttime="20190121 11:52:14.941" endtime="20190121 11:52:14.948" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:52:14.957" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190121 11:52:14.984" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:52:15.051" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:52:15.055" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:52:14.951" endtime="20190121 11:52:15.056" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:52:15.060" endtime="20190121 11:52:15.068" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:52:15.079" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190121 11:52:15.105" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:52:15.155" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:52:15.158" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:52:15.071" endtime="20190121 11:52:15.159" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:52:15.162" endtime="20190121 11:52:15.171" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190121 11:52:15.180" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190121 11:52:15.207" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:52:15.295" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:52:15.298" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:52:15.174" endtime="20190121 11:52:15.299" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status starttime="20190121 11:52:15.307" endtime="20190121 11:52:15.325" status="PASS"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status starttime="20190121 11:52:14.931" endtime="20190121 11:52:15.328" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_2},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190121 11:52:15.339" level="INFO">Starting process:
candump -t a can2,767:7FF,768:7FF</msg>
<msg timestamp="20190121 11:52:15.368" level="INFO">${candump_ID} = 211</msg>
<status starttime="20190121 11:52:15.331" endtime="20190121 11:52:15.372" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_2}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg timestamp="20190121 11:52:15.390" level="INFO">Starting process:
cangen can2 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg timestamp="20190121 11:52:15.419" level="INFO">${cangen_ID} = 212</msg>
<status starttime="20190121 11:52:15.376" endtime="20190121 11:52:15.420" status="PASS"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN3}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:15.504" level="INFO">${res_dict} = {'result': '534253', 'data': '', 'status': True, 'request': '53420008aabbccdd11223344'}</msg>
<status starttime="20190121 11:52:15.441" endtime="20190121 11:52:15.505" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:52:15.508" endtime="20190121 11:52:15.514" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:52:15.541" level="INFO">${value} = True</msg>
<status starttime="20190121 11:52:15.517" endtime="20190121 11:52:15.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status starttime="20190121 11:52:15.544" endtime="20190121 11:52:15.550" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:15.652" level="INFO">${res_dict} = {'result': '520353', 'data': '', 'status': True, 'request': '5203'}</msg>
<status starttime="20190121 11:52:15.553" endtime="20190121 11:52:15.654" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:52:15.657" endtime="20190121 11:52:15.662" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190121 11:52:15.693" level="INFO">${value} = True</msg>
<status starttime="20190121 11:52:15.665" endtime="20190121 11:52:15.694" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status starttime="20190121 11:52:15.697" endtime="20190121 11:52:15.702" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Call Trstate">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190121 11:52:15.771" level="INFO">${res_dict} = {'result': '474253', 'data': 'aabbccdd11223344', 'status': True, 'request': '4742'}</msg>
<status starttime="20190121 11:52:15.706" endtime="20190121 11:52:15.772" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status starttime="20190121 11:52:15.777" endtime="20190121 11:52:15.782" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190121 11:52:15.813" level="INFO">${status} = True</msg>
<status starttime="20190121 11:52:15.785" endtime="20190121 11:52:15.813" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status starttime="20190121 11:52:15.816" endtime="20190121 11:52:15.822" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190121 11:52:15.849" level="INFO">${data} = aabbccdd11223344</msg>
<status starttime="20190121 11:52:15.825" endtime="20190121 11:52:15.859" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:15.867" level="INFO">${status} = True</msg>
<msg timestamp="20190121 11:52:15.868" level="INFO">${data} = aabbccdd11223344</msg>
<status starttime="20190121 11:52:15.430" endtime="20190121 11:52:15.877" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status starttime="20190121 11:52:15.880" endtime="20190121 11:52:15.890" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be Equal As Strings">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status starttime="20190121 11:52:15.903" endtime="20190121 11:52:15.915" status="PASS"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="Process" name="Wait For Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190121 11:52:15.942" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:52:16.451" level="INFO">Process did not complete in 500 milliseconds.</msg>
<msg timestamp="20190121 11:52:16.453" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190121 11:52:16.471" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:52:16.473" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status starttime="20190121 11:52:15.938" endtime="20190121 11:52:16.474" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:52:16.489" level="INFO">4 lines returned</msg>
<msg timestamp="20190121 11:52:16.491" level="INFO">${temp} = [' (1548071535.427134)  can2  768   [8]  AA BB CC DD 11 22 33 44', ' (1548071535.604821)  can2  767   [8]  AA BB CC DD 11 22 33 44', ' (1548071535.933054)  can2  768   [8]  AA BB CC DD 11 22 33 44', '...</msg>
<status starttime="20190121 11:52:16.477" endtime="20190121 11:52:16.492" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Create List">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg timestamp="20190121 11:52:16.499" level="INFO">${FILTER} = ['withoutfilter']</msg>
<status starttime="20190121 11:52:16.495" endtime="20190121 11:52:16.500" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Set Canid Status And Filter">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status starttime="20190121 11:52:16.503" endtime="20190121 11:52:16.507" status="PASS"></status>
</kw>
<kw library="lairdcvs.cariflibrary.CarIfLibrary" name="Convert Candump Liste">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190121 11:52:16.515" level="INFO">(1548071535.427134)  can2  768   [8]  AA BB CC DD 11 22 33 44
 (1548071535.604821)  can2  767   [8]  AA BB CC DD 11 22 33 44
 (1548071535.933054)  can2  768   [8]  AA BB CC DD 11 22 33 44
 (1548071536.433219)  can2  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg timestamp="20190121 11:52:16.517" level="INFO">${ret_list} = [{'channel': 'can2', 'timestamp': '1548071535.427134', 'payload': 'AABBCCDD11223344', 'id': '768'}, {'channel': 'can2', 'timestamp': '1548071535.604821', 'payload': 'AABBCCDD11223344', 'id': '767'}, {...</msg>
<status starttime="20190121 11:52:16.510" endtime="20190121 11:52:16.519" status="PASS"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:52:16.535" level="INFO">${RESULT} = False</msg>
<status starttime="20190121 11:52:16.530" endtime="20190121 11:52:16.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190121 11:52:16.543" level="INFO">Length is 4</msg>
<msg timestamp="20190121 11:52:16.545" level="INFO">${count} = 4</msg>
<status starttime="20190121 11:52:16.539" endtime="20190121 11:52:16.546" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status starttime="20190121 11:52:16.548" endtime="20190121 11:52:16.553" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:52:16.569" level="INFO">${msgcount} = 0</msg>
<status starttime="20190121 11:52:16.556" endtime="20190121 11:52:16.572" status="PASS"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'channel': 'can2', 'timestamp': '1548071535.427134', 'payload': 'AABBCCDD11223344', 'id': '768'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:52:16.584" level="INFO">${payload} = AABBCCDD11223344</msg>
<status starttime="20190121 11:52:16.579" endtime="20190121 11:52:16.585" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190121 11:52:16.593" level="INFO">${can_id} = 768</msg>
<status starttime="20190121 11:52:16.588" endtime="20190121 11:52:16.594" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190121 11:52:16.604" level="INFO">${count_msg} = 1</msg>
<status starttime="20190121 11:52:16.597" endtime="20190121 11:52:16.605" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190121 11:52:16.615" level="INFO">${count_id} = 0</msg>
<status starttime="20190121 11:52:16.608" endtime="20190121 11:52:16.616" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:52:16.625" level="INFO">${msgcount} = 1</msg>
<status starttime="20190121 11:52:16.619" endtime="20190121 11:52:16.626" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:52:16.636" level="INFO">${RESULT} = False</msg>
<status starttime="20190121 11:52:16.629" endtime="20190121 11:52:16.637" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status starttime="20190121 11:52:16.639" endtime="20190121 11:52:16.646" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:16.576" endtime="20190121 11:52:16.647" status="PASS"></status>
</kw>
<kw name="${item_dict} = {'channel': 'can2', 'timestamp': '1548071535.604821', 'payload': 'AABBCCDD11223344', 'id': '767'}" type="foritem">
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190121 11:52:16.656" level="INFO">${payload} = AABBCCDD11223344</msg>
<status starttime="20190121 11:52:16.651" endtime="20190121 11:52:16.657" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From Dictionary">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190121 11:52:16.665" level="INFO">${can_id} = 767</msg>
<status starttime="20190121 11:52:16.660" endtime="20190121 11:52:16.666" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190121 11:52:16.677" level="INFO">${count_msg} = 1</msg>
<status starttime="20190121 11:52:16.670" endtime="20190121 11:52:16.678" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190121 11:52:16.688" level="INFO">${count_id} = 1</msg>
<status starttime="20190121 11:52:16.681" endtime="20190121 11:52:16.689" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190121 11:52:16.698" level="INFO">${msgcount} = 2</msg>
<status starttime="20190121 11:52:16.692" endtime="20190121 11:52:16.698" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:52:16.708" level="INFO">${RESULT} = True</msg>
<status starttime="20190121 11:52:16.701" endtime="20190121 11:52:16.709" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg timestamp="20190121 11:52:16.721" level="INFO">Exiting for loop altogether.</msg>
<status starttime="20190121 11:52:16.712" endtime="20190121 11:52:16.723" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:16.649" endtime="20190121 11:52:16.724" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:16.573" endtime="20190121 11:52:16.725" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:16.730" level="INFO">${res} = True</msg>
<status starttime="20190121 11:52:16.521" endtime="20190121 11:52:16.730" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status starttime="20190121 11:52:16.733" endtime="20190121 11:52:16.739" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:16.743" level="INFO">${res} = True</msg>
<status starttime="20190121 11:52:15.923" endtime="20190121 11:52:16.744" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status starttime="20190121 11:52:16.746" endtime="20190121 11:52:16.750" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:12.908" endtime="20190121 11:52:16.753" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:52:16.763" endtime="20190121 11:52:16.810" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:52:16.821" endtime="20190121 11:52:16.869" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:52:16.872" endtime="20190121 11:52:16.919" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:52:17.927" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:16.923" endtime="20190121 11:52:17.929" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:52:17.932" endtime="20190121 11:52:17.977" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg timestamp="20190121 11:52:17.985" level="INFO">Starting process:
pkill candump</msg>
<msg timestamp="20190121 11:52:18.019" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:52:18.052" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:52:18.055" level="INFO">${rm_res} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:52:17.980" endtime="20190121 11:52:18.056" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:16.756" endtime="20190121 11:52:18.058" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-56094 Vehicle buses testroutine</doc>
<tags>
<tag>Vehicle buses testroutine</tag>
</tags>
<status starttime="20190121 11:51:56.868" critical="yes" endtime="20190121 11:52:18.060" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:52:19.612" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:52:19.667" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:52:18.105" endtime="20190121 11:52:19.669" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:18.078" endtime="20190121 11:52:19.684" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:18.072" endtime="20190121 11:52:19.690" status="PASS"></status>
</kw>
<doc>Vehicle buses testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:51:53.870" endtime="20190121 11:52:19.691" status="PASS"></status>
</suite>
<suite id="s1-s19" name="SKTB-55194" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-55194.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:52:20.628" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:52:20.615" endtime="20190121 11:52:20.649" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:52:20.681" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:52:20.683" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:52:22.954" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:52:20.652" endtime="20190121 11:52:22.955" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:20.609" endtime="20190121 11:52:22.958" status="PASS"></status>
</kw>
<test id="s1-s19-t1" name="SKTB-55194">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off</doc>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:52:23.015" endtime="20190121 11:52:23.166" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:52:23.169" endtime="20190121 11:52:23.285" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:52:23.288" endtime="20190121 11:52:23.451" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Bidir Wake Up">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:52:23.457" endtime="20190121 11:52:24.062" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:52:26.089" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:52:24.065" endtime="20190121 11:52:26.091" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:52:26.094" endtime="20190121 11:52:26.166" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status starttime="20190121 11:52:26.170" endtime="20190121 11:52:26.237" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status starttime="20190121 11:52:26.240" endtime="20190121 11:52:26.287" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:52:26.290" endtime="20190121 11:52:26.336" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Fbus Set State">
<arguments>
<arg>timeout</arg>
<arg>${1000}</arg>
</arguments>
<status starttime="20190121 11:52:26.340" endtime="20190121 11:52:26.421" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190121 11:52:27.434" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:26.424" endtime="20190121 11:52:27.436" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:22.985" endtime="20190121 11:52:27.439" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Implements Test Task SKTB-55194 Powermanagement</arg>
</arguments>
<status starttime="20190121 11:52:27.443" endtime="20190121 11:52:27.447" status="PASS"></status>
</kw>
<kw name="STEP_1">
<doc>Start device without KL15 and wait til device goes to standby, then wakeup with kl15 on</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start device without KL15 and wait til device goes to standby, then wakeup with kl15 on</arg>
</arguments>
<status starttime="20190121 11:52:27.455" endtime="20190121 11:52:27.460" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:52:27.463" endtime="20190121 11:52:27.509" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:52:27.512" endtime="20190121 11:52:27.559" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:52:29.578" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:52:27.562" endtime="20190121 11:52:29.580" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:52:29.585" endtime="20190121 11:52:29.664" status="PASS"></status>
</kw>
<kw name="WAIT_FOR_POWER_STATE">
<doc>Wait for powerstate within a given time</doc>
<arguments>
<arg>10</arg>
<arg>${POWER_APP_POWER_STATE_CARIF_ONLY}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TIMEOUT}</arg>
</arguments>
<assign>
<var>${LOOPS}</var>
</assign>
<msg timestamp="20190121 11:52:29.681" level="INFO">${LOOPS} = 10</msg>
<status starttime="20190121 11:52:29.675" endtime="20190121 11:52:29.682" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:29.690" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:29.685" endtime="20190121 11:52:29.691" status="PASS"></status>
</kw>
<kw name="${i} IN RANGE [ ${LOOPS} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:30.019" level="INFO">${KLEMME30} = [[12225, 47], [12200, 51]]</msg>
<status starttime="20190121 11:52:29.705" endtime="20190121 11:52:30.020" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:30.062" level="INFO">${CURR_VCARBAT} = 47</msg>
<status starttime="20190121 11:52:30.024" endtime="20190121 11:52:30.063" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:30.100" level="INFO">${CURR_KL30} = 51</msg>
<status starttime="20190121 11:52:30.066" endtime="20190121 11:52:30.101" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:30.108" level="INFO">${TIMENOW} = 1548071550</msg>
<status starttime="20190121 11:52:30.104" endtime="20190121 11:52:30.109" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:30.114" level="INFO">${TIMENOW} = 1548071550</msg>
<msg timestamp="20190121 11:52:30.115" level="INFO">${CURR_VCARBAT} = 47</msg>
<msg timestamp="20190121 11:52:30.117" level="INFO">${CURR_KL30} = 51</msg>
<status starttime="20190121 11:52:29.697" endtime="20190121 11:52:30.117" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:30.126" endtime="20190121 11:52:30.363" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:30.369" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:52:30.121" endtime="20190121 11:52:30.370" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:30.377" endtime="20190121 11:52:30.388" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:30.396" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:30.398" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:30.391" endtime="20190121 11:52:30.398" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:30.423" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:52:30.418" endtime="20190121 11:52:30.423" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:30.432" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:30.426" endtime="20190121 11:52:30.433" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:30.409" endtime="20190121 11:52:30.436" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:30.438" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:30.402" endtime="20190121 11:52:30.438" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:30.449" level="INFO">${STATUS} = True</msg>
<status starttime="20190121 11:52:30.441" endtime="20190121 11:52:30.449" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<msg timestamp="20190121 11:52:30.461" level="INFO">Exiting for loop altogether.</msg>
<status starttime="20190121 11:52:30.453" endtime="20190121 11:52:30.463" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:29.695" endtime="20190121 11:52:30.464" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:29.692" endtime="20190121 11:52:30.466" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:52:30.469" endtime="20190121 11:52:30.477" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:30.479" endtime="20190121 11:52:30.485" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:30.489" level="INFO">${STATUS} = True</msg>
<status starttime="20190121 11:52:29.667" endtime="20190121 11:52:30.490" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<status starttime="20190121 11:52:30.493" endtime="20190121 11:52:30.497" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait until power state power down is reached</arg>
</arguments>
<status starttime="20190121 11:52:30.500" endtime="20190121 11:52:30.505" status="PASS"></status>
</kw>
<kw name="WAIT_FOR_POWER_STATE">
<doc>Wait for powerstate within a given time</doc>
<arguments>
<arg>70</arg>
<arg>${POWER_APP_POWER_STATE_POWER_DOWN}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw library="BuiltIn" name="Convert To Integer">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TIMEOUT}</arg>
</arguments>
<assign>
<var>${LOOPS}</var>
</assign>
<msg timestamp="20190121 11:52:30.521" level="INFO">${LOOPS} = 70</msg>
<status starttime="20190121 11:52:30.515" endtime="20190121 11:52:30.522" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:30.529" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:30.525" endtime="20190121 11:52:30.530" status="PASS"></status>
</kw>
<kw name="${i} IN RANGE [ ${LOOPS} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:30.639" level="INFO">${KLEMME30} = [[12225, 52], [12200, 55]]</msg>
<status starttime="20190121 11:52:30.546" endtime="20190121 11:52:30.640" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:30.731" level="INFO">${CURR_VCARBAT} = 52</msg>
<status starttime="20190121 11:52:30.655" endtime="20190121 11:52:30.732" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:30.768" level="INFO">${CURR_KL30} = 55</msg>
<status starttime="20190121 11:52:30.735" endtime="20190121 11:52:30.769" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:30.777" level="INFO">${TIMENOW} = 1548071550</msg>
<status starttime="20190121 11:52:30.772" endtime="20190121 11:52:30.777" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:30.783" level="INFO">${TIMENOW} = 1548071550</msg>
<msg timestamp="20190121 11:52:30.784" level="INFO">${CURR_VCARBAT} = 52</msg>
<msg timestamp="20190121 11:52:30.785" level="INFO">${CURR_KL30} = 55</msg>
<status starttime="20190121 11:52:30.539" endtime="20190121 11:52:30.786" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:30.795" endtime="20190121 11:52:31.025" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:31.027" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:52:30.789" endtime="20190121 11:52:31.028" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:31.031" endtime="20190121 11:52:31.036" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:31.044" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:31.049" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:31.039" endtime="20190121 11:52:31.050" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:31.076" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:52:31.071" endtime="20190121 11:52:31.077" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:31.085" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:31.079" endtime="20190121 11:52:31.086" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:31.062" endtime="20190121 11:52:31.089" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:31.091" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:31.055" endtime="20190121 11:52:31.092" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:31.112" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:31.095" endtime="20190121 11:52:31.119" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:31.122" endtime="20190121 11:52:31.139" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:32.160" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:31.149" endtime="20190121 11:52:32.163" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:30.537" endtime="20190121 11:52:32.163" status="PASS"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:32.223" level="INFO">${KLEMME30} = [[12200, 80], [12200, 84]]</msg>
<status starttime="20190121 11:52:32.173" endtime="20190121 11:52:32.224" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:32.260" level="INFO">${CURR_VCARBAT} = 80</msg>
<status starttime="20190121 11:52:32.228" endtime="20190121 11:52:32.261" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:32.306" level="INFO">${CURR_KL30} = 84</msg>
<status starttime="20190121 11:52:32.264" endtime="20190121 11:52:32.307" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:32.315" level="INFO">${TIMENOW} = 1548071552</msg>
<status starttime="20190121 11:52:32.310" endtime="20190121 11:52:32.316" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:32.321" level="INFO">${TIMENOW} = 1548071552</msg>
<msg timestamp="20190121 11:52:32.322" level="INFO">${CURR_VCARBAT} = 80</msg>
<msg timestamp="20190121 11:52:32.323" level="INFO">${CURR_KL30} = 84</msg>
<status starttime="20190121 11:52:32.167" endtime="20190121 11:52:32.323" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:32.332" endtime="20190121 11:52:32.570" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:32.576" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:52:32.327" endtime="20190121 11:52:32.577" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:32.587" endtime="20190121 11:52:32.597" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:32.605" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:32.607" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:32.601" endtime="20190121 11:52:32.608" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:32.632" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:52:32.627" endtime="20190121 11:52:32.633" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:32.644" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:32.635" endtime="20190121 11:52:32.645" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:32.618" endtime="20190121 11:52:32.649" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:32.650" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:32.611" endtime="20190121 11:52:32.651" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:32.661" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:32.654" endtime="20190121 11:52:32.662" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:32.665" endtime="20190121 11:52:32.671" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:33.678" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:32.674" endtime="20190121 11:52:33.681" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:32.165" endtime="20190121 11:52:33.682" status="PASS"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:33.742" level="INFO">${KLEMME30} = [[12200, 82], [12200, 85]]</msg>
<status starttime="20190121 11:52:33.692" endtime="20190121 11:52:33.743" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:33.779" level="INFO">${CURR_VCARBAT} = 82</msg>
<status starttime="20190121 11:52:33.746" endtime="20190121 11:52:33.780" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:33.817" level="INFO">${CURR_KL30} = 85</msg>
<status starttime="20190121 11:52:33.783" endtime="20190121 11:52:33.818" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:33.826" level="INFO">${TIMENOW} = 1548071553</msg>
<status starttime="20190121 11:52:33.821" endtime="20190121 11:52:33.827" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:33.832" level="INFO">${TIMENOW} = 1548071553</msg>
<msg timestamp="20190121 11:52:33.833" level="INFO">${CURR_VCARBAT} = 82</msg>
<msg timestamp="20190121 11:52:33.834" level="INFO">${CURR_KL30} = 85</msg>
<status starttime="20190121 11:52:33.685" endtime="20190121 11:52:33.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:33.843" endtime="20190121 11:52:34.103" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:34.106" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:52:33.838" endtime="20190121 11:52:34.107" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:34.120" endtime="20190121 11:52:34.137" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:34.144" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:34.146" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:34.139" endtime="20190121 11:52:34.147" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:34.170" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:52:34.165" endtime="20190121 11:52:34.171" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:34.179" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:34.174" endtime="20190121 11:52:34.180" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:34.157" endtime="20190121 11:52:34.183" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:34.185" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:34.150" endtime="20190121 11:52:34.186" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:34.197" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:34.189" endtime="20190121 11:52:34.198" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:34.201" endtime="20190121 11:52:34.208" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:35.236" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:34.218" endtime="20190121 11:52:35.238" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:33.683" endtime="20190121 11:52:35.239" status="PASS"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:35.298" level="INFO">${KLEMME30} = [[12200, 117], [12175, 124]]</msg>
<status starttime="20190121 11:52:35.249" endtime="20190121 11:52:35.299" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:35.334" level="INFO">${CURR_VCARBAT} = 117</msg>
<status starttime="20190121 11:52:35.302" endtime="20190121 11:52:35.335" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:35.371" level="INFO">${CURR_KL30} = 124</msg>
<status starttime="20190121 11:52:35.338" endtime="20190121 11:52:35.372" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:35.379" level="INFO">${TIMENOW} = 1548071555</msg>
<status starttime="20190121 11:52:35.375" endtime="20190121 11:52:35.380" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:35.385" level="INFO">${TIMENOW} = 1548071555</msg>
<msg timestamp="20190121 11:52:35.386" level="INFO">${CURR_VCARBAT} = 117</msg>
<msg timestamp="20190121 11:52:35.388" level="INFO">${CURR_KL30} = 124</msg>
<status starttime="20190121 11:52:35.242" endtime="20190121 11:52:35.389" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:35.397" endtime="20190121 11:52:35.628" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:35.634" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:52:35.392" endtime="20190121 11:52:35.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:35.643" endtime="20190121 11:52:35.655" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:35.663" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:35.665" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:35.658" endtime="20190121 11:52:35.666" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:35.693" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:52:35.687" endtime="20190121 11:52:35.694" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:35.702" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:35.697" endtime="20190121 11:52:35.703" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:35.676" endtime="20190121 11:52:35.706" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:35.708" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:35.669" endtime="20190121 11:52:35.709" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:35.719" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:35.711" endtime="20190121 11:52:35.719" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:35.722" endtime="20190121 11:52:35.729" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:36.735" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:35.731" endtime="20190121 11:52:36.737" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:35.240" endtime="20190121 11:52:36.738" status="PASS"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:36.798" level="INFO">${KLEMME30} = [[12225, 73], [12200, 79]]</msg>
<status starttime="20190121 11:52:36.748" endtime="20190121 11:52:36.798" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:36.834" level="INFO">${CURR_VCARBAT} = 73</msg>
<status starttime="20190121 11:52:36.802" endtime="20190121 11:52:36.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:36.870" level="INFO">${CURR_KL30} = 79</msg>
<status starttime="20190121 11:52:36.838" endtime="20190121 11:52:36.871" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:36.878" level="INFO">${TIMENOW} = 1548071556</msg>
<status starttime="20190121 11:52:36.874" endtime="20190121 11:52:36.879" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:36.884" level="INFO">${TIMENOW} = 1548071556</msg>
<msg timestamp="20190121 11:52:36.885" level="INFO">${CURR_VCARBAT} = 73</msg>
<msg timestamp="20190121 11:52:36.886" level="INFO">${CURR_KL30} = 79</msg>
<status starttime="20190121 11:52:36.742" endtime="20190121 11:52:36.887" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:36.896" endtime="20190121 11:52:37.129" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:37.131" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:52:36.890" endtime="20190121 11:52:37.132" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:37.142" endtime="20190121 11:52:37.157" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:37.164" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:37.166" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:37.160" endtime="20190121 11:52:37.167" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:37.190" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:52:37.185" endtime="20190121 11:52:37.191" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:37.199" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:37.194" endtime="20190121 11:52:37.200" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:37.177" endtime="20190121 11:52:37.204" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:37.205" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:37.170" endtime="20190121 11:52:37.206" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:37.224" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:37.216" endtime="20190121 11:52:37.225" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:37.227" endtime="20190121 11:52:37.234" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:38.241" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:37.237" endtime="20190121 11:52:38.243" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:36.739" endtime="20190121 11:52:38.243" status="PASS"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:38.302" level="INFO">${KLEMME30} = [[12225, 79], [12200, 84]]</msg>
<status starttime="20190121 11:52:38.254" endtime="20190121 11:52:38.304" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:38.339" level="INFO">${CURR_VCARBAT} = 79</msg>
<status starttime="20190121 11:52:38.307" endtime="20190121 11:52:38.340" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:38.376" level="INFO">${CURR_KL30} = 84</msg>
<status starttime="20190121 11:52:38.343" endtime="20190121 11:52:38.377" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:38.384" level="INFO">${TIMENOW} = 1548071558</msg>
<status starttime="20190121 11:52:38.379" endtime="20190121 11:52:38.385" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:38.390" level="INFO">${TIMENOW} = 1548071558</msg>
<msg timestamp="20190121 11:52:38.391" level="INFO">${CURR_VCARBAT} = 79</msg>
<msg timestamp="20190121 11:52:38.392" level="INFO">${CURR_KL30} = 84</msg>
<status starttime="20190121 11:52:38.247" endtime="20190121 11:52:38.393" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:38.401" endtime="20190121 11:52:38.635" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:38.642" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:52:38.396" endtime="20190121 11:52:38.643" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:38.646" endtime="20190121 11:52:38.662" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:38.672" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:38.674" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:38.667" endtime="20190121 11:52:38.675" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:38.702" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:52:38.696" endtime="20190121 11:52:38.703" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:38.711" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:38.706" endtime="20190121 11:52:38.713" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:38.684" endtime="20190121 11:52:38.716" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:38.717" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:38.678" endtime="20190121 11:52:38.718" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:38.728" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:38.721" endtime="20190121 11:52:38.729" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:38.732" endtime="20190121 11:52:38.738" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:39.745" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:38.741" endtime="20190121 11:52:39.747" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:38.245" endtime="20190121 11:52:39.747" status="PASS"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:39.807" level="INFO">${KLEMME30} = [[12200, 111], [12175, 132]]</msg>
<status starttime="20190121 11:52:39.757" endtime="20190121 11:52:39.808" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:39.843" level="INFO">${CURR_VCARBAT} = 111</msg>
<status starttime="20190121 11:52:39.810" endtime="20190121 11:52:39.844" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:39.881" level="INFO">${CURR_KL30} = 132</msg>
<status starttime="20190121 11:52:39.848" endtime="20190121 11:52:39.882" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:39.889" level="INFO">${TIMENOW} = 1548071559</msg>
<status starttime="20190121 11:52:39.885" endtime="20190121 11:52:39.890" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:39.895" level="INFO">${TIMENOW} = 1548071559</msg>
<msg timestamp="20190121 11:52:39.896" level="INFO">${CURR_VCARBAT} = 111</msg>
<msg timestamp="20190121 11:52:39.897" level="INFO">${CURR_KL30} = 132</msg>
<status starttime="20190121 11:52:39.751" endtime="20190121 11:52:39.898" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:39.907" endtime="20190121 11:52:40.136" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:40.141" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:52:39.901" endtime="20190121 11:52:40.142" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:40.151" endtime="20190121 11:52:40.163" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:40.170" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:40.172" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:40.166" endtime="20190121 11:52:40.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:40.196" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:52:40.191" endtime="20190121 11:52:40.197" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:40.205" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:40.200" endtime="20190121 11:52:40.206" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:40.182" endtime="20190121 11:52:40.209" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:40.211" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:40.176" endtime="20190121 11:52:40.212" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:40.222" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:40.214" endtime="20190121 11:52:40.222" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:40.225" endtime="20190121 11:52:40.232" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:41.238" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:40.234" endtime="20190121 11:52:41.240" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:39.749" endtime="20190121 11:52:41.241" status="PASS"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:41.299" level="INFO">${KLEMME30} = [[12175, 135], [12150, 142]]</msg>
<status starttime="20190121 11:52:41.251" endtime="20190121 11:52:41.301" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:41.337" level="INFO">${CURR_VCARBAT} = 135</msg>
<status starttime="20190121 11:52:41.304" endtime="20190121 11:52:41.337" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:41.373" level="INFO">${CURR_KL30} = 142</msg>
<status starttime="20190121 11:52:41.340" endtime="20190121 11:52:41.373" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:41.381" level="INFO">${TIMENOW} = 1548071561</msg>
<status starttime="20190121 11:52:41.376" endtime="20190121 11:52:41.382" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:41.386" level="INFO">${TIMENOW} = 1548071561</msg>
<msg timestamp="20190121 11:52:41.387" level="INFO">${CURR_VCARBAT} = 135</msg>
<msg timestamp="20190121 11:52:41.389" level="INFO">${CURR_KL30} = 142</msg>
<status starttime="20190121 11:52:41.245" endtime="20190121 11:52:41.389" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:41.398" endtime="20190121 11:52:41.631" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:41.636" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:52:41.392" endtime="20190121 11:52:41.637" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:41.640" endtime="20190121 11:52:41.659" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:41.666" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:41.668" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:41.662" endtime="20190121 11:52:41.669" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:41.695" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:52:41.687" endtime="20190121 11:52:41.696" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:41.704" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:41.699" endtime="20190121 11:52:41.705" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:41.678" endtime="20190121 11:52:41.708" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:41.710" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:41.672" endtime="20190121 11:52:41.711" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:41.721" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:41.714" endtime="20190121 11:52:41.722" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:41.724" endtime="20190121 11:52:41.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:42.738" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:41.734" endtime="20190121 11:52:42.740" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:41.243" endtime="20190121 11:52:42.741" status="PASS"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:42.800" level="INFO">${KLEMME30} = [[12175, 168], [12150, 180]]</msg>
<status starttime="20190121 11:52:42.751" endtime="20190121 11:52:42.801" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:42.837" level="INFO">${CURR_VCARBAT} = 168</msg>
<status starttime="20190121 11:52:42.804" endtime="20190121 11:52:42.838" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:42.873" level="INFO">${CURR_KL30} = 180</msg>
<status starttime="20190121 11:52:42.841" endtime="20190121 11:52:42.874" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:42.881" level="INFO">${TIMENOW} = 1548071562</msg>
<status starttime="20190121 11:52:42.877" endtime="20190121 11:52:42.882" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:42.887" level="INFO">${TIMENOW} = 1548071562</msg>
<msg timestamp="20190121 11:52:42.888" level="INFO">${CURR_VCARBAT} = 168</msg>
<msg timestamp="20190121 11:52:42.890" level="INFO">${CURR_KL30} = 180</msg>
<status starttime="20190121 11:52:42.744" endtime="20190121 11:52:42.891" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:42.900" endtime="20190121 11:52:43.135" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:43.137" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:52:42.894" endtime="20190121 11:52:43.138" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:43.147" endtime="20190121 11:52:43.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:43.168" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:43.170" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:43.164" endtime="20190121 11:52:43.171" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:43.194" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:52:43.189" endtime="20190121 11:52:43.195" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:43.203" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:43.197" endtime="20190121 11:52:43.203" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:43.180" endtime="20190121 11:52:43.207" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:43.209" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:43.174" endtime="20190121 11:52:43.210" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:43.222" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:43.213" endtime="20190121 11:52:43.223" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:43.225" endtime="20190121 11:52:43.232" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:44.238" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:43.234" endtime="20190121 11:52:44.240" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:42.742" endtime="20190121 11:52:44.241" status="PASS"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:44.301" level="INFO">${KLEMME30} = [[12200, 133], [12175, 143]]</msg>
<status starttime="20190121 11:52:44.251" endtime="20190121 11:52:44.302" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:44.338" level="INFO">${CURR_VCARBAT} = 133</msg>
<status starttime="20190121 11:52:44.305" endtime="20190121 11:52:44.339" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:44.375" level="INFO">${CURR_KL30} = 143</msg>
<status starttime="20190121 11:52:44.342" endtime="20190121 11:52:44.376" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:44.383" level="INFO">${TIMENOW} = 1548071564</msg>
<status starttime="20190121 11:52:44.379" endtime="20190121 11:52:44.384" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:44.389" level="INFO">${TIMENOW} = 1548071564</msg>
<msg timestamp="20190121 11:52:44.390" level="INFO">${CURR_VCARBAT} = 133</msg>
<msg timestamp="20190121 11:52:44.391" level="INFO">${CURR_KL30} = 143</msg>
<status starttime="20190121 11:52:44.245" endtime="20190121 11:52:44.392" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:44.400" endtime="20190121 11:52:44.636" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:44.642" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:52:44.395" endtime="20190121 11:52:44.643" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:44.651" endtime="20190121 11:52:44.663" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:44.670" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:44.672" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:44.666" endtime="20190121 11:52:44.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:44.700" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:52:44.692" endtime="20190121 11:52:44.701" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:44.709" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:44.704" endtime="20190121 11:52:44.710" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:44.683" endtime="20190121 11:52:44.713" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:44.715" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:44.676" endtime="20190121 11:52:44.716" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:44.726" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:44.719" endtime="20190121 11:52:44.727" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:44.729" endtime="20190121 11:52:44.736" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:45.742" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:44.739" endtime="20190121 11:52:45.745" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:44.243" endtime="20190121 11:52:45.745" status="PASS"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:45.804" level="INFO">${KLEMME30} = [[12175, 190], [12150, 203]]</msg>
<status starttime="20190121 11:52:45.755" endtime="20190121 11:52:45.805" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:45.842" level="INFO">${CURR_VCARBAT} = 190</msg>
<status starttime="20190121 11:52:45.808" endtime="20190121 11:52:45.843" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:45.878" level="INFO">${CURR_KL30} = 203</msg>
<status starttime="20190121 11:52:45.846" endtime="20190121 11:52:45.879" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:45.886" level="INFO">${TIMENOW} = 1548071565</msg>
<status starttime="20190121 11:52:45.882" endtime="20190121 11:52:45.887" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:45.892" level="INFO">${TIMENOW} = 1548071565</msg>
<msg timestamp="20190121 11:52:45.893" level="INFO">${CURR_VCARBAT} = 190</msg>
<msg timestamp="20190121 11:52:45.894" level="INFO">${CURR_KL30} = 203</msg>
<status starttime="20190121 11:52:45.749" endtime="20190121 11:52:45.895" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:45.903" endtime="20190121 11:52:46.140" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:46.142" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:52:45.898" endtime="20190121 11:52:46.143" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:46.152" endtime="20190121 11:52:46.165" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:46.174" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:46.176" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:46.168" endtime="20190121 11:52:46.176" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:46.200" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:52:46.195" endtime="20190121 11:52:46.201" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:46.209" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:46.203" endtime="20190121 11:52:46.209" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:46.186" endtime="20190121 11:52:46.213" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:46.214" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:46.179" endtime="20190121 11:52:46.215" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:46.225" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:46.218" endtime="20190121 11:52:46.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:46.229" endtime="20190121 11:52:46.235" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:47.242" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:46.238" endtime="20190121 11:52:47.244" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:45.747" endtime="20190121 11:52:47.245" status="PASS"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:47.303" level="INFO">${KLEMME30} = [[12175, 192], [12150, 205]]</msg>
<status starttime="20190121 11:52:47.254" endtime="20190121 11:52:47.304" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:47.340" level="INFO">${CURR_VCARBAT} = 192</msg>
<status starttime="20190121 11:52:47.307" endtime="20190121 11:52:47.341" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:47.377" level="INFO">${CURR_KL30} = 205</msg>
<status starttime="20190121 11:52:47.344" endtime="20190121 11:52:47.378" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:47.385" level="INFO">${TIMENOW} = 1548071567</msg>
<status starttime="20190121 11:52:47.381" endtime="20190121 11:52:47.386" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:47.391" level="INFO">${TIMENOW} = 1548071567</msg>
<msg timestamp="20190121 11:52:47.392" level="INFO">${CURR_VCARBAT} = 192</msg>
<msg timestamp="20190121 11:52:47.393" level="INFO">${CURR_KL30} = 205</msg>
<status starttime="20190121 11:52:47.248" endtime="20190121 11:52:47.394" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:47.402" endtime="20190121 11:52:47.637" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:47.639" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:52:47.397" endtime="20190121 11:52:47.646" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:47.653" endtime="20190121 11:52:47.665" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:47.672" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:47.674" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:47.667" endtime="20190121 11:52:47.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:47.701" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:52:47.693" endtime="20190121 11:52:47.702" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:47.710" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:47.705" endtime="20190121 11:52:47.711" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:47.684" endtime="20190121 11:52:47.714" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:47.716" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:47.678" endtime="20190121 11:52:47.717" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:47.727" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:47.719" endtime="20190121 11:52:47.728" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:47.730" endtime="20190121 11:52:47.737" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:48.743" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:47.739" endtime="20190121 11:52:48.746" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:47.246" endtime="20190121 11:52:48.746" status="PASS"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:48.805" level="INFO">${KLEMME30} = [[12175, 191], [12150, 205]]</msg>
<status starttime="20190121 11:52:48.756" endtime="20190121 11:52:48.806" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:48.842" level="INFO">${CURR_VCARBAT} = 191</msg>
<status starttime="20190121 11:52:48.809" endtime="20190121 11:52:48.843" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:48.913" level="INFO">${CURR_KL30} = 205</msg>
<status starttime="20190121 11:52:48.845" endtime="20190121 11:52:48.914" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:48.923" level="INFO">${TIMENOW} = 1548071568</msg>
<status starttime="20190121 11:52:48.917" endtime="20190121 11:52:48.925" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:48.930" level="INFO">${TIMENOW} = 1548071568</msg>
<msg timestamp="20190121 11:52:48.931" level="INFO">${CURR_VCARBAT} = 191</msg>
<msg timestamp="20190121 11:52:48.932" level="INFO">${CURR_KL30} = 205</msg>
<status starttime="20190121 11:52:48.750" endtime="20190121 11:52:48.933" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:48.941" endtime="20190121 11:52:49.197" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:49.207" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:52:48.936" endtime="20190121 11:52:49.215" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:49.223" endtime="20190121 11:52:49.238" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:49.250" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:49.252" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:49.245" endtime="20190121 11:52:49.252" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:49.276" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:52:49.271" endtime="20190121 11:52:49.277" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:49.286" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:49.279" endtime="20190121 11:52:49.287" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:49.262" endtime="20190121 11:52:49.290" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:49.291" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:49.255" endtime="20190121 11:52:49.292" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:49.302" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:49.295" endtime="20190121 11:52:49.303" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:49.306" endtime="20190121 11:52:49.312" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:50.319" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:49.315" endtime="20190121 11:52:50.321" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:48.748" endtime="20190121 11:52:50.322" status="PASS"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:50.382" level="INFO">${KLEMME30} = [[12175, 163], [12150, 173]]</msg>
<status starttime="20190121 11:52:50.332" endtime="20190121 11:52:50.383" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:50.418" level="INFO">${CURR_VCARBAT} = 163</msg>
<status starttime="20190121 11:52:50.385" endtime="20190121 11:52:50.419" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:50.454" level="INFO">${CURR_KL30} = 173</msg>
<status starttime="20190121 11:52:50.422" endtime="20190121 11:52:50.455" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:50.462" level="INFO">${TIMENOW} = 1548071570</msg>
<status starttime="20190121 11:52:50.458" endtime="20190121 11:52:50.463" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:50.468" level="INFO">${TIMENOW} = 1548071570</msg>
<msg timestamp="20190121 11:52:50.469" level="INFO">${CURR_VCARBAT} = 163</msg>
<msg timestamp="20190121 11:52:50.470" level="INFO">${CURR_KL30} = 173</msg>
<status starttime="20190121 11:52:50.326" endtime="20190121 11:52:50.471" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:50.479" endtime="20190121 11:52:50.696" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:50.699" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:52:50.474" endtime="20190121 11:52:50.700" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:50.702" endtime="20190121 11:52:50.708" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:50.715" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:50.717" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:50.711" endtime="20190121 11:52:50.718" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:50.745" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:52:50.736" endtime="20190121 11:52:50.746" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:50.754" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:50.748" endtime="20190121 11:52:50.755" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:50.727" endtime="20190121 11:52:50.758" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:50.760" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:50.721" endtime="20190121 11:52:50.760" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:50.770" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:50.763" endtime="20190121 11:52:50.771" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:50.774" endtime="20190121 11:52:50.780" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:51.787" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:50.783" endtime="20190121 11:52:51.789" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:50.323" endtime="20190121 11:52:51.790" status="PASS"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:51.849" level="INFO">${KLEMME30} = [[12175, 165], [12150, 177]]</msg>
<status starttime="20190121 11:52:51.799" endtime="20190121 11:52:51.850" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:51.887" level="INFO">${CURR_VCARBAT} = 165</msg>
<status starttime="20190121 11:52:51.854" endtime="20190121 11:52:51.888" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:51.924" level="INFO">${CURR_KL30} = 177</msg>
<status starttime="20190121 11:52:51.891" endtime="20190121 11:52:51.925" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:51.932" level="INFO">${TIMENOW} = 1548071571</msg>
<status starttime="20190121 11:52:51.928" endtime="20190121 11:52:51.933" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:51.938" level="INFO">${TIMENOW} = 1548071571</msg>
<msg timestamp="20190121 11:52:51.939" level="INFO">${CURR_VCARBAT} = 165</msg>
<msg timestamp="20190121 11:52:51.940" level="INFO">${CURR_KL30} = 177</msg>
<status starttime="20190121 11:52:51.793" endtime="20190121 11:52:51.941" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:51.949" endtime="20190121 11:52:52.183" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:52.188" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:52:51.944" endtime="20190121 11:52:52.189" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:52.192" endtime="20190121 11:52:52.207" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:52.214" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:52.216" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:52.210" endtime="20190121 11:52:52.217" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:52.240" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:52:52.235" endtime="20190121 11:52:52.241" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:52.249" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:52.244" endtime="20190121 11:52:52.250" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:52.226" endtime="20190121 11:52:52.253" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:52.255" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:52.220" endtime="20190121 11:52:52.256" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:52.265" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:52.258" endtime="20190121 11:52:52.266" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:52.269" endtime="20190121 11:52:52.276" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:53.291" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:52.278" endtime="20190121 11:52:53.294" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:51.791" endtime="20190121 11:52:53.295" status="PASS"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:53.354" level="INFO">${KLEMME30} = [[12175, 203], [12125, 210]]</msg>
<status starttime="20190121 11:52:53.305" endtime="20190121 11:52:53.355" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:53.392" level="INFO">${CURR_VCARBAT} = 203</msg>
<status starttime="20190121 11:52:53.358" endtime="20190121 11:52:53.393" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:53.428" level="INFO">${CURR_KL30} = 210</msg>
<status starttime="20190121 11:52:53.396" endtime="20190121 11:52:53.429" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:53.437" level="INFO">${TIMENOW} = 1548071573</msg>
<status starttime="20190121 11:52:53.432" endtime="20190121 11:52:53.438" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:53.443" level="INFO">${TIMENOW} = 1548071573</msg>
<msg timestamp="20190121 11:52:53.444" level="INFO">${CURR_VCARBAT} = 203</msg>
<msg timestamp="20190121 11:52:53.445" level="INFO">${CURR_KL30} = 210</msg>
<status starttime="20190121 11:52:53.299" endtime="20190121 11:52:53.446" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:53.454" endtime="20190121 11:52:53.687" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:53.695" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:52:53.449" endtime="20190121 11:52:53.702" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:53.705" endtime="20190121 11:52:53.712" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:53.719" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:53.721" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:53.715" endtime="20190121 11:52:53.722" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:53.749" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:52:53.740" endtime="20190121 11:52:53.750" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:53.758" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:53.753" endtime="20190121 11:52:53.761" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:53.731" endtime="20190121 11:52:53.765" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:53.766" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:53.725" endtime="20190121 11:52:53.767" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:53.779" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:53.770" endtime="20190121 11:52:53.779" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:53.782" endtime="20190121 11:52:53.789" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:54.795" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:53.791" endtime="20190121 11:52:54.798" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:53.297" endtime="20190121 11:52:54.799" status="PASS"></status>
</kw>
<kw name="${i} = 16" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:54.858" level="INFO">${KLEMME30} = [[12150, 207], [12150, 232]]</msg>
<status starttime="20190121 11:52:54.809" endtime="20190121 11:52:54.859" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:54.896" level="INFO">${CURR_VCARBAT} = 207</msg>
<status starttime="20190121 11:52:54.863" endtime="20190121 11:52:54.897" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:54.932" level="INFO">${CURR_KL30} = 232</msg>
<status starttime="20190121 11:52:54.899" endtime="20190121 11:52:54.933" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:54.940" level="INFO">${TIMENOW} = 1548071574</msg>
<status starttime="20190121 11:52:54.936" endtime="20190121 11:52:54.941" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:54.946" level="INFO">${TIMENOW} = 1548071574</msg>
<msg timestamp="20190121 11:52:54.947" level="INFO">${CURR_VCARBAT} = 207</msg>
<msg timestamp="20190121 11:52:54.948" level="INFO">${CURR_KL30} = 232</msg>
<status starttime="20190121 11:52:54.802" endtime="20190121 11:52:54.949" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:54.957" endtime="20190121 11:52:55.186" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:55.188" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:52:54.952" endtime="20190121 11:52:55.195" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:55.198" endtime="20190121 11:52:55.209" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:55.216" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:55.218" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:55.212" endtime="20190121 11:52:55.219" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:55.243" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:52:55.238" endtime="20190121 11:52:55.243" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:55.253" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:55.246" endtime="20190121 11:52:55.254" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:55.229" endtime="20190121 11:52:55.257" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:55.258" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:55.222" endtime="20190121 11:52:55.259" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:55.269" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:55.262" endtime="20190121 11:52:55.270" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:55.272" endtime="20190121 11:52:55.279" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:56.286" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:55.281" endtime="20190121 11:52:56.288" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:54.800" endtime="20190121 11:52:56.288" status="PASS"></status>
</kw>
<kw name="${i} = 17" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:56.348" level="INFO">${KLEMME30} = [[12175, 202], [12150, 219]]</msg>
<status starttime="20190121 11:52:56.298" endtime="20190121 11:52:56.349" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:56.385" level="INFO">${CURR_VCARBAT} = 202</msg>
<status starttime="20190121 11:52:56.352" endtime="20190121 11:52:56.386" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:56.421" level="INFO">${CURR_KL30} = 219</msg>
<status starttime="20190121 11:52:56.388" endtime="20190121 11:52:56.422" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:56.439" level="INFO">${TIMENOW} = 1548071576</msg>
<status starttime="20190121 11:52:56.425" endtime="20190121 11:52:56.461" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:56.471" level="INFO">${TIMENOW} = 1548071576</msg>
<msg timestamp="20190121 11:52:56.472" level="INFO">${CURR_VCARBAT} = 202</msg>
<msg timestamp="20190121 11:52:56.493" level="INFO">${CURR_KL30} = 219</msg>
<status starttime="20190121 11:52:56.292" endtime="20190121 11:52:56.494" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:56.535" endtime="20190121 11:52:56.883" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:56.892" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:52:56.502" endtime="20190121 11:52:56.893" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:56.895" endtime="20190121 11:52:56.948" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:56.958" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:56.995" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:56.951" endtime="20190121 11:52:56.996" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:57.178" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:52:57.148" endtime="20190121 11:52:57.179" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:57.212" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:57.186" endtime="20190121 11:52:57.217" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:57.070" endtime="20190121 11:52:57.249" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:57.251" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:57.000" endtime="20190121 11:52:57.252" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:57.337" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:57.258" endtime="20190121 11:52:57.337" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:57.394" endtime="20190121 11:52:57.440" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:52:58.571" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:57.550" endtime="20190121 11:52:58.573" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:56.290" endtime="20190121 11:52:58.574" status="PASS"></status>
</kw>
<kw name="${i} = 18" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:52:58.633" level="INFO">${KLEMME30} = [[12150, 163], [12150, 174]]</msg>
<status starttime="20190121 11:52:58.583" endtime="20190121 11:52:58.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:52:58.672" level="INFO">${CURR_VCARBAT} = 163</msg>
<status starttime="20190121 11:52:58.639" endtime="20190121 11:52:58.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:52:58.709" level="INFO">${CURR_KL30} = 174</msg>
<status starttime="20190121 11:52:58.675" endtime="20190121 11:52:58.710" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:52:58.717" level="INFO">${TIMENOW} = 1548071578</msg>
<status starttime="20190121 11:52:58.712" endtime="20190121 11:52:58.718" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:58.722" level="INFO">${TIMENOW} = 1548071578</msg>
<msg timestamp="20190121 11:52:58.724" level="INFO">${CURR_VCARBAT} = 163</msg>
<msg timestamp="20190121 11:52:58.725" level="INFO">${CURR_KL30} = 174</msg>
<status starttime="20190121 11:52:58.577" endtime="20190121 11:52:58.725" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:52:58.734" endtime="20190121 11:52:58.984" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:58.986" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:52:58.728" endtime="20190121 11:52:58.987" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:52:58.990" endtime="20190121 11:52:58.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:52:59.003" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:52:59.005" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:52:58.998" endtime="20190121 11:52:59.006" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:52:59.031" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:52:59.026" endtime="20190121 11:52:59.032" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:52:59.040" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:52:59.035" endtime="20190121 11:52:59.041" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:59.017" endtime="20190121 11:52:59.044" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:52:59.046" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:52:59.010" endtime="20190121 11:52:59.047" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:52:59.057" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:59.050" endtime="20190121 11:52:59.058" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:52:59.060" endtime="20190121 11:52:59.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:00.074" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:52:59.069" endtime="20190121 11:53:00.076" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:58.575" endtime="20190121 11:53:00.076" status="PASS"></status>
</kw>
<kw name="${i} = 19" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:00.135" level="INFO">${KLEMME30} = [[12175, 164], [12150, 181]]</msg>
<status starttime="20190121 11:53:00.086" endtime="20190121 11:53:00.137" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:00.172" level="INFO">${CURR_VCARBAT} = 164</msg>
<status starttime="20190121 11:53:00.140" endtime="20190121 11:53:00.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:00.209" level="INFO">${CURR_KL30} = 181</msg>
<status starttime="20190121 11:53:00.176" endtime="20190121 11:53:00.209" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:00.217" level="INFO">${TIMENOW} = 1548071580</msg>
<status starttime="20190121 11:53:00.212" endtime="20190121 11:53:00.218" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:00.222" level="INFO">${TIMENOW} = 1548071580</msg>
<msg timestamp="20190121 11:53:00.224" level="INFO">${CURR_VCARBAT} = 164</msg>
<msg timestamp="20190121 11:53:00.225" level="INFO">${CURR_KL30} = 181</msg>
<status starttime="20190121 11:53:00.080" endtime="20190121 11:53:00.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:00.234" endtime="20190121 11:53:00.437" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:00.439" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:53:00.229" endtime="20190121 11:53:00.440" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:00.443" endtime="20190121 11:53:00.449" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:00.456" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:00.458" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:00.452" endtime="20190121 11:53:00.459" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:00.486" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:53:00.481" endtime="20190121 11:53:00.487" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:00.496" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:00.490" endtime="20190121 11:53:00.496" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:00.469" endtime="20190121 11:53:00.499" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:00.501" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:00.462" endtime="20190121 11:53:00.502" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:00.512" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:00.505" endtime="20190121 11:53:00.513" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:00.515" endtime="20190121 11:53:00.522" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:01.529" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:00.525" endtime="20190121 11:53:01.531" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:00.078" endtime="20190121 11:53:01.531" status="PASS"></status>
</kw>
<kw name="${i} = 20" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:01.591" level="INFO">${KLEMME30} = [[12200, 121], [12175, 131]]</msg>
<status starttime="20190121 11:53:01.541" endtime="20190121 11:53:01.591" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:01.628" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:53:01.595" endtime="20190121 11:53:01.628" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:01.664" level="INFO">${CURR_KL30} = 131</msg>
<status starttime="20190121 11:53:01.631" endtime="20190121 11:53:01.665" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:01.672" level="INFO">${TIMENOW} = 1548071581</msg>
<status starttime="20190121 11:53:01.668" endtime="20190121 11:53:01.673" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:01.678" level="INFO">${TIMENOW} = 1548071581</msg>
<msg timestamp="20190121 11:53:01.679" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:53:01.680" level="INFO">${CURR_KL30} = 131</msg>
<status starttime="20190121 11:53:01.535" endtime="20190121 11:53:01.681" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:01.690" endtime="20190121 11:53:01.923" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:01.928" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:53:01.684" endtime="20190121 11:53:01.929" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:01.932" endtime="20190121 11:53:01.948" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:01.956" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:01.958" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:01.951" endtime="20190121 11:53:01.958" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:01.981" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:53:01.977" endtime="20190121 11:53:01.982" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:01.991" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:01.986" endtime="20190121 11:53:01.992" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:01.968" endtime="20190121 11:53:01.995" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:01.997" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:01.961" endtime="20190121 11:53:01.998" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:02.008" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:02.001" endtime="20190121 11:53:02.009" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:02.012" endtime="20190121 11:53:02.018" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:03.025" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:02.021" endtime="20190121 11:53:03.027" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:01.533" endtime="20190121 11:53:03.027" status="PASS"></status>
</kw>
<kw name="${i} = 21" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:03.087" level="INFO">${KLEMME30} = [[12200, 121], [12175, 129]]</msg>
<status starttime="20190121 11:53:03.037" endtime="20190121 11:53:03.088" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:03.124" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:53:03.091" endtime="20190121 11:53:03.125" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:03.184" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:03.128" endtime="20190121 11:53:03.185" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:03.192" level="INFO">${TIMENOW} = 1548071583</msg>
<status starttime="20190121 11:53:03.187" endtime="20190121 11:53:03.193" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:03.198" level="INFO">${TIMENOW} = 1548071583</msg>
<msg timestamp="20190121 11:53:03.199" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:53:03.200" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:03.031" endtime="20190121 11:53:03.201" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:03.209" endtime="20190121 11:53:03.441" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:03.443" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:53:03.204" endtime="20190121 11:53:03.444" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:03.453" endtime="20190121 11:53:03.462" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:03.471" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:03.474" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:03.467" endtime="20190121 11:53:03.475" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:03.507" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:53:03.494" endtime="20190121 11:53:03.507" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:03.516" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:03.510" endtime="20190121 11:53:03.517" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:03.485" endtime="20190121 11:53:03.520" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:03.521" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:03.478" endtime="20190121 11:53:03.522" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:03.532" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:03.525" endtime="20190121 11:53:03.533" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:03.535" endtime="20190121 11:53:03.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:04.549" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:03.545" endtime="20190121 11:53:04.551" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:03.029" endtime="20190121 11:53:04.551" status="PASS"></status>
</kw>
<kw name="${i} = 22" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:04.611" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:04.561" endtime="20190121 11:53:04.613" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:04.649" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:04.616" endtime="20190121 11:53:04.649" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:04.685" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:04.652" endtime="20190121 11:53:04.686" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:04.694" level="INFO">${TIMENOW} = 1548071584</msg>
<status starttime="20190121 11:53:04.689" endtime="20190121 11:53:04.694" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:04.699" level="INFO">${TIMENOW} = 1548071584</msg>
<msg timestamp="20190121 11:53:04.700" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:04.701" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:04.555" endtime="20190121 11:53:04.702" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:04.711" endtime="20190121 11:53:04.931" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:04.937" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:53:04.706" endtime="20190121 11:53:04.938" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:04.948" endtime="20190121 11:53:04.955" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:04.963" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:04.965" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:04.958" endtime="20190121 11:53:04.966" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:04.990" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:53:04.985" endtime="20190121 11:53:04.991" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:04.999" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:04.994" endtime="20190121 11:53:05.000" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:04.976" endtime="20190121 11:53:05.004" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:05.006" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:04.969" endtime="20190121 11:53:05.007" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:05.017" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:05.010" endtime="20190121 11:53:05.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:05.020" endtime="20190121 11:53:05.027" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:06.034" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:05.030" endtime="20190121 11:53:06.036" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:04.553" endtime="20190121 11:53:06.036" status="PASS"></status>
</kw>
<kw name="${i} = 23" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:06.095" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:06.046" endtime="20190121 11:53:06.096" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:06.131" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:06.099" endtime="20190121 11:53:06.132" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:06.168" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:06.135" endtime="20190121 11:53:06.169" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:06.176" level="INFO">${TIMENOW} = 1548071586</msg>
<status starttime="20190121 11:53:06.171" endtime="20190121 11:53:06.177" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:06.182" level="INFO">${TIMENOW} = 1548071586</msg>
<msg timestamp="20190121 11:53:06.183" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:06.184" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:06.040" endtime="20190121 11:53:06.185" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:06.194" endtime="20190121 11:53:06.421" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:06.423" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:53:06.188" endtime="20190121 11:53:06.424" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:06.434" endtime="20190121 11:53:06.448" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:06.458" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:06.460" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:06.451" endtime="20190121 11:53:06.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:06.488" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:53:06.479" endtime="20190121 11:53:06.489" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:06.498" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:06.492" endtime="20190121 11:53:06.498" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:06.471" endtime="20190121 11:53:06.502" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:06.503" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:06.464" endtime="20190121 11:53:06.504" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:06.514" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:06.507" endtime="20190121 11:53:06.515" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:06.517" endtime="20190121 11:53:06.524" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:07.531" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:06.527" endtime="20190121 11:53:07.533" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:06.038" endtime="20190121 11:53:07.534" status="PASS"></status>
</kw>
<kw name="${i} = 24" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:07.593" level="INFO">${KLEMME30} = [[12200, 119], [12175, 127]]</msg>
<status starttime="20190121 11:53:07.543" endtime="20190121 11:53:07.594" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:07.629" level="INFO">${CURR_VCARBAT} = 119</msg>
<status starttime="20190121 11:53:07.597" endtime="20190121 11:53:07.630" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:07.668" level="INFO">${CURR_KL30} = 127</msg>
<status starttime="20190121 11:53:07.633" endtime="20190121 11:53:07.669" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:07.677" level="INFO">${TIMENOW} = 1548071587</msg>
<status starttime="20190121 11:53:07.672" endtime="20190121 11:53:07.678" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:07.683" level="INFO">${TIMENOW} = 1548071587</msg>
<msg timestamp="20190121 11:53:07.684" level="INFO">${CURR_VCARBAT} = 119</msg>
<msg timestamp="20190121 11:53:07.685" level="INFO">${CURR_KL30} = 127</msg>
<status starttime="20190121 11:53:07.537" endtime="20190121 11:53:07.686" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:07.694" endtime="20190121 11:53:07.926" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:07.927" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:53:07.689" endtime="20190121 11:53:07.934" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:07.939" endtime="20190121 11:53:07.951" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:07.958" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:07.960" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:07.954" endtime="20190121 11:53:07.961" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:07.984" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:53:07.979" endtime="20190121 11:53:07.986" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:07.994" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:07.989" endtime="20190121 11:53:07.995" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:07.971" endtime="20190121 11:53:07.998" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:08.000" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:07.964" endtime="20190121 11:53:08.001" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:08.011" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:08.004" endtime="20190121 11:53:08.012" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:08.015" endtime="20190121 11:53:08.021" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:09.028" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:08.024" endtime="20190121 11:53:09.030" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:07.535" endtime="20190121 11:53:09.031" status="PASS"></status>
</kw>
<kw name="${i} = 25" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:09.090" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:09.040" endtime="20190121 11:53:09.091" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:09.127" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:09.095" endtime="20190121 11:53:09.128" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:09.164" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:09.131" endtime="20190121 11:53:09.164" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:09.172" level="INFO">${TIMENOW} = 1548071589</msg>
<status starttime="20190121 11:53:09.167" endtime="20190121 11:53:09.173" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:09.178" level="INFO">${TIMENOW} = 1548071589</msg>
<msg timestamp="20190121 11:53:09.179" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:09.180" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:09.034" endtime="20190121 11:53:09.181" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:09.189" endtime="20190121 11:53:09.421" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:09.423" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:53:09.184" endtime="20190121 11:53:09.424" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:09.431" endtime="20190121 11:53:09.447" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:09.454" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:09.456" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:09.450" endtime="20190121 11:53:09.457" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:09.486" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:53:09.477" endtime="20190121 11:53:09.487" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:09.495" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:09.489" endtime="20190121 11:53:09.496" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:09.467" endtime="20190121 11:53:09.499" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:09.501" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:09.460" endtime="20190121 11:53:09.501" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:09.511" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:09.504" endtime="20190121 11:53:09.512" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:09.515" endtime="20190121 11:53:09.521" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:10.528" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:09.524" endtime="20190121 11:53:10.530" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:09.032" endtime="20190121 11:53:10.531" status="PASS"></status>
</kw>
<kw name="${i} = 26" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:10.591" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:10.541" endtime="20190121 11:53:10.592" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:10.627" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:10.595" endtime="20190121 11:53:10.628" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:10.663" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:10.631" endtime="20190121 11:53:10.664" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:10.671" level="INFO">${TIMENOW} = 1548071590</msg>
<status starttime="20190121 11:53:10.667" endtime="20190121 11:53:10.672" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:10.677" level="INFO">${TIMENOW} = 1548071590</msg>
<msg timestamp="20190121 11:53:10.678" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:10.679" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:10.535" endtime="20190121 11:53:10.680" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:10.689" endtime="20190121 11:53:10.921" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:10.923" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:53:10.683" endtime="20190121 11:53:10.924" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:10.935" endtime="20190121 11:53:10.948" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:10.955" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:10.957" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:10.951" endtime="20190121 11:53:10.958" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:10.981" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:53:10.976" endtime="20190121 11:53:10.982" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:10.990" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:10.985" endtime="20190121 11:53:10.991" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:10.967" endtime="20190121 11:53:10.994" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:10.996" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:10.961" endtime="20190121 11:53:10.997" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:11.007" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:10.999" endtime="20190121 11:53:11.008" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:11.011" endtime="20190121 11:53:11.017" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:12.024" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:11.020" endtime="20190121 11:53:12.026" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:10.533" endtime="20190121 11:53:12.027" status="PASS"></status>
</kw>
<kw name="${i} = 27" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:12.113" level="INFO">${KLEMME30} = [[12200, 121], [12175, 128]]</msg>
<status starttime="20190121 11:53:12.044" endtime="20190121 11:53:12.114" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:12.155" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:53:12.120" endtime="20190121 11:53:12.156" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:12.227" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:12.159" endtime="20190121 11:53:12.228" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:12.235" level="INFO">${TIMENOW} = 1548071592</msg>
<status starttime="20190121 11:53:12.231" endtime="20190121 11:53:12.236" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:12.241" level="INFO">${TIMENOW} = 1548071592</msg>
<msg timestamp="20190121 11:53:12.242" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:53:12.243" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:12.034" endtime="20190121 11:53:12.245" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:12.257" endtime="20190121 11:53:12.500" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:12.502" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:53:12.251" endtime="20190121 11:53:12.503" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:12.510" endtime="20190121 11:53:12.520" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:12.535" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:12.541" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:12.523" endtime="20190121 11:53:12.542" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:12.597" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:53:12.580" endtime="20190121 11:53:12.598" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:12.628" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:12.614" endtime="20190121 11:53:12.637" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:12.559" endtime="20190121 11:53:12.646" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:12.648" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:12.549" endtime="20190121 11:53:12.653" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:12.666" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:12.656" endtime="20190121 11:53:12.667" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:12.670" endtime="20190121 11:53:12.676" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:13.683" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:12.679" endtime="20190121 11:53:13.685" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:12.028" endtime="20190121 11:53:13.686" status="PASS"></status>
</kw>
<kw name="${i} = 28" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:13.773" level="INFO">${KLEMME30} = [[12200, 120], [12175, 129]]</msg>
<status starttime="20190121 11:53:13.704" endtime="20190121 11:53:13.774" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:13.846" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:13.785" endtime="20190121 11:53:13.847" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:13.921" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:13.854" endtime="20190121 11:53:13.922" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:13.936" level="INFO">${TIMENOW} = 1548071593</msg>
<status starttime="20190121 11:53:13.929" endtime="20190121 11:53:13.937" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:13.945" level="INFO">${TIMENOW} = 1548071593</msg>
<msg timestamp="20190121 11:53:13.946" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:13.947" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:13.693" endtime="20190121 11:53:13.948" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:13.970" endtime="20190121 11:53:14.238" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:14.239" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:53:13.953" endtime="20190121 11:53:14.244" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:14.247" endtime="20190121 11:53:14.261" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:14.277" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:14.279" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:14.269" endtime="20190121 11:53:14.285" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:14.330" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:53:14.315" endtime="20190121 11:53:14.331" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:14.360" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:14.337" endtime="20190121 11:53:14.370" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:14.299" endtime="20190121 11:53:14.377" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:14.378" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:14.288" endtime="20190121 11:53:14.379" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:14.427" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:14.395" endtime="20190121 11:53:14.428" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:14.431" endtime="20190121 11:53:14.449" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:15.456" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:14.452" endtime="20190121 11:53:15.458" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:13.687" endtime="20190121 11:53:15.459" status="PASS"></status>
</kw>
<kw name="${i} = 29" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:15.549" level="INFO">${KLEMME30} = [[12200, 122], [12175, 129]]</msg>
<status starttime="20190121 11:53:15.481" endtime="20190121 11:53:15.550" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:15.623" level="INFO">${CURR_VCARBAT} = 122</msg>
<status starttime="20190121 11:53:15.557" endtime="20190121 11:53:15.623" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:15.695" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:15.630" endtime="20190121 11:53:15.696" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:15.708" level="INFO">${TIMENOW} = 1548071595</msg>
<status starttime="20190121 11:53:15.703" endtime="20190121 11:53:15.717" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:15.726" level="INFO">${TIMENOW} = 1548071595</msg>
<msg timestamp="20190121 11:53:15.727" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190121 11:53:15.728" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:15.467" endtime="20190121 11:53:15.732" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:15.749" endtime="20190121 11:53:16.007" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:16.009" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:53:15.735" endtime="20190121 11:53:16.010" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:16.041" endtime="20190121 11:53:16.060" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:16.092" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:16.094" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:16.063" endtime="20190121 11:53:16.095" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:16.146" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:53:16.137" endtime="20190121 11:53:16.147" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:16.156" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:16.151" endtime="20190121 11:53:16.157" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:16.128" endtime="20190121 11:53:16.160" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:16.162" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:16.111" endtime="20190121 11:53:16.163" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:16.173" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:16.166" endtime="20190121 11:53:16.174" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:16.176" endtime="20190121 11:53:16.183" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:17.201" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:16.187" endtime="20190121 11:53:17.223" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:15.465" endtime="20190121 11:53:17.224" status="PASS"></status>
</kw>
<kw name="${i} = 30" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:17.446" level="INFO">${KLEMME30} = [[12200, 120], [12175, 153]]</msg>
<status starttime="20190121 11:53:17.283" endtime="20190121 11:53:17.447" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:17.518" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:17.450" endtime="20190121 11:53:17.519" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:17.619" level="INFO">${CURR_KL30} = 153</msg>
<status starttime="20190121 11:53:17.522" endtime="20190121 11:53:17.626" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:17.661" level="INFO">${TIMENOW} = 1548071597</msg>
<status starttime="20190121 11:53:17.629" endtime="20190121 11:53:17.662" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:17.668" level="INFO">${TIMENOW} = 1548071597</msg>
<msg timestamp="20190121 11:53:17.693" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:17.694" level="INFO">${CURR_KL30} = 153</msg>
<status starttime="20190121 11:53:17.228" endtime="20190121 11:53:17.695" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:17.713" endtime="20190121 11:53:17.963" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:17.965" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:53:17.698" endtime="20190121 11:53:17.965" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:17.968" endtime="20190121 11:53:18.005" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:18.013" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:18.023" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:18.008" endtime="20190121 11:53:18.024" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:18.066" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:53:18.061" endtime="20190121 11:53:18.066" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:18.085" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:18.079" endtime="20190121 11:53:18.086" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:18.041" endtime="20190121 11:53:18.098" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:18.107" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:18.028" endtime="20190121 11:53:18.109" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:18.184" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:18.112" endtime="20190121 11:53:18.185" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:18.187" endtime="20190121 11:53:18.206" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:19.213" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:18.209" endtime="20190121 11:53:19.215" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:17.226" endtime="20190121 11:53:19.216" status="PASS"></status>
</kw>
<kw name="${i} = 31" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:19.275" level="INFO">${KLEMME30} = [[12200, 121], [12175, 130]]</msg>
<status starttime="20190121 11:53:19.226" endtime="20190121 11:53:19.276" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:19.321" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:53:19.279" endtime="20190121 11:53:19.322" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:19.407" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:53:19.344" endtime="20190121 11:53:19.408" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:19.416" level="INFO">${TIMENOW} = 1548071599</msg>
<status starttime="20190121 11:53:19.411" endtime="20190121 11:53:19.416" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:19.421" level="INFO">${TIMENOW} = 1548071599</msg>
<msg timestamp="20190121 11:53:19.422" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:53:19.424" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:53:19.219" endtime="20190121 11:53:19.428" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:19.438" endtime="20190121 11:53:19.645" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:19.647" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:53:19.431" endtime="20190121 11:53:19.648" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:19.651" endtime="20190121 11:53:19.657" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:19.664" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:19.666" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:19.659" endtime="20190121 11:53:19.666" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:19.695" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:53:19.685" endtime="20190121 11:53:19.696" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:19.705" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:19.699" endtime="20190121 11:53:19.705" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:19.676" endtime="20190121 11:53:19.709" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:19.710" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:19.670" endtime="20190121 11:53:19.711" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:19.721" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:19.714" endtime="20190121 11:53:19.722" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:19.724" endtime="20190121 11:53:19.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:20.737" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:19.734" endtime="20190121 11:53:20.740" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:19.217" endtime="20190121 11:53:20.740" status="PASS"></status>
</kw>
<kw name="${i} = 32" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:20.800" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:20.750" endtime="20190121 11:53:20.801" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:20.840" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:20.804" endtime="20190121 11:53:20.841" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:20.879" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:20.844" endtime="20190121 11:53:20.880" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:20.887" level="INFO">${TIMENOW} = 1548071600</msg>
<status starttime="20190121 11:53:20.882" endtime="20190121 11:53:20.888" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:20.893" level="INFO">${TIMENOW} = 1548071600</msg>
<msg timestamp="20190121 11:53:20.894" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:20.895" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:20.744" endtime="20190121 11:53:20.896" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:20.904" endtime="20190121 11:53:21.140" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:21.142" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:53:20.899" endtime="20190121 11:53:21.143" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:21.151" endtime="20190121 11:53:21.165" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:21.172" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:21.174" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:21.168" endtime="20190121 11:53:21.175" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:21.200" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:53:21.195" endtime="20190121 11:53:21.201" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:21.209" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:21.203" endtime="20190121 11:53:21.210" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:21.186" endtime="20190121 11:53:21.213" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:21.214" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:21.178" endtime="20190121 11:53:21.215" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:21.225" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:21.218" endtime="20190121 11:53:21.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:21.228" endtime="20190121 11:53:21.235" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:22.241" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:21.238" endtime="20190121 11:53:22.244" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:20.742" endtime="20190121 11:53:22.244" status="PASS"></status>
</kw>
<kw name="${i} = 33" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:22.306" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:22.254" endtime="20190121 11:53:22.306" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:22.342" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:22.310" endtime="20190121 11:53:22.343" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:22.380" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:22.346" endtime="20190121 11:53:22.381" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:22.388" level="INFO">${TIMENOW} = 1548071602</msg>
<status starttime="20190121 11:53:22.383" endtime="20190121 11:53:22.389" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:22.394" level="INFO">${TIMENOW} = 1548071602</msg>
<msg timestamp="20190121 11:53:22.395" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:22.396" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:22.248" endtime="20190121 11:53:22.397" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:22.406" endtime="20190121 11:53:22.633" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:22.635" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:53:22.400" endtime="20190121 11:53:22.636" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:22.645" endtime="20190121 11:53:22.661" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:22.669" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:22.671" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:22.665" endtime="20190121 11:53:22.672" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:22.698" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:53:22.690" endtime="20190121 11:53:22.700" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:22.708" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:22.703" endtime="20190121 11:53:22.709" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:22.681" endtime="20190121 11:53:22.712" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:22.714" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:22.675" endtime="20190121 11:53:22.714" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:22.724" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:22.717" endtime="20190121 11:53:22.725" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:22.728" endtime="20190121 11:53:22.734" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:23.742" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:22.738" endtime="20190121 11:53:23.744" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:22.246" endtime="20190121 11:53:23.745" status="PASS"></status>
</kw>
<kw name="${i} = 34" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:23.806" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:23.755" endtime="20190121 11:53:23.807" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:23.843" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:23.811" endtime="20190121 11:53:23.844" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:23.886" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:23.847" endtime="20190121 11:53:23.887" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:23.895" level="INFO">${TIMENOW} = 1548071603</msg>
<status starttime="20190121 11:53:23.890" endtime="20190121 11:53:23.896" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:23.900" level="INFO">${TIMENOW} = 1548071603</msg>
<msg timestamp="20190121 11:53:23.902" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:23.903" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:23.748" endtime="20190121 11:53:23.904" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:23.912" endtime="20190121 11:53:24.142" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:24.144" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:53:23.907" endtime="20190121 11:53:24.152" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:24.155" endtime="20190121 11:53:24.171" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:24.179" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:24.181" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:24.174" endtime="20190121 11:53:24.182" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:24.205" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:53:24.200" endtime="20190121 11:53:24.206" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:24.215" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:24.209" endtime="20190121 11:53:24.215" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:24.191" endtime="20190121 11:53:24.220" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:24.221" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:24.185" endtime="20190121 11:53:24.222" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:24.232" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:24.225" endtime="20190121 11:53:24.233" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:24.236" endtime="20190121 11:53:24.243" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:25.250" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:24.245" endtime="20190121 11:53:25.252" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:23.746" endtime="20190121 11:53:25.252" status="PASS"></status>
</kw>
<kw name="${i} = 35" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:25.311" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:25.262" endtime="20190121 11:53:25.312" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:25.349" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:25.316" endtime="20190121 11:53:25.350" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:25.385" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:25.353" endtime="20190121 11:53:25.386" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:25.394" level="INFO">${TIMENOW} = 1548071605</msg>
<status starttime="20190121 11:53:25.389" endtime="20190121 11:53:25.394" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:25.401" level="INFO">${TIMENOW} = 1548071605</msg>
<msg timestamp="20190121 11:53:25.402" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:25.403" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:25.256" endtime="20190121 11:53:25.404" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:25.413" endtime="20190121 11:53:25.692" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:25.694" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:53:25.407" endtime="20190121 11:53:25.695" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:25.707" endtime="20190121 11:53:25.720" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:25.727" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:25.730" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:25.723" endtime="20190121 11:53:25.730" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:25.758" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:53:25.749" endtime="20190121 11:53:25.759" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:25.767" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:25.761" endtime="20190121 11:53:25.768" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:25.740" endtime="20190121 11:53:25.771" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:25.773" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:25.734" endtime="20190121 11:53:25.773" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:25.784" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:25.777" endtime="20190121 11:53:25.785" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:25.788" endtime="20190121 11:53:25.794" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:26.801" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:25.797" endtime="20190121 11:53:26.803" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:25.254" endtime="20190121 11:53:26.804" status="PASS"></status>
</kw>
<kw name="${i} = 36" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:26.864" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:26.814" endtime="20190121 11:53:26.865" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:26.905" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:26.868" endtime="20190121 11:53:26.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:26.942" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:26.909" endtime="20190121 11:53:26.943" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:26.950" level="INFO">${TIMENOW} = 1548071606</msg>
<status starttime="20190121 11:53:26.946" endtime="20190121 11:53:26.951" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:26.956" level="INFO">${TIMENOW} = 1548071606</msg>
<msg timestamp="20190121 11:53:26.957" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:26.958" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:26.808" endtime="20190121 11:53:26.959" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:26.968" endtime="20190121 11:53:27.187" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:27.192" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:53:26.962" endtime="20190121 11:53:27.193" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:27.196" endtime="20190121 11:53:27.201" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:27.209" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:27.211" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:27.204" endtime="20190121 11:53:27.212" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:27.236" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:53:27.231" endtime="20190121 11:53:27.237" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:27.245" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:27.239" endtime="20190121 11:53:27.246" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:27.222" endtime="20190121 11:53:27.249" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:27.250" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:27.215" endtime="20190121 11:53:27.251" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:27.261" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:27.254" endtime="20190121 11:53:27.262" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:27.265" endtime="20190121 11:53:27.271" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:28.278" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:27.274" endtime="20190121 11:53:28.280" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:26.805" endtime="20190121 11:53:28.281" status="PASS"></status>
</kw>
<kw name="${i} = 37" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:28.339" level="INFO">${KLEMME30} = [[12200, 122], [12175, 128]]</msg>
<status starttime="20190121 11:53:28.290" endtime="20190121 11:53:28.340" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:28.377" level="INFO">${CURR_VCARBAT} = 122</msg>
<status starttime="20190121 11:53:28.344" endtime="20190121 11:53:28.378" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:28.414" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:28.381" endtime="20190121 11:53:28.415" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:28.422" level="INFO">${TIMENOW} = 1548071608</msg>
<status starttime="20190121 11:53:28.418" endtime="20190121 11:53:28.423" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:28.428" level="INFO">${TIMENOW} = 1548071608</msg>
<msg timestamp="20190121 11:53:28.429" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190121 11:53:28.430" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:28.284" endtime="20190121 11:53:28.431" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:28.439" endtime="20190121 11:53:28.671" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:28.676" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:53:28.434" endtime="20190121 11:53:28.677" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:28.686" endtime="20190121 11:53:28.698" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:28.707" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:28.709" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:28.703" endtime="20190121 11:53:28.710" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:28.737" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:53:28.728" endtime="20190121 11:53:28.738" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:28.746" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:28.741" endtime="20190121 11:53:28.747" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:28.720" endtime="20190121 11:53:28.750" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:28.752" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:28.713" endtime="20190121 11:53:28.753" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:28.763" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:28.756" endtime="20190121 11:53:28.763" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:28.766" endtime="20190121 11:53:28.774" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:29.780" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:28.776" endtime="20190121 11:53:29.783" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:28.282" endtime="20190121 11:53:29.784" status="PASS"></status>
</kw>
<kw name="${i} = 38" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:29.843" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:29.793" endtime="20190121 11:53:29.844" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:29.880" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:29.847" endtime="20190121 11:53:29.881" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:29.919" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:29.884" endtime="20190121 11:53:29.920" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:29.929" level="INFO">${TIMENOW} = 1548071609</msg>
<status starttime="20190121 11:53:29.923" endtime="20190121 11:53:29.931" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:29.936" level="INFO">${TIMENOW} = 1548071609</msg>
<msg timestamp="20190121 11:53:29.937" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:29.938" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:29.787" endtime="20190121 11:53:29.938" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:29.947" endtime="20190121 11:53:30.193" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:30.195" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:53:29.942" endtime="20190121 11:53:30.196" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:30.199" endtime="20190121 11:53:30.204" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:30.211" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:30.213" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:30.207" endtime="20190121 11:53:30.214" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:30.237" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:53:30.232" endtime="20190121 11:53:30.238" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:30.246" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:30.241" endtime="20190121 11:53:30.247" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:30.224" endtime="20190121 11:53:30.250" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:30.252" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:30.217" endtime="20190121 11:53:30.253" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:30.263" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:30.256" endtime="20190121 11:53:30.263" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:30.266" endtime="20190121 11:53:30.273" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:31.280" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:30.276" endtime="20190121 11:53:31.282" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:29.785" endtime="20190121 11:53:31.283" status="PASS"></status>
</kw>
<kw name="${i} = 39" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:31.375" level="INFO">${KLEMME30} = [[12200, 120], [12175, 131]]</msg>
<status starttime="20190121 11:53:31.292" endtime="20190121 11:53:31.376" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:31.430" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:31.379" endtime="20190121 11:53:31.431" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:31.467" level="INFO">${CURR_KL30} = 131</msg>
<status starttime="20190121 11:53:31.434" endtime="20190121 11:53:31.468" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:31.476" level="INFO">${TIMENOW} = 1548071611</msg>
<status starttime="20190121 11:53:31.471" endtime="20190121 11:53:31.477" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:31.482" level="INFO">${TIMENOW} = 1548071611</msg>
<msg timestamp="20190121 11:53:31.483" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:31.484" level="INFO">${CURR_KL30} = 131</msg>
<status starttime="20190121 11:53:31.286" endtime="20190121 11:53:31.485" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:31.493" endtime="20190121 11:53:31.741" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:31.743" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:53:31.488" endtime="20190121 11:53:31.744" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:31.747" endtime="20190121 11:53:31.752" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:31.772" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:31.774" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:31.755" endtime="20190121 11:53:31.775" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:31.922" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:53:31.889" endtime="20190121 11:53:31.923" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:31.964" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:31.954" endtime="20190121 11:53:31.983" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:31.824" endtime="20190121 11:53:31.987" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:31.993" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:31.792" endtime="20190121 11:53:31.994" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:32.017" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:31.997" endtime="20190121 11:53:32.018" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:32.031" endtime="20190121 11:53:32.038" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:33.057" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:32.041" endtime="20190121 11:53:33.060" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:31.284" endtime="20190121 11:53:33.061" status="PASS"></status>
</kw>
<kw name="${i} = 40" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:33.123" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:33.071" endtime="20190121 11:53:33.124" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:33.160" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:33.127" endtime="20190121 11:53:33.161" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:33.196" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:33.163" endtime="20190121 11:53:33.197" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:33.205" level="INFO">${TIMENOW} = 1548071613</msg>
<status starttime="20190121 11:53:33.200" endtime="20190121 11:53:33.205" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:33.210" level="INFO">${TIMENOW} = 1548071613</msg>
<msg timestamp="20190121 11:53:33.211" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:33.213" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:33.064" endtime="20190121 11:53:33.213" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:33.222" endtime="20190121 11:53:33.442" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:33.444" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:53:33.216" endtime="20190121 11:53:33.448" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:33.451" endtime="20190121 11:53:33.456" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:33.466" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:33.468" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:33.461" endtime="20190121 11:53:33.469" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:33.496" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:53:33.491" endtime="20190121 11:53:33.497" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:33.505" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:33.499" endtime="20190121 11:53:33.506" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:33.482" endtime="20190121 11:53:33.509" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:33.510" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:33.473" endtime="20190121 11:53:33.511" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:33.521" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:33.514" endtime="20190121 11:53:33.522" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:33.525" endtime="20190121 11:53:33.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:34.540" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:33.536" endtime="20190121 11:53:34.542" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:33.062" endtime="20190121 11:53:34.543" status="PASS"></status>
</kw>
<kw name="${i} = 41" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:34.602" level="INFO">${KLEMME30} = [[12200, 120], [12175, 129]]</msg>
<status starttime="20190121 11:53:34.553" endtime="20190121 11:53:34.603" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:34.639" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:34.605" endtime="20190121 11:53:34.640" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:34.676" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:34.643" endtime="20190121 11:53:34.677" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:34.684" level="INFO">${TIMENOW} = 1548071614</msg>
<status starttime="20190121 11:53:34.679" endtime="20190121 11:53:34.685" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:34.690" level="INFO">${TIMENOW} = 1548071614</msg>
<msg timestamp="20190121 11:53:34.691" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:34.692" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:34.546" endtime="20190121 11:53:34.693" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:34.702" endtime="20190121 11:53:34.934" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:34.937" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:53:34.697" endtime="20190121 11:53:34.938" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:34.948" endtime="20190121 11:53:34.960" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:34.967" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:34.969" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:34.963" endtime="20190121 11:53:34.970" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:34.999" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:53:34.990" endtime="20190121 11:53:35.000" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:35.008" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:35.003" endtime="20190121 11:53:35.009" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:34.980" endtime="20190121 11:53:35.013" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:35.014" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:34.973" endtime="20190121 11:53:35.015" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:35.025" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:35.018" endtime="20190121 11:53:35.026" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:35.030" endtime="20190121 11:53:35.036" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:36.043" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:35.039" endtime="20190121 11:53:36.045" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:34.544" endtime="20190121 11:53:36.046" status="PASS"></status>
</kw>
<kw name="${i} = 42" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:36.104" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:36.056" endtime="20190121 11:53:36.106" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:36.141" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:36.109" endtime="20190121 11:53:36.142" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:36.177" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:36.145" endtime="20190121 11:53:36.178" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:36.208" level="INFO">${TIMENOW} = 1548071616</msg>
<status starttime="20190121 11:53:36.189" endtime="20190121 11:53:36.209" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:36.214" level="INFO">${TIMENOW} = 1548071616</msg>
<msg timestamp="20190121 11:53:36.215" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:36.216" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:36.049" endtime="20190121 11:53:36.217" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:36.236" endtime="20190121 11:53:36.449" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:36.451" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:53:36.230" endtime="20190121 11:53:36.452" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:36.455" endtime="20190121 11:53:36.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:36.468" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:36.470" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:36.464" endtime="20190121 11:53:36.471" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:36.494" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:53:36.489" endtime="20190121 11:53:36.495" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:36.503" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:36.497" endtime="20190121 11:53:36.504" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:36.480" endtime="20190121 11:53:36.507" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:36.508" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:36.474" endtime="20190121 11:53:36.509" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:36.519" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:36.512" endtime="20190121 11:53:36.520" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:36.522" endtime="20190121 11:53:36.529" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:37.536" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:36.532" endtime="20190121 11:53:37.538" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:36.047" endtime="20190121 11:53:37.539" status="PASS"></status>
</kw>
<kw name="${i} = 43" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:37.598" level="INFO">${KLEMME30} = [[12200, 132], [12175, 128]]</msg>
<status starttime="20190121 11:53:37.548" endtime="20190121 11:53:37.599" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:37.634" level="INFO">${CURR_VCARBAT} = 132</msg>
<status starttime="20190121 11:53:37.602" endtime="20190121 11:53:37.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:37.670" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:37.638" endtime="20190121 11:53:37.671" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:37.680" level="INFO">${TIMENOW} = 1548071617</msg>
<status starttime="20190121 11:53:37.675" endtime="20190121 11:53:37.681" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:37.686" level="INFO">${TIMENOW} = 1548071617</msg>
<msg timestamp="20190121 11:53:37.687" level="INFO">${CURR_VCARBAT} = 132</msg>
<msg timestamp="20190121 11:53:37.688" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:37.542" endtime="20190121 11:53:37.689" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:37.697" endtime="20190121 11:53:37.958" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:37.960" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:53:37.692" endtime="20190121 11:53:37.969" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:37.972" endtime="20190121 11:53:38.013" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:38.051" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:38.058" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:38.020" endtime="20190121 11:53:38.058" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:38.169" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:53:38.164" endtime="20190121 11:53:38.170" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:38.190" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:38.184" endtime="20190121 11:53:38.191" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:38.091" endtime="20190121 11:53:38.199" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:38.200" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:38.082" endtime="20190121 11:53:38.201" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:38.245" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:38.204" endtime="20190121 11:53:38.246" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:38.248" endtime="20190121 11:53:38.262" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:39.289" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:38.264" endtime="20190121 11:53:39.291" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:37.540" endtime="20190121 11:53:39.292" status="PASS"></status>
</kw>
<kw name="${i} = 44" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:39.351" level="INFO">${KLEMME30} = [[12200, 120], [12175, 130]]</msg>
<status starttime="20190121 11:53:39.302" endtime="20190121 11:53:39.352" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:39.388" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:39.355" endtime="20190121 11:53:39.388" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:39.460" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:53:39.391" endtime="20190121 11:53:39.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:39.486" level="INFO">${TIMENOW} = 1548071619</msg>
<status starttime="20190121 11:53:39.464" endtime="20190121 11:53:39.487" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:39.516" level="INFO">${TIMENOW} = 1548071619</msg>
<msg timestamp="20190121 11:53:39.518" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:39.519" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:53:39.295" endtime="20190121 11:53:39.520" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:39.571" endtime="20190121 11:53:39.815" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:39.817" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:53:39.540" endtime="20190121 11:53:39.818" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:39.821" endtime="20190121 11:53:39.826" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:39.834" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:39.837" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:39.829" endtime="20190121 11:53:39.838" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:39.887" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:53:39.875" endtime="20190121 11:53:39.888" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:39.909" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:39.891" endtime="20190121 11:53:39.910" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:39.847" endtime="20190121 11:53:39.919" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:39.928" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:39.841" endtime="20190121 11:53:39.929" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:39.942" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:39.933" endtime="20190121 11:53:39.943" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:39.945" endtime="20190121 11:53:39.952" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:40.960" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:39.956" endtime="20190121 11:53:40.962" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:39.293" endtime="20190121 11:53:40.962" status="PASS"></status>
</kw>
<kw name="${i} = 45" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:41.022" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:40.972" endtime="20190121 11:53:41.023" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:41.058" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:41.026" endtime="20190121 11:53:41.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:41.094" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:41.062" endtime="20190121 11:53:41.095" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:41.102" level="INFO">${TIMENOW} = 1548071621</msg>
<status starttime="20190121 11:53:41.098" endtime="20190121 11:53:41.103" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:41.108" level="INFO">${TIMENOW} = 1548071621</msg>
<msg timestamp="20190121 11:53:41.109" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:41.110" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:40.966" endtime="20190121 11:53:41.111" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:41.119" endtime="20190121 11:53:41.350" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:41.352" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:53:41.114" endtime="20190121 11:53:41.357" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:41.360" endtime="20190121 11:53:41.378" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:41.387" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:41.389" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:41.383" endtime="20190121 11:53:41.390" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:41.421" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:53:41.408" endtime="20190121 11:53:41.422" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:41.430" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:41.424" endtime="20190121 11:53:41.431" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:41.399" endtime="20190121 11:53:41.435" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:41.436" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:41.393" endtime="20190121 11:53:41.437" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:41.448" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:41.440" endtime="20190121 11:53:41.449" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:41.452" endtime="20190121 11:53:41.458" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:42.465" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:41.461" endtime="20190121 11:53:42.467" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:40.964" endtime="20190121 11:53:42.467" status="PASS"></status>
</kw>
<kw name="${i} = 46" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:42.526" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:42.477" endtime="20190121 11:53:42.527" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:42.563" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:42.531" endtime="20190121 11:53:42.564" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:42.599" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:42.567" endtime="20190121 11:53:42.600" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:42.607" level="INFO">${TIMENOW} = 1548071622</msg>
<status starttime="20190121 11:53:42.603" endtime="20190121 11:53:42.608" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:42.613" level="INFO">${TIMENOW} = 1548071622</msg>
<msg timestamp="20190121 11:53:42.614" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:42.615" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:42.471" endtime="20190121 11:53:42.616" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:42.625" endtime="20190121 11:53:42.856" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:42.859" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:53:42.619" endtime="20190121 11:53:42.859" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:42.868" endtime="20190121 11:53:42.881" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:42.890" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:42.892" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:42.884" endtime="20190121 11:53:42.893" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:42.917" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:53:42.911" endtime="20190121 11:53:42.918" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:42.926" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:42.921" endtime="20190121 11:53:42.927" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:42.902" endtime="20190121 11:53:42.930" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:42.931" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:42.896" endtime="20190121 11:53:42.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:42.942" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:42.935" endtime="20190121 11:53:42.943" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:42.946" endtime="20190121 11:53:42.952" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:43.959" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:42.955" endtime="20190121 11:53:43.961" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:42.469" endtime="20190121 11:53:43.962" status="PASS"></status>
</kw>
<kw name="${i} = 47" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:44.021" level="INFO">${KLEMME30} = [[12200, 120], [12175, 129]]</msg>
<status starttime="20190121 11:53:43.972" endtime="20190121 11:53:44.022" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:44.057" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:44.025" endtime="20190121 11:53:44.058" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:44.095" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:44.061" endtime="20190121 11:53:44.095" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:44.103" level="INFO">${TIMENOW} = 1548071624</msg>
<status starttime="20190121 11:53:44.098" endtime="20190121 11:53:44.104" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:44.108" level="INFO">${TIMENOW} = 1548071624</msg>
<msg timestamp="20190121 11:53:44.110" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:44.111" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:43.965" endtime="20190121 11:53:44.111" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:44.120" endtime="20190121 11:53:44.480" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:44.486" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:53:44.114" endtime="20190121 11:53:44.487" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:44.514" endtime="20190121 11:53:44.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:44.540" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:44.554" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:44.534" endtime="20190121 11:53:44.555" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:44.625" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:53:44.613" endtime="20190121 11:53:44.625" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:44.652" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:44.646" endtime="20190121 11:53:44.653" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:44.572" endtime="20190121 11:53:44.668" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:44.670" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:44.558" endtime="20190121 11:53:44.671" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:44.688" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:44.674" endtime="20190121 11:53:44.690" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:44.692" endtime="20190121 11:53:44.711" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:45.717" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:44.713" endtime="20190121 11:53:45.720" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:43.963" endtime="20190121 11:53:45.720" status="PASS"></status>
</kw>
<kw name="${i} = 48" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:45.779" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:45.730" endtime="20190121 11:53:45.781" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:45.816" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:45.784" endtime="20190121 11:53:45.817" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:45.853" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:45.820" endtime="20190121 11:53:45.853" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:45.861" level="INFO">${TIMENOW} = 1548071625</msg>
<status starttime="20190121 11:53:45.856" endtime="20190121 11:53:45.862" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:45.867" level="INFO">${TIMENOW} = 1548071625</msg>
<msg timestamp="20190121 11:53:45.868" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:45.869" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:45.724" endtime="20190121 11:53:45.870" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:45.878" endtime="20190121 11:53:46.111" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:46.118" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:53:45.873" endtime="20190121 11:53:46.119" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:46.126" endtime="20190121 11:53:46.137" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:46.146" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:46.148" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:46.141" endtime="20190121 11:53:46.148" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:46.171" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:53:46.167" endtime="20190121 11:53:46.172" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:46.180" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:46.175" endtime="20190121 11:53:46.181" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:46.158" endtime="20190121 11:53:46.184" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:46.186" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:46.151" endtime="20190121 11:53:46.187" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:46.197" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:46.190" endtime="20190121 11:53:46.197" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:46.200" endtime="20190121 11:53:46.206" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:47.217" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:46.209" endtime="20190121 11:53:47.219" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:45.722" endtime="20190121 11:53:47.220" status="PASS"></status>
</kw>
<kw name="${i} = 49" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:47.516" level="INFO">${KLEMME30} = [[12200, 122], [12175, 128]]</msg>
<status starttime="20190121 11:53:47.256" endtime="20190121 11:53:47.517" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:47.765" level="INFO">${CURR_VCARBAT} = 122</msg>
<status starttime="20190121 11:53:47.554" endtime="20190121 11:53:47.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:47.906" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:47.789" endtime="20190121 11:53:47.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:47.915" level="INFO">${TIMENOW} = 1548071627</msg>
<status starttime="20190121 11:53:47.910" endtime="20190121 11:53:47.915" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:47.929" level="INFO">${TIMENOW} = 1548071627</msg>
<msg timestamp="20190121 11:53:47.930" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190121 11:53:47.931" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:47.228" endtime="20190121 11:53:47.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:47.961" endtime="20190121 11:53:48.213" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:48.214" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:53:47.935" endtime="20190121 11:53:48.215" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:48.229" endtime="20190121 11:53:48.241" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:48.258" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:48.260" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:48.244" endtime="20190121 11:53:48.261" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:48.327" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:53:48.291" endtime="20190121 11:53:48.328" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:48.349" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:48.332" endtime="20190121 11:53:48.394" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:48.283" endtime="20190121 11:53:48.402" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:48.404" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:48.264" endtime="20190121 11:53:48.421" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:48.463" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:48.439" endtime="20190121 11:53:48.464" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:48.467" endtime="20190121 11:53:48.482" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:49.489" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:48.485" endtime="20190121 11:53:49.491" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:47.226" endtime="20190121 11:53:49.492" status="PASS"></status>
</kw>
<kw name="${i} = 50" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:49.554" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:49.502" endtime="20190121 11:53:49.555" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:49.592" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:49.557" endtime="20190121 11:53:49.593" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:49.630" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:49.596" endtime="20190121 11:53:49.631" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:49.638" level="INFO">${TIMENOW} = 1548071629</msg>
<status starttime="20190121 11:53:49.634" endtime="20190121 11:53:49.639" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:49.644" level="INFO">${TIMENOW} = 1548071629</msg>
<msg timestamp="20190121 11:53:49.645" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:49.646" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:49.496" endtime="20190121 11:53:49.647" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:49.656" endtime="20190121 11:53:49.890" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:49.892" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:53:49.650" endtime="20190121 11:53:49.896" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:49.899" endtime="20190121 11:53:49.916" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:49.925" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:49.927" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:49.919" endtime="20190121 11:53:49.928" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:49.952" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:53:49.947" endtime="20190121 11:53:49.953" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:49.961" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:49.956" endtime="20190121 11:53:49.962" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:49.938" endtime="20190121 11:53:49.965" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:49.967" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:49.932" endtime="20190121 11:53:49.968" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:49.978" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:49.971" endtime="20190121 11:53:49.978" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:49.981" endtime="20190121 11:53:49.987" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:50.994" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:49.990" endtime="20190121 11:53:50.996" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:49.494" endtime="20190121 11:53:50.997" status="PASS"></status>
</kw>
<kw name="${i} = 51" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:51.056" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:51.007" endtime="20190121 11:53:51.058" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:51.098" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:51.061" endtime="20190121 11:53:51.099" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:51.135" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:51.103" endtime="20190121 11:53:51.137" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:51.144" level="INFO">${TIMENOW} = 1548071631</msg>
<status starttime="20190121 11:53:51.140" endtime="20190121 11:53:51.145" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:51.150" level="INFO">${TIMENOW} = 1548071631</msg>
<msg timestamp="20190121 11:53:51.151" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:51.153" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:51.001" endtime="20190121 11:53:51.153" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:51.162" endtime="20190121 11:53:51.394" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:51.396" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:53:51.156" endtime="20190121 11:53:51.402" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:51.411" endtime="20190121 11:53:51.423" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:51.430" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:51.432" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:51.426" endtime="20190121 11:53:51.433" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:51.460" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:53:51.451" endtime="20190121 11:53:51.461" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:51.469" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:51.464" endtime="20190121 11:53:51.470" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:51.442" endtime="20190121 11:53:51.473" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:51.475" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:51.436" endtime="20190121 11:53:51.475" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:51.485" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:51.478" endtime="20190121 11:53:51.486" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:51.489" endtime="20190121 11:53:51.495" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:52.502" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:51.498" endtime="20190121 11:53:52.504" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:50.998" endtime="20190121 11:53:52.505" status="PASS"></status>
</kw>
<kw name="${i} = 52" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:52.563" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:52.514" endtime="20190121 11:53:52.566" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:52.603" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:52.570" endtime="20190121 11:53:52.603" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:52.639" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:52.606" endtime="20190121 11:53:52.640" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:52.647" level="INFO">${TIMENOW} = 1548071632</msg>
<status starttime="20190121 11:53:52.643" endtime="20190121 11:53:52.648" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:52.653" level="INFO">${TIMENOW} = 1548071632</msg>
<msg timestamp="20190121 11:53:52.654" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:52.656" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:52.508" endtime="20190121 11:53:52.656" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:52.665" endtime="20190121 11:53:52.896" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:52.901" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:53:52.659" endtime="20190121 11:53:52.902" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:52.911" endtime="20190121 11:53:52.924" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:52.931" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:52.933" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:52.927" endtime="20190121 11:53:52.934" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:52.957" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:53:52.952" endtime="20190121 11:53:52.958" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:52.967" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:52.961" endtime="20190121 11:53:52.968" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:52.944" endtime="20190121 11:53:52.971" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:52.972" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:52.937" endtime="20190121 11:53:52.973" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:52.984" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:52.976" endtime="20190121 11:53:52.985" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:52.988" endtime="20190121 11:53:52.994" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:54.003" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:52.997" endtime="20190121 11:53:54.005" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:52.506" endtime="20190121 11:53:54.006" status="PASS"></status>
</kw>
<kw name="${i} = 53" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:54.066" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:54.016" endtime="20190121 11:53:54.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:54.106" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:54.071" endtime="20190121 11:53:54.107" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:54.145" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:54.112" endtime="20190121 11:53:54.146" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:54.153" level="INFO">${TIMENOW} = 1548071634</msg>
<status starttime="20190121 11:53:54.149" endtime="20190121 11:53:54.154" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:54.159" level="INFO">${TIMENOW} = 1548071634</msg>
<msg timestamp="20190121 11:53:54.160" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:54.162" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:54.009" endtime="20190121 11:53:54.162" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:54.171" endtime="20190121 11:53:54.406" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:54.408" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:53:54.166" endtime="20190121 11:53:54.414" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:54.423" endtime="20190121 11:53:54.433" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:54.440" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:54.442" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:54.436" endtime="20190121 11:53:54.443" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:54.472" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:53:54.462" endtime="20190121 11:53:54.472" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:54.481" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:54.475" endtime="20190121 11:53:54.481" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:54.453" endtime="20190121 11:53:54.485" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:54.487" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:54.446" endtime="20190121 11:53:54.488" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:54.499" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:54.491" endtime="20190121 11:53:54.499" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:54.502" endtime="20190121 11:53:54.509" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:55.516" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:54.512" endtime="20190121 11:53:55.518" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:54.007" endtime="20190121 11:53:55.518" status="PASS"></status>
</kw>
<kw name="${i} = 54" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:55.616" level="INFO">${KLEMME30} = [[12200, 122], [12175, 129]]</msg>
<status starttime="20190121 11:53:55.529" endtime="20190121 11:53:55.617" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:55.785" level="INFO">${CURR_VCARBAT} = 122</msg>
<status starttime="20190121 11:53:55.620" endtime="20190121 11:53:55.786" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:55.908" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:55.789" endtime="20190121 11:53:55.909" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:55.916" level="INFO">${TIMENOW} = 1548071635</msg>
<status starttime="20190121 11:53:55.911" endtime="20190121 11:53:55.917" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:55.931" level="INFO">${TIMENOW} = 1548071635</msg>
<msg timestamp="20190121 11:53:55.932" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190121 11:53:55.933" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:53:55.522" endtime="20190121 11:53:55.934" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:55.953" endtime="20190121 11:53:56.160" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:56.162" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:53:55.947" endtime="20190121 11:53:56.163" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:56.166" endtime="20190121 11:53:56.172" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:56.179" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:56.181" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:56.175" endtime="20190121 11:53:56.182" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:56.205" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:53:56.200" endtime="20190121 11:53:56.206" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:56.215" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:56.209" endtime="20190121 11:53:56.216" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:56.191" endtime="20190121 11:53:56.219" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:56.220" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:56.185" endtime="20190121 11:53:56.221" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:56.231" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:56.224" endtime="20190121 11:53:56.232" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:56.235" endtime="20190121 11:53:56.241" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:57.253" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:56.243" endtime="20190121 11:53:57.255" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:55.520" endtime="20190121 11:53:57.255" status="PASS"></status>
</kw>
<kw name="${i} = 55" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:57.359" level="INFO">${KLEMME30} = [[12200, 120], [12175, 130]]</msg>
<status starttime="20190121 11:53:57.277" endtime="20190121 11:53:57.360" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:57.403" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:57.363" endtime="20190121 11:53:57.404" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:57.439" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:53:57.407" endtime="20190121 11:53:57.440" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:57.448" level="INFO">${TIMENOW} = 1548071637</msg>
<status starttime="20190121 11:53:57.443" endtime="20190121 11:53:57.449" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:57.454" level="INFO">${TIMENOW} = 1548071637</msg>
<msg timestamp="20190121 11:53:57.455" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:57.456" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:53:57.259" endtime="20190121 11:53:57.457" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:57.466" endtime="20190121 11:53:57.921" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:57.923" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:53:57.460" endtime="20190121 11:53:57.923" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:57.935" endtime="20190121 11:53:57.957" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:57.965" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:57.979" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:57.960" endtime="20190121 11:53:57.980" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:58.017" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:53:58.006" endtime="20190121 11:53:58.018" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:58.030" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:58.021" endtime="20190121 11:53:58.031" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:57.994" endtime="20190121 11:53:58.036" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:58.038" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:57.983" endtime="20190121 11:53:58.038" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:58.048" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:58.041" endtime="20190121 11:53:58.049" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:58.063" endtime="20190121 11:53:58.108" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:53:59.160" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:58.147" endtime="20190121 11:53:59.163" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:57.257" endtime="20190121 11:53:59.163" status="PASS"></status>
</kw>
<kw name="${i} = 56" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:53:59.257" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:53:59.182" endtime="20190121 11:53:59.258" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:53:59.309" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:53:59.261" endtime="20190121 11:53:59.310" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:53:59.346" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:59.313" endtime="20190121 11:53:59.347" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:53:59.354" level="INFO">${TIMENOW} = 1548071639</msg>
<status starttime="20190121 11:53:59.350" endtime="20190121 11:53:59.355" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:59.360" level="INFO">${TIMENOW} = 1548071639</msg>
<msg timestamp="20190121 11:53:59.361" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:53:59.362" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:53:59.167" endtime="20190121 11:53:59.363" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:53:59.372" endtime="20190121 11:53:59.779" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:59.781" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:53:59.366" endtime="20190121 11:53:59.793" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:53:59.796" endtime="20190121 11:53:59.810" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:53:59.818" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:53:59.833" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:53:59.814" endtime="20190121 11:53:59.834" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:53:59.888" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:53:59.875" endtime="20190121 11:53:59.889" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:53:59.897" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:53:59.892" endtime="20190121 11:53:59.898" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:59.857" endtime="20190121 11:53:59.901" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:53:59.903" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:53:59.837" endtime="20190121 11:53:59.904" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:53:59.914" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:53:59.907" endtime="20190121 11:53:59.914" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:53:59.917" endtime="20190121 11:53:59.923" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:00.942" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:53:59.926" endtime="20190121 11:54:00.944" status="PASS"></status>
</kw>
<status starttime="20190121 11:53:59.165" endtime="20190121 11:54:00.949" status="PASS"></status>
</kw>
<kw name="${i} = 57" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:01.189" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:54:00.990" endtime="20190121 11:54:01.190" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:01.402" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:01.229" endtime="20190121 11:54:01.403" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:01.490" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:01.406" endtime="20190121 11:54:01.490" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:01.510" level="INFO">${TIMENOW} = 1548071641</msg>
<status starttime="20190121 11:54:01.494" endtime="20190121 11:54:01.511" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:01.516" level="INFO">${TIMENOW} = 1548071641</msg>
<msg timestamp="20190121 11:54:01.517" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:01.518" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:00.959" endtime="20190121 11:54:01.519" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:01.537" endtime="20190121 11:54:01.820" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:01.822" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:54:01.531" endtime="20190121 11:54:01.823" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:01.826" endtime="20190121 11:54:01.831" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:01.838" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:01.840" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:01.834" endtime="20190121 11:54:01.841" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:01.906" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:54:01.882" endtime="20190121 11:54:01.907" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:01.936" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:01.914" endtime="20190121 11:54:01.962" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:01.859" endtime="20190121 11:54:01.970" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:01.971" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:01.844" endtime="20190121 11:54:01.972" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:02.011" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:01.979" endtime="20190121 11:54:02.012" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:02.031" endtime="20190121 11:54:02.055" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:03.063" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:02.059" endtime="20190121 11:54:03.065" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:00.951" endtime="20190121 11:54:03.066" status="PASS"></status>
</kw>
<kw name="${i} = 58" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:03.125" level="INFO">${KLEMME30} = [[12200, 120], [12175, 129]]</msg>
<status starttime="20190121 11:54:03.076" endtime="20190121 11:54:03.126" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:03.165" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:03.130" endtime="20190121 11:54:03.166" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:03.204" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:54:03.169" endtime="20190121 11:54:03.205" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:03.212" level="INFO">${TIMENOW} = 1548071643</msg>
<status starttime="20190121 11:54:03.207" endtime="20190121 11:54:03.213" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:03.218" level="INFO">${TIMENOW} = 1548071643</msg>
<msg timestamp="20190121 11:54:03.219" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:03.220" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:54:03.069" endtime="20190121 11:54:03.220" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:03.229" endtime="20190121 11:54:03.438" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:03.441" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:54:03.223" endtime="20190121 11:54:03.442" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:03.445" endtime="20190121 11:54:03.450" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:03.458" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:03.460" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:03.453" endtime="20190121 11:54:03.461" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:03.485" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:54:03.479" endtime="20190121 11:54:03.488" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:03.499" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:03.493" endtime="20190121 11:54:03.500" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:03.470" endtime="20190121 11:54:03.503" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:03.506" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:03.464" endtime="20190121 11:54:03.508" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:03.518" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:03.511" endtime="20190121 11:54:03.519" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:03.525" endtime="20190121 11:54:03.531" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:04.538" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:03.534" endtime="20190121 11:54:04.540" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:03.067" endtime="20190121 11:54:04.541" status="PASS"></status>
</kw>
<kw name="${i} = 59" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:04.601" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:54:04.552" endtime="20190121 11:54:04.602" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:04.639" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:04.607" endtime="20190121 11:54:04.640" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:04.675" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:04.643" endtime="20190121 11:54:04.676" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:04.684" level="INFO">${TIMENOW} = 1548071644</msg>
<status starttime="20190121 11:54:04.679" endtime="20190121 11:54:04.685" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:04.690" level="INFO">${TIMENOW} = 1548071644</msg>
<msg timestamp="20190121 11:54:04.691" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:04.692" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:04.544" endtime="20190121 11:54:04.693" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:04.701" endtime="20190121 11:54:05.026" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:05.027" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:54:04.696" endtime="20190121 11:54:05.028" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:05.032" endtime="20190121 11:54:05.038" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:05.045" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:05.047" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:05.041" endtime="20190121 11:54:05.048" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:05.075" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:54:05.066" endtime="20190121 11:54:05.076" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:05.085" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:05.079" endtime="20190121 11:54:05.086" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:05.058" endtime="20190121 11:54:05.089" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:05.091" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:05.051" endtime="20190121 11:54:05.091" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:05.102" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:05.094" endtime="20190121 11:54:05.103" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:05.105" endtime="20190121 11:54:05.112" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:06.118" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:05.114" endtime="20190121 11:54:06.120" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:04.542" endtime="20190121 11:54:06.121" status="PASS"></status>
</kw>
<kw name="${i} = 60" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:06.186" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:54:06.132" endtime="20190121 11:54:06.187" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:06.225" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:06.191" endtime="20190121 11:54:06.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:06.261" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:06.229" endtime="20190121 11:54:06.262" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:06.269" level="INFO">${TIMENOW} = 1548071646</msg>
<status starttime="20190121 11:54:06.265" endtime="20190121 11:54:06.270" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:06.275" level="INFO">${TIMENOW} = 1548071646</msg>
<msg timestamp="20190121 11:54:06.276" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:06.277" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:06.125" endtime="20190121 11:54:06.278" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:06.287" endtime="20190121 11:54:06.518" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:06.526" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:54:06.281" endtime="20190121 11:54:06.527" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:06.536" endtime="20190121 11:54:06.548" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:06.557" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:06.559" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:06.551" endtime="20190121 11:54:06.560" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:06.583" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:54:06.578" endtime="20190121 11:54:06.584" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:06.593" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:06.587" endtime="20190121 11:54:06.593" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:06.570" endtime="20190121 11:54:06.596" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:06.598" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:06.563" endtime="20190121 11:54:06.599" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:06.609" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:06.602" endtime="20190121 11:54:06.610" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:06.612" endtime="20190121 11:54:06.619" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:07.625" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:06.621" endtime="20190121 11:54:07.627" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:06.123" endtime="20190121 11:54:07.628" status="PASS"></status>
</kw>
<kw name="${i} = 61" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:07.687" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:54:07.638" endtime="20190121 11:54:07.688" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:07.724" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:07.692" endtime="20190121 11:54:07.725" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:07.760" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:07.727" endtime="20190121 11:54:07.761" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:07.768" level="INFO">${TIMENOW} = 1548071647</msg>
<status starttime="20190121 11:54:07.764" endtime="20190121 11:54:07.769" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:07.774" level="INFO">${TIMENOW} = 1548071647</msg>
<msg timestamp="20190121 11:54:07.775" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:07.776" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:07.632" endtime="20190121 11:54:07.777" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:07.785" endtime="20190121 11:54:08.014" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:08.020" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:54:07.780" endtime="20190121 11:54:08.022" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:08.031" endtime="20190121 11:54:08.043" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:08.050" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:08.052" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:08.046" endtime="20190121 11:54:08.053" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:08.080" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:54:08.071" endtime="20190121 11:54:08.081" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:08.090" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:08.084" endtime="20190121 11:54:08.091" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:08.063" endtime="20190121 11:54:08.094" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:08.096" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:08.056" endtime="20190121 11:54:08.097" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:08.107" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:08.100" endtime="20190121 11:54:08.107" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:08.110" endtime="20190121 11:54:08.116" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:09.123" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:08.119" endtime="20190121 11:54:09.125" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:07.630" endtime="20190121 11:54:09.126" status="PASS"></status>
</kw>
<kw name="${i} = 62" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:09.186" level="INFO">${KLEMME30} = [[12200, 121], [12175, 128]]</msg>
<status starttime="20190121 11:54:09.136" endtime="20190121 11:54:09.187" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:09.313" level="INFO">${CURR_VCARBAT} = 121</msg>
<status starttime="20190121 11:54:09.189" endtime="20190121 11:54:09.314" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:09.378" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:09.317" endtime="20190121 11:54:09.379" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:09.386" level="INFO">${TIMENOW} = 1548071649</msg>
<status starttime="20190121 11:54:09.382" endtime="20190121 11:54:09.387" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:09.392" level="INFO">${TIMENOW} = 1548071649</msg>
<msg timestamp="20190121 11:54:09.393" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190121 11:54:09.394" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:09.129" endtime="20190121 11:54:09.395" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:09.404" endtime="20190121 11:54:09.627" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:09.630" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status starttime="20190121 11:54:09.398" endtime="20190121 11:54:09.631" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:09.634" endtime="20190121 11:54:09.639" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:09.646" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:09.648" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:09.642" endtime="20190121 11:54:09.649" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:09.672" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status starttime="20190121 11:54:09.667" endtime="20190121 11:54:09.673" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:09.681" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:09.676" endtime="20190121 11:54:09.682" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:09.658" endtime="20190121 11:54:09.685" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:09.686" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:09.652" endtime="20190121 11:54:09.687" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:09.697" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:09.690" endtime="20190121 11:54:09.698" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:09.701" endtime="20190121 11:54:09.731" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:10.750" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:09.734" endtime="20190121 11:54:10.753" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:09.127" endtime="20190121 11:54:10.753" status="PASS"></status>
</kw>
<kw name="${i} = 63" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:10.812" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:54:10.763" endtime="20190121 11:54:10.814" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:10.850" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:10.817" endtime="20190121 11:54:10.851" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:10.886" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:10.853" endtime="20190121 11:54:10.887" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:10.895" level="INFO">${TIMENOW} = 1548071650</msg>
<status starttime="20190121 11:54:10.890" endtime="20190121 11:54:10.895" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:10.900" level="INFO">${TIMENOW} = 1548071650</msg>
<msg timestamp="20190121 11:54:10.902" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:10.903" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:10.757" endtime="20190121 11:54:10.903" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:10.912" endtime="20190121 11:54:11.144" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:11.151" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status starttime="20190121 11:54:10.906" endtime="20190121 11:54:11.152" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:11.158" endtime="20190121 11:54:11.171" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:11.179" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:11.181" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:11.175" endtime="20190121 11:54:11.182" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:11.209" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status starttime="20190121 11:54:11.200" endtime="20190121 11:54:11.210" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:11.218" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:11.213" endtime="20190121 11:54:11.219" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:11.191" endtime="20190121 11:54:11.222" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:11.223" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:11.185" endtime="20190121 11:54:11.224" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:11.234" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:11.227" endtime="20190121 11:54:11.235" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:11.238" endtime="20190121 11:54:11.244" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:12.251" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:11.247" endtime="20190121 11:54:12.253" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:10.755" endtime="20190121 11:54:12.254" status="PASS"></status>
</kw>
<kw name="${i} = 64" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:12.321" level="INFO">${KLEMME30} = [[12200, 120], [12175, 129]]</msg>
<status starttime="20190121 11:54:12.263" endtime="20190121 11:54:12.322" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:12.358" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:12.325" endtime="20190121 11:54:12.358" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:12.395" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:54:12.361" endtime="20190121 11:54:12.395" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:12.403" level="INFO">${TIMENOW} = 1548071652</msg>
<status starttime="20190121 11:54:12.399" endtime="20190121 11:54:12.404" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:12.409" level="INFO">${TIMENOW} = 1548071652</msg>
<msg timestamp="20190121 11:54:12.410" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:12.411" level="INFO">${CURR_KL30} = 129</msg>
<status starttime="20190121 11:54:12.257" endtime="20190121 11:54:12.412" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:12.420" endtime="20190121 11:54:12.657" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:12.659" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status starttime="20190121 11:54:12.415" endtime="20190121 11:54:12.660" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:12.668" endtime="20190121 11:54:12.680" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:12.687" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:12.689" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:12.683" endtime="20190121 11:54:12.690" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:12.714" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status starttime="20190121 11:54:12.709" endtime="20190121 11:54:12.714" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:12.723" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:12.717" endtime="20190121 11:54:12.724" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:12.700" endtime="20190121 11:54:12.727" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:12.728" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:12.693" endtime="20190121 11:54:12.729" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:12.739" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:12.732" endtime="20190121 11:54:12.740" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:12.742" endtime="20190121 11:54:12.749" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:13.755" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:12.752" endtime="20190121 11:54:13.758" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:12.255" endtime="20190121 11:54:13.758" status="PASS"></status>
</kw>
<kw name="${i} = 65" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:13.818" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:54:13.768" endtime="20190121 11:54:13.819" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:13.854" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:13.821" endtime="20190121 11:54:13.855" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:13.890" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:13.858" endtime="20190121 11:54:13.891" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:13.898" level="INFO">${TIMENOW} = 1548071653</msg>
<status starttime="20190121 11:54:13.893" endtime="20190121 11:54:13.899" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:13.904" level="INFO">${TIMENOW} = 1548071653</msg>
<msg timestamp="20190121 11:54:13.905" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:13.906" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:13.762" endtime="20190121 11:54:13.907" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:13.916" endtime="20190121 11:54:14.146" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:14.148" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status starttime="20190121 11:54:13.910" endtime="20190121 11:54:14.155" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:14.158" endtime="20190121 11:54:14.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:14.180" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:14.182" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:14.176" endtime="20190121 11:54:14.183" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:14.210" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status starttime="20190121 11:54:14.201" endtime="20190121 11:54:14.211" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:14.220" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:14.215" endtime="20190121 11:54:14.221" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:14.192" endtime="20190121 11:54:14.224" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:14.226" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:14.186" endtime="20190121 11:54:14.227" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:14.237" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:14.230" endtime="20190121 11:54:14.237" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:14.240" endtime="20190121 11:54:14.247" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:15.254" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:14.249" endtime="20190121 11:54:15.256" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:13.760" endtime="20190121 11:54:15.257" status="PASS"></status>
</kw>
<kw name="${i} = 66" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:15.318" level="INFO">${KLEMME30} = [[12200, 120], [12175, 128]]</msg>
<status starttime="20190121 11:54:15.268" endtime="20190121 11:54:15.318" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:15.353" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:15.321" endtime="20190121 11:54:15.354" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:15.389" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:15.357" endtime="20190121 11:54:15.390" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:15.398" level="INFO">${TIMENOW} = 1548071655</msg>
<status starttime="20190121 11:54:15.393" endtime="20190121 11:54:15.398" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:15.403" level="INFO">${TIMENOW} = 1548071655</msg>
<msg timestamp="20190121 11:54:15.405" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:15.406" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:15.260" endtime="20190121 11:54:15.407" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:15.415" endtime="20190121 11:54:15.647" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:15.655" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status starttime="20190121 11:54:15.410" endtime="20190121 11:54:15.656" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:15.659" endtime="20190121 11:54:15.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:15.684" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:15.686" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:15.680" endtime="20190121 11:54:15.687" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:15.710" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status starttime="20190121 11:54:15.705" endtime="20190121 11:54:15.711" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:15.719" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:15.714" endtime="20190121 11:54:15.720" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:15.696" endtime="20190121 11:54:15.723" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:15.725" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:15.690" endtime="20190121 11:54:15.726" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:15.735" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:15.728" endtime="20190121 11:54:15.736" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:15.739" endtime="20190121 11:54:15.745" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:16.752" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:15.748" endtime="20190121 11:54:16.754" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:15.258" endtime="20190121 11:54:16.755" status="PASS"></status>
</kw>
<kw name="${i} = 67" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:16.814" level="INFO">${KLEMME30} = [[12200, 133], [12175, 128]]</msg>
<status starttime="20190121 11:54:16.765" endtime="20190121 11:54:16.815" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:16.851" level="INFO">${CURR_VCARBAT} = 133</msg>
<status starttime="20190121 11:54:16.818" endtime="20190121 11:54:16.852" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:16.887" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:16.854" endtime="20190121 11:54:16.888" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:16.895" level="INFO">${TIMENOW} = 1548071656</msg>
<status starttime="20190121 11:54:16.891" endtime="20190121 11:54:16.896" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:16.901" level="INFO">${TIMENOW} = 1548071656</msg>
<msg timestamp="20190121 11:54:16.902" level="INFO">${CURR_VCARBAT} = 133</msg>
<msg timestamp="20190121 11:54:16.903" level="INFO">${CURR_KL30} = 128</msg>
<status starttime="20190121 11:54:16.758" endtime="20190121 11:54:16.904" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:16.913" endtime="20190121 11:54:17.146" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:17.148" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status starttime="20190121 11:54:16.907" endtime="20190121 11:54:17.153" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:17.161" endtime="20190121 11:54:17.173" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:17.180" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:17.182" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:17.176" endtime="20190121 11:54:17.183" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:17.210" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status starttime="20190121 11:54:17.201" endtime="20190121 11:54:17.211" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:17.219" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:17.214" endtime="20190121 11:54:17.220" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:17.193" endtime="20190121 11:54:17.223" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:17.225" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:17.186" endtime="20190121 11:54:17.226" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:17.236" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:17.229" endtime="20190121 11:54:17.237" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:17.239" endtime="20190121 11:54:17.246" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:18.253" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:17.249" endtime="20190121 11:54:18.255" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:16.756" endtime="20190121 11:54:18.255" status="PASS"></status>
</kw>
<kw name="${i} = 68" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:18.319" level="INFO">${KLEMME30} = [[12200, 120], [12175, 130]]</msg>
<status starttime="20190121 11:54:18.268" endtime="20190121 11:54:18.321" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:18.356" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:18.324" endtime="20190121 11:54:18.357" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:18.393" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:54:18.360" endtime="20190121 11:54:18.393" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:18.401" level="INFO">${TIMENOW} = 1548071658</msg>
<status starttime="20190121 11:54:18.397" endtime="20190121 11:54:18.402" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:18.407" level="INFO">${TIMENOW} = 1548071658</msg>
<msg timestamp="20190121 11:54:18.408" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:18.410" level="INFO">${CURR_KL30} = 130</msg>
<status starttime="20190121 11:54:18.259" endtime="20190121 11:54:18.410" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:18.420" endtime="20190121 11:54:18.656" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:18.661" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status starttime="20190121 11:54:18.414" endtime="20190121 11:54:18.662" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:18.670" endtime="20190121 11:54:18.684" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:18.691" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:18.693" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:18.687" endtime="20190121 11:54:18.694" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:18.718" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status starttime="20190121 11:54:18.713" endtime="20190121 11:54:18.719" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:18.727" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:18.722" endtime="20190121 11:54:18.728" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:18.704" endtime="20190121 11:54:18.731" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:18.733" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:18.697" endtime="20190121 11:54:18.734" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:18.743" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:18.736" endtime="20190121 11:54:18.744" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:18.747" endtime="20190121 11:54:18.753" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:19.760" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:18.756" endtime="20190121 11:54:19.762" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:18.257" endtime="20190121 11:54:19.763" status="PASS"></status>
</kw>
<kw name="${i} = 69" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:54:19.821" level="INFO">${KLEMME30} = [[12200, 120], [12175, 131]]</msg>
<status starttime="20190121 11:54:19.773" endtime="20190121 11:54:19.822" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:54:19.858" level="INFO">${CURR_VCARBAT} = 120</msg>
<status starttime="20190121 11:54:19.825" endtime="20190121 11:54:19.859" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:54:19.894" level="INFO">${CURR_KL30} = 131</msg>
<status starttime="20190121 11:54:19.861" endtime="20190121 11:54:19.895" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:54:19.903" level="INFO">${TIMENOW} = 1548071659</msg>
<status starttime="20190121 11:54:19.898" endtime="20190121 11:54:19.903" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:19.908" level="INFO">${TIMENOW} = 1548071659</msg>
<msg timestamp="20190121 11:54:19.909" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190121 11:54:19.910" level="INFO">${CURR_KL30} = 131</msg>
<status starttime="20190121 11:54:19.766" endtime="20190121 11:54:19.911" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw library="robot_framework_tnt.Client" name="Fbus Send Message">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status starttime="20190121 11:54:19.921" endtime="20190121 11:54:20.153" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:20.155" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status starttime="20190121 11:54:19.914" endtime="20190121 11:54:20.156" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:20.166" endtime="20190121 11:54:20.180" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Length">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190121 11:54:20.188" level="INFO">Length is 62</msg>
<msg timestamp="20190121 11:54:20.190" level="INFO">${msg_len} = 62</msg>
<status starttime="20190121 11:54:20.183" endtime="20190121 11:54:20.190" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw library="String" name="Split String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190121 11:54:20.222" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status starttime="20190121 11:54:20.209" endtime="20190121 11:54:20.224" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190121 11:54:20.233" level="INFO">${RES} = 03</msg>
<status starttime="20190121 11:54:20.227" endtime="20190121 11:54:20.234" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:20.200" endtime="20190121 11:54:20.237" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:20.238" level="INFO">${resp} = 03</msg>
<status starttime="20190121 11:54:20.193" endtime="20190121 11:54:20.239" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Set Variable If">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190121 11:54:20.249" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:54:20.242" endtime="20190121 11:54:20.250" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Exit For Loop If">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status starttime="20190121 11:54:20.253" endtime="20190121 11:54:20.259" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190121 11:54:21.266" level="INFO">Slept 1 second</msg>
<status starttime="20190121 11:54:20.262" endtime="20190121 11:54:21.269" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:19.764" endtime="20190121 11:54:21.270" status="PASS"></status>
</kw>
<status starttime="20190121 11:52:30.531" endtime="20190121 11:54:21.271" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:54:21.275" endtime="20190121 11:54:21.283" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status starttime="20190121 11:54:21.290" endtime="20190121 11:54:21.297" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:54:21.300" level="INFO">${STATUS} = False</msg>
<status starttime="20190121 11:52:30.507" endtime="20190121 11:54:21.302" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<msg timestamp="20190121 11:54:21.313" level="FAIL">'False' should be true.</msg>
<status starttime="20190121 11:54:21.305" endtime="20190121 11:54:21.316" status="FAIL"></status>
</kw>
<status starttime="20190121 11:52:27.449" endtime="20190121 11:54:21.319" status="FAIL"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:54:21.338" endtime="20190121 11:54:21.397" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:54:21.400" endtime="20190121 11:54:21.447" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:54:21.450" endtime="20190121 11:54:21.496" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:54:21.500" endtime="20190121 11:54:21.545" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:21.325" endtime="20190121 11:54:21.548" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-55194 Powermanagement</doc>
<tags>
<tag>Powermanagement test</tag>
</tags>
<status starttime="20190121 11:52:22.968" critical="yes" endtime="20190121 11:54:21.549" status="FAIL">'False' should be true.</status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:54:23.223" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:54:23.266" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:54:21.626" endtime="20190121 11:54:23.276" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:21.565" endtime="20190121 11:54:23.277" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:21.559" endtime="20190121 11:54:23.280" status="PASS"></status>
</kw>
<doc>Chorus Power wake up down test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:52:19.886" endtime="20190121 11:54:23.280" status="FAIL"></status>
</suite>
<suite id="s1-s20" name="SKTB-FLASHDOWN" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-FLASHDOWN.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:54:23.939" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:54:23.925" endtime="20190121 11:54:23.958" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:54:23.971" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:54:23.973" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:54:26.209" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:54:23.961" endtime="20190121 11:54:26.210" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:23.919" endtime="20190121 11:54:26.213" status="PASS"></status>
</kw>
<test id="s1-s20-t1" name="SKTB-FLSHDOWN Chorus SW Flashing">
<kw name="Test_precondition" type="setup">
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:54:26.283" endtime="20190121 11:54:26.376" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:54:26.378" endtime="20190121 11:54:26.497" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:54:26.535" endtime="20190121 11:54:26.706" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:54:28.739" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:54:26.709" endtime="20190121 11:54:28.741" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:54:28.744" endtime="20190121 11:54:28.791" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status starttime="20190121 11:54:28.795" endtime="20190121 11:54:28.841" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>open</arg>
</arguments>
<status starttime="20190121 11:54:28.844" endtime="20190121 11:54:28.954" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:26.265" endtime="20190121 11:54:28.956" status="PASS"></status>
</kw>
<kw name="update_prev">
<doc>Flashing previous version</doc>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190121 11:54:30.986" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:54:28.973" endtime="20190121 11:54:30.988" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Chorus Flash Release">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190121 11:55:57.989" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status starttime="20190121 11:54:30.991" endtime="20190121 11:55:57.990" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:55:57.997" level="INFO">Flashing sucessfully finished.</msg>
<status starttime="20190121 11:55:57.993" endtime="20190121 11:55:58.000" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:56:00.010" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:55:58.003" endtime="20190121 11:56:00.012" status="PASS"></status>
</kw>
<status starttime="20190121 11:54:28.959" endtime="20190121 11:56:00.014" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status starttime="20190121 11:56:00.024" endtime="20190121 11:56:00.071" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Set Serial State">
<arguments>
<arg>close</arg>
</arguments>
<status starttime="20190121 11:56:00.074" endtime="20190121 11:56:00.119" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:56:00.123" endtime="20190121 11:56:00.169" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:56:00.172" endtime="20190121 11:56:00.219" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:56:00.223" endtime="20190121 11:56:00.269" status="PASS"></status>
</kw>
<status starttime="20190121 11:56:00.018" endtime="20190121 11:56:00.271" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-FLASHDOWN</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status starttime="20190121 11:54:26.230" critical="yes" endtime="20190121 11:56:00.273" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:56:01.832" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:56:01.887" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:56:00.311" endtime="20190121 11:56:01.889" status="PASS"></status>
</kw>
<status starttime="20190121 11:56:00.288" endtime="20190121 11:56:01.890" status="PASS"></status>
</kw>
<status starttime="20190121 11:56:00.283" endtime="20190121 11:56:01.893" status="PASS"></status>
</kw>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:54:23.459" endtime="20190121 11:56:01.893" status="PASS"></status>
</suite>
<suite id="s1-s21" name="SKTB-50571" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-50571.robot">
<kw library="chorus_resource" name="Setup Actions" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190121 11:56:02.570" level="INFO">Connecting to tnt-server localhost...</msg>
<status starttime="20190121 11:56:02.546" endtime="20190121 11:56:02.579" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Connect To Server">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190121 11:56:02.600" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190121 11:56:02.602" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190121 11:56:04.770" level="INFO">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status starttime="20190121 11:56:02.582" endtime="20190121 11:56:04.772" status="PASS"></status>
</kw>
<status starttime="20190121 11:56:02.531" endtime="20190121 11:56:04.774" status="PASS"></status>
</kw>
<test id="s1-s21-t1" name="SKTB-50571 OTA update">
<kw name="Test_precondition" type="setup">
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:56:04.828" level="INFO">"Test_precondition"</msg>
<status starttime="20190121 11:56:04.817" endtime="20190121 11:56:04.850" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:56:04.853" endtime="20190121 11:56:04.937" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:56:04.940" endtime="20190121 11:56:05.052" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:56:05.055" endtime="20190121 11:56:05.157" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190121 11:56:07.181" level="INFO">Slept 2 seconds</msg>
<status starttime="20190121 11:56:05.160" endtime="20190121 11:56:07.183" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:56:07.187" endtime="20190121 11:56:07.285" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:56:07.288" endtime="20190121 11:56:07.370" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait til the device is powered on it takes: ${BOOT_TIME}</arg>
</arguments>
<status starttime="20190121 11:56:07.374" endtime="20190121 11:56:07.392" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${BOOT_TIME}</arg>
</arguments>
<msg timestamp="20190121 11:57:07.400" level="INFO">Slept 1 minute</msg>
<status starttime="20190121 11:56:07.395" endtime="20190121 11:57:07.402" status="PASS"></status>
</kw>
<kw library="Process" name="Start Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>ping ${HOST_IP}</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20190121 11:57:07.412" level="INFO">Starting process:
ping 192.168.1.101</msg>
<status starttime="20190121 11:57:07.407" endtime="20190121 11:57:07.440" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:57:07.457" level="INFO">"Setup ssh"</msg>
<status starttime="20190121 11:57:07.449" endtime="20190121 11:57:07.463" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Open Ssh Connection">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg timestamp="20190121 11:57:07.481" level="INFO">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status starttime="20190121 11:57:07.475" endtime="20190121 11:57:08.601" status="PASS"></status>
</kw>
<status starttime="20190121 11:57:07.467" endtime="20190121 11:57:08.603" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh done!"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:57:08.610" level="INFO">"Setup ssh done!"</msg>
<status starttime="20190121 11:57:08.606" endtime="20190121 11:57:08.612" status="PASS"></status>
</kw>
<status starttime="20190121 11:56:04.810" endtime="20190121 11:57:08.615" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Implements Test Task SKTB-50571 OTA chorus update</arg>
</arguments>
<status starttime="20190121 11:57:08.619" endtime="20190121 11:57:08.624" status="PASS"></status>
</kw>
<kw name="PREPARE_FILE">
<doc>remove old and copy the new loader, pbl and appl debian package to the dut</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Remove old carif files</arg>
</arguments>
<status starttime="20190121 11:57:08.633" endtime="20190121 11:57:08.637" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>rm ${OLU-CARIF}*</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:57:08.645" level="INFO">Sending command to DUT rm olu-carif*</msg>
<msg timestamp="20190121 11:57:08.730" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:57:08.733" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:57:08.640" endtime="20190121 11:57:08.734" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:57:08.737" endtime="20190121 11:57:08.745" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>rm -f ${RESULT_APPL_FILE} ${RESULT_PBL_FILE}</arg>
</arguments>
<msg timestamp="20190121 11:57:08.753" level="INFO">Sending command to DUT rm -f /root/appl50571.txt /root/pbl50571.txt</msg>
<msg timestamp="20190121 11:57:08.943" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:57:08.748" endtime="20190121 11:57:08.945" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste all .deb files</arg>
</arguments>
<status starttime="20190121 11:57:08.948" endtime="20190121 11:57:08.958" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ls -al | grep ${OLU-CARIF}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:57:08.968" level="INFO">Sending command to DUT ls -al | grep olu-carif</msg>
<msg timestamp="20190121 11:57:09.047" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:57:09.051" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:57:08.961" endtime="20190121 11:57:09.052" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:57:09.061" endtime="20190121 11:57:09.069" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${LD_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_LD}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:57:09.086" level="INFO">Starting process:
find /home/debian/chorus_deb/olu-carif-ld_*.deb</msg>
<msg timestamp="20190121 11:57:09.119" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:57:09.134" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:57:09.139" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:57:09.080" endtime="20190121 11:57:09.140" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:57:09.150" level="INFO">${stdout_path} = /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<status starttime="20190121 11:57:09.144" endtime="20190121 11:57:09.151" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:57:09.158" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:57:09.162" level="INFO">${temp} = ['/home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb']</msg>
<status starttime="20190121 11:57:09.154" endtime="20190121 11:57:09.162" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:57:09.171" level="INFO">${path} = /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<status starttime="20190121 11:57:09.165" endtime="20190121 11:57:09.172" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:57:09.175" endtime="20190121 11:57:09.181" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190121 11:57:09.189" level="INFO">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:57:09.184" endtime="20190121 11:57:09.190" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:57:09.194" level="INFO">${matched_path_LD} = /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<status starttime="20190121 11:57:09.072" endtime="20190121 11:57:09.195" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum LD Original:</arg>
</arguments>
<status starttime="20190121 11:57:09.199" endtime="20190121 11:57:09.204" status="PASS"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_LD}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:57:09.220" level="INFO">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<msg timestamp="20190121 11:57:09.248" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:57:09.260" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:57:09.263" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:57:09.214" endtime="20190121 11:57:09.263" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg timestamp="20190121 11:57:09.273" level="INFO">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:57:09.268" endtime="20190121 11:57:09.274" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status starttime="20190121 11:57:09.277" endtime="20190121 11:57:09.285" status="PASS"></status>
</kw>
<status starttime="20190121 11:57:09.206" endtime="20190121 11:57:09.287" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy LD to DUT</arg>
</arguments>
<status starttime="20190121 11:57:09.290" endtime="20190121 11:57:09.295" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Upload File To Dut">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_LD}</arg>
<arg>/root</arg>
</arguments>
<msg timestamp="20190121 11:57:09.303" level="INFO">Uploading file /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb to /root</msg>
<status starttime="20190121 11:57:09.298" endtime="20190121 11:57:09.391" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${PBL_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_PBL}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:57:09.414" level="INFO">Starting process:
find /home/debian/chorus_deb/olu-carif-pbl_*.deb</msg>
<msg timestamp="20190121 11:57:09.443" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:57:09.457" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:57:09.460" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:57:09.408" endtime="20190121 11:57:09.461" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:57:09.472" level="INFO">${stdout_path} = /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:57:09.466" endtime="20190121 11:57:09.473" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:57:09.480" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:57:09.482" level="INFO">${temp} = ['/home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb']</msg>
<status starttime="20190121 11:57:09.476" endtime="20190121 11:57:09.483" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:57:09.491" level="INFO">${path} = /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:57:09.486" endtime="20190121 11:57:09.492" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:57:09.495" endtime="20190121 11:57:09.504" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190121 11:57:09.520" level="INFO">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:57:09.507" endtime="20190121 11:57:09.526" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:57:09.535" level="INFO">${matched_path_PBL} = /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:57:09.394" endtime="20190121 11:57:09.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum PBL Original:</arg>
</arguments>
<status starttime="20190121 11:57:09.543" endtime="20190121 11:57:09.551" status="PASS"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_PBL}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:57:09.581" level="INFO">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<msg timestamp="20190121 11:57:09.612" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:57:09.625" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:57:09.628" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:57:09.568" endtime="20190121 11:57:09.629" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg timestamp="20190121 11:57:09.639" level="INFO">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:57:09.633" endtime="20190121 11:57:09.640" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status starttime="20190121 11:57:09.643" endtime="20190121 11:57:09.650" status="PASS"></status>
</kw>
<status starttime="20190121 11:57:09.558" endtime="20190121 11:57:09.653" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy PBL to DUT</arg>
</arguments>
<status starttime="20190121 11:57:09.656" endtime="20190121 11:57:09.661" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Upload File To Dut">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_PBL}</arg>
<arg>/root</arg>
</arguments>
<msg timestamp="20190121 11:57:09.670" level="INFO">Uploading file /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb to /root</msg>
<status starttime="20190121 11:57:09.664" endtime="20190121 11:57:09.755" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy APPL to DUT</arg>
</arguments>
<status starttime="20190121 11:57:09.758" endtime="20190121 11:57:09.769" status="PASS"></status>
</kw>
<kw library="chorus_resource" name="find_file">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${APPL_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_APPL}</var>
</assign>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190121 11:57:09.786" level="INFO">Starting process:
find /home/debian/chorus_deb/olu-carif-appl_*.deb</msg>
<msg timestamp="20190121 11:57:09.814" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:57:09.829" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:57:09.832" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:57:09.780" endtime="20190121 11:57:09.833" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190121 11:57:09.843" level="INFO">${stdout_path} = /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:57:09.837" endtime="20190121 11:57:09.843" status="PASS"></status>
</kw>
<kw library="String" name="Split To Lines">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190121 11:57:09.851" level="INFO">1 lines returned</msg>
<msg timestamp="20190121 11:57:09.853" level="INFO">${temp} = ['/home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb']</msg>
<status starttime="20190121 11:57:09.846" endtime="20190121 11:57:09.854" status="PASS"></status>
</kw>
<kw library="Collections" name="Get From List">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190121 11:57:09.862" level="INFO">${path} = /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:57:09.857" endtime="20190121 11:57:09.863" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status starttime="20190121 11:57:09.866" endtime="20190121 11:57:09.895" status="PASS"></status>
</kw>
<kw library="OperatingSystem" name="File Should Exist">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg html="yes" timestamp="20190121 11:57:09.910" level="INFO">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb&lt;/a&gt;' exists.</msg>
<status starttime="20190121 11:57:09.899" endtime="20190121 11:57:09.912" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:57:09.916" level="INFO">${matched_path_APPL} = /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<status starttime="20190121 11:57:09.772" endtime="20190121 11:57:09.917" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum APPL Original:</arg>
</arguments>
<status starttime="20190121 11:57:09.920" endtime="20190121 11:57:09.927" status="PASS"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_APPL}</arg>
</arguments>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:57:09.943" level="INFO">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<msg timestamp="20190121 11:57:09.971" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:57:09.985" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:57:09.987" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:57:09.937" endtime="20190121 11:57:09.988" status="PASS"></status>
</kw>
<kw library="Process" name="Get Process Result">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg timestamp="20190121 11:57:09.998" level="INFO">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:57:09.993" endtime="20190121 11:57:09.999" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status starttime="20190121 11:57:10.002" endtime="20190121 11:57:10.010" status="PASS"></status>
</kw>
<status starttime="20190121 11:57:09.929" endtime="20190121 11:57:10.012" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Upload File To Dut">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_APPL}</arg>
<arg>/root</arg>
</arguments>
<msg timestamp="20190121 11:57:10.021" level="INFO">Uploading file /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb to /root</msg>
<status starttime="20190121 11:57:10.015" endtime="20190121 11:57:10.150" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Starte sync</arg>
</arguments>
<status starttime="20190121 11:57:10.154" endtime="20190121 11:57:10.165" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>sync</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:57:10.171" level="INFO">Sending command to DUT sync</msg>
<msg timestamp="20190121 11:57:10.781" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:57:10.783" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:57:10.167" endtime="20190121 11:57:10.784" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:57:10.787" endtime="20190121 11:57:10.826" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nMD5SUM for OLU-CARIF deb packages</arg>
</arguments>
<status starttime="20190121 11:57:10.829" endtime="20190121 11:57:10.840" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>md5sum ${LD_NAME}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:57:10.847" level="INFO">Sending command to DUT md5sum olu-carif-ld_*.deb</msg>
<msg timestamp="20190121 11:57:10.925" level="INFO">Returning data (af851b529c5e74b6bbbd3c2a84131dd7  olu-carif-ld_9.9.3_i386.deb, )</msg>
<msg timestamp="20190121 11:57:10.927" level="INFO">${ret} = ('af851b529c5e74b6bbbd3c2a84131dd7  olu-carif-ld_9.9.3_i386.deb', '')</msg>
<status starttime="20190121 11:57:10.843" endtime="20190121 11:57:10.928" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:57:10.938" endtime="20190121 11:57:10.944" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Show all files</arg>
</arguments>
<status starttime="20190121 11:57:10.947" endtime="20190121 11:57:10.952" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ls -al | grep ${OLU-CARIF}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:57:10.959" level="INFO">Sending command to DUT ls -al | grep olu-carif</msg>
<msg timestamp="20190121 11:57:11.030" level="INFO">Returning data (-rw-r--r--    1 root     root        189992 Jan 21 11:54 olu-carif-appl_9.9.3_i386.deb -rw-r--r--    1 root     root         46566 Jan 21 11:54 olu-carif-ld_9.9.3_i386.deb -rw-r--r--    1 root     root         46710 Jan 21 11:54 olu-carif-pbl_9.9.3_i386.deb, )</msg>
<msg timestamp="20190121 11:57:11.033" level="INFO">${ret} = ('-rw-r--r--    1 root     root        189992 Jan 21 11:54 olu-carif-appl_9.9.3_i386.deb -rw-r--r--    1 root     root         46566 Jan 21 11:54 olu-carif-ld_9.9.3_i386.deb -rw-r--r--    1 root     r...</msg>
<status starttime="20190121 11:57:10.955" endtime="20190121 11:57:11.034" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:57:11.037" endtime="20190121 11:57:11.049" status="PASS"></status>
</kw>
<status starttime="20190121 11:57:08.626" endtime="20190121 11:57:11.051" status="PASS"></status>
</kw>
<kw name="UPDATE_CHORUS">
<doc>Update chorus</doc>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Update chorus"</arg>
</arguments>
<status starttime="20190121 11:57:11.060" endtime="20190121 11:57:11.066" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Ignore Error">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>run ssh command</arg>
<arg>${ENV_PATHVAR} nohup ${DPKG_INSTALL} ${LD_NAME} ${PBL_NAME} ${APPL_NAME} &gt; ${RESULT_APPL_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>${ENV_PATHVAR} nohup ${DPKG_INSTALL} ${LD_NAME} ${PBL_NAME} ${APPL_NAME} &gt; ${RESULT_APPL_FILE}</arg>
</arguments>
<msg timestamp="20190121 11:57:11.084" level="INFO">Sending command to DUT PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin nohup dpkg -i olu-carif-ld_*.deb olu-carif-pbl_*.deb olu-carif-appl_*.deb &gt; /root/appl50571.txt</msg>
<msg timestamp="20190121 11:57:58.246" level="INFO">Returning data (, )</msg>
<status starttime="20190121 11:57:11.075" endtime="20190121 11:57:58.249" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:57:58.250" level="INFO">${ret} = ('PASS', ('', ''))</msg>
<status starttime="20190121 11:57:11.069" endtime="20190121 11:57:58.252" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Close Ssh Connection">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190121 11:57:58.279" level="INFO">Closing SSH connection to 192.168.1.101</msg>
<status starttime="20190121 11:57:58.270" endtime="20190121 11:57:58.282" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Wait until the update success, it takes: ${UPDATE_TIME}"</arg>
</arguments>
<status starttime="20190121 11:57:58.285" endtime="20190121 11:57:58.291" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${UPDATE_TIME}</arg>
</arguments>
<msg timestamp="20190121 11:58:48.300" level="INFO">Slept 50 seconds</msg>
<status starttime="20190121 11:57:58.294" endtime="20190121 11:58:48.302" status="PASS"></status>
</kw>
<kw name="check_stdoutfile">
<doc>Check stdout file</doc>
<arguments>
<arg>${RESULT_APPL_FILE}</arg>
</arguments>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Check stdout file: ${result_file}</arg>
</arguments>
<status starttime="20190121 11:58:48.312" endtime="20190121 11:58:48.318" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Close Ssh Connection">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190121 11:58:48.324" level="INFO">No SSH connection currently established.</msg>
<status starttime="20190121 11:58:48.321" endtime="20190121 11:58:48.326" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:58:48.329" endtime="20190121 11:58:48.378" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:58:48.382" endtime="20190121 11:58:48.430" status="PASS"></status>
</kw>
<kw name="Measure_Current_kl30">
<kw library="robot_framework_tnt.Client" name="Kl 30">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190121 11:58:48.487" level="INFO">${KLEMME30} = [[0, 0], [0, 0]]</msg>
<status starttime="20190121 11:58:48.439" endtime="20190121 11:58:48.487" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190121 11:58:48.518" level="INFO">${CURR_VCARBAT} = 0</msg>
<status starttime="20190121 11:58:48.491" endtime="20190121 11:58:48.519" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190121 11:58:48.548" level="INFO">${CURR_KL30} = 0</msg>
<status starttime="20190121 11:58:48.522" endtime="20190121 11:58:48.549" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190121 11:58:48.556" level="INFO">${TIMENOW} = 1548071928</msg>
<status starttime="20190121 11:58:48.551" endtime="20190121 11:58:48.557" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status starttime="20190121 11:58:48.559" endtime="20190121 11:58:48.566" status="PASS"></status>
</kw>
<status starttime="20190121 11:58:48.433" endtime="20190121 11:58:48.571" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait 5 seconds</arg>
</arguments>
<status starttime="20190121 11:58:48.574" endtime="20190121 11:58:48.578" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5 seconds</arg>
</arguments>
<msg timestamp="20190121 11:58:53.585" level="INFO">Slept 5 seconds</msg>
<status starttime="20190121 11:58:48.581" endtime="20190121 11:58:53.587" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:58:53.590" endtime="20190121 11:58:53.639" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${1}</arg>
</arguments>
<status starttime="20190121 11:58:53.643" endtime="20190121 11:58:53.691" status="PASS"></status>
</kw>
<kw name="WAIT_UNTIL_DEVICE_IS_READY">
<doc>Waiting for device to be ready, up to 90 seconds</doc>
<assign>
<var>${status}</var>
</assign>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${secs}</var>
</assign>
<msg timestamp="20190121 11:58:53.705" level="INFO">${secs} = 1548071933</msg>
<status starttime="20190121 11:58:53.700" endtime="20190121 11:58:53.705" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Waiting for device to be ready, up to 90 seconds. Timestamp: ${secs}\n</arg>
<arg>console=true</arg>
</arguments>
<msg timestamp="20190121 11:58:53.713" level="INFO">Waiting for device to be ready, up to 90 seconds. Timestamp: 1548071933
</msg>
<status starttime="20190121 11:58:53.708" endtime="20190121 11:58:53.716" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Run Keyword And Return Status">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait until keyword succeeds</arg>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:53.747" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:53.775" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:53.796" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:53.799" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:53.740" endtime="20190121 11:58:53.800" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:53.817" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:53.804" endtime="20190121 11:58:53.818" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:53.829" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:53.821" endtime="20190121 11:58:53.830" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:53.732" endtime="20190121 11:58:53.834" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:53.972" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:54.000" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:54.021" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:54.024" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:53.965" endtime="20190121 11:58:54.025" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:54.039" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:54.029" endtime="20190121 11:58:54.039" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:54.051" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:54.042" endtime="20190121 11:58:54.052" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:53.957" endtime="20190121 11:58:54.055" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:54.266" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:54.362" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:54.418" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:54.425" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:54.235" endtime="20190121 11:58:54.426" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:54.493" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:54.450" endtime="20190121 11:58:54.494" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:54.534" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:54.501" endtime="20190121 11:58:54.535" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:54.198" endtime="20190121 11:58:54.581" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:54.791" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:54.922" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:54.974" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:54.981" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:54.762" endtime="20190121 11:58:54.982" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:55.049" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:55.010" endtime="20190121 11:58:55.050" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:55.101" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:55.073" endtime="20190121 11:58:55.102" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:54.716" endtime="20190121 11:58:55.131" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:55.302" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:55.358" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:55.392" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:55.395" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:55.282" endtime="20190121 11:58:55.396" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:55.422" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:55.400" endtime="20190121 11:58:55.433" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:55.470" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:55.436" endtime="20190121 11:58:55.472" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:55.258" endtime="20190121 11:58:55.484" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:55.623" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:55.650" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:55.670" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:55.674" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:55.616" endtime="20190121 11:58:55.675" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:55.688" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:55.678" endtime="20190121 11:58:55.689" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:55.699" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:55.691" endtime="20190121 11:58:55.701" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:55.607" endtime="20190121 11:58:55.704" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:55.843" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:55.870" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:55.890" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:55.893" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:55.836" endtime="20190121 11:58:55.894" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:55.907" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:55.898" endtime="20190121 11:58:55.908" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:55.919" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:55.911" endtime="20190121 11:58:55.921" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:55.827" endtime="20190121 11:58:55.924" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:56.062" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:56.090" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:56.110" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:56.113" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:56.056" endtime="20190121 11:58:56.114" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:56.127" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:56.118" endtime="20190121 11:58:56.128" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:56.139" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:56.131" endtime="20190121 11:58:56.140" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:56.047" endtime="20190121 11:58:56.143" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:56.285" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:56.313" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:56.333" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:56.336" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:56.274" endtime="20190121 11:58:56.337" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:56.351" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:56.341" endtime="20190121 11:58:56.351" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:56.362" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:56.354" endtime="20190121 11:58:56.364" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:56.266" endtime="20190121 11:58:56.367" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:56.505" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:56.534" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:56.554" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:56.557" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:56.498" endtime="20190121 11:58:56.558" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:56.571" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:56.562" endtime="20190121 11:58:56.572" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:56.583" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:56.575" endtime="20190121 11:58:56.584" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:56.490" endtime="20190121 11:58:56.588" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:56.726" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:56.754" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:56.774" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:56.777" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:56.719" endtime="20190121 11:58:56.778" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:56.791" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:56.782" endtime="20190121 11:58:56.791" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:56.803" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:56.794" endtime="20190121 11:58:56.804" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:56.711" endtime="20190121 11:58:56.807" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:56.945" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:56.973" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:56.993" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:56.996" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:56.938" endtime="20190121 11:58:56.997" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:57.010" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:57.001" endtime="20190121 11:58:57.011" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:57.022" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:57.014" endtime="20190121 11:58:57.024" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:56.930" endtime="20190121 11:58:57.027" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:57.184" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:57.211" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:57.231" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:57.234" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:57.158" endtime="20190121 11:58:57.235" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:57.248" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:57.239" endtime="20190121 11:58:57.249" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:57.260" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:57.252" endtime="20190121 11:58:57.261" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:57.150" endtime="20190121 11:58:57.264" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:57.402" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:57.429" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:57.449" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:57.453" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:57.395" endtime="20190121 11:58:57.454" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:57.467" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:57.458" endtime="20190121 11:58:57.467" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:57.478" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:57.470" endtime="20190121 11:58:57.480" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:57.387" endtime="20190121 11:58:57.483" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:57.621" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:57.648" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:57.668" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:57.673" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:57.614" endtime="20190121 11:58:57.674" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:57.686" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:57.678" endtime="20190121 11:58:57.687" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:57.698" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:57.690" endtime="20190121 11:58:57.700" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:57.606" endtime="20190121 11:58:57.704" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:57.842" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:57.869" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:57.889" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:57.892" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:57.835" endtime="20190121 11:58:57.894" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:57.908" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:57.899" endtime="20190121 11:58:57.909" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:57.920" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:57.912" endtime="20190121 11:58:57.922" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:57.827" endtime="20190121 11:58:57.925" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:58.063" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:58.129" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:58.145" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:58.148" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:58.056" endtime="20190121 11:58:58.150" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:58.162" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:58.153" endtime="20190121 11:58:58.163" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:58.173" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:58.166" endtime="20190121 11:58:58.175" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:58.048" endtime="20190121 11:58:58.178" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:58.317" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:58.345" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:58.371" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:58.374" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:58.310" endtime="20190121 11:58:58.375" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:58.390" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:58.379" endtime="20190121 11:58:58.391" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:58.402" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:58.394" endtime="20190121 11:58:58.403" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:58.301" endtime="20190121 11:58:58.406" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:58.545" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:58.572" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:58.592" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:58.595" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:58.538" endtime="20190121 11:58:58.596" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:58.609" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:58.600" endtime="20190121 11:58:58.610" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:58.621" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:58.613" endtime="20190121 11:58:58.623" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:58.530" endtime="20190121 11:58:58.626" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:58.764" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:58.791" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:58.812" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:58.815" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:58.757" endtime="20190121 11:58:58.816" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:58.835" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:58.825" endtime="20190121 11:58:58.835" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:58.846" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:58.838" endtime="20190121 11:58:58.848" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:58.749" endtime="20190121 11:58:58.851" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:58.989" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:59.016" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:59.037" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:59.040" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:58.983" endtime="20190121 11:58:59.041" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:59.058" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:59.045" endtime="20190121 11:58:59.059" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:59.070" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:59.062" endtime="20190121 11:58:59.071" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:58.974" endtime="20190121 11:58:59.074" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:59.212" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:59.239" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:59.259" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:59.262" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:59.205" endtime="20190121 11:58:59.263" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:59.276" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:59.267" endtime="20190121 11:58:59.277" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:59.288" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:59.280" endtime="20190121 11:58:59.289" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:59.197" endtime="20190121 11:58:59.293" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:59.431" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:59.457" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:59.477" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:59.481" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:59.424" endtime="20190121 11:58:59.482" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:59.495" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:59.486" endtime="20190121 11:58:59.496" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:59.506" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:59.499" endtime="20190121 11:58:59.508" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:59.416" endtime="20190121 11:58:59.511" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:59.649" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:59.676" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:59.696" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:59.699" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:59.642" endtime="20190121 11:58:59.700" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:59.713" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:59.704" endtime="20190121 11:58:59.714" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:58:59.725" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:59.717" endtime="20190121 11:58:59.726" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:59.634" endtime="20190121 11:58:59.729" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:58:59.891" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:58:59.930" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:58:59.950" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:58:59.953" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:58:59.861" endtime="20190121 11:58:59.954" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:58:59.975" level="INFO">${resp} = </msg>
<status starttime="20190121 11:58:59.958" endtime="20190121 11:58:59.976" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:00.040" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:58:59.999" endtime="20190121 11:59:00.050" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:58:59.853" endtime="20190121 11:59:00.054" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:00.192" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:00.219" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:00.302" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:00.309" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:00.185" endtime="20190121 11:59:00.310" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:00.397" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:00.346" endtime="20190121 11:59:00.398" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:00.472" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:00.429" endtime="20190121 11:59:00.474" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:00.177" endtime="20190121 11:59:00.477" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:00.615" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:00.642" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:00.662" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:00.665" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:00.609" endtime="20190121 11:59:00.666" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:00.679" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:00.670" endtime="20190121 11:59:00.680" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:00.697" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:00.683" endtime="20190121 11:59:00.698" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:00.601" endtime="20190121 11:59:00.724" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:00.863" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:00.890" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:00.910" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:00.913" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:00.857" endtime="20190121 11:59:00.914" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:00.928" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:00.918" endtime="20190121 11:59:00.929" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:00.941" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:00.932" endtime="20190121 11:59:00.943" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:00.849" endtime="20190121 11:59:00.946" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:01.085" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:01.112" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:01.132" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:01.135" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:01.078" endtime="20190121 11:59:01.135" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:01.149" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:01.139" endtime="20190121 11:59:01.150" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:01.165" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:01.153" endtime="20190121 11:59:01.166" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:01.069" endtime="20190121 11:59:01.169" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:01.307" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:01.334" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:01.355" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:01.358" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:01.300" endtime="20190121 11:59:01.359" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:01.372" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:01.363" endtime="20190121 11:59:01.374" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:01.385" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:01.377" endtime="20190121 11:59:01.387" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:01.292" endtime="20190121 11:59:01.390" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:01.528" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:01.556" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:01.575" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:01.578" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:01.521" endtime="20190121 11:59:01.579" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:01.593" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:01.583" endtime="20190121 11:59:01.594" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:01.605" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:01.597" endtime="20190121 11:59:01.606" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:01.513" endtime="20190121 11:59:01.609" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:01.747" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:01.774" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:01.798" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:01.807" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:01.741" endtime="20190121 11:59:01.811" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:01.908" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:01.836" endtime="20190121 11:59:01.909" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:01.945" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:01.912" endtime="20190121 11:59:01.946" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:01.733" endtime="20190121 11:59:01.949" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:02.099" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:02.126" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:02.146" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:02.150" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:02.093" endtime="20190121 11:59:02.151" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:02.163" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:02.155" endtime="20190121 11:59:02.164" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:02.180" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:02.167" endtime="20190121 11:59:02.181" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:02.084" endtime="20190121 11:59:02.185" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:02.323" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:02.351" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:02.371" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:02.375" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:02.316" endtime="20190121 11:59:02.376" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:02.389" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:02.380" endtime="20190121 11:59:02.390" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:02.401" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:02.393" endtime="20190121 11:59:02.402" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:02.308" endtime="20190121 11:59:02.405" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:02.544" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:02.571" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:02.591" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:02.594" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:02.537" endtime="20190121 11:59:02.595" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:02.608" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:02.599" endtime="20190121 11:59:02.609" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:02.621" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:02.612" endtime="20190121 11:59:02.622" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:02.529" endtime="20190121 11:59:02.625" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:02.763" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:02.790" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:02.811" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:02.814" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:02.757" endtime="20190121 11:59:02.815" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:02.828" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:02.819" endtime="20190121 11:59:02.829" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:02.841" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:02.832" endtime="20190121 11:59:02.842" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:02.749" endtime="20190121 11:59:02.845" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:02.984" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:03.011" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:03.031" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:03.035" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:02.977" endtime="20190121 11:59:03.036" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:03.049" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:03.039" endtime="20190121 11:59:03.050" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:03.065" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:03.052" endtime="20190121 11:59:03.067" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:02.969" endtime="20190121 11:59:03.070" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:03.208" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:03.235" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:03.255" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:03.258" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:03.201" endtime="20190121 11:59:03.259" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:03.273" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:03.263" endtime="20190121 11:59:03.273" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:03.285" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:03.276" endtime="20190121 11:59:03.286" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:03.193" endtime="20190121 11:59:03.289" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:03.427" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:03.457" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:03.481" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:03.485" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:03.420" endtime="20190121 11:59:03.486" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:03.501" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:03.491" endtime="20190121 11:59:03.502" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:03.513" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:03.505" endtime="20190121 11:59:03.515" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:03.412" endtime="20190121 11:59:03.518" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:03.656" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:03.682" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:03.703" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:03.706" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:03.649" endtime="20190121 11:59:03.707" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:03.720" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:03.711" endtime="20190121 11:59:03.720" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:03.732" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:03.723" endtime="20190121 11:59:03.734" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:03.641" endtime="20190121 11:59:03.738" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:03.876" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:03.903" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:03.948" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:03.955" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:03.870" endtime="20190121 11:59:03.956" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:03.996" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:03.964" endtime="20190121 11:59:03.997" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:04.041" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:04.012" endtime="20190121 11:59:04.042" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:03.861" endtime="20190121 11:59:04.045" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:04.183" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:04.211" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:04.232" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:04.236" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:04.176" endtime="20190121 11:59:04.237" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:04.251" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:04.241" endtime="20190121 11:59:04.252" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:04.263" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:04.255" endtime="20190121 11:59:04.264" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:04.169" endtime="20190121 11:59:04.267" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:04.406" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:04.434" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:04.454" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:04.458" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:04.399" endtime="20190121 11:59:04.459" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:04.472" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:04.463" endtime="20190121 11:59:04.473" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:04.483" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:04.475" endtime="20190121 11:59:04.485" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:04.391" endtime="20190121 11:59:04.488" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:04.627" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:04.654" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:04.674" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:04.677" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:04.620" endtime="20190121 11:59:04.678" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:04.691" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:04.682" endtime="20190121 11:59:04.692" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:04.702" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:04.695" endtime="20190121 11:59:04.704" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:04.611" endtime="20190121 11:59:04.707" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:04.846" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:04.872" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:04.893" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:04.896" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:04.839" endtime="20190121 11:59:04.897" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:04.910" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:04.901" endtime="20190121 11:59:04.911" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:04.926" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:04.914" endtime="20190121 11:59:04.928" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:04.830" endtime="20190121 11:59:04.932" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:05.071" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:05.098" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:05.118" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:05.121" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:05.063" endtime="20190121 11:59:05.122" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:05.135" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:05.126" endtime="20190121 11:59:05.136" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:05.147" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:05.139" endtime="20190121 11:59:05.149" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:05.055" endtime="20190121 11:59:05.152" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:05.290" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:05.317" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:05.336" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:05.340" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:05.283" endtime="20190121 11:59:05.341" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:05.354" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:05.345" endtime="20190121 11:59:05.354" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:05.366" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:05.357" endtime="20190121 11:59:05.368" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:05.275" endtime="20190121 11:59:05.371" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:05.509" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:05.536" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:05.556" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:05.559" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:05.502" endtime="20190121 11:59:05.560" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:05.573" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:05.564" endtime="20190121 11:59:05.574" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:05.585" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:05.577" endtime="20190121 11:59:05.586" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:05.494" endtime="20190121 11:59:05.590" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:05.727" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:05.755" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:05.775" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:05.778" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:05.721" endtime="20190121 11:59:05.779" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:05.792" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:05.783" endtime="20190121 11:59:05.793" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:05.808" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:05.796" endtime="20190121 11:59:05.809" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:05.713" endtime="20190121 11:59:05.813" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:05.950" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:05.977" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:05.997" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:06.000" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:05.944" endtime="20190121 11:59:06.002" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:06.015" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:06.006" endtime="20190121 11:59:06.016" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:06.027" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:06.019" endtime="20190121 11:59:06.028" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:05.936" endtime="20190121 11:59:06.031" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:06.170" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:06.197" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:06.217" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:06.220" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:06.163" endtime="20190121 11:59:06.221" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:06.234" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:06.225" endtime="20190121 11:59:06.234" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:06.246" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:06.237" endtime="20190121 11:59:06.247" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:06.155" endtime="20190121 11:59:06.250" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:06.388" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:06.415" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:06.435" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:06.438" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:06.381" endtime="20190121 11:59:06.439" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:06.453" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:06.443" endtime="20190121 11:59:06.453" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:06.466" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:06.457" endtime="20190121 11:59:06.467" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:06.373" endtime="20190121 11:59:06.470" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:06.608" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:06.635" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:06.655" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:06.658" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:06.601" endtime="20190121 11:59:06.659" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:06.672" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:06.663" endtime="20190121 11:59:06.673" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:06.688" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:06.676" endtime="20190121 11:59:06.690" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:06.593" endtime="20190121 11:59:06.693" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:06.831" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:06.858" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:06.878" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:06.881" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:06.824" endtime="20190121 11:59:06.882" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:06.895" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:06.886" endtime="20190121 11:59:06.896" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:06.907" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:06.899" endtime="20190121 11:59:06.908" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:06.816" endtime="20190121 11:59:06.911" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:07.050" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:07.077" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:07.097" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:07.100" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:07.043" endtime="20190121 11:59:07.101" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:07.114" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:07.105" endtime="20190121 11:59:07.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:07.126" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:07.118" endtime="20190121 11:59:07.127" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:07.034" endtime="20190121 11:59:07.130" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:07.269" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:07.296" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:07.316" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:07.319" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:07.261" endtime="20190121 11:59:07.320" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:07.333" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:07.324" endtime="20190121 11:59:07.334" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:07.345" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:07.337" endtime="20190121 11:59:07.347" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:07.253" endtime="20190121 11:59:07.350" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:07.488" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:07.515" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:07.535" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:07.538" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:07.481" endtime="20190121 11:59:07.539" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:07.552" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:07.543" endtime="20190121 11:59:07.553" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:07.568" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:07.556" endtime="20190121 11:59:07.569" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:07.473" endtime="20190121 11:59:07.572" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:07.710" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:07.737" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:07.757" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:07.760" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:07.703" endtime="20190121 11:59:07.761" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:07.775" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:07.765" endtime="20190121 11:59:07.775" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:07.786" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:07.778" endtime="20190121 11:59:07.788" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:07.695" endtime="20190121 11:59:07.791" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:07.929" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:07.956" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:07.976" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:07.979" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:07.922" endtime="20190121 11:59:07.980" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:07.993" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:07.984" endtime="20190121 11:59:07.994" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:08.006" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:07.997" endtime="20190121 11:59:08.007" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:07.914" endtime="20190121 11:59:08.010" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:08.148" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:08.175" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:08.195" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:08.198" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:08.141" endtime="20190121 11:59:08.199" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:08.212" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:08.203" endtime="20190121 11:59:08.213" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:08.224" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:08.216" endtime="20190121 11:59:08.225" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:08.133" endtime="20190121 11:59:08.228" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:08.367" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:08.395" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:08.415" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:08.418" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:08.360" endtime="20190121 11:59:08.419" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:08.432" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:08.423" endtime="20190121 11:59:08.433" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:08.457" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:08.435" endtime="20190121 11:59:08.459" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:08.352" endtime="20190121 11:59:08.462" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:08.600" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:08.627" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:08.648" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:08.651" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:08.594" endtime="20190121 11:59:08.652" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:08.665" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:08.656" endtime="20190121 11:59:08.665" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:08.677" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:08.669" endtime="20190121 11:59:08.678" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:08.585" endtime="20190121 11:59:08.681" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:08.819" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:08.847" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:08.871" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:08.874" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:08.813" endtime="20190121 11:59:08.875" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:08.888" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:08.879" endtime="20190121 11:59:08.889" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:08.900" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:08.892" endtime="20190121 11:59:08.901" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:08.804" endtime="20190121 11:59:08.905" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:09.043" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:09.070" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:09.090" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:09.094" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:09.036" endtime="20190121 11:59:09.095" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:09.107" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:09.098" endtime="20190121 11:59:09.108" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:09.119" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:09.111" endtime="20190121 11:59:09.121" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:09.028" endtime="20190121 11:59:09.124" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:09.262" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:09.289" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:09.309" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:09.312" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:09.255" endtime="20190121 11:59:09.313" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:09.326" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:09.317" endtime="20190121 11:59:09.326" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:09.337" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:09.329" endtime="20190121 11:59:09.339" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:09.247" endtime="20190121 11:59:09.342" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:09.484" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:09.511" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:09.532" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:09.535" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:09.477" endtime="20190121 11:59:09.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:09.550" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:09.541" endtime="20190121 11:59:09.551" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:09.562" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:09.554" endtime="20190121 11:59:09.564" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:09.465" endtime="20190121 11:59:09.567" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:09.705" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:09.732" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:09.752" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:09.755" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:09.698" endtime="20190121 11:59:09.757" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:09.779" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:09.761" endtime="20190121 11:59:09.780" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:09.805" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:09.787" endtime="20190121 11:59:09.807" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:09.690" endtime="20190121 11:59:09.818" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:09.985" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:10.058" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:10.076" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:10.079" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:09.950" endtime="20190121 11:59:10.080" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:10.106" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:10.084" endtime="20190121 11:59:10.106" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:10.117" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:10.110" endtime="20190121 11:59:10.119" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:09.942" endtime="20190121 11:59:10.122" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:10.260" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:10.287" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:10.307" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:10.310" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:10.253" endtime="20190121 11:59:10.311" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:10.324" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:10.315" endtime="20190121 11:59:10.325" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:10.336" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:10.328" endtime="20190121 11:59:10.338" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:10.245" endtime="20190121 11:59:10.341" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:10.483" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:10.510" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:10.532" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:10.535" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:10.476" endtime="20190121 11:59:10.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:10.549" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:10.540" endtime="20190121 11:59:10.550" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:10.561" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:10.553" endtime="20190121 11:59:10.563" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:10.464" endtime="20190121 11:59:10.566" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:10.705" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:10.732" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:10.752" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:10.755" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:10.698" endtime="20190121 11:59:10.757" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:10.770" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:10.761" endtime="20190121 11:59:10.771" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:10.782" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:10.774" endtime="20190121 11:59:10.783" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:10.690" endtime="20190121 11:59:10.786" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:10.924" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:10.951" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:10.971" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:10.974" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:10.917" endtime="20190121 11:59:10.975" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:10.988" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:10.979" endtime="20190121 11:59:10.989" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:11.000" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:10.992" endtime="20190121 11:59:11.002" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:10.909" endtime="20190121 11:59:11.005" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:11.143" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:11.171" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:11.191" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:11.194" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:11.137" endtime="20190121 11:59:11.195" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:11.208" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:11.199" endtime="20190121 11:59:11.209" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:11.220" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:11.212" endtime="20190121 11:59:11.221" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:11.128" endtime="20190121 11:59:11.224" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:11.367" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:11.394" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:11.414" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:11.418" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:11.356" endtime="20190121 11:59:11.419" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:11.431" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:11.422" endtime="20190121 11:59:11.432" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:11.443" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:11.435" endtime="20190121 11:59:11.445" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:11.347" endtime="20190121 11:59:11.448" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:11.586" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:11.613" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:11.633" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:11.636" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:11.579" endtime="20190121 11:59:11.637" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:11.650" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:11.641" endtime="20190121 11:59:11.651" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:11.662" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:11.654" endtime="20190121 11:59:11.663" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:11.571" endtime="20190121 11:59:11.666" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:11.804" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:11.831" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:11.851" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:11.854" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:11.797" endtime="20190121 11:59:11.855" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:11.869" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:11.859" endtime="20190121 11:59:11.870" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:11.881" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:11.873" endtime="20190121 11:59:11.882" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:11.789" endtime="20190121 11:59:11.885" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:12.023" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:12.050" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:12.071" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:12.074" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:12.017" endtime="20190121 11:59:12.075" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:12.088" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:12.079" endtime="20190121 11:59:12.089" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:12.100" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:12.092" endtime="20190121 11:59:12.101" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:12.008" endtime="20190121 11:59:12.104" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:12.242" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:12.270" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:12.289" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:12.293" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:12.236" endtime="20190121 11:59:12.294" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:12.311" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:12.297" endtime="20190121 11:59:12.311" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:12.322" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:12.314" endtime="20190121 11:59:12.324" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:12.228" endtime="20190121 11:59:12.327" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:12.465" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:12.492" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:12.512" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:12.515" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:12.458" endtime="20190121 11:59:12.516" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:12.529" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:12.520" endtime="20190121 11:59:12.530" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:12.541" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:12.533" endtime="20190121 11:59:12.542" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:12.450" endtime="20190121 11:59:12.545" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:12.683" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:12.711" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:12.731" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:12.734" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:12.676" endtime="20190121 11:59:12.735" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:12.748" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:12.739" endtime="20190121 11:59:12.749" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:12.760" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:12.752" endtime="20190121 11:59:12.762" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:12.668" endtime="20190121 11:59:12.765" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:12.903" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:12.931" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:12.951" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:12.954" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:12.896" endtime="20190121 11:59:12.955" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:12.970" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:12.959" endtime="20190121 11:59:12.970" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:12.981" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:12.973" endtime="20190121 11:59:12.983" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:12.888" endtime="20190121 11:59:12.986" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:13.124" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:13.151" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:13.172" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:13.175" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:13.118" endtime="20190121 11:59:13.175" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:13.189" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:13.180" endtime="20190121 11:59:13.190" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:13.205" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:13.193" endtime="20190121 11:59:13.207" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:13.109" endtime="20190121 11:59:13.210" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:13.347" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:13.375" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:13.395" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:13.398" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:13.341" endtime="20190121 11:59:13.399" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:13.413" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:13.403" endtime="20190121 11:59:13.414" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:13.425" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:13.416" endtime="20190121 11:59:13.427" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:13.333" endtime="20190121 11:59:13.430" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:13.568" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:13.596" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:13.617" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:13.620" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:13.561" endtime="20190121 11:59:13.621" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:13.634" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:13.625" endtime="20190121 11:59:13.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:13.646" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:13.638" endtime="20190121 11:59:13.647" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:13.553" endtime="20190121 11:59:13.650" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:13.788" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:13.815" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:13.835" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:13.838" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:13.781" endtime="20190121 11:59:13.839" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:13.852" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:13.843" endtime="20190121 11:59:13.853" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:13.864" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:13.856" endtime="20190121 11:59:13.865" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:13.773" endtime="20190121 11:59:13.868" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:14.007" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:14.033" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:14.054" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:14.057" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:14.000" endtime="20190121 11:59:14.058" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:14.071" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:14.062" endtime="20190121 11:59:14.072" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:14.089" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:14.077" endtime="20190121 11:59:14.090" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:13.991" endtime="20190121 11:59:14.093" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:14.231" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:14.260" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:14.281" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:14.284" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:14.224" endtime="20190121 11:59:14.285" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:14.298" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:14.289" endtime="20190121 11:59:14.299" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:14.310" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:14.302" endtime="20190121 11:59:14.312" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:14.216" endtime="20190121 11:59:14.315" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:14.453" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:14.480" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:14.500" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:14.503" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:14.446" endtime="20190121 11:59:14.504" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:14.517" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:14.508" endtime="20190121 11:59:14.518" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:14.529" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:14.521" endtime="20190121 11:59:14.530" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:14.438" endtime="20190121 11:59:14.533" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:14.671" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:14.698" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:14.718" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:14.722" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:14.665" endtime="20190121 11:59:14.723" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:14.735" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:14.726" endtime="20190121 11:59:14.736" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:14.747" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:14.739" endtime="20190121 11:59:14.749" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:14.656" endtime="20190121 11:59:14.752" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:14.931" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:14.970" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:14.991" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:14.994" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:14.911" endtime="20190121 11:59:14.995" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:15.009" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:14.999" endtime="20190121 11:59:15.010" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:15.021" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:15.013" endtime="20190121 11:59:15.023" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:14.881" endtime="20190121 11:59:15.026" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:15.168" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:15.195" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:15.215" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:15.218" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:15.161" endtime="20190121 11:59:15.219" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:15.232" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:15.223" endtime="20190121 11:59:15.233" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:15.245" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:15.236" endtime="20190121 11:59:15.247" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:15.149" endtime="20190121 11:59:15.250" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:15.388" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:15.415" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:15.435" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:15.438" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:15.381" endtime="20190121 11:59:15.439" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:15.452" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:15.443" endtime="20190121 11:59:15.453" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:15.465" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:15.456" endtime="20190121 11:59:15.466" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:15.373" endtime="20190121 11:59:15.469" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:15.607" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:15.634" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:15.654" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:15.657" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:15.601" endtime="20190121 11:59:15.658" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:15.671" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:15.662" endtime="20190121 11:59:15.672" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:15.683" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:15.675" endtime="20190121 11:59:15.685" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:15.592" endtime="20190121 11:59:15.688" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:15.826" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:15.853" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:15.873" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:15.877" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:15.819" endtime="20190121 11:59:15.878" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:15.891" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:15.881" endtime="20190121 11:59:15.891" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:15.902" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:15.894" endtime="20190121 11:59:15.904" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:15.811" endtime="20190121 11:59:15.907" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:16.049" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:16.077" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:16.097" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:16.100" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:16.042" endtime="20190121 11:59:16.101" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:16.114" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:16.105" endtime="20190121 11:59:16.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:16.126" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:16.118" endtime="20190121 11:59:16.127" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:16.030" endtime="20190121 11:59:16.130" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:16.269" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:16.296" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:16.316" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:16.319" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:16.262" endtime="20190121 11:59:16.320" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:16.333" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:16.324" endtime="20190121 11:59:16.334" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:16.345" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:16.337" endtime="20190121 11:59:16.351" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:16.254" endtime="20190121 11:59:16.355" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:16.493" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:16.523" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:16.543" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:16.546" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:16.486" endtime="20190121 11:59:16.547" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:16.560" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:16.551" endtime="20190121 11:59:16.561" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:16.572" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:16.564" endtime="20190121 11:59:16.573" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:16.478" endtime="20190121 11:59:16.577" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:16.715" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:16.741" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:16.761" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:16.765" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:16.708" endtime="20190121 11:59:16.766" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:16.779" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:16.769" endtime="20190121 11:59:16.779" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:16.790" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:16.782" endtime="20190121 11:59:16.792" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:16.700" endtime="20190121 11:59:16.795" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:16.937" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:16.964" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:16.984" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:16.987" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:16.926" endtime="20190121 11:59:16.988" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:17.002" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:16.992" endtime="20190121 11:59:17.002" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:17.013" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:17.006" endtime="20190121 11:59:17.015" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:16.918" endtime="20190121 11:59:17.018" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:17.156" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:17.184" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:17.204" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:17.207" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:17.149" endtime="20190121 11:59:17.208" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:17.221" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:17.212" endtime="20190121 11:59:17.222" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:17.233" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:17.225" endtime="20190121 11:59:17.234" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:17.141" endtime="20190121 11:59:17.238" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:17.376" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:17.403" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:17.423" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:17.426" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:17.369" endtime="20190121 11:59:17.427" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:17.440" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:17.431" endtime="20190121 11:59:17.441" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:17.452" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:17.444" endtime="20190121 11:59:17.453" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:17.361" endtime="20190121 11:59:17.456" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:17.595" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:17.622" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:17.642" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:17.646" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:17.589" endtime="20190121 11:59:17.647" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:17.659" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:17.650" endtime="20190121 11:59:17.660" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:17.671" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:17.663" endtime="20190121 11:59:17.673" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:17.581" endtime="20190121 11:59:17.676" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:17.818" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:17.845" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:17.865" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:17.869" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:17.807" endtime="20190121 11:59:17.870" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:17.883" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:17.874" endtime="20190121 11:59:17.884" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:17.895" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:17.887" endtime="20190121 11:59:17.896" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:17.799" endtime="20190121 11:59:17.899" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:18.038" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:18.065" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:18.085" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:18.088" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:18.031" endtime="20190121 11:59:18.089" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:18.102" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:18.093" endtime="20190121 11:59:18.103" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:18.114" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:18.106" endtime="20190121 11:59:18.115" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:18.022" endtime="20190121 11:59:18.128" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:18.343" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:18.462" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:18.514" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:18.521" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:18.312" endtime="20190121 11:59:18.522" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:18.584" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:18.546" endtime="20190121 11:59:18.585" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:18.608" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:18.588" endtime="20190121 11:59:18.610" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:18.278" endtime="20190121 11:59:18.613" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:18.799" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:18.866" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:18.886" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:18.889" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:18.776" endtime="20190121 11:59:18.890" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:18.904" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:18.894" endtime="20190121 11:59:18.905" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:18.915" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:18.907" endtime="20190121 11:59:18.917" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:18.750" endtime="20190121 11:59:18.920" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:19.063" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:19.091" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:19.111" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:19.114" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:19.053" endtime="20190121 11:59:19.115" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:19.128" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:19.119" endtime="20190121 11:59:19.129" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:19.140" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:19.132" endtime="20190121 11:59:19.142" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:19.043" endtime="20190121 11:59:19.145" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:19.283" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:19.310" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:19.331" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:19.334" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:19.276" endtime="20190121 11:59:19.335" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:19.347" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:19.339" endtime="20190121 11:59:19.349" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:19.360" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:19.351" endtime="20190121 11:59:19.361" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:19.268" endtime="20190121 11:59:19.365" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:19.503" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:19.530" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:19.550" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:19.554" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:19.496" endtime="20190121 11:59:19.555" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:19.568" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:19.558" endtime="20190121 11:59:19.569" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:19.581" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:19.573" endtime="20190121 11:59:19.583" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:19.488" endtime="20190121 11:59:19.586" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:19.724" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:19.751" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:19.771" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:19.775" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:19.717" endtime="20190121 11:59:19.776" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:19.789" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:19.779" endtime="20190121 11:59:19.790" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:19.801" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:19.793" endtime="20190121 11:59:19.802" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:19.709" endtime="20190121 11:59:19.805" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:19.956" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:19.984" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:20.033" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:20.044" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:19.936" endtime="20190121 11:59:20.046" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:20.075" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:20.061" endtime="20190121 11:59:20.076" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:20.094" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:20.079" endtime="20190121 11:59:20.096" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:19.928" endtime="20190121 11:59:20.099" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:20.238" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:20.354" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:20.398" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:20.405" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:20.230" endtime="20190121 11:59:20.406" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:20.468" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:20.442" endtime="20190121 11:59:20.469" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:20.495" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:20.472" endtime="20190121 11:59:20.497" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:20.222" endtime="20190121 11:59:20.508" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:20.646" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:20.673" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:20.693" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:20.696" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:20.640" endtime="20190121 11:59:20.697" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:20.711" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:20.701" endtime="20190121 11:59:20.712" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:20.723" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:20.715" endtime="20190121 11:59:20.725" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:20.632" endtime="20190121 11:59:20.730" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:20.868" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:20.894" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:20.914" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:20.917" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:20.861" endtime="20190121 11:59:20.918" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:20.931" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:20.922" endtime="20190121 11:59:20.932" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:20.942" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:20.935" endtime="20190121 11:59:20.944" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:20.853" endtime="20190121 11:59:20.947" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:21.086" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:21.113" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:21.133" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:21.136" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:21.080" endtime="20190121 11:59:21.137" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:21.154" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:21.141" endtime="20190121 11:59:21.155" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:21.166" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:21.158" endtime="20190121 11:59:21.167" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:21.071" endtime="20190121 11:59:21.170" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:21.308" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:21.334" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:21.354" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:21.359" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:21.301" endtime="20190121 11:59:21.360" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:21.373" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:21.363" endtime="20190121 11:59:21.374" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:21.385" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:21.377" endtime="20190121 11:59:21.387" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:21.293" endtime="20190121 11:59:21.390" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:21.566" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:21.619" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:21.639" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:21.642" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:21.548" endtime="20190121 11:59:21.643" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:21.656" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:21.647" endtime="20190121 11:59:21.657" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:21.668" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:21.660" endtime="20190121 11:59:21.670" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:21.518" endtime="20190121 11:59:21.673" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:21.811" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:21.838" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:21.857" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:21.860" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:21.804" endtime="20190121 11:59:21.861" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:21.874" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:21.865" endtime="20190121 11:59:21.875" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:21.886" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:21.878" endtime="20190121 11:59:21.888" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:21.796" endtime="20190121 11:59:21.891" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:22.029" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:22.056" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:22.076" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:22.079" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:22.023" endtime="20190121 11:59:22.080" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:22.097" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:22.084" endtime="20190121 11:59:22.098" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:22.109" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:22.101" endtime="20190121 11:59:22.111" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:22.014" endtime="20190121 11:59:22.114" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:22.251" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:22.278" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:22.299" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:22.302" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:22.245" endtime="20190121 11:59:22.303" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:22.316" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:22.307" endtime="20190121 11:59:22.317" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:22.328" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:22.320" endtime="20190121 11:59:22.329" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:22.237" endtime="20190121 11:59:22.332" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:22.471" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:22.497" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:22.518" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:22.521" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:22.464" endtime="20190121 11:59:22.522" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:22.535" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:22.526" endtime="20190121 11:59:22.536" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:22.546" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:22.538" endtime="20190121 11:59:22.548" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:22.456" endtime="20190121 11:59:22.551" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:22.689" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:22.716" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:22.736" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:22.740" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:22.682" endtime="20190121 11:59:22.741" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:22.754" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:22.745" endtime="20190121 11:59:22.755" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:22.766" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:22.758" endtime="20190121 11:59:22.767" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:22.674" endtime="20190121 11:59:22.770" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:22.908" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:22.936" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:22.956" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:22.959" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:22.901" endtime="20190121 11:59:22.960" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:22.973" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:22.964" endtime="20190121 11:59:22.974" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:22.989" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:22.977" endtime="20190121 11:59:22.991" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:22.893" endtime="20190121 11:59:22.994" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:23.132" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:23.159" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:23.179" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:23.183" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:23.125" endtime="20190121 11:59:23.184" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:23.196" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:23.187" endtime="20190121 11:59:23.197" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:23.209" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:23.200" endtime="20190121 11:59:23.210" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:23.117" endtime="20190121 11:59:23.213" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:23.351" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:23.378" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:23.398" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:23.402" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:23.345" endtime="20190121 11:59:23.403" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:23.415" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:23.406" endtime="20190121 11:59:23.416" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:23.427" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:23.419" endtime="20190121 11:59:23.429" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:23.336" endtime="20190121 11:59:23.432" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:23.570" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:23.597" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:23.617" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:23.620" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:23.563" endtime="20190121 11:59:23.621" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:23.634" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:23.625" endtime="20190121 11:59:23.635" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:23.646" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:23.638" endtime="20190121 11:59:23.647" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:23.555" endtime="20190121 11:59:23.650" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:23.789" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:23.815" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:23.835" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:23.838" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:23.782" endtime="20190121 11:59:23.839" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:23.855" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:23.845" endtime="20190121 11:59:23.856" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:23.874" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:23.859" endtime="20190121 11:59:23.875" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:23.774" endtime="20190121 11:59:23.879" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:24.017" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:24.043" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:24.064" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:24.067" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:24.010" endtime="20190121 11:59:24.067" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:24.081" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:24.071" endtime="20190121 11:59:24.081" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:24.094" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:24.086" endtime="20190121 11:59:24.095" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:24.002" endtime="20190121 11:59:24.099" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:24.237" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:24.265" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:24.286" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:24.289" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:24.230" endtime="20190121 11:59:24.290" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:24.303" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:24.294" endtime="20190121 11:59:24.304" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:24.315" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:24.307" endtime="20190121 11:59:24.316" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:24.222" endtime="20190121 11:59:24.319" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:24.458" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:24.486" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:24.506" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:24.511" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status starttime="20190121 11:59:24.451" endtime="20190121 11:59:24.528" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:24.554" level="INFO">${resp} = </msg>
<status starttime="20190121 11:59:24.531" endtime="20190121 11:59:24.555" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190121 11:59:24.592" level="FAIL">'' does not contain 'usb_max'</msg>
<status starttime="20190121 11:59:24.575" endtime="20190121 11:59:24.604" status="FAIL"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:24.443" endtime="20190121 11:59:24.607" status="FAIL"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:24.782" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190121 11:59:24.856" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:24.930" level="INFO">Process completed.</msg>
<msg timestamp="20190121 11:59:24.934" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status starttime="20190121 11:59:24.754" endtime="20190121 11:59:24.934" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Convert To String">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190121 11:59:24.962" level="INFO">${resp} = 64: usb_max: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</msg>
<status starttime="20190121 11:59:24.947" endtime="20190121 11:59:24.963" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<status starttime="20190121 11:59:24.975" endtime="20190121 11:59:24.990" status="PASS"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status starttime="20190121 11:59:24.738" endtime="20190121 11:59:24.998" status="PASS"></status>
</kw>
<status starttime="20190121 11:58:53.725" endtime="20190121 11:59:24.999" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:59:25.005" level="INFO">${STATUS} = True</msg>
<status starttime="20190121 11:58:53.719" endtime="20190121 11:59:25.007" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Get Time">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${secs}</var>
</assign>
<msg timestamp="20190121 11:59:25.090" level="INFO">${secs} = 1548071965</msg>
<status starttime="20190121 11:59:25.056" endtime="20190121 11:59:25.091" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DUT ready status: ${STATUS}, Timestamp: ${secs}</arg>
</arguments>
<status starttime="20190121 11:59:25.110" endtime="20190121 11:59:25.131" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3 seconds</arg>
</arguments>
<msg timestamp="20190121 11:59:28.161" level="INFO">Slept 3 seconds</msg>
<status starttime="20190121 11:59:25.150" endtime="20190121 11:59:28.163" status="PASS"></status>
</kw>
<msg timestamp="20190121 11:59:28.167" level="INFO">${status} = True</msg>
<status starttime="20190121 11:58:53.694" endtime="20190121 11:59:28.168" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Be True">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Device does not exist</arg>
</arguments>
<status starttime="20190121 11:59:28.171" endtime="20190121 11:59:28.176" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Wait Until Keyword Succeeds">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Open Ssh Connection">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg timestamp="20190121 11:59:28.192" level="INFO">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status starttime="20190121 11:59:28.186" endtime="20190121 11:59:29.049" status="PASS"></status>
</kw>
<status starttime="20190121 11:59:28.179" endtime="20190121 11:59:29.051" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh success!"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190121 11:59:29.057" level="INFO">"Setup ssh success!"</msg>
<status starttime="20190121 11:59:29.054" endtime="20190121 11:59:29.060" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>grep ${CarIfUpdater} ${result_file}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:29.068" level="INFO">Sending command to DUT grep CarIfUpdater /root/appl50571.txt</msg>
<msg timestamp="20190121 11:59:29.136" level="INFO">Returning data (CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_LD_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_PBL_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_PBL_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_Appl_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_Appl_OLU_0045_C2_0009.9.3.bin, )</msg>
<msg timestamp="20190121 11:59:29.139" level="INFO">${ret} = ('CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_LD_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/fir...</msg>
<status starttime="20190121 11:59:29.063" endtime="20190121 11:59:29.140" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status starttime="20190121 11:59:29.143" endtime="20190121 11:59:29.155" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Evaluate">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$ret[0]</arg>
</arguments>
<assign>
<var>${str_val}</var>
</assign>
<msg timestamp="20190121 11:59:29.184" level="INFO">${str_val} = CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_LD_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/firmw...</msg>
<status starttime="20190121 11:59:29.158" endtime="20190121 11:59:29.185" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Should Contain X Times">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${str_val}</arg>
<arg>${SUCCESS_STR}</arg>
<arg>3</arg>
<arg>ignore_case=True</arg>
</arguments>
<msg timestamp="20190121 11:59:29.195" level="INFO">Item found from the first item 3 times</msg>
<status starttime="20190121 11:59:29.188" endtime="20190121 11:59:29.208" status="PASS"></status>
</kw>
<status starttime="20190121 11:58:48.304" endtime="20190121 11:59:29.235" status="PASS"></status>
</kw>
<status starttime="20190121 11:57:11.054" endtime="20190121 11:59:29.241" status="PASS"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"Test_Teardown_Action"</arg>
</arguments>
<status starttime="20190121 11:59:29.265" endtime="20190121 11:59:29.287" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Run Ssh Command">
<doc>Execute command on DUT</doc>
<arguments>
<arg>systemctl poweroff</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190121 11:59:29.294" level="INFO">Sending command to DUT systemctl poweroff</msg>
<msg timestamp="20190121 11:59:29.410" level="INFO">Returning data (, )</msg>
<msg timestamp="20190121 11:59:29.413" level="INFO">${ret} = ('', '')</msg>
<status starttime="20190121 11:59:29.290" endtime="20190121 11:59:29.414" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Log To Console">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait until the device power down, it takes: ${SHUTDOWN_TIME}</arg>
</arguments>
<status starttime="20190121 11:59:29.417" endtime="20190121 11:59:29.429" status="PASS"></status>
</kw>
<kw library="BuiltIn" name="Sleep">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHUTDOWN_TIME}</arg>
</arguments>
<msg timestamp="20190121 11:59:44.437" level="INFO">Slept 15 seconds</msg>
<status starttime="20190121 11:59:29.432" endtime="20190121 11:59:44.439" status="PASS"></status>
</kw>
<kw library="lairdcvs.testlibrary.TestLibrary" name="Close Ssh Connection">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190121 11:59:44.446" level="INFO">Closing SSH connection to 192.168.1.101</msg>
<status starttime="20190121 11:59:44.442" endtime="20190121 11:59:44.448" status="PASS"></status>
</kw>
<kw library="Process" name="Run Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill ping</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20190121 11:59:44.455" level="INFO">Starting process:
pkill ping</msg>
<msg timestamp="20190121 11:59:44.483" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190121 11:59:44.518" level="INFO">Process completed.</msg>
<status starttime="20190121 11:59:44.451" endtime="20190121 11:59:44.520" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Production Mode">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:59:44.524" endtime="20190121 11:59:44.573" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 15">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:59:44.577" endtime="20190121 11:59:44.624" status="PASS"></status>
</kw>
<kw library="robot_framework_tnt.Client" name="Kl 30">
<arguments>
<arg>${0}</arg>
</arguments>
<status starttime="20190121 11:59:44.628" endtime="20190121 11:59:44.675" status="PASS"></status>
</kw>
<status starttime="20190121 11:59:29.258" endtime="20190121 11:59:44.679" status="PASS"></status>
</kw>
<doc>Implements Test Task SKTB-50571 OTA chorus update</doc>
<tags>
<tag>OTA flashing</tag>
</tags>
<status starttime="20190121 11:56:04.786" critical="yes" endtime="20190121 11:59:44.680" status="PASS"></status>
</test>
<kw library="chorus_resource" name="Teardown Actions" type="teardown">
<kw library="BuiltIn" name="Run Keyword If">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw library="robot_framework_tnt.Client" name="Close Connection">
<msg timestamp="20190121 11:59:46.236" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190121 11:59:46.279" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status starttime="20190121 11:59:44.727" endtime="20190121 11:59:46.280" status="PASS"></status>
</kw>
<status starttime="20190121 11:59:44.698" endtime="20190121 11:59:46.281" status="PASS"></status>
</kw>
<status starttime="20190121 11:59:44.691" endtime="20190121 11:59:46.300" status="PASS"></status>
</kw>
<doc>OTA flashing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status starttime="20190121 11:56:02.005" endtime="20190121 11:59:46.301" status="PASS"></status>
</suite>
<status starttime="20190121 11:31:38.886" endtime="20190121 11:59:46.651" status="FAIL"></status>
</suite>
<statistics>
<total>
<stat fail="6" pass="15">Critical Tests</stat>
<stat fail="6" pass="15">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">CAN 1 diagnose test</stat>
<stat fail="0" pass="1">CAN 3 test</stat>
<stat fail="0" pass="1">CAN 3 test TX</stat>
<stat fail="0" pass="1">EEPROM</stat>
<stat fail="1" pass="0">Eeprom OTP Value</stat>
<stat fail="0" pass="4">FBUS</stat>
<stat fail="0" pass="3">Flashing</stat>
<stat fail="2" pass="0">GpioAdc testroutine</stat>
<stat fail="1" pass="2">GPIO Test</stat>
<stat fail="0" pass="1">OTA flashing</stat>
<stat fail="1" pass="0">Powermanagement test</stat>
<stat fail="1" pass="0">Power testroutine</stat>
<stat fail="0" pass="1">Vehicle buses testroutine</stat>
</tag>
<suite>
<stat fail="6" id="s1" name="Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571" pass="15">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571</stat>
<stat fail="0" id="s1-s1" name="Update-Nad" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.Update-Nad</stat>
<stat fail="0" id="s1-s2" name="CI update chorus" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.CI update chorus</stat>
<stat fail="0" id="s1-s3" name="SKTB-31396" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-31396</stat>
<stat fail="1" id="s1-s4" name="SKTB-31405" pass="0">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-31405</stat>
<stat fail="1" id="s1-s5" name="SKTB-33244" pass="0">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-33244</stat>
<stat fail="0" id="s1-s6" name="SKTB-13351" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-13351</stat>
<stat fail="0" id="s1-s7" name="SKTB-34994" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-34994</stat>
<stat fail="1" id="s1-s8" name="SKTB-40097" pass="0">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-40097</stat>
<stat fail="0" id="s1-s9" name="SKTB-41635" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-41635</stat>
<stat fail="0" id="s1-s10" name="SKTB-46886" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-46886</stat>
<stat fail="0" id="s1-s11" name="SKTB-47669" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-47669</stat>
<stat fail="0" id="s1-s12" name="SKTB-48413" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-48413</stat>
<stat fail="1" id="s1-s13" name="SKTB-49038" pass="0">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-49038</stat>
<stat fail="0" id="s1-s14" name="SKTB-49357" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-49357</stat>
<stat fail="0" id="s1-s15" name="SKTB-41553" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-41553</stat>
<stat fail="0" id="s1-s16" name="SKTB-56663" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56663</stat>
<stat fail="1" id="s1-s17" name="SKTB-56067" pass="0">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56067</stat>
<stat fail="0" id="s1-s18" name="SKTB-56094" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56094</stat>
<stat fail="1" id="s1-s19" name="SKTB-55194" pass="0">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-55194</stat>
<stat fail="0" id="s1-s20" name="SKTB-FLASHDOWN" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-FLASHDOWN</stat>
<stat fail="0" id="s1-s21" name="SKTB-50571" pass="1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-50571</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
