<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20190116 18:18:04.879" generator="Robot 3.0.2 (Python 3.5.3 on linux)">
<suite name="Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571" id="s1">
<suite name="Update-Nad" source="/usr/share/robot-framework-scripts/robot-framework-chorus/update-nad.robot" id="s1-s1">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:18:10.370" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:18:10.365" endtime="20190116 18:18:10.372"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:18:10.384" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:18:10.385" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:18:12.309" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:18:10.375" endtime="20190116 18:18:12.310"></status>
</kw>
<status status="PASS" starttime="20190116 18:18:10.359" endtime="20190116 18:18:12.312"></status>
</kw>
<test name="SKTB-13351 FBUS test" id="s1-s1-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:18:12.330" endtime="20190116 18:18:12.379"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:18:12.383" endtime="20190116 18:18:12.431"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:18:12.435" endtime="20190116 18:18:12.482"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:18:14.490" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:18:12.486" endtime="20190116 18:18:14.493"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:18:14.495" endtime="20190116 18:18:14.542"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:18:14.546" endtime="20190116 18:18:14.594"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>45s</arg>
</arguments>
<msg timestamp="20190116 18:18:59.602" level="INFO">Slept 45 seconds</msg>
<status status="PASS" starttime="20190116 18:18:14.598" endtime="20190116 18:18:59.604"></status>
</kw>
<status status="PASS" starttime="20190116 18:18:12.324" endtime="20190116 18:18:59.606"></status>
</kw>
<kw name="Step_1">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:18:59.619" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</msg>
<msg timestamp="20190116 18:18:59.643" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:19:05.077" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:19:05.080" level="INFO">${info} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:18:59.615" endtime="20190116 18:19:05.081"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:05.085" endtime="20190116 18:19:05.093"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:19:05.100" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</msg>
<msg timestamp="20190116 18:19:05.123" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:19:06.091" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:19:06.094" level="INFO">${info} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:19:05.096" endtime="20190116 18:19:06.095"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:06.100" endtime="20190116 18:19:06.107"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:19:06.114" level="INFO">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</msg>
<msg timestamp="20190116 18:19:06.138" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:19:06.948" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:19:06.951" level="INFO">${info} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:19:06.110" endtime="20190116 18:19:06.951"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:06.956" endtime="20190116 18:19:06.963"></status>
</kw>
<status status="PASS" starttime="20190116 18:18:59.609" endtime="20190116 18:19:06.966"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:06.976" endtime="20190116 18:19:07.030"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:07.038" endtime="20190116 18:19:07.080"></status>
</kw>
<status status="PASS" starttime="20190116 18:19:06.970" endtime="20190116 18:19:07.089"></status>
</kw>
<doc>Implements Test Task SKTB-update-nad</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status status="FAIL" starttime="20190116 18:18:12.314" critical="yes" endtime="20190116 18:19:07.090"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:19:08.846" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:19:08.932" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:19:07.417" endtime="20190116 18:19:08.943"></status>
</kw>
<status status="PASS" starttime="20190116 18:19:07.196" endtime="20190116 18:19:08.948"></status>
</kw>
<status status="PASS" starttime="20190116 18:19:07.173" endtime="20190116 18:19:08.951"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:18:05.340" endtime="20190116 18:19:08.951"></status>
</suite>
<suite name="CI update chorus" source="/usr/share/robot-framework-scripts/robot-framework-chorus/CI_update_chorus.robot" id="s1-s2">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:19:09.425" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:19:09.401" endtime="20190116 18:19:09.428"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:19:09.436" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:19:09.438" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:19:11.457" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:19:09.431" endtime="20190116 18:19:11.458"></status>
</kw>
<status status="PASS" starttime="20190116 18:19:09.395" endtime="20190116 18:19:11.461"></status>
</kw>
<test name="Ci_update_chorus Chorus SW Flashing" id="s1-s2-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:11.483" endtime="20190116 18:19:11.533"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:11.536" endtime="20190116 18:19:11.584"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:11.587" endtime="20190116 18:19:11.677"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:19:13.688" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:19:11.680" endtime="20190116 18:19:13.690"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:13.693" endtime="20190116 18:19:13.763"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:13.766" endtime="20190116 18:19:13.814"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:19:13.818" endtime="20190116 18:19:13.865"></status>
</kw>
<status status="PASS" starttime="20190116 18:19:11.476" endtime="20190116 18:19:13.868"></status>
</kw>
<kw name="Step_1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:19:15.880" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:19:13.876" endtime="20190116 18:19:15.882"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:20:41.345" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:19:15.885" endtime="20190116 18:20:41.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:20:41.353" level="INFO">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:20:41.349" endtime="20190116 18:20:41.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:41.358" endtime="20190116 18:20:41.363"></status>
</kw>
<status status="PASS" starttime="20190116 18:19:13.870" endtime="20190116 18:20:41.366"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:41.376" endtime="20190116 18:20:41.425"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:41.428" endtime="20190116 18:20:41.474"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:41.477" endtime="20190116 18:20:41.525"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:41.528" endtime="20190116 18:20:41.576"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:41.579" endtime="20190116 18:20:41.626"></status>
</kw>
<status status="PASS" starttime="20190116 18:20:41.369" endtime="20190116 18:20:41.629"></status>
</kw>
<doc>Implements Test Task Ci_update_chorus</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status status="PASS" starttime="20190116 18:19:11.466" critical="yes" endtime="20190116 18:20:41.631"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:20:43.133" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:20:43.199" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:20:41.668" endtime="20190116 18:20:43.201"></status>
</kw>
<status status="PASS" starttime="20190116 18:20:41.646" endtime="20190116 18:20:43.202"></status>
</kw>
<status status="PASS" starttime="20190116 18:20:41.641" endtime="20190116 18:20:43.204"></status>
</kw>
<doc>Serial flashing test fof CI</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:19:09.074" endtime="20190116 18:20:43.205"></status>
</suite>
<suite name="SKTB-31396" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-31396.robot" id="s1-s3">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:20:43.740" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:20:43.724" endtime="20190116 18:20:43.754"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:20:43.777" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:20:43.778" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:20:45.799" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:20:43.757" endtime="20190116 18:20:45.816"></status>
</kw>
<status status="PASS" starttime="20190116 18:20:43.718" endtime="20190116 18:20:45.819"></status>
</kw>
<test name="SKTB-31396 Chorus SW Flashing" id="s1-s3-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:45.868" endtime="20190116 18:20:45.997"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:45.999" endtime="20190116 18:20:46.167"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:46.175" endtime="20190116 18:20:46.340"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:20:48.371" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:20:46.347" endtime="20190116 18:20:48.373"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:48.376" endtime="20190116 18:20:48.421"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:48.424" endtime="20190116 18:20:48.472"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:20:48.475" endtime="20190116 18:20:48.525"></status>
</kw>
<status status="PASS" starttime="20190116 18:20:45.848" endtime="20190116 18:20:48.528"></status>
</kw>
<kw name="Step_1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:20:50.542" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:20:48.537" endtime="20190116 18:20:50.544"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:22:17.085" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:20:50.547" endtime="20190116 18:22:17.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:22:17.093" level="INFO">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:22:17.089" endtime="20190116 18:22:17.095"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:22:19.102" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:22:17.098" endtime="20190116 18:22:19.105"></status>
</kw>
<status status="PASS" starttime="20190116 18:20:48.531" endtime="20190116 18:22:19.107"></status>
</kw>
<kw name="Step_2">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:22:21.119" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:22:19.114" endtime="20190116 18:22:21.121"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:23:48.235" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:22:21.124" endtime="20190116 18:23:48.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:23:48.244" level="INFO">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:23:48.240" endtime="20190116 18:23:48.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:23:48.249" endtime="20190116 18:23:48.254"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:23:50.261" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:23:48.257" endtime="20190116 18:23:50.263"></status>
</kw>
<status status="PASS" starttime="20190116 18:22:19.109" endtime="20190116 18:23:50.265"></status>
</kw>
<kw name="Step_3">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:23:52.277" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:23:50.272" endtime="20190116 18:23:52.279"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH_PBL_CORRUPT}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:24:39.168" level="INFO">${RESULT} = Error transferring from pos: 122368</msg>
<status status="PASS" starttime="20190116 18:23:52.282" endtime="20190116 18:24:39.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:24:39.176" level="INFO">Error transferring from pos: 122368</msg>
<status status="PASS" starttime="20190116 18:24:39.172" endtime="20190116 18:24:39.179"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:24:39.182" endtime="20190116 18:24:39.186"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:24:41.193" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:24:39.189" endtime="20190116 18:24:41.195"></status>
</kw>
<status status="PASS" starttime="20190116 18:23:50.267" endtime="20190116 18:24:41.197"></status>
</kw>
<kw name="Step_4">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:24:43.209" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:24:41.205" endtime="20190116 18:24:43.211"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH_APPL_CORRUPT}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:26:02.885" level="INFO">${RESULT} = Error transferring from pos: 383744</msg>
<status status="PASS" starttime="20190116 18:24:43.214" endtime="20190116 18:26:02.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:26:02.894" level="INFO">Error transferring from pos: 383744</msg>
<status status="PASS" starttime="20190116 18:26:02.889" endtime="20190116 18:26:02.898"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:26:02.901" endtime="20190116 18:26:02.907"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:26:04.913" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:26:02.909" endtime="20190116 18:26:04.915"></status>
</kw>
<status status="PASS" starttime="20190116 18:24:41.199" endtime="20190116 18:26:04.918"></status>
</kw>
<kw name="Step_5">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:26:06.930" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:26:04.926" endtime="20190116 18:26:06.932"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:27:33.070" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:26:06.935" endtime="20190116 18:27:33.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:27:33.130" level="INFO">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:27:33.108" endtime="20190116 18:27:33.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:27:33.158" endtime="20190116 18:27:33.190"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:27:35.218" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:27:33.197" endtime="20190116 18:27:35.220"></status>
</kw>
<status status="PASS" starttime="20190116 18:26:04.920" endtime="20190116 18:27:35.222"></status>
</kw>
<kw name="Step_6">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:27:37.234" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:27:35.230" endtime="20190116 18:27:37.237"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:29:03.091" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:27:37.239" endtime="20190116 18:29:03.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:29:03.099" level="INFO">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:29:03.095" endtime="20190116 18:29:03.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:29:03.104" endtime="20190116 18:29:03.109"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:29:05.116" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:29:03.112" endtime="20190116 18:29:05.118"></status>
</kw>
<status status="PASS" starttime="20190116 18:27:35.224" endtime="20190116 18:29:05.120"></status>
</kw>
<kw name="Step_7">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:29:07.132" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:29:05.128" endtime="20190116 18:29:07.134"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:30:32.485" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:29:07.137" endtime="20190116 18:30:32.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:30:32.531" level="INFO">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:30:32.522" endtime="20190116 18:30:32.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:32.557" endtime="20190116 18:30:32.593"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:30:34.604" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:30:32.596" endtime="20190116 18:30:34.606"></status>
</kw>
<status status="PASS" starttime="20190116 18:29:05.122" endtime="20190116 18:30:34.608"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:34.618" endtime="20190116 18:30:34.665"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:34.668" endtime="20190116 18:30:34.762"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:34.765" endtime="20190116 18:30:34.852"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:34.859" endtime="20190116 18:30:34.910"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:34.913" endtime="20190116 18:30:34.960"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:34.611" endtime="20190116 18:30:34.963"></status>
</kw>
<doc>Implements Test Task SKTB-31396</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status status="PASS" starttime="20190116 18:20:45.821" critical="yes" endtime="20190116 18:30:34.964"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:30:36.463" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:30:36.542" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:30:35.003" endtime="20190116 18:30:36.544"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:34.981" endtime="20190116 18:30:36.545"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:34.975" endtime="20190116 18:30:36.562"></status>
</kw>
<doc>Serial flashing test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:20:43.330" endtime="20190116 18:30:36.563"></status>
</suite>
<suite name="SKTB-31405" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-31405.robot" id="s1-s4">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:30:37.065" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:30:37.053" endtime="20190116 18:30:37.077"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:30:37.094" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:30:37.096" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:30:39.253" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:30:37.080" endtime="20190116 18:30:39.254"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:37.047" endtime="20190116 18:30:39.257"></status>
</kw>
<test name="SKTB-31405 GpioAdc testroutine" id="s1-s4-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:39.303" endtime="20190116 18:30:39.393"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:39.396" endtime="20190116 18:30:39.530"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:39.533" endtime="20190116 18:30:39.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:30:41.646" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:30:39.641" endtime="20190116 18:30:41.649"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:41.651" endtime="20190116 18:30:41.699"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:30:42.707" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:30:41.703" endtime="20190116 18:30:42.709"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:42.712" endtime="20190116 18:30:42.759"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:30:44.767" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:30:42.762" endtime="20190116 18:30:44.769"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:44.771" endtime="20190116 18:30:44.817"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:44.819" endtime="20190116 18:30:44.866"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:44.869" endtime="20190116 18:30:44.915"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:44.918" endtime="20190116 18:30:44.965"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:39.288" endtime="20190116 18:30:44.968"></status>
</kw>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:45.041" level="INFO">${res_dict} = {'status': True, 'request': '41', 'result': '4153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:30:44.978" endtime="20190116 18:30:45.042"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:45.069" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:30:45.045" endtime="20190116 18:30:45.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:45.073" endtime="20190116 18:30:45.079"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:30:46.086" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:30:45.082" endtime="20190116 18:30:46.089"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:44.971" endtime="20190116 18:30:46.091"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:46.159" level="INFO">${res_dict} = {'status': True, 'request': '41', 'result': '4153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:30:46.098" endtime="20190116 18:30:46.160"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:46.185" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:30:46.163" endtime="20190116 18:30:46.186"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:46.189" endtime="20190116 18:30:46.193"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:30:47.200" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:30:46.196" endtime="20190116 18:30:47.202"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:46.093" endtime="20190116 18:30:47.205"></status>
</kw>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190116 18:30:47.233" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg timestamp="20190116 18:30:47.258" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:30:47.273" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:30:47.276" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:30:47.228" endtime="20190116 18:30:47.277"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190116 18:30:47.286" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:30:47.281" endtime="20190116 18:30:47.287"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:30:47.294" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:30:47.296" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190116 18:30:47.290" endtime="20190116 18:30:47.297"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190116 18:30:47.305" level="INFO">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:30:47.300" endtime="20190116 18:30:47.306"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:47.309" endtime="20190116 18:30:47.314"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190116 18:30:47.322" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190116 18:30:47.317" endtime="20190116 18:30:47.323"></status>
</kw>
<msg timestamp="20190116 18:30:47.327" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:30:47.212" endtime="20190116 18:30:47.328"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:47.478" level="INFO">${res_dict} = {'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': '0468781f'}</msg>
<status status="PASS" starttime="20190116 18:30:47.331" endtime="20190116 18:30:47.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:30:47.490" level="INFO">{'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': '0468781f'}</msg>
<status status="PASS" starttime="20190116 18:30:47.486" endtime="20190116 18:30:47.493"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:30:49.500" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:30:47.495" endtime="20190116 18:30:49.502"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:49.529" level="INFO">${value} = 5453</msg>
<status status="PASS" starttime="20190116 18:30:49.505" endtime="20190116 18:30:49.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:49.533" endtime="20190116 18:30:49.538"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:47.207" endtime="20190116 18:30:49.541"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:49.609" level="INFO">${res_dict} = {'status': True, 'request': '49', 'result': '4953', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:30:49.549" endtime="20190116 18:30:49.610"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:49.670" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:30:49.613" endtime="20190116 18:30:49.671"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:49.674" endtime="20190116 18:30:49.679"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:30:50.698" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:30:49.693" endtime="20190116 18:30:50.700"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:49.543" endtime="20190116 18:30:50.702"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:50.773" level="INFO">${res_dict} = {'status': True, 'request': '4756', 'result': '475653', 'data': '0201'}</msg>
<status status="PASS" starttime="20190116 18:30:50.710" endtime="20190116 18:30:50.774"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:30:51.782" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:30:50.778" endtime="20190116 18:30:51.784"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:50.704" endtime="20190116 18:30:51.786"></status>
</kw>
<kw name="Step_gpio_select">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:51.855" level="INFO">${res_dict} = {'status': True, 'request': '53460000006d', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:30:51.794" endtime="20190116 18:30:51.856"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:51.883" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:30:51.858" endtime="20190116 18:30:51.884"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:51.887" endtime="20190116 18:30:51.891"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:51.954" level="INFO">${res_dict} = {'status': True, 'request': '5201', 'result': '520153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:30:51.894" endtime="20190116 18:30:51.955"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:51.983" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:30:51.958" endtime="20190116 18:30:51.983"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:51.986" endtime="20190116 18:30:51.990"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:30:52.997" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:30:51.993" endtime="20190116 18:30:52.999"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:51.788" endtime="20190116 18:30:53.002"></status>
</kw>
<kw name="Step_gpio_write">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:53.074" level="INFO">${res_dict} = {'status': True, 'request': '534600000001', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:30:53.012" endtime="20190116 18:30:53.074"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:53.100" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:30:53.077" endtime="20190116 18:30:53.101"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:53.104" endtime="20190116 18:30:53.108"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioWrite}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:53.171" level="INFO">${res_dict} = {'status': True, 'request': '5204', 'result': '520453', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:30:53.111" endtime="20190116 18:30:53.172"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:53.198" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:30:53.175" endtime="20190116 18:30:53.199"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:53.202" endtime="20190116 18:30:53.208"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:30:54.215" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:30:53.211" endtime="20190116 18:30:54.217"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:53.004" endtime="20190116 18:30:54.219"></status>
</kw>
<kw name="Step_adc_read_channel">
<kw name="check_analog_channel">
<arguments>
<arg>${CARBAT_V_SENSE}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:54.294" level="INFO">${res_dict} = {'status': True, 'request': '53460000004d', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:30:54.233" endtime="20190116 18:30:54.295"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:54.323" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:30:54.299" endtime="20190116 18:30:54.324"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:54.327" endtime="20190116 18:30:54.331"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:54.394" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:30:54.334" endtime="20190116 18:30:54.395"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:54.422" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:30:54.398" endtime="20190116 18:30:54.423"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:54.426" endtime="20190116 18:30:54.430"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:30:54.497" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000650'}</msg>
<status status="PASS" starttime="20190116 18:30:54.433" endtime="20190116 18:30:54.498"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:30:54.524" level="INFO">${value} = 00000650</msg>
<status status="PASS" starttime="20190116 18:30:54.501" endtime="20190116 18:30:54.525"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:30:54.534" level="INFO">${adcvalue} = 1616</msg>
<status status="PASS" starttime="20190116 18:30:54.528" endtime="20190116 18:30:54.535"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:54.537" endtime="20190116 18:30:54.543"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:54.226" endtime="20190116 18:30:54.546"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:54.221" endtime="20190116 18:30:54.549"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:54.558" endtime="20190116 18:30:54.606"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:54.609" endtime="20190116 18:30:54.655"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:54.659" endtime="20190116 18:30:54.705"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:30:56.713" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:30:54.708" endtime="20190116 18:30:56.715"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:30:56.718" endtime="20190116 18:30:56.763"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:54.552" endtime="20190116 18:30:56.766"></status>
</kw>
<doc>Implements Test Task SKTB-31405</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status status="PASS" starttime="20190116 18:30:39.259" critical="yes" endtime="20190116 18:30:56.767"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:30:58.271" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:30:58.360" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:30:56.808" endtime="20190116 18:30:58.394"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:56.783" endtime="20190116 18:30:58.395"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:56.777" endtime="20190116 18:30:58.401"></status>
</kw>
<doc>Chorus GpioAdc testing with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:30:36.665" endtime="20190116 18:30:58.409"></status>
</suite>
<suite name="SKTB-33244" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-33244.robot" id="s1-s5">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:30:59.038" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:30:59.027" endtime="20190116 18:30:59.050"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:30:59.059" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:30:59.069" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:31:01.297" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:30:59.053" endtime="20190116 18:31:01.299"></status>
</kw>
<status status="PASS" starttime="20190116 18:30:59.021" endtime="20190116 18:31:01.312"></status>
</kw>
<test name="SKTB-33244 Test ADC channels" id="s1-s5-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:01.363" endtime="20190116 18:31:01.450"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:01.453" endtime="20190116 18:31:01.541"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:01.544" endtime="20190116 18:31:01.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:31:03.646" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:31:01.625" endtime="20190116 18:31:03.648"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:03.661" endtime="20190116 18:31:03.824"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:31:04.879" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:31:03.835" endtime="20190116 18:31:04.881"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:04.884" endtime="20190116 18:31:04.970"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:31:06.977" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:31:04.973" endtime="20190116 18:31:06.979"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:06.982" endtime="20190116 18:31:07.028"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:07.031" endtime="20190116 18:31:07.077"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:07.082" endtime="20190116 18:31:07.128"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:07.131" endtime="20190116 18:31:07.177"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:01.337" endtime="20190116 18:31:07.179"></status>
</kw>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:07.249" level="INFO">${res_dict} = {'status': True, 'request': '41', 'result': '4153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:07.189" endtime="20190116 18:31:07.250"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:07.282" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:07.253" endtime="20190116 18:31:07.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:07.286" endtime="20190116 18:31:07.293"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:31:08.300" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:31:07.296" endtime="20190116 18:31:08.302"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:07.183" endtime="20190116 18:31:08.304"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:08.373" level="INFO">${res_dict} = {'status': True, 'request': '41', 'result': '4153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:08.312" endtime="20190116 18:31:08.374"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:08.407" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:08.377" endtime="20190116 18:31:08.407"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:08.410" endtime="20190116 18:31:08.414"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:31:09.422" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:31:08.417" endtime="20190116 18:31:09.424"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:08.306" endtime="20190116 18:31:09.426"></status>
</kw>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190116 18:31:09.446" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg timestamp="20190116 18:31:09.470" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:09.485" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:09.488" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:31:09.441" endtime="20190116 18:31:09.489"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190116 18:31:09.498" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:31:09.492" endtime="20190116 18:31:09.498"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:31:09.505" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:31:09.508" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190116 18:31:09.501" endtime="20190116 18:31:09.509"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190116 18:31:09.516" level="INFO">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:31:09.511" endtime="20190116 18:31:09.517"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:09.520" endtime="20190116 18:31:09.525"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190116 18:31:09.532" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190116 18:31:09.528" endtime="20190116 18:31:09.534"></status>
</kw>
<msg timestamp="20190116 18:31:09.538" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:31:09.433" endtime="20190116 18:31:09.539"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:09.682" level="INFO">${res_dict} = {'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': '0468781f'}</msg>
<status status="PASS" starttime="20190116 18:31:09.542" endtime="20190116 18:31:09.682"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:31:11.697" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:31:09.692" endtime="20190116 18:31:11.699"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:11.732" level="INFO">${value} = 5453</msg>
<status status="PASS" starttime="20190116 18:31:11.702" endtime="20190116 18:31:11.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:11.736" endtime="20190116 18:31:11.742"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:09.428" endtime="20190116 18:31:11.744"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:11.812" level="INFO">${res_dict} = {'status': True, 'request': '49', 'result': '4953', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:11.752" endtime="20190116 18:31:11.813"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:11.845" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:11.816" endtime="20190116 18:31:11.846"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:11.849" endtime="20190116 18:31:11.853"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:31:12.865" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:31:11.856" endtime="20190116 18:31:12.867"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:11.746" endtime="20190116 18:31:12.869"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:12.943" level="INFO">${res_dict} = {'status': True, 'request': '4756', 'result': '475653', 'data': '0201'}</msg>
<status status="PASS" starttime="20190116 18:31:12.878" endtime="20190116 18:31:12.944"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:31:13.951" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:31:12.947" endtime="20190116 18:31:13.954"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:12.871" endtime="20190116 18:31:13.956"></status>
</kw>
<kw name="Step_gpio_select">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:14.026" level="INFO">${res_dict} = {'status': True, 'request': '53460000006d', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:13.964" endtime="20190116 18:31:14.026"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:14.061" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:14.029" endtime="20190116 18:31:14.062"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:14.065" endtime="20190116 18:31:14.069"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:14.133" level="INFO">${res_dict} = {'status': True, 'request': '5201', 'result': '520153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:14.072" endtime="20190116 18:31:14.134"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:14.166" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:14.137" endtime="20190116 18:31:14.167"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:14.170" endtime="20190116 18:31:14.174"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:31:15.181" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:31:14.176" endtime="20190116 18:31:15.183"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:13.958" endtime="20190116 18:31:15.186"></status>
</kw>
<kw name="Step_gpio_write">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:15.254" level="INFO">${res_dict} = {'status': True, 'request': '534600000001', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:15.194" endtime="20190116 18:31:15.255"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:15.288" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:15.259" endtime="20190116 18:31:15.288"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:15.291" endtime="20190116 18:31:15.296"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioWrite}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:15.359" level="INFO">${res_dict} = {'status': True, 'request': '5204', 'result': '520453', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:15.298" endtime="20190116 18:31:15.361"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:15.393" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:15.364" endtime="20190116 18:31:15.394"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:15.396" endtime="20190116 18:31:15.401"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:31:16.407" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:31:15.403" endtime="20190116 18:31:16.410"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:15.188" endtime="20190116 18:31:16.412"></status>
</kw>
<kw name="Step_adc_read_channel">
<kw name="check_analog_channel">
<arguments>
<arg>${CARBAT_V_SENSE}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:16.487" level="INFO">${res_dict} = {'status': True, 'request': '53460000004d', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:16.426" endtime="20190116 18:31:16.489"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:16.521" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:16.491" endtime="20190116 18:31:16.522"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:16.525" endtime="20190116 18:31:16.529"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:16.592" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:16.531" endtime="20190116 18:31:16.593"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:16.627" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:16.596" endtime="20190116 18:31:16.629"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:16.632" endtime="20190116 18:31:16.636"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:16.703" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000650'}</msg>
<status status="PASS" starttime="20190116 18:31:16.639" endtime="20190116 18:31:16.705"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:16.738" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:16.708" endtime="20190116 18:31:16.738"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:16.741" endtime="20190116 18:31:16.745"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:16.781" level="INFO">${value} = 00000650</msg>
<status status="PASS" starttime="20190116 18:31:16.748" endtime="20190116 18:31:16.782"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:16.791" level="INFO">${adcvalue} = 1616</msg>
<status status="PASS" starttime="20190116 18:31:16.785" endtime="20190116 18:31:16.792"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:16.794" endtime="20190116 18:31:16.800"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:16.419" endtime="20190116 18:31:16.802"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${DIAG_HI_SIDE_CS}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:16.873" level="INFO">${res_dict} = {'status': True, 'request': '534600000011', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:16.811" endtime="20190116 18:31:16.874"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:16.906" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:16.877" endtime="20190116 18:31:16.907"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:16.910" endtime="20190116 18:31:16.914"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:16.978" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:16.917" endtime="20190116 18:31:16.979"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:17.012" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:16.982" endtime="20190116 18:31:17.013"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:17.016" endtime="20190116 18:31:17.020"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:17.087" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000000'}</msg>
<status status="PASS" starttime="20190116 18:31:17.023" endtime="20190116 18:31:17.087"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:17.121" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:17.091" endtime="20190116 18:31:17.122"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:17.125" endtime="20190116 18:31:17.129"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:17.162" level="INFO">${value} = 00000000</msg>
<status status="PASS" starttime="20190116 18:31:17.132" endtime="20190116 18:31:17.163"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:17.172" level="INFO">${adcvalue} = 0</msg>
<status status="PASS" starttime="20190116 18:31:17.166" endtime="20190116 18:31:17.173"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:17.175" endtime="20190116 18:31:17.181"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:16.804" endtime="20190116 18:31:17.183"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${MIC_DIAG_1}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:17.253" level="INFO">${res_dict} = {'status': True, 'request': '534600000018', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:17.192" endtime="20190116 18:31:17.254"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:17.287" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:17.257" endtime="20190116 18:31:17.287"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:17.290" endtime="20190116 18:31:17.294"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:17.359" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:17.297" endtime="20190116 18:31:17.360"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:17.393" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:17.363" endtime="20190116 18:31:17.394"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:17.397" endtime="20190116 18:31:17.402"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:17.469" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000000'}</msg>
<status status="PASS" starttime="20190116 18:31:17.405" endtime="20190116 18:31:17.470"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:17.502" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:17.473" endtime="20190116 18:31:17.503"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:17.506" endtime="20190116 18:31:17.510"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:17.543" level="INFO">${value} = 00000000</msg>
<status status="PASS" starttime="20190116 18:31:17.513" endtime="20190116 18:31:17.544"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:17.553" level="INFO">${adcvalue} = 0</msg>
<status status="PASS" starttime="20190116 18:31:17.547" endtime="20190116 18:31:17.554"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:17.556" endtime="20190116 18:31:17.562"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:17.185" endtime="20190116 18:31:17.564"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${MIC_DIAG_2}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:17.663" level="INFO">${res_dict} = {'status': True, 'request': '534600000019', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:17.574" endtime="20190116 18:31:17.665"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:17.697" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:17.668" endtime="20190116 18:31:17.698"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:17.701" endtime="20190116 18:31:17.705"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:17.854" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:17.708" endtime="20190116 18:31:17.855"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:17.964" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:17.862" endtime="20190116 18:31:17.965"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:17.968" endtime="20190116 18:31:17.973"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:18.079" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000000'}</msg>
<status status="PASS" starttime="20190116 18:31:17.980" endtime="20190116 18:31:18.081"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:18.161" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:18.083" endtime="20190116 18:31:18.162"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:18.165" endtime="20190116 18:31:18.171"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:18.203" level="INFO">${value} = 00000000</msg>
<status status="PASS" starttime="20190116 18:31:18.174" endtime="20190116 18:31:18.204"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:18.213" level="INFO">${adcvalue} = 0</msg>
<status status="PASS" starttime="20190116 18:31:18.207" endtime="20190116 18:31:18.214"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:18.217" endtime="20190116 18:31:18.222"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:17.566" endtime="20190116 18:31:18.224"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${BUTTON_ADC1}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:18.306" level="INFO">${res_dict} = {'status': True, 'request': '53460000001a', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:18.234" endtime="20190116 18:31:18.307"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:18.341" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:18.311" endtime="20190116 18:31:18.342"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:18.345" endtime="20190116 18:31:18.350"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:18.414" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:18.353" endtime="20190116 18:31:18.414"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:18.447" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:18.417" endtime="20190116 18:31:18.448"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:18.451" endtime="20190116 18:31:18.455"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:18.522" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000186'}</msg>
<status status="PASS" starttime="20190116 18:31:18.458" endtime="20190116 18:31:18.522"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:18.556" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:18.526" endtime="20190116 18:31:18.557"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:18.560" endtime="20190116 18:31:18.564"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:18.597" level="INFO">${value} = 00000186</msg>
<status status="PASS" starttime="20190116 18:31:18.567" endtime="20190116 18:31:18.598"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:18.607" level="INFO">${adcvalue} = 390</msg>
<status status="PASS" starttime="20190116 18:31:18.600" endtime="20190116 18:31:18.607"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:18.610" endtime="20190116 18:31:18.616"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:18.226" endtime="20190116 18:31:18.618"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${BUTTON_ADC2}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:18.689" level="INFO">${res_dict} = {'status': True, 'request': '53460000001b', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:18.628" endtime="20190116 18:31:18.690"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:18.722" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:18.693" endtime="20190116 18:31:18.723"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:18.726" endtime="20190116 18:31:18.730"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:18.795" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:18.733" endtime="20190116 18:31:18.796"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:18.829" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:18.799" endtime="20190116 18:31:18.830"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:18.833" endtime="20190116 18:31:18.837"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:18.903" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '000001c8'}</msg>
<status status="PASS" starttime="20190116 18:31:18.840" endtime="20190116 18:31:18.905"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:18.938" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:18.908" endtime="20190116 18:31:18.938"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:18.941" endtime="20190116 18:31:18.945"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:18.978" level="INFO">${value} = 000001c8</msg>
<status status="PASS" starttime="20190116 18:31:18.948" endtime="20190116 18:31:18.979"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:18.988" level="INFO">${adcvalue} = 456</msg>
<status status="PASS" starttime="20190116 18:31:18.982" endtime="20190116 18:31:18.989"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:18.991" endtime="20190116 18:31:18.997"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:18.620" endtime="20190116 18:31:19.000"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${ANALOG_IN}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:19.074" level="INFO">${res_dict} = {'status': True, 'request': '534600000023', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:19.010" endtime="20190116 18:31:19.075"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:19.108" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:19.078" endtime="20190116 18:31:19.109"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:19.112" endtime="20190116 18:31:19.116"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:19.179" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:19.119" endtime="20190116 18:31:19.181"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:19.213" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:19.183" endtime="20190116 18:31:19.214"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:19.217" endtime="20190116 18:31:19.221"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:19.288" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '000002aa'}</msg>
<status status="PASS" starttime="20190116 18:31:19.224" endtime="20190116 18:31:19.289"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:19.322" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:19.292" endtime="20190116 18:31:19.323"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:19.326" endtime="20190116 18:31:19.330"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:19.363" level="INFO">${value} = 000002aa</msg>
<status status="PASS" starttime="20190116 18:31:19.333" endtime="20190116 18:31:19.364"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:19.373" level="INFO">${adcvalue} = 682</msg>
<status status="PASS" starttime="20190116 18:31:19.366" endtime="20190116 18:31:19.373"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:19.376" endtime="20190116 18:31:19.381"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:19.002" endtime="20190116 18:31:19.384"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${DIAG_LED1+}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:19.454" level="INFO">${res_dict} = {'status': True, 'request': '534600000026', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:19.393" endtime="20190116 18:31:19.454"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:19.487" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:19.458" endtime="20190116 18:31:19.488"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:19.491" endtime="20190116 18:31:19.495"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:19.559" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:19.498" endtime="20190116 18:31:19.560"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:19.594" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:19.563" endtime="20190116 18:31:19.595"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:19.597" endtime="20190116 18:31:19.602"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:19.668" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000001'}</msg>
<status status="PASS" starttime="20190116 18:31:19.605" endtime="20190116 18:31:19.669"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:19.702" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:19.672" endtime="20190116 18:31:19.702"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:19.705" endtime="20190116 18:31:19.709"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:19.742" level="INFO">${value} = 00000001</msg>
<status status="PASS" starttime="20190116 18:31:19.712" endtime="20190116 18:31:19.743"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:19.753" level="INFO">${adcvalue} = 1</msg>
<status status="PASS" starttime="20190116 18:31:19.747" endtime="20190116 18:31:19.754"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:19.757" endtime="20190116 18:31:19.762"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:19.385" endtime="20190116 18:31:19.764"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${DIAG_LED1-}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:19.834" level="INFO">${res_dict} = {'status': True, 'request': '534600000027', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:19.773" endtime="20190116 18:31:19.835"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:19.868" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:19.838" endtime="20190116 18:31:19.869"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:19.871" endtime="20190116 18:31:19.876"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:19.939" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:19.878" endtime="20190116 18:31:19.941"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:19.981" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:19.948" endtime="20190116 18:31:19.989"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:20.012" endtime="20190116 18:31:20.028"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:20.207" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000001'}</msg>
<status status="PASS" starttime="20190116 18:31:20.031" endtime="20190116 18:31:20.208"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:20.298" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:20.211" endtime="20190116 18:31:20.299"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:20.302" endtime="20190116 18:31:20.313"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:20.385" level="INFO">${value} = 00000001</msg>
<status status="PASS" starttime="20190116 18:31:20.316" endtime="20190116 18:31:20.385"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:20.405" level="INFO">${adcvalue} = 1</msg>
<status status="PASS" starttime="20190116 18:31:20.398" endtime="20190116 18:31:20.406"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:20.408" endtime="20190116 18:31:20.417"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:19.766" endtime="20190116 18:31:20.419"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${DIAG_LED2+}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:20.492" level="INFO">${res_dict} = {'status': True, 'request': '534600000028', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:20.428" endtime="20190116 18:31:20.493"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:20.527" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:20.496" endtime="20190116 18:31:20.528"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:20.531" endtime="20190116 18:31:20.535"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:20.650" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:20.538" endtime="20190116 18:31:20.651"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:20.684" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:20.654" endtime="20190116 18:31:20.685"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:20.687" endtime="20190116 18:31:20.692"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:20.758" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000001'}</msg>
<status status="PASS" starttime="20190116 18:31:20.694" endtime="20190116 18:31:20.759"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:20.793" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:20.763" endtime="20190116 18:31:20.793"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:20.797" endtime="20190116 18:31:20.801"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:20.834" level="INFO">${value} = 00000001</msg>
<status status="PASS" starttime="20190116 18:31:20.804" endtime="20190116 18:31:20.835"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:20.844" level="INFO">${adcvalue} = 1</msg>
<status status="PASS" starttime="20190116 18:31:20.838" endtime="20190116 18:31:20.844"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:20.847" endtime="20190116 18:31:20.853"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:20.421" endtime="20190116 18:31:20.855"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${DIAG_LED2-}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:20.969" level="INFO">${res_dict} = {'status': True, 'request': '534600000029', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:20.864" endtime="20190116 18:31:20.970"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.003" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:20.973" endtime="20190116 18:31:21.004"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.007" endtime="20190116 18:31:21.011"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:21.075" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:21.014" endtime="20190116 18:31:21.076"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.108" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:21.079" endtime="20190116 18:31:21.109"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.112" endtime="20190116 18:31:21.116"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:21.182" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000001'}</msg>
<status status="PASS" starttime="20190116 18:31:21.119" endtime="20190116 18:31:21.183"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.216" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:21.186" endtime="20190116 18:31:21.217"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.220" endtime="20190116 18:31:21.224"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.257" level="INFO">${value} = 00000001</msg>
<status status="PASS" starttime="20190116 18:31:21.227" endtime="20190116 18:31:21.258"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:21.267" level="INFO">${adcvalue} = 1</msg>
<status status="PASS" starttime="20190116 18:31:21.261" endtime="20190116 18:31:21.267"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.270" endtime="20190116 18:31:21.275"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:20.857" endtime="20190116 18:31:21.278"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${DIAG_GNSS_EXT_CURR}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:21.349" level="INFO">${res_dict} = {'status': True, 'request': '53460000002a', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:21.287" endtime="20190116 18:31:21.350"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.383" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:21.353" endtime="20190116 18:31:21.384"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.387" endtime="20190116 18:31:21.391"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:21.458" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:21.394" endtime="20190116 18:31:21.459"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.492" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:21.462" endtime="20190116 18:31:21.493"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.496" endtime="20190116 18:31:21.501"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:21.568" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000d09'}</msg>
<status status="PASS" starttime="20190116 18:31:21.503" endtime="20190116 18:31:21.569"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.603" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:21.572" endtime="20190116 18:31:21.603"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.606" endtime="20190116 18:31:21.610"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.643" level="INFO">${value} = 00000d09</msg>
<status status="PASS" starttime="20190116 18:31:21.613" endtime="20190116 18:31:21.644"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:21.653" level="INFO">${adcvalue} = 3337</msg>
<status status="PASS" starttime="20190116 18:31:21.647" endtime="20190116 18:31:21.654"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.657" endtime="20190116 18:31:21.662"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:21.280" endtime="20190116 18:31:21.664"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${DIAG_GNSS_EXT_VOLT}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:21.734" level="INFO">${res_dict} = {'status': True, 'request': '53460000002c', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:21.674" endtime="20190116 18:31:21.735"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.768" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:21.738" endtime="20190116 18:31:21.769"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.772" endtime="20190116 18:31:21.776"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:21.839" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:21.779" endtime="20190116 18:31:21.840"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.874" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:21.843" endtime="20190116 18:31:21.874"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.878" endtime="20190116 18:31:21.882"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:21.949" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '000007b3'}</msg>
<status status="PASS" starttime="20190116 18:31:21.885" endtime="20190116 18:31:21.950"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:21.982" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:21.953" endtime="20190116 18:31:21.983"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:21.986" endtime="20190116 18:31:21.990"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:22.023" level="INFO">${value} = 000007b3</msg>
<status status="PASS" starttime="20190116 18:31:21.993" endtime="20190116 18:31:22.024"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:22.033" level="INFO">${adcvalue} = 1971</msg>
<status status="PASS" starttime="20190116 18:31:22.027" endtime="20190116 18:31:22.034"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:22.036" endtime="20190116 18:31:22.042"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:21.666" endtime="20190116 18:31:22.044"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${MCU_DIAG_LINEOUTP}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:22.114" level="INFO">${res_dict} = {'status': True, 'request': '53460000002f', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:22.053" endtime="20190116 18:31:22.115"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:22.148" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:22.118" endtime="20190116 18:31:22.149"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:22.152" endtime="20190116 18:31:22.156"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:22.220" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:22.159" endtime="20190116 18:31:22.221"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:22.255" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:22.224" endtime="20190116 18:31:22.256"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:22.259" endtime="20190116 18:31:22.263"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:22.330" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000000'}</msg>
<status status="PASS" starttime="20190116 18:31:22.266" endtime="20190116 18:31:22.330"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:22.363" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:22.333" endtime="20190116 18:31:22.364"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:22.367" endtime="20190116 18:31:22.371"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:22.404" level="INFO">${value} = 00000000</msg>
<status status="PASS" starttime="20190116 18:31:22.374" endtime="20190116 18:31:22.405"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:22.414" level="INFO">${adcvalue} = 0</msg>
<status status="PASS" starttime="20190116 18:31:22.408" endtime="20190116 18:31:22.415"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:22.418" endtime="20190116 18:31:22.423"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:22.046" endtime="20190116 18:31:22.425"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${MCU_DIAG_LINEOUTN}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:22.499" level="INFO">${res_dict} = {'status': True, 'request': '534600000030', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:22.438" endtime="20190116 18:31:22.500"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:22.533" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:22.503" endtime="20190116 18:31:22.534"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:22.537" endtime="20190116 18:31:22.541"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:22.605" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:22.544" endtime="20190116 18:31:22.606"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:22.639" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:22.609" endtime="20190116 18:31:22.640"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:22.643" endtime="20190116 18:31:22.647"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:22.713" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000000'}</msg>
<status status="PASS" starttime="20190116 18:31:22.650" endtime="20190116 18:31:22.714"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:22.747" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:22.717" endtime="20190116 18:31:22.748"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:22.751" endtime="20190116 18:31:22.755"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:22.787" level="INFO">${value} = 00000000</msg>
<status status="PASS" starttime="20190116 18:31:22.758" endtime="20190116 18:31:22.788"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:22.797" level="INFO">${adcvalue} = 0</msg>
<status status="PASS" starttime="20190116 18:31:22.791" endtime="20190116 18:31:22.798"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:22.801" endtime="20190116 18:31:22.806"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:22.427" endtime="20190116 18:31:22.808"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${CARBAT_V_SENSE}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:22.878" level="INFO">${res_dict} = {'status': True, 'request': '53460000004d', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:22.818" endtime="20190116 18:31:22.879"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:22.914" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:22.883" endtime="20190116 18:31:22.915"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:22.918" endtime="20190116 18:31:22.923"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:22.986" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:22.926" endtime="20190116 18:31:22.987"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.021" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:22.990" endtime="20190116 18:31:23.021"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.024" endtime="20190116 18:31:23.029"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:23.096" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000650'}</msg>
<status status="PASS" starttime="20190116 18:31:23.032" endtime="20190116 18:31:23.097"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.130" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:23.100" endtime="20190116 18:31:23.131"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.134" endtime="20190116 18:31:23.138"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.171" level="INFO">${value} = 00000650</msg>
<status status="PASS" starttime="20190116 18:31:23.141" endtime="20190116 18:31:23.172"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:23.181" level="INFO">${adcvalue} = 1616</msg>
<status status="PASS" starttime="20190116 18:31:23.175" endtime="20190116 18:31:23.182"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.184" endtime="20190116 18:31:23.190"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:22.810" endtime="20190116 18:31:23.192"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${CRM_DIAG}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:23.262" level="INFO">${res_dict} = {'status': True, 'request': '534600000032', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:23.201" endtime="20190116 18:31:23.263"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.297" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:23.267" endtime="20190116 18:31:23.298"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.300" endtime="20190116 18:31:23.305"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:23.369" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:23.307" endtime="20190116 18:31:23.370"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.403" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:23.373" endtime="20190116 18:31:23.404"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.407" endtime="20190116 18:31:23.411"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:23.486" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '000003d0'}</msg>
<status status="PASS" starttime="20190116 18:31:23.414" endtime="20190116 18:31:23.487"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.523" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:23.494" endtime="20190116 18:31:23.524"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.527" endtime="20190116 18:31:23.531"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.567" level="INFO">${value} = 000003d0</msg>
<status status="PASS" starttime="20190116 18:31:23.534" endtime="20190116 18:31:23.568"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:23.577" level="INFO">${adcvalue} = 976</msg>
<status status="PASS" starttime="20190116 18:31:23.571" endtime="20190116 18:31:23.578"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.581" endtime="20190116 18:31:23.586"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:23.194" endtime="20190116 18:31:23.589"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${MCU_TEMP_SENS}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:23.661" level="INFO">${res_dict} = {'status': True, 'request': '534600000035', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:23.599" endtime="20190116 18:31:23.663"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.696" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:23.666" endtime="20190116 18:31:23.697"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.699" endtime="20190116 18:31:23.704"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:23.767" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:23.707" endtime="20190116 18:31:23.768"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.801" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:23.771" endtime="20190116 18:31:23.802"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.805" endtime="20190116 18:31:23.809"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:23.876" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '0000098f'}</msg>
<status status="PASS" starttime="20190116 18:31:23.812" endtime="20190116 18:31:23.877"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.912" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:23.880" endtime="20190116 18:31:23.913"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.916" endtime="20190116 18:31:23.920"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:23.953" level="INFO">${value} = 0000098f</msg>
<status status="PASS" starttime="20190116 18:31:23.923" endtime="20190116 18:31:23.953"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:23.962" level="INFO">${adcvalue} = 2447</msg>
<status status="PASS" starttime="20190116 18:31:23.956" endtime="20190116 18:31:23.963"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:23.966" endtime="20190116 18:31:23.971"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:23.591" endtime="20190116 18:31:23.973"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${BUB_TEMP_SENS}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:24.044" level="INFO">${res_dict} = {'status': True, 'request': '534600000037', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:23.982" endtime="20190116 18:31:24.045"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:24.078" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:24.048" endtime="20190116 18:31:24.079"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:24.081" endtime="20190116 18:31:24.086"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:24.149" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:24.088" endtime="20190116 18:31:24.150"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:24.183" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:24.153" endtime="20190116 18:31:24.184"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:24.187" endtime="20190116 18:31:24.191"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:24.260" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000ffa'}</msg>
<status status="PASS" starttime="20190116 18:31:24.194" endtime="20190116 18:31:24.261"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:24.295" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:24.264" endtime="20190116 18:31:24.296"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:24.299" endtime="20190116 18:31:24.303"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:24.335" level="INFO">${value} = 00000ffa</msg>
<status status="PASS" starttime="20190116 18:31:24.306" endtime="20190116 18:31:24.336"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:24.345" level="INFO">${adcvalue} = 4090</msg>
<status status="PASS" starttime="20190116 18:31:24.339" endtime="20190116 18:31:24.346"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:24.349" endtime="20190116 18:31:24.355"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:23.975" endtime="20190116 18:31:24.358"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${BUB_CCVxH}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:24.429" level="INFO">${res_dict} = {'status': True, 'request': '534600000039', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:24.367" endtime="20190116 18:31:24.430"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:24.465" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:24.434" endtime="20190116 18:31:24.466"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:24.469" endtime="20190116 18:31:24.474"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:24.538" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:24.477" endtime="20190116 18:31:24.539"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:24.576" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:24.542" endtime="20190116 18:31:24.577"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:24.580" endtime="20190116 18:31:24.584"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:24.651" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000189'}</msg>
<status status="PASS" starttime="20190116 18:31:24.587" endtime="20190116 18:31:24.652"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:24.687" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:24.656" endtime="20190116 18:31:24.688"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:24.691" endtime="20190116 18:31:24.695"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:24.728" level="INFO">${value} = 00000189</msg>
<status status="PASS" starttime="20190116 18:31:24.698" endtime="20190116 18:31:24.729"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:24.737" level="INFO">${adcvalue} = 393</msg>
<status status="PASS" starttime="20190116 18:31:24.731" endtime="20190116 18:31:24.738"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:24.741" endtime="20190116 18:31:24.746"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:24.360" endtime="20190116 18:31:24.749"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${BUB_CCVxL}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:24.819" level="INFO">${res_dict} = {'status': True, 'request': '53460000003a', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:24.759" endtime="20190116 18:31:24.820"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:24.853" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:24.823" endtime="20190116 18:31:24.854"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:24.857" endtime="20190116 18:31:24.861"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:24.926" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:24.864" endtime="20190116 18:31:24.927"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:24.961" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:24.930" endtime="20190116 18:31:24.962"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:24.965" endtime="20190116 18:31:24.969"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:25.043" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '00000163'}</msg>
<status status="PASS" starttime="20190116 18:31:24.972" endtime="20190116 18:31:25.044"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:25.133" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:25.047" endtime="20190116 18:31:25.134"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:25.141" endtime="20190116 18:31:25.154"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:25.219" level="INFO">${value} = 00000163</msg>
<status status="PASS" starttime="20190116 18:31:25.157" endtime="20190116 18:31:25.220"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:25.251" level="INFO">${adcvalue} = 355</msg>
<status status="PASS" starttime="20190116 18:31:25.245" endtime="20190116 18:31:25.252"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:25.267" endtime="20190116 18:31:25.272"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:24.750" endtime="20190116 18:31:25.274"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${EXT_NAD_ANT_DET_1}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:25.361" level="INFO">${res_dict} = {'status': True, 'request': '53460000003b', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:25.297" endtime="20190116 18:31:25.362"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:25.394" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:25.365" endtime="20190116 18:31:25.395"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:25.398" endtime="20190116 18:31:25.402"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:25.470" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:25.406" endtime="20190116 18:31:25.471"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:25.504" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:25.474" endtime="20190116 18:31:25.504"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:25.507" endtime="20190116 18:31:25.511"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:25.578" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '0000010d'}</msg>
<status status="PASS" starttime="20190116 18:31:25.514" endtime="20190116 18:31:25.579"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:25.614" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:25.583" endtime="20190116 18:31:25.615"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:25.618" endtime="20190116 18:31:25.622"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:25.654" level="INFO">${value} = 0000010d</msg>
<status status="PASS" starttime="20190116 18:31:25.625" endtime="20190116 18:31:25.655"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:25.664" level="INFO">${adcvalue} = 269</msg>
<status status="PASS" starttime="20190116 18:31:25.658" endtime="20190116 18:31:25.665"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:25.668" endtime="20190116 18:31:25.673"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:25.276" endtime="20190116 18:31:25.675"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${EXT_NAD_ANT_DET_2}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:25.748" level="INFO">${res_dict} = {'status': True, 'request': '53460000003e', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:25.684" endtime="20190116 18:31:25.749"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:25.782" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:25.752" endtime="20190116 18:31:25.783"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:25.786" endtime="20190116 18:31:25.790"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:25.853" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:25.793" endtime="20190116 18:31:25.854"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:25.887" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:25.857" endtime="20190116 18:31:25.888"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:25.891" endtime="20190116 18:31:25.895"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:25.961" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '0000010c'}</msg>
<status status="PASS" starttime="20190116 18:31:25.898" endtime="20190116 18:31:25.962"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:25.996" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:25.965" endtime="20190116 18:31:25.997"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:26.000" endtime="20190116 18:31:26.004"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:26.037" level="INFO">${value} = 0000010c</msg>
<status status="PASS" starttime="20190116 18:31:26.007" endtime="20190116 18:31:26.038"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:26.046" level="INFO">${adcvalue} = 268</msg>
<status status="PASS" starttime="20190116 18:31:26.040" endtime="20190116 18:31:26.047"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:26.050" endtime="20190116 18:31:26.055"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:25.677" endtime="20190116 18:31:26.058"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${EXT_ANT_DIAG_BT}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:26.129" level="INFO">${res_dict} = {'status': True, 'request': '534600000040', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:26.067" endtime="20190116 18:31:26.130"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:26.163" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:26.133" endtime="20190116 18:31:26.164"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:26.166" endtime="20190116 18:31:26.171"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:26.233" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:26.173" endtime="20190116 18:31:26.234"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:26.268" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:26.238" endtime="20190116 18:31:26.269"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:26.272" endtime="20190116 18:31:26.276"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:26.342" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '0000010c'}</msg>
<status status="PASS" starttime="20190116 18:31:26.279" endtime="20190116 18:31:26.343"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:26.376" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:26.346" endtime="20190116 18:31:26.377"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:26.380" endtime="20190116 18:31:26.390"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:26.518" level="INFO">${value} = 0000010c</msg>
<status status="PASS" starttime="20190116 18:31:26.393" endtime="20190116 18:31:26.519"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:26.570" level="INFO">${adcvalue} = 268</msg>
<status status="PASS" starttime="20190116 18:31:26.526" endtime="20190116 18:31:26.571"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:26.602" endtime="20190116 18:31:26.633"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:26.059" endtime="20190116 18:31:26.641"></status>
</kw>
<kw name="check_analog_channel">
<arguments>
<arg>${EXT_ANT_DIAG_WLAN}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:26.918" level="INFO">${res_dict} = {'status': True, 'request': '534600000041', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:26.682" endtime="20190116 18:31:26.919"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:27.082" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:26.930" endtime="20190116 18:31:27.083"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:27.090" endtime="20190116 18:31:27.131"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${AdcReadChannel}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:27.237" level="INFO">${res_dict} = {'status': True, 'request': '5206', 'result': '520653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:31:27.139" endtime="20190116 18:31:27.238"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:27.330" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:27.241" endtime="20190116 18:31:27.331"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:27.334" endtime="20190116 18:31:27.349"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getresult</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:31:27.469" level="INFO">${res_dict} = {'status': True, 'request': '4752', 'result': '475253', 'data': '0000010d'}</msg>
<status status="PASS" starttime="20190116 18:31:27.352" endtime="20190116 18:31:27.470"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:27.545" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:31:27.473" endtime="20190116 18:31:27.546"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:27.549" endtime="20190116 18:31:27.565"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:31:27.637" level="INFO">${value} = 0000010d</msg>
<status status="PASS" starttime="20190116 18:31:27.568" endtime="20190116 18:31:27.637"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${value}</arg>
<arg>base=16</arg>
</arguments>
<assign>
<var>${adcvalue}</var>
</assign>
<msg timestamp="20190116 18:31:27.669" level="INFO">${adcvalue} = 269</msg>
<status status="PASS" starttime="20190116 18:31:27.640" endtime="20190116 18:31:27.670"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>0x00 &lt;= ${adcvalue} &lt;= 0x1000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:27.679" endtime="20190116 18:31:27.685"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:26.643" endtime="20190116 18:31:27.687"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:16.414" endtime="20190116 18:31:27.709"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:27.731" endtime="20190116 18:31:27.799"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:27.802" endtime="20190116 18:31:27.885"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:27.888" endtime="20190116 18:31:27.974"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:31:29.982" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:31:27.977" endtime="20190116 18:31:29.984"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:29.987" endtime="20190116 18:31:30.032"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:27.713" endtime="20190116 18:31:30.035"></status>
</kw>
<doc>Implements Test Task SKTB-33244</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status status="PASS" starttime="20190116 18:31:01.314" critical="yes" endtime="20190116 18:31:30.036"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:31:31.518" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:31:31.568" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:31:30.083" endtime="20190116 18:31:31.585"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:30.052" endtime="20190116 18:31:31.586"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:30.046" endtime="20190116 18:31:31.593"></status>
</kw>
<doc>Chorus GpioAdc's test with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:30:58.543" endtime="20190116 18:31:31.593"></status>
</suite>
<suite name="SKTB-13351" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-13351.robot" id="s1-s6">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:31:32.258" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:31:32.254" endtime="20190116 18:31:32.268"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:31:32.294" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:31:32.296" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:31:34.412" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:31:32.271" endtime="20190116 18:31:34.414"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:32.237" endtime="20190116 18:31:34.416"></status>
</kw>
<test name="SKTB-13351 FBUS test" id="s1-s6-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:34.515" endtime="20190116 18:31:34.617"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:34.620" endtime="20190116 18:31:34.721"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:34.724" endtime="20190116 18:31:34.835"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:31:36.881" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:31:34.843" endtime="20190116 18:31:36.883"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:36.886" endtime="20190116 18:31:36.932"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:36.935" endtime="20190116 18:31:36.981"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:36.985" endtime="20190116 18:31:37.030"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:37.034" endtime="20190116 18:31:37.081"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:37.084" endtime="20190116 18:31:37.131"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:37.135" endtime="20190116 18:31:37.185"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:31:39.194" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:31:37.189" endtime="20190116 18:31:39.196"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:34.509" endtime="20190116 18:31:39.198"></status>
</kw>
<kw name="Step_1">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${PN_POWER_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:31:39.407" level="INFO">${info} = 1E 14 54 8D 00 08 00 0C 01 01 00 00 01 42 4A DE</msg>
<status status="PASS" starttime="20190116 18:31:39.207" endtime="20190116 18:31:39.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:31:39.416" level="INFO">1E 14 54 8D 00 08 00 0C 01 01 00 00 01 42 4A DE</msg>
<status status="PASS" starttime="20190116 18:31:39.412" endtime="20190116 18:31:39.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_POWER_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:39.422" endtime="20190116 18:31:39.427"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:39.201" endtime="20190116 18:31:39.430"></status>
</kw>
<kw name="Step_2">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${PN_DIAG_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:31:39.638" level="INFO">${info} = 1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 43 4A D9</msg>
<status status="PASS" starttime="20190116 18:31:39.438" endtime="20190116 18:31:39.639"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:31:39.647" level="INFO">1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 43 4A D9</msg>
<status status="PASS" starttime="20190116 18:31:39.643" endtime="20190116 18:31:39.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_DIAG_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:39.652" endtime="20190116 18:31:39.658"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:39.432" endtime="20190116 18:31:39.660"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:39.670" endtime="20190116 18:31:39.718"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:39.732" endtime="20190116 18:31:39.799"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:39.803" endtime="20190116 18:31:39.849"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:31:41.857" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:31:39.853" endtime="20190116 18:31:41.859"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:41.862" endtime="20190116 18:31:41.911"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:41.915" endtime="20190116 18:31:41.961"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:39.663" endtime="20190116 18:31:41.963"></status>
</kw>
<doc>Implements Test Task SKTB-13351</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status status="PASS" starttime="20190116 18:31:34.437" critical="yes" endtime="20190116 18:31:41.965"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:31:43.486" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:31:43.561" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:31:42.003" endtime="20190116 18:31:43.562"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:41.980" endtime="20190116 18:31:43.585"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:41.974" endtime="20190116 18:31:43.587"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:31:31.761" endtime="20190116 18:31:43.588"></status>
</suite>
<suite name="SKTB-34994" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-34994.robot" id="s1-s7">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:31:44.197" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:31:44.179" endtime="20190116 18:31:44.206"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:31:44.215" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:31:44.231" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:31:46.374" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:31:44.209" endtime="20190116 18:31:46.396"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:44.174" endtime="20190116 18:31:46.398"></status>
</kw>
<test name="SKTB-34994 CAN 3 testing" id="s1-s7-t1">
<kw name="Test_precondition" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:31:46.449" level="INFO">"Test_precondition"</msg>
<status status="PASS" starttime="20190116 18:31:46.433" endtime="20190116 18:31:46.463"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:46.465" endtime="20190116 18:31:46.581"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:46.584" endtime="20190116 18:31:46.705"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:31:48.713" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:31:46.708" endtime="20190116 18:31:48.715"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:48.718" endtime="20190116 18:31:48.765"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:31:49.772" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:31:48.768" endtime="20190116 18:31:49.774"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:31:49.776" endtime="20190116 18:31:49.825"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20190116 18:31:52.832" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20190116 18:31:49.828" endtime="20190116 18:31:52.834"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>ping ${HOST_IP}</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20190116 18:31:52.842" level="INFO">Starting process:
ping 192.168.1.101</msg>
<status status="PASS" starttime="20190116 18:31:52.837" endtime="20190116 18:31:52.868"></status>
</kw>
<kw name="WAIT_UNTIL_DEVICE_IS_READY">
<doc>Waiting for device to be ready, up to 90 seconds</doc>
<assign>
<var>${status}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Waiting for device to be ready, up to 90 seconds\n</arg>
<arg>console=true</arg>
</arguments>
<msg timestamp="20190116 18:31:52.895" level="INFO">Waiting for device to be ready, up to 90 seconds
</msg>
<status status="PASS" starttime="20190116 18:31:52.887" endtime="20190116 18:31:52.897"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait until keyword succeeds</arg>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:52.930" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:52.955" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:52.976" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:52.979" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:52.923" endtime="20190116 18:31:52.980"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:52.992" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:52.984" endtime="20190116 18:31:52.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:53.005" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:52.996" endtime="20190116 18:31:53.006"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:52.915" endtime="20190116 18:31:53.009"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:53.147" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:53.172" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:53.192" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:53.195" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:53.140" endtime="20190116 18:31:53.195"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:53.208" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:53.199" endtime="20190116 18:31:53.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:53.220" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:53.212" endtime="20190116 18:31:53.221"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:53.132" endtime="20190116 18:31:53.227"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:53.365" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:53.390" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:53.411" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:53.414" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:53.358" endtime="20190116 18:31:53.415"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:53.428" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:53.419" endtime="20190116 18:31:53.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:53.439" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:53.431" endtime="20190116 18:31:53.441"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:53.350" endtime="20190116 18:31:53.444"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:53.581" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:53.608" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:53.628" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:53.631" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:53.575" endtime="20190116 18:31:53.633"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:53.645" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:53.637" endtime="20190116 18:31:53.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:53.658" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:53.649" endtime="20190116 18:31:53.659"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:53.567" endtime="20190116 18:31:53.662"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:53.800" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:53.825" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:53.846" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:53.849" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:53.793" endtime="20190116 18:31:53.850"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:53.862" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:53.854" endtime="20190116 18:31:53.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:53.874" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:53.866" endtime="20190116 18:31:53.875"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:53.785" endtime="20190116 18:31:53.878"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:54.017" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:54.043" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:54.090" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:54.094" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:54.010" endtime="20190116 18:31:54.095"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:54.119" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:54.106" endtime="20190116 18:31:54.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:54.130" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:54.123" endtime="20190116 18:31:54.132"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:54.002" endtime="20190116 18:31:54.135"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:54.274" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:54.299" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:54.319" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:54.323" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:54.267" endtime="20190116 18:31:54.324"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:54.336" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:54.327" endtime="20190116 18:31:54.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:54.347" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:54.340" endtime="20190116 18:31:54.349"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:54.258" endtime="20190116 18:31:54.352"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:54.490" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:54.515" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:54.535" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:54.538" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:54.483" endtime="20190116 18:31:54.539"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:54.552" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:54.543" endtime="20190116 18:31:54.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:54.564" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:54.556" endtime="20190116 18:31:54.565"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:54.475" endtime="20190116 18:31:54.568"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:54.706" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:54.731" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:54.750" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:54.753" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:54.699" endtime="20190116 18:31:54.754"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:54.768" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:54.758" endtime="20190116 18:31:54.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:54.780" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:54.772" endtime="20190116 18:31:54.782"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:54.691" endtime="20190116 18:31:54.785"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:54.922" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:54.948" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:54.969" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:54.972" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:54.915" endtime="20190116 18:31:54.973"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:54.990" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:54.977" endtime="20190116 18:31:54.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:55.001" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:54.993" endtime="20190116 18:31:55.003"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:54.908" endtime="20190116 18:31:55.006"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:55.143" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:55.169" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:55.189" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:55.192" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:55.136" endtime="20190116 18:31:55.193"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:55.206" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:55.197" endtime="20190116 18:31:55.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:55.217" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:55.210" endtime="20190116 18:31:55.219"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:55.129" endtime="20190116 18:31:55.222"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:55.359" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:55.384" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:55.404" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:55.407" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:55.353" endtime="20190116 18:31:55.408"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:55.421" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:55.412" endtime="20190116 18:31:55.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:55.432" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:55.425" endtime="20190116 18:31:55.434"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:55.345" endtime="20190116 18:31:55.437"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:55.576" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:55.602" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:55.622" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:55.625" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:55.570" endtime="20190116 18:31:55.626"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:55.639" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:55.630" endtime="20190116 18:31:55.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:55.650" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:55.642" endtime="20190116 18:31:55.651"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:55.562" endtime="20190116 18:31:55.654"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:55.791" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:55.817" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:55.837" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:55.840" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:55.785" endtime="20190116 18:31:55.841"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:55.858" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:55.845" endtime="20190116 18:31:55.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:55.869" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:55.862" endtime="20190116 18:31:55.871"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:55.777" endtime="20190116 18:31:55.874"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:56.012" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:56.037" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:56.058" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:56.061" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:56.005" endtime="20190116 18:31:56.062"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:56.075" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:56.066" endtime="20190116 18:31:56.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:56.086" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:56.078" endtime="20190116 18:31:56.087"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:55.997" endtime="20190116 18:31:56.090"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:56.228" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:56.254" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:56.274" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:56.277" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:56.221" endtime="20190116 18:31:56.278"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:56.291" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:56.282" endtime="20190116 18:31:56.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:56.302" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:56.294" endtime="20190116 18:31:56.303"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:56.213" endtime="20190116 18:31:56.306"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:56.444" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:56.469" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:56.490" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:56.493" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:56.437" endtime="20190116 18:31:56.494"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:56.506" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:56.497" endtime="20190116 18:31:56.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:56.518" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:56.510" endtime="20190116 18:31:56.519"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:56.430" endtime="20190116 18:31:56.522"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:56.660" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:56.686" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:56.710" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:56.713" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:56.654" endtime="20190116 18:31:56.714"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:56.727" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:56.718" endtime="20190116 18:31:56.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:56.739" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:56.730" endtime="20190116 18:31:56.740"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:56.645" endtime="20190116 18:31:56.743"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:56.880" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:56.906" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:56.926" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:56.929" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:56.874" endtime="20190116 18:31:56.930"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:56.943" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:56.934" endtime="20190116 18:31:56.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:56.955" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:56.947" endtime="20190116 18:31:56.957"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:56.866" endtime="20190116 18:31:56.960"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:57.098" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:57.123" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:57.143" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:57.146" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:57.091" endtime="20190116 18:31:57.147"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:57.160" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:57.151" endtime="20190116 18:31:57.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:57.171" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:57.164" endtime="20190116 18:31:57.173"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:57.083" endtime="20190116 18:31:57.176"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:57.314" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:57.339" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:57.360" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:57.363" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:57.307" endtime="20190116 18:31:57.363"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:57.376" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:57.367" endtime="20190116 18:31:57.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:57.388" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:57.380" endtime="20190116 18:31:57.390"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:57.299" endtime="20190116 18:31:57.393"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:57.534" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:57.560" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:57.580" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:57.583" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:57.524" endtime="20190116 18:31:57.584"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:57.597" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:57.588" endtime="20190116 18:31:57.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:57.608" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:57.600" endtime="20190116 18:31:57.610"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:57.516" endtime="20190116 18:31:57.613"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:57.750" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:57.776" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:57.795" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:57.798" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:57.743" endtime="20190116 18:31:57.799"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:57.812" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:57.803" endtime="20190116 18:31:57.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:57.824" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:57.816" endtime="20190116 18:31:57.825"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:57.736" endtime="20190116 18:31:57.828"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:57.966" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:57.991" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:58.011" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:58.015" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:57.959" endtime="20190116 18:31:58.016"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:58.028" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:58.020" endtime="20190116 18:31:58.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:58.041" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:58.032" endtime="20190116 18:31:58.043"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:57.951" endtime="20190116 18:31:58.046"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:58.185" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:58.213" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:58.233" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:58.236" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:58.177" endtime="20190116 18:31:58.237"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:58.259" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:58.241" endtime="20190116 18:31:58.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:58.271" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:58.262" endtime="20190116 18:31:58.272"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:58.169" endtime="20190116 18:31:58.275"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:58.427" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:58.453" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:58.474" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:58.477" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:58.406" endtime="20190116 18:31:58.478"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:58.490" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:58.482" endtime="20190116 18:31:58.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:58.502" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:58.494" endtime="20190116 18:31:58.503"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:58.399" endtime="20190116 18:31:58.506"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:58.644" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:58.669" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:58.690" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:58.693" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:58.638" endtime="20190116 18:31:58.695"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:58.707" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:58.698" endtime="20190116 18:31:58.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:58.719" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:58.711" endtime="20190116 18:31:58.720"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:58.629" endtime="20190116 18:31:58.723"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:58.861" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:58.886" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:58.906" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:58.909" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:58.854" endtime="20190116 18:31:58.910"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:58.923" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:58.914" endtime="20190116 18:31:58.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:58.935" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:58.927" endtime="20190116 18:31:58.937"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:58.846" endtime="20190116 18:31:58.940"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:59.078" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:59.104" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:59.124" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:59.127" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:59.071" endtime="20190116 18:31:59.128"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:59.141" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:59.132" endtime="20190116 18:31:59.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:59.153" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:59.145" endtime="20190116 18:31:59.155"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:59.063" endtime="20190116 18:31:59.158"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:59.296" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:59.321" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:59.342" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:59.345" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:59.289" endtime="20190116 18:31:59.346"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:59.362" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:59.349" endtime="20190116 18:31:59.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:59.373" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:59.366" endtime="20190116 18:31:59.375"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:59.281" endtime="20190116 18:31:59.378"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:59.515" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:59.540" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:59.560" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:59.563" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:59.508" endtime="20190116 18:31:59.565"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:59.577" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:59.568" endtime="20190116 18:31:59.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:59.589" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:59.581" endtime="20190116 18:31:59.590"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:59.501" endtime="20190116 18:31:59.593"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:59.731" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:59.757" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:59.779" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:31:59.781" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:59.724" endtime="20190116 18:31:59.782"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:31:59.795" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:31:59.786" endtime="20190116 18:31:59.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:31:59.808" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:31:59.799" endtime="20190116 18:31:59.810"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:59.716" endtime="20190116 18:31:59.814"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:31:59.951" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:31:59.977" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:31:59.997" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:00.000" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:31:59.945" endtime="20190116 18:32:00.002"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:00.014" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:00.005" endtime="20190116 18:32:00.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:00.026" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:00.018" endtime="20190116 18:32:00.027"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:31:59.937" endtime="20190116 18:32:00.030"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:00.168" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:00.193" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:00.214" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:00.217" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:00.161" endtime="20190116 18:32:00.218"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:00.230" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:00.221" endtime="20190116 18:32:00.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:00.246" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:00.234" endtime="20190116 18:32:00.247"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:00.153" endtime="20190116 18:32:00.250"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:00.388" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:00.414" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:00.434" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:00.437" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:00.382" endtime="20190116 18:32:00.438"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:00.451" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:00.442" endtime="20190116 18:32:00.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:00.462" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:00.455" endtime="20190116 18:32:00.464"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:00.374" endtime="20190116 18:32:00.467"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:00.604" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:00.630" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:00.650" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:00.653" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:00.597" endtime="20190116 18:32:00.654"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:00.667" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:00.658" endtime="20190116 18:32:00.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:00.679" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:00.671" endtime="20190116 18:32:00.680"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:00.590" endtime="20190116 18:32:00.683"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:00.821" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:00.846" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:00.867" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:00.870" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:00.814" endtime="20190116 18:32:00.871"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:00.883" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:00.875" endtime="20190116 18:32:00.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:00.895" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:00.887" endtime="20190116 18:32:00.896"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:00.806" endtime="20190116 18:32:00.899"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:01.037" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:01.063" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:01.084" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:01.087" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:01.031" endtime="20190116 18:32:01.088"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:01.100" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:01.092" endtime="20190116 18:32:01.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:01.116" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:01.104" endtime="20190116 18:32:01.117"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:01.022" endtime="20190116 18:32:01.120"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:01.257" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:01.283" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:01.303" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:01.306" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:01.251" endtime="20190116 18:32:01.307"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:01.320" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:01.311" endtime="20190116 18:32:01.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:01.331" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:01.324" endtime="20190116 18:32:01.333"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:01.243" endtime="20190116 18:32:01.336"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:01.475" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:01.500" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:01.520" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:01.523" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:01.468" endtime="20190116 18:32:01.524"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:01.537" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:01.528" endtime="20190116 18:32:01.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:01.549" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:01.541" endtime="20190116 18:32:01.550"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:01.459" endtime="20190116 18:32:01.553"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:01.691" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:01.717" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:01.737" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:01.741" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:01.684" endtime="20190116 18:32:01.742"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:01.754" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:01.745" endtime="20190116 18:32:01.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:01.766" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:01.758" endtime="20190116 18:32:01.767"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:01.676" endtime="20190116 18:32:01.770"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:01.907" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:01.933" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:01.954" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:01.957" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:01.901" endtime="20190116 18:32:01.958"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:01.970" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:01.961" endtime="20190116 18:32:01.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:01.982" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:01.974" endtime="20190116 18:32:01.983"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:01.893" endtime="20190116 18:32:01.986"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:02.128" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:02.154" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:02.174" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:02.177" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:02.121" endtime="20190116 18:32:02.178"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:02.191" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:02.182" endtime="20190116 18:32:02.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:02.202" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:02.194" endtime="20190116 18:32:02.203"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:02.109" endtime="20190116 18:32:02.206"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:02.344" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:02.370" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:02.390" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:02.393" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:02.338" endtime="20190116 18:32:02.394"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:02.407" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:02.398" endtime="20190116 18:32:02.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:02.419" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:02.411" endtime="20190116 18:32:02.421"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:02.330" endtime="20190116 18:32:02.424"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:02.562" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:02.588" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:02.608" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:02.611" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:02.554" endtime="20190116 18:32:02.612"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:02.625" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:02.616" endtime="20190116 18:32:02.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:02.636" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:02.628" endtime="20190116 18:32:02.638"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:02.547" endtime="20190116 18:32:02.641"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:02.778" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:02.804" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:02.824" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:02.827" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:02.772" endtime="20190116 18:32:02.828"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:02.840" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:02.831" endtime="20190116 18:32:02.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:02.852" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:02.844" endtime="20190116 18:32:02.853"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:02.764" endtime="20190116 18:32:02.857"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:02.998" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:03.023" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:03.044" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:03.047" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:02.991" endtime="20190116 18:32:03.048"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:03.061" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:03.052" endtime="20190116 18:32:03.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:03.072" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:03.065" endtime="20190116 18:32:03.074"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:02.980" endtime="20190116 18:32:03.077"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:03.214" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:03.240" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:03.263" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:03.266" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:03.207" endtime="20190116 18:32:03.267"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:03.280" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:03.271" endtime="20190116 18:32:03.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:03.292" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:03.284" endtime="20190116 18:32:03.293"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:03.200" endtime="20190116 18:32:03.296"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:03.438" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:03.467" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:03.487" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:03.490" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:03.428" endtime="20190116 18:32:03.490"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:03.503" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:03.495" endtime="20190116 18:32:03.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:03.516" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:03.507" endtime="20190116 18:32:03.518"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:03.420" endtime="20190116 18:32:03.521"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:03.659" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:03.686" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:03.706" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:03.709" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:03.652" endtime="20190116 18:32:03.710"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:03.723" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:03.714" endtime="20190116 18:32:03.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:03.734" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:03.727" endtime="20190116 18:32:03.736"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:03.644" endtime="20190116 18:32:03.739"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:03.880" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:03.907" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:03.927" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:03.930" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:03.870" endtime="20190116 18:32:03.931"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:03.944" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:03.935" endtime="20190116 18:32:03.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:03.955" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:03.947" endtime="20190116 18:32:03.957"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:03.862" endtime="20190116 18:32:03.960"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:04.098" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:04.124" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:04.144" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:04.147" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:04.091" endtime="20190116 18:32:04.148"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:04.161" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:04.153" endtime="20190116 18:32:04.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:04.174" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:04.166" endtime="20190116 18:32:04.176"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:04.083" endtime="20190116 18:32:04.179"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:04.316" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:04.341" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:04.362" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:04.365" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:04.310" endtime="20190116 18:32:04.366"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:04.379" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:04.370" endtime="20190116 18:32:04.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:04.390" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:04.382" endtime="20190116 18:32:04.391"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:04.302" endtime="20190116 18:32:04.395"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:04.532" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:04.558" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:04.579" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:04.582" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:04.526" endtime="20190116 18:32:04.583"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:04.595" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:04.586" endtime="20190116 18:32:04.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:04.607" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:04.599" endtime="20190116 18:32:04.609"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:04.518" endtime="20190116 18:32:04.612"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:04.753" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:04.779" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:04.800" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:04.804" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:04.743" endtime="20190116 18:32:04.805"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:04.817" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:04.809" endtime="20190116 18:32:04.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:04.829" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:04.821" endtime="20190116 18:32:04.830"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:04.735" endtime="20190116 18:32:04.833"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:04.972" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:04.998" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:05.018" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:05.022" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:04.965" endtime="20190116 18:32:05.023"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:05.036" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:05.027" endtime="20190116 18:32:05.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:05.047" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:05.039" endtime="20190116 18:32:05.049"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:04.956" endtime="20190116 18:32:05.052"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:05.190" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:05.216" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:05.236" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:05.239" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:05.183" endtime="20190116 18:32:05.240"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:05.252" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:05.243" endtime="20190116 18:32:05.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:05.264" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:05.256" endtime="20190116 18:32:05.265"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:05.175" endtime="20190116 18:32:05.268"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:05.408" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:05.434" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:05.454" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:05.457" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:05.399" endtime="20190116 18:32:05.458"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:05.471" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:05.462" endtime="20190116 18:32:05.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:05.482" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:05.474" endtime="20190116 18:32:05.484"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:05.391" endtime="20190116 18:32:05.487"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:05.627" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:05.654" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:05.674" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:05.677" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:05.618" endtime="20190116 18:32:05.678"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:05.692" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:05.682" endtime="20190116 18:32:05.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:05.705" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:05.697" endtime="20190116 18:32:05.706"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:05.610" endtime="20190116 18:32:05.709"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:05.847" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:05.872" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:05.893" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:05.896" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:05.840" endtime="20190116 18:32:05.897"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:05.911" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:05.902" endtime="20190116 18:32:05.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:05.922" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:05.914" endtime="20190116 18:32:05.924"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:05.832" endtime="20190116 18:32:05.927"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:06.065" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:06.090" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:06.111" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:06.114" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:06.058" endtime="20190116 18:32:06.115"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:06.127" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:06.119" endtime="20190116 18:32:06.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:06.139" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:06.131" endtime="20190116 18:32:06.140"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:06.050" endtime="20190116 18:32:06.143"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:06.281" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:06.306" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:06.327" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:06.330" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:06.274" endtime="20190116 18:32:06.330"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:06.343" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:06.334" endtime="20190116 18:32:06.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:06.355" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:06.347" endtime="20190116 18:32:06.356"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:06.266" endtime="20190116 18:32:06.359"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:06.500" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:06.526" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:06.546" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:06.550" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:06.490" endtime="20190116 18:32:06.550"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:06.563" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:06.555" endtime="20190116 18:32:06.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:06.575" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:06.567" endtime="20190116 18:32:06.576"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:06.482" endtime="20190116 18:32:06.579"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:06.717" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:06.743" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:06.763" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:06.766" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:06.710" endtime="20190116 18:32:06.767"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:06.780" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:06.771" endtime="20190116 18:32:06.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:06.791" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:06.784" endtime="20190116 18:32:06.793"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:06.702" endtime="20190116 18:32:06.796"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:06.933" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:06.959" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:06.980" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:06.983" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:06.927" endtime="20190116 18:32:06.983"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:06.997" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:06.987" endtime="20190116 18:32:06.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:07.009" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:07.001" endtime="20190116 18:32:07.011"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:06.919" endtime="20190116 18:32:07.014"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:07.151" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:07.177" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:07.197" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:07.200" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:07.145" endtime="20190116 18:32:07.201"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:07.214" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:07.205" endtime="20190116 18:32:07.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:07.227" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:07.219" endtime="20190116 18:32:07.229"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:07.137" endtime="20190116 18:32:07.232"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:07.373" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:07.399" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:07.419" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:07.422" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:07.363" endtime="20190116 18:32:07.423"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:07.436" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:07.427" endtime="20190116 18:32:07.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:07.447" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:07.440" endtime="20190116 18:32:07.449"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:07.355" endtime="20190116 18:32:07.452"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:07.590" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:07.616" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:07.637" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:07.640" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:07.584" endtime="20190116 18:32:07.641"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:07.654" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:07.645" endtime="20190116 18:32:07.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:07.665" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:07.658" endtime="20190116 18:32:07.667"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:07.576" endtime="20190116 18:32:07.670"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:07.808" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:07.870" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:07.894" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:07.897" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:07.801" endtime="20190116 18:32:07.898"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:07.923" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:07.914" endtime="20190116 18:32:07.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:07.963" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:07.929" endtime="20190116 18:32:07.964"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:07.793" endtime="20190116 18:32:07.973"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:08.112" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:08.137" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:08.158" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:08.161" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:08.105" endtime="20190116 18:32:08.162"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:08.174" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:08.166" endtime="20190116 18:32:08.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:08.187" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:08.179" endtime="20190116 18:32:08.188"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:08.097" endtime="20190116 18:32:08.191"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:08.396" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:08.505" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:08.532" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:08.535" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:08.351" endtime="20190116 18:32:08.536"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:08.570" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:08.540" endtime="20190116 18:32:08.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:08.615" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:08.586" endtime="20190116 18:32:08.617"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:08.326" endtime="20190116 18:32:08.620"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:08.781" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:08.855" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:08.892" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:08.895" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:08.751" endtime="20190116 18:32:08.896"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:08.916" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:08.900" endtime="20190116 18:32:08.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:08.962" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:08.941" endtime="20190116 18:32:08.963"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:08.743" endtime="20190116 18:32:08.966"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:09.105" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:09.130" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:09.150" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:09.153" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:09.098" endtime="20190116 18:32:09.154"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:09.167" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:09.158" endtime="20190116 18:32:09.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:09.179" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:09.171" endtime="20190116 18:32:09.180"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:09.089" endtime="20190116 18:32:09.183"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:09.322" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:09.348" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:09.368" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:09.371" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:09.315" endtime="20190116 18:32:09.373"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:09.386" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:09.377" endtime="20190116 18:32:09.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:09.398" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:09.390" endtime="20190116 18:32:09.399"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:09.306" endtime="20190116 18:32:09.402"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:09.551" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:09.578" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:09.598" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:09.601" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:09.533" endtime="20190116 18:32:09.602"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:09.615" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:09.606" endtime="20190116 18:32:09.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:09.628" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:09.619" endtime="20190116 18:32:09.629"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:09.525" endtime="20190116 18:32:09.632"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:09.773" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:09.799" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:09.819" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:09.822" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:09.766" endtime="20190116 18:32:09.823"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:09.835" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:09.827" endtime="20190116 18:32:09.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:09.847" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:09.839" endtime="20190116 18:32:09.848"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:09.755" endtime="20190116 18:32:09.851"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:09.989" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:10.015" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:10.035" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:10.038" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:09.982" endtime="20190116 18:32:10.039"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:10.052" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:10.043" endtime="20190116 18:32:10.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:10.063" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:10.055" endtime="20190116 18:32:10.065"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:09.975" endtime="20190116 18:32:10.068"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:10.205" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:10.231" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:10.251" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:10.254" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:10.199" endtime="20190116 18:32:10.255"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:10.268" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:10.259" endtime="20190116 18:32:10.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:10.280" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:10.272" endtime="20190116 18:32:10.281"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:10.191" endtime="20190116 18:32:10.284"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:10.422" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:10.448" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:10.473" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:10.476" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:10.415" endtime="20190116 18:32:10.477"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:10.493" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:10.481" endtime="20190116 18:32:10.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:10.505" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:10.497" endtime="20190116 18:32:10.506"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:10.407" endtime="20190116 18:32:10.509"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:10.647" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:10.673" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:10.694" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:10.697" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:10.640" endtime="20190116 18:32:10.698"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:10.711" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:10.702" endtime="20190116 18:32:10.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:10.723" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:10.714" endtime="20190116 18:32:10.725"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:10.632" endtime="20190116 18:32:10.728"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:10.865" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:10.892" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:10.912" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:10.915" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:10.859" endtime="20190116 18:32:10.916"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:10.928" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:10.919" endtime="20190116 18:32:10.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:10.940" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:10.932" endtime="20190116 18:32:10.941"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:10.851" endtime="20190116 18:32:10.944"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:11.100" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:11.125" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:11.146" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:11.149" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:11.090" endtime="20190116 18:32:11.151"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:11.164" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:11.155" endtime="20190116 18:32:11.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:11.195" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:11.167" endtime="20190116 18:32:11.197"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:11.070" endtime="20190116 18:32:11.200"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:11.341" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:11.367" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:11.387" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:11.390" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:11.334" endtime="20190116 18:32:11.391"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:11.408" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:11.395" endtime="20190116 18:32:11.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:11.420" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:11.413" endtime="20190116 18:32:11.422"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:11.323" endtime="20190116 18:32:11.425"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:11.563" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:11.591" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:11.612" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:11.615" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:11.556" endtime="20190116 18:32:11.616"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:11.628" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:11.620" endtime="20190116 18:32:11.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:11.640" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:11.632" endtime="20190116 18:32:11.641"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:11.548" endtime="20190116 18:32:11.644"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:11.782" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:11.808" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:11.828" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:11.831" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:11.776" endtime="20190116 18:32:11.832"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:11.845" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:11.836" endtime="20190116 18:32:11.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:11.857" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:11.849" endtime="20190116 18:32:11.858"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:11.767" endtime="20190116 18:32:11.862"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:12.000" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:12.026" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:12.046" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:12.049" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:11.993" endtime="20190116 18:32:12.050"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:12.064" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:12.055" endtime="20190116 18:32:12.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:12.075" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:12.068" endtime="20190116 18:32:12.077"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:11.985" endtime="20190116 18:32:12.080"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:12.217" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:12.244" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:12.264" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:12.267" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:12.211" endtime="20190116 18:32:12.268"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:12.281" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:12.272" endtime="20190116 18:32:12.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:12.296" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:12.285" endtime="20190116 18:32:12.298"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:12.203" endtime="20190116 18:32:12.301"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:12.438" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:12.464" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:12.485" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:12.487" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:12.431" endtime="20190116 18:32:12.489"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:12.501" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:12.492" endtime="20190116 18:32:12.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:12.513" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:12.505" endtime="20190116 18:32:12.514"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:12.424" endtime="20190116 18:32:12.517"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:12.655" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:12.681" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:12.701" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:12.704" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:12.648" endtime="20190116 18:32:12.705"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:12.718" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:12.709" endtime="20190116 18:32:12.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:12.729" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:12.721" endtime="20190116 18:32:12.731"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:12.640" endtime="20190116 18:32:12.734"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:12.871" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:12.898" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:12.920" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:12.923" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:12.865" endtime="20190116 18:32:12.924"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:12.937" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:12.928" endtime="20190116 18:32:12.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:12.948" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:12.940" endtime="20190116 18:32:12.950"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:12.857" endtime="20190116 18:32:12.953"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:13.092" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:13.118" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:13.139" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:13.142" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:13.085" endtime="20190116 18:32:13.143"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:13.155" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:13.147" endtime="20190116 18:32:13.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:13.171" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:13.159" endtime="20190116 18:32:13.172"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:13.077" endtime="20190116 18:32:13.176"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:13.313" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:13.339" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:13.359" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:13.362" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:13.306" endtime="20190116 18:32:13.363"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:13.377" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:13.367" endtime="20190116 18:32:13.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:13.388" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:13.380" endtime="20190116 18:32:13.390"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:13.299" endtime="20190116 18:32:13.393"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:13.530" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:13.556" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:13.579" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:13.582" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:13.524" endtime="20190116 18:32:13.583"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:13.596" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:13.587" endtime="20190116 18:32:13.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:13.608" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:13.600" endtime="20190116 18:32:13.609"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:13.516" endtime="20190116 18:32:13.612"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:13.750" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:13.776" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:13.796" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:13.799" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:13.743" endtime="20190116 18:32:13.800"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:13.813" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:13.804" endtime="20190116 18:32:13.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:13.824" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:13.817" endtime="20190116 18:32:13.826"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:13.735" endtime="20190116 18:32:13.829"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:13.966" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:13.993" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:14.013" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:14.017" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:13.960" endtime="20190116 18:32:14.018"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:14.031" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:14.022" endtime="20190116 18:32:14.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:14.042" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:14.034" endtime="20190116 18:32:14.043"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:13.952" endtime="20190116 18:32:14.047"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:14.190" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:14.217" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:14.238" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:14.241" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:14.182" endtime="20190116 18:32:14.242"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:14.255" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:14.246" endtime="20190116 18:32:14.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:14.267" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:14.259" endtime="20190116 18:32:14.268"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:14.170" endtime="20190116 18:32:14.271"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:14.409" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:14.436" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:14.456" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:14.459" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:14.402" endtime="20190116 18:32:14.461"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:14.473" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:14.464" endtime="20190116 18:32:14.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:14.485" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:14.477" endtime="20190116 18:32:14.487"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:14.394" endtime="20190116 18:32:14.490"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:14.628" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:14.654" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:14.675" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:14.678" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:14.621" endtime="20190116 18:32:14.679"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:14.692" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:14.683" endtime="20190116 18:32:14.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:14.703" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:14.696" endtime="20190116 18:32:14.705"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:14.613" endtime="20190116 18:32:14.708"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:14.846" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:14.871" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:14.893" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:14.896" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:14.839" endtime="20190116 18:32:14.897"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:14.910" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:14.901" endtime="20190116 18:32:14.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:14.922" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:14.914" endtime="20190116 18:32:14.923"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:14.831" endtime="20190116 18:32:14.927"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:15.069" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:15.095" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:15.115" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:15.118" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:15.062" endtime="20190116 18:32:15.119"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:15.132" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:15.123" endtime="20190116 18:32:15.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:15.143" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:15.136" endtime="20190116 18:32:15.145"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:15.050" endtime="20190116 18:32:15.148"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:15.286" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:15.313" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:15.334" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:15.337" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:15.279" endtime="20190116 18:32:15.338"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:15.350" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:15.341" endtime="20190116 18:32:15.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:15.362" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:15.354" endtime="20190116 18:32:15.363"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:15.271" endtime="20190116 18:32:15.366"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:15.504" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:15.530" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:15.550" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:15.553" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:15.497" endtime="20190116 18:32:15.554"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:15.567" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:15.558" endtime="20190116 18:32:15.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:15.578" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:15.570" endtime="20190116 18:32:15.580"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:15.489" endtime="20190116 18:32:15.583"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:15.721" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:15.747" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:15.767" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:15.770" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:15.714" endtime="20190116 18:32:15.771"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:15.784" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:15.775" endtime="20190116 18:32:15.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:15.796" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:15.788" endtime="20190116 18:32:15.797"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:15.706" endtime="20190116 18:32:15.800"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:15.942" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:15.968" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:15.988" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:15.991" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:15.931" endtime="20190116 18:32:15.993"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:16.006" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:15.996" endtime="20190116 18:32:16.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:16.017" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:16.009" endtime="20190116 18:32:16.018"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:15.923" endtime="20190116 18:32:16.021"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:16.159" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:16.185" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:16.205" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:16.209" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:16.152" endtime="20190116 18:32:16.210"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:16.222" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:16.213" endtime="20190116 18:32:16.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:16.234" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:16.226" endtime="20190116 18:32:16.235"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:16.145" endtime="20190116 18:32:16.238"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:16.376" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:16.402" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:16.423" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:16.426" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:16.369" endtime="20190116 18:32:16.427"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:16.441" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:16.431" endtime="20190116 18:32:16.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:16.452" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:16.444" endtime="20190116 18:32:16.454"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:16.361" endtime="20190116 18:32:16.457"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:16.595" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:16.621" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:16.641" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:16.644" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:16.588" endtime="20190116 18:32:16.645"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:16.658" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:16.649" endtime="20190116 18:32:16.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:16.670" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:16.662" endtime="20190116 18:32:16.671"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:16.580" endtime="20190116 18:32:16.674"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:16.815" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:16.842" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:16.862" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:16.866" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:16.805" endtime="20190116 18:32:16.866"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:16.879" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:16.870" endtime="20190116 18:32:16.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:16.891" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:16.883" endtime="20190116 18:32:16.892"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:16.798" endtime="20190116 18:32:16.895"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:17.033" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:17.059" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:17.080" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:17.083" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:17.027" endtime="20190116 18:32:17.084"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:17.098" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:17.088" endtime="20190116 18:32:17.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:17.110" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:17.102" endtime="20190116 18:32:17.111"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:17.018" endtime="20190116 18:32:17.114"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:17.252" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:17.278" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:17.298" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:17.301" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:17.245" endtime="20190116 18:32:17.302"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:17.315" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:17.306" endtime="20190116 18:32:17.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:17.327" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:17.319" endtime="20190116 18:32:17.328"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:17.237" endtime="20190116 18:32:17.331"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:17.469" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:17.496" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:17.517" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:17.520" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:17.462" endtime="20190116 18:32:17.530"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:17.544" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:17.535" endtime="20190116 18:32:17.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:17.555" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:17.547" endtime="20190116 18:32:17.557"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:17.454" endtime="20190116 18:32:17.560"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:17.738" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:17.802" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:17.847" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:17.850" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:32:17.708" endtime="20190116 18:32:17.851"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:17.881" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:32:17.859" endtime="20190116 18:32:17.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:32:17.900" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:32:17.885" endtime="20190116 18:32:17.910"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:32:17.700" endtime="20190116 18:32:17.917"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:18.076" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:32:18.136" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:18.265" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:18.280" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:18.058" endtime="20190116 18:32:18.282"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:32:18.343" level="INFO">${resp} = 179: usb_max: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast state DOWN group default qlen 1000
    inet 192.168.1.100/24 brd 192.168.1.255 scope global usb_max</msg>
<status status="PASS" starttime="20190116 18:32:18.294" endtime="20190116 18:32:18.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:18.353" endtime="20190116 18:32:18.360"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:18.041" endtime="20190116 18:32:18.362"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:52.909" endtime="20190116 18:32:18.364"></status>
</kw>
<msg timestamp="20190116 18:32:18.366" level="INFO">${STATUS} = True</msg>
<status status="PASS" starttime="20190116 18:31:52.902" endtime="20190116 18:32:18.366"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DUT ready status: ${STATUS}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:18.369" endtime="20190116 18:32:18.375"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3 seconds</arg>
</arguments>
<msg timestamp="20190116 18:32:21.382" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20190116 18:32:18.378" endtime="20190116 18:32:21.385"></status>
</kw>
<msg timestamp="20190116 18:32:21.389" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20190116 18:31:52.871" endtime="20190116 18:32:21.390"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Device does not exist</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:21.393" endtime="20190116 18:32:21.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:21.403" level="INFO">"Setup ssh"</msg>
<status status="PASS" starttime="20190116 18:32:21.400" endtime="20190116 18:32:21.406"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw name="Open Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg timestamp="20190116 18:32:21.423" level="INFO">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status status="PASS" starttime="20190116 18:32:21.416" endtime="20190116 18:32:23.576"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:21.409" endtime="20190116 18:32:23.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh done!"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:23.587" level="INFO">"Setup ssh done!"</msg>
<status status="PASS" starttime="20190116 18:32:23.581" endtime="20190116 18:32:23.590"></status>
</kw>
<status status="PASS" starttime="20190116 18:31:46.426" endtime="20190116 18:32:23.592"></status>
</kw>
<kw name="cansend_500k">
<doc>Can 3 send message test with baudrate 500k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:23.619" level="INFO">Start test with can2 and bitrate: 500000</msg>
<status status="PASS" starttime="20190116 18:32:23.613" endtime="20190116 18:32:23.622"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:23.633" endtime="20190116 18:32:23.641"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:23.652" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:32:23.679" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:23.773" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:23.777" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:23.645" endtime="20190116 18:32:23.778"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:23.794" endtime="20190116 18:32:23.803"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:23.813" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190116 18:32:23.841" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:23.899" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:23.902" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:23.806" endtime="20190116 18:32:23.903"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:23.907" endtime="20190116 18:32:23.916"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:23.926" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:32:23.953" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:24.039" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:24.042" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:23.919" endtime="20190116 18:32:24.043"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:24.047" endtime="20190116 18:32:24.056"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:23.624" endtime="20190116 18:32:24.058"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:24.071" endtime="20190116 18:32:24.077"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:24.086" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190116 18:32:24.183" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:24.185" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:24.080" endtime="20190116 18:32:24.186"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:24.701" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:24.189" endtime="20190116 18:32:24.703"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:24.713" level="INFO">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190116 18:32:24.767" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:24.770" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:24.706" endtime="20190116 18:32:24.771"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:25.302" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:24.774" endtime="20190116 18:32:25.304"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:25.322" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190116 18:32:25.390" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:25.394" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:25.307" endtime="20190116 18:32:25.395"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:25.929" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:25.421" endtime="20190116 18:32:25.931"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:24.061" endtime="20190116 18:32:25.933"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:25.937" endtime="20190116 18:32:26.269"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:26.272" endtime="20190116 18:32:26.355"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:26.358" endtime="20190116 18:32:26.379"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:26.382" endtime="20190116 18:32:26.436"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:26.443" endtime="20190116 18:32:26.457"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:26.965" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:26.460" endtime="20190116 18:32:26.967"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:26.974" endtime="20190116 18:32:26.985"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190116 18:32:27.008" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:27.062" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:32:26.987" endtime="20190116 18:32:27.064"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190116 18:32:27.099" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:27.191" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:32:27.071" endtime="20190116 18:32:27.199"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190116 18:32:27.227" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:27.311" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:32:27.202" endtime="20190116 18:32:27.321"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:27.846" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:27.337" endtime="20190116 18:32:27.848"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190116 18:32:27.908" level="INFO">${res_list} = [{'timestamp': '16-01-2019 - 18:32:27.076282', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:27.203800', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '...</msg>
<status status="PASS" starttime="20190116 18:32:27.851" endtime="20190116 18:32:27.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:27.918" level="INFO">[{'timestamp': '16-01-2019 - 18:32:27.076282', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:27.203800', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:27.317403', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190116 18:32:27.912" endtime="20190116 18:32:27.921"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190116 18:32:27.929" level="INFO">Length is 3</msg>
<msg timestamp="20190116 18:32:27.931" level="INFO">${MSG_LENGTH} = 3</msg>
<status status="PASS" starttime="20190116 18:32:27.924" endtime="20190116 18:32:27.932"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:27.943" endtime="20190116 18:32:27.950"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:27.935" endtime="20190116 18:32:27.951"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:27.976" level="INFO">Length is 3</msg>
<msg timestamp="20190116 18:32:27.978" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20190116 18:32:27.971" endtime="20190116 18:32:27.979"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:27.982" endtime="20190116 18:32:27.988"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:27.997" level="INFO">${msgcount} = 0</msg>
<status status="PASS" starttime="20190116 18:32:27.991" endtime="20190116 18:32:27.998"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:27.076282', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:28.012" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:28.006" endtime="20190116 18:32:28.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:28.024" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:28.016" endtime="20190116 18:32:28.025"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:28.035" level="INFO">${msgcount} = 1</msg>
<status status="PASS" starttime="20190116 18:32:28.027" endtime="20190116 18:32:28.036"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:28.002" endtime="20190116 18:32:28.037"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:27.203800', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:28.048" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:28.042" endtime="20190116 18:32:28.049"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:28.063" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:28.052" endtime="20190116 18:32:28.064"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:28.074" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:28.066" endtime="20190116 18:32:28.076"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:28.038" endtime="20190116 18:32:28.077"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:27.317403', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:28.087" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:28.081" endtime="20190116 18:32:28.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:28.099" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:28.091" endtime="20190116 18:32:28.100"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:28.110" level="INFO">${msgcount} = 3</msg>
<status status="PASS" starttime="20190116 18:32:28.102" endtime="20190116 18:32:28.111"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:28.078" endtime="20190116 18:32:28.111"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:27.999" endtime="20190116 18:32:28.112"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:28.115" endtime="20190116 18:32:28.121"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:28.124" endtime="20190116 18:32:28.131"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:27.962" endtime="20190116 18:32:28.134"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:27.955" endtime="20190116 18:32:28.136"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:23.603" endtime="20190116 18:32:28.138"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:23.597" endtime="20190116 18:32:28.140"></status>
</kw>
<kw name="can_loopback_500k">
<doc>Can 3 loopback test with baudrate 500k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:28.161" level="INFO">Can channel loopback: can2 with bitrate: 500000</msg>
<status status="PASS" starttime="20190116 18:32:28.156" endtime="20190116 18:32:28.163"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:28.176" endtime="20190116 18:32:28.183"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:28.192" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:32:28.219" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:28.291" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:28.294" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:28.186" endtime="20190116 18:32:28.295"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:28.299" endtime="20190116 18:32:28.308"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:28.318" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190116 18:32:28.345" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:28.401" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:28.404" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:28.311" endtime="20190116 18:32:28.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:28.409" endtime="20190116 18:32:28.417"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:28.427" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:32:28.453" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:28.539" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:28.542" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:28.421" endtime="20190116 18:32:28.543"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:28.546" endtime="20190116 18:32:28.555"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:28.166" endtime="20190116 18:32:28.558"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:28.570" endtime="20190116 18:32:28.576"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:28.585" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190116 18:32:28.641" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:28.643" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:28.579" endtime="20190116 18:32:28.644"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:29.162" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:28.657" endtime="20190116 18:32:29.165"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:29.175" level="INFO">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190116 18:32:29.230" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:29.233" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:29.167" endtime="20190116 18:32:29.234"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:29.744" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:29.236" endtime="20190116 18:32:29.746"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:29.755" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190116 18:32:29.806" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:29.809" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:29.749" endtime="20190116 18:32:29.810"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:30.324" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:29.812" endtime="20190116 18:32:30.327"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:28.560" endtime="20190116 18:32:30.329"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:30.337" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190116 18:32:30.364" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:30.376" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:30.379" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:30.332" endtime="20190116 18:32:30.381"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:30.384" endtime="20190116 18:32:30.393"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:30.401" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190116 18:32:30.476" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 500000 sample-point 0.875  	  tq 125 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190116 18:32:30.479" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 500000 sample-poi...</msg>
<status status="PASS" starttime="20190116 18:32:30.396" endtime="20190116 18:32:30.479"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:30.483" endtime="20190116 18:32:30.496"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:30.502" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190116 18:32:30.599" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:30.601" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:30.499" endtime="20190116 18:32:30.602"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:30.605" endtime="20190116 18:32:30.614"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:32:31.622" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:32:30.617" endtime="20190116 18:32:31.624"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:31.633" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190116 18:32:31.678" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:31.680" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:31.627" endtime="20190116 18:32:31.681"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:31.684" endtime="20190116 18:32:31.697"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:32.203" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:31.700" endtime="20190116 18:32:32.206"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:32.212" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190116 18:32:32.313" level="INFO">Returning data (535 root      0:00 candump -t a -D -B can2 can2   536 root      0:00 sh -c ps aux | grep candump   538 root      0:00 grep candump, )</msg>
<msg timestamp="20190116 18:32:32.315" level="INFO">${ret} = ('535 root      0:00 candump -t a -D -B can2 can2   536 root      0:00 sh -c ps aux | grep candump   538 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190116 18:32:32.208" endtime="20190116 18:32:32.324"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:32.339" endtime="20190116 18:32:32.361"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:32.364" endtime="20190116 18:32:32.625"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:32.628" endtime="20190116 18:32:32.701"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:32.704" endtime="20190116 18:32:32.784"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:33.299" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:32.787" endtime="20190116 18:32:33.301"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:33.323" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190116 18:32:33.399" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:33.436" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:33.439" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:33.308" endtime="20190116 18:32:33.440"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:33.452" endtime="20190116 18:32:33.497"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:33.525" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:33.598" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:33.626" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:33.630" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:33.508" endtime="20190116 18:32:33.631"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:33.648" endtime="20190116 18:32:33.678"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:33.703" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190116 18:32:33.778" level="INFO">Returning data ((1547661250.058314)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547661250.249607)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190116 18:32:33.789" level="INFO">${ret} = ('(1547661250.058314)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547661250.249607)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status status="PASS" starttime="20190116 18:32:33.689" endtime="20190116 18:32:33.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:33.811" endtime="20190116 18:32:33.842"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:34.353" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:33.849" endtime="20190116 18:32:34.355"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190116 18:32:34.423" level="INFO">${res_list} = [{'timestamp': '16-01-2019 - 18:32:33.453102', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '16-01-2019 - 18:32:33.470023', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'t...</msg>
<status status="PASS" starttime="20190116 18:32:34.362" endtime="20190116 18:32:34.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:34.432" level="INFO">[{'timestamp': '16-01-2019 - 18:32:33.453102', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '16-01-2019 - 18:32:33.470023', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '16-01-2019 - 18:32:33.639848', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:33.657100', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190116 18:32:34.427" endtime="20190116 18:32:34.435"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190116 18:32:34.447" level="INFO">Length is 4</msg>
<msg timestamp="20190116 18:32:34.453" level="INFO">${MSG_LENGTH} = 4</msg>
<status status="PASS" starttime="20190116 18:32:34.438" endtime="20190116 18:32:34.454"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:34.471" endtime="20190116 18:32:34.485"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:34.462" endtime="20190116 18:32:34.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:34.540" level="INFO">Length is 4</msg>
<msg timestamp="20190116 18:32:34.542" level="INFO">${count} = 4</msg>
<status status="PASS" starttime="20190116 18:32:34.532" endtime="20190116 18:32:34.543"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:34.550" endtime="20190116 18:32:34.559"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:34.575" level="INFO">${msgcount} = 0</msg>
<status status="PASS" starttime="20190116 18:32:34.567" endtime="20190116 18:32:34.580"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:33.453102', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:34.612" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190116 18:32:34.596" endtime="20190116 18:32:34.614"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:34.639" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:34.622" endtime="20190116 18:32:34.640"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:34.661" level="INFO">${msgcount} = 1</msg>
<status status="PASS" starttime="20190116 18:32:34.647" endtime="20190116 18:32:34.662"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:34.589" endtime="20190116 18:32:34.663"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:33.470023', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:34.685" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190116 18:32:34.671" endtime="20190116 18:32:34.686"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:34.713" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:34.697" endtime="20190116 18:32:34.714"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:34.737" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:34.721" endtime="20190116 18:32:34.738"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:34.668" endtime="20190116 18:32:34.739"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:33.639848', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:34.752" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:34.743" endtime="20190116 18:32:34.757"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:34.775" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20190116 18:32:34.760" endtime="20190116 18:32:34.781"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:34.799" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:34.784" endtime="20190116 18:32:34.804"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:34.740" endtime="20190116 18:32:34.805"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:33.657100', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:34.823" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:34.814" endtime="20190116 18:32:34.824"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:34.847" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20190116 18:32:34.831" endtime="20190116 18:32:34.848"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:34.861" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:34.853" endtime="20190116 18:32:34.862"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:34.807" endtime="20190116 18:32:34.863"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:34.582" endtime="20190116 18:32:34.863"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:34.867" endtime="20190116 18:32:34.881"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:34.884" endtime="20190116 18:32:34.905"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:34.509" endtime="20190116 18:32:34.909"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:34.493" endtime="20190116 18:32:34.910"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:34.925" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190116 18:32:35.006" level="INFO">Returning data (535 root      0:00 candump -t a -D -B can2 can2   547 root      0:00 sh -c ps aux | grep candump   550 root      0:00 grep candump, )</msg>
<msg timestamp="20190116 18:32:35.013" level="INFO">${ret} = ('535 root      0:00 candump -t a -D -B can2 can2   547 root      0:00 sh -c ps aux | grep candump   550 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190116 18:32:34.917" endtime="20190116 18:32:35.014"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:35.029" endtime="20190116 18:32:35.037"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:35.054" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190116 18:32:35.148" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:35.154" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:35.046" endtime="20190116 18:32:35.155"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:32:36.171" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:32:35.167" endtime="20190116 18:32:36.174"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:28.148" endtime="20190116 18:32:36.182"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:28.142" endtime="20190116 18:32:36.184"></status>
</kw>
<kw name="cansend_250k">
<doc>Can 3 send message test with baudrate 250k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:36.232" level="INFO">Start test with can2 and bitrate: 250000</msg>
<status status="PASS" starttime="20190116 18:32:36.222" endtime="20190116 18:32:36.243"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:36.262" endtime="20190116 18:32:36.278"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:36.296" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:32:36.348" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:36.478" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:36.481" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:36.285" endtime="20190116 18:32:36.482"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:36.490" endtime="20190116 18:32:36.506"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:36.527" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190116 18:32:36.574" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:36.651" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:36.654" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:36.509" endtime="20190116 18:32:36.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:36.672" endtime="20190116 18:32:36.693"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:36.717" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:32:36.758" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:36.889" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:36.896" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:36.701" endtime="20190116 18:32:36.897"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:36.905" endtime="20190116 18:32:36.922"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:36.245" endtime="20190116 18:32:36.925"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:36.953" endtime="20190116 18:32:36.982"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:36.996" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190116 18:32:37.033" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:37.036" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:36.989" endtime="20190116 18:32:37.037"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:37.550" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:37.040" endtime="20190116 18:32:37.552"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:37.569" level="INFO">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190116 18:32:37.666" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:37.668" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:37.557" endtime="20190116 18:32:37.669"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:38.194" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:37.672" endtime="20190116 18:32:38.196"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:38.205" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190116 18:32:38.255" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:38.258" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:38.199" endtime="20190116 18:32:38.258"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:38.773" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:38.261" endtime="20190116 18:32:38.775"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:36.927" endtime="20190116 18:32:38.778"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:38.781" endtime="20190116 18:32:38.941"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:38.945" endtime="20190116 18:32:38.991"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:38.995" endtime="20190116 18:32:39.002"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:39.005" endtime="20190116 18:32:39.053"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:39.060" endtime="20190116 18:32:39.073"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:39.584" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:39.079" endtime="20190116 18:32:39.586"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:39.593" endtime="20190116 18:32:39.609"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190116 18:32:39.623" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:39.674" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:32:39.612" endtime="20190116 18:32:39.685"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190116 18:32:39.718" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:39.797" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:32:39.701" endtime="20190116 18:32:39.799"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190116 18:32:39.835" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:39.918" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:32:39.811" endtime="20190116 18:32:39.927"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:40.451" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:39.930" endtime="20190116 18:32:40.453"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190116 18:32:40.514" level="INFO">${res_list} = [{'timestamp': '16-01-2019 - 18:32:39.682179', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:39.805078', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '...</msg>
<status status="PASS" starttime="20190116 18:32:40.460" endtime="20190116 18:32:40.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:40.540" level="INFO">[{'timestamp': '16-01-2019 - 18:32:39.682179', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:39.805078', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:39.932606', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190116 18:32:40.526" endtime="20190116 18:32:40.555"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190116 18:32:40.563" level="INFO">Length is 3</msg>
<msg timestamp="20190116 18:32:40.574" level="INFO">${MSG_LENGTH} = 3</msg>
<status status="PASS" starttime="20190116 18:32:40.558" endtime="20190116 18:32:40.575"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:40.598" endtime="20190116 18:32:40.607"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:40.578" endtime="20190116 18:32:40.619"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:40.668" level="INFO">Length is 3</msg>
<msg timestamp="20190116 18:32:40.670" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20190116 18:32:40.651" endtime="20190116 18:32:40.671"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:40.674" endtime="20190116 18:32:40.693"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:40.715" level="INFO">${msgcount} = 0</msg>
<status status="PASS" starttime="20190116 18:32:40.697" endtime="20190116 18:32:40.716"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:39.682179', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:40.743" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:40.723" endtime="20190116 18:32:40.744"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:40.790" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:40.747" endtime="20190116 18:32:40.790"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:40.811" level="INFO">${msgcount} = 1</msg>
<status status="PASS" starttime="20190116 18:32:40.794" endtime="20190116 18:32:40.811"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:40.720" endtime="20190116 18:32:40.812"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:39.805078', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:40.836" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:40.830" endtime="20190116 18:32:40.837"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:40.871" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:40.852" endtime="20190116 18:32:40.872"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:40.890" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:40.875" endtime="20190116 18:32:40.891"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:40.827" endtime="20190116 18:32:40.891"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:39.932606', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:40.914" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:40.896" endtime="20190116 18:32:40.915"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:40.958" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:40.938" endtime="20190116 18:32:40.959"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:40.978" level="INFO">${msgcount} = 3</msg>
<status status="PASS" starttime="20190116 18:32:40.962" endtime="20190116 18:32:40.979"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:40.893" endtime="20190116 18:32:40.979"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:40.717" endtime="20190116 18:32:40.980"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:40.983" endtime="20190116 18:32:41.008"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:41.011" endtime="20190116 18:32:41.037"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:40.642" endtime="20190116 18:32:41.040"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:40.622" endtime="20190116 18:32:41.042"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:36.200" endtime="20190116 18:32:41.054"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:36.190" endtime="20190116 18:32:41.057"></status>
</kw>
<kw name="can_loopback_250k">
<doc>Can 3 loopback test with baudrate 250k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:41.108" level="INFO">Can channel loopback: can2 with bitrate: 250000</msg>
<status status="PASS" starttime="20190116 18:32:41.089" endtime="20190116 18:32:41.119"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:41.139" endtime="20190116 18:32:41.154"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:41.170" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:32:41.200" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:41.274" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:41.277" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:41.157" endtime="20190116 18:32:41.278"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:41.282" endtime="20190116 18:32:41.290"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:41.300" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190116 18:32:41.327" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:41.384" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:41.387" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:41.293" endtime="20190116 18:32:41.387"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:41.391" endtime="20190116 18:32:41.400"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:41.409" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:32:41.437" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:41.520" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:41.523" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:41.403" endtime="20190116 18:32:41.525"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:41.528" endtime="20190116 18:32:41.538"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:41.121" endtime="20190116 18:32:41.541"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:41.555" endtime="20190116 18:32:41.561"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:41.570" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190116 18:32:41.623" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:41.626" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:41.564" endtime="20190116 18:32:41.627"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:42.142" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:41.630" endtime="20190116 18:32:42.144"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:42.154" level="INFO">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190116 18:32:42.206" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:42.209" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:42.147" endtime="20190116 18:32:42.210"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:42.718" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:42.212" endtime="20190116 18:32:42.719"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:42.729" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190116 18:32:42.778" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:42.781" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:42.723" endtime="20190116 18:32:42.782"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:43.297" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:42.785" endtime="20190116 18:32:43.299"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:41.543" endtime="20190116 18:32:43.302"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:43.310" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190116 18:32:43.337" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:43.350" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:43.353" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:43.305" endtime="20190116 18:32:43.354"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:43.358" endtime="20190116 18:32:43.369"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:43.387" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190116 18:32:43.456" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 250000 sample-point 0.875  	  tq 250 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190116 18:32:43.459" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 250000 sample-poi...</msg>
<status status="PASS" starttime="20190116 18:32:43.378" endtime="20190116 18:32:43.460"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:43.463" endtime="20190116 18:32:43.480"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:43.486" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190116 18:32:43.601" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:43.604" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:43.483" endtime="20190116 18:32:43.605"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:43.608" endtime="20190116 18:32:43.619"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:32:44.626" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:32:43.621" endtime="20190116 18:32:44.628"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:44.637" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190116 18:32:44.677" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:44.680" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:44.631" endtime="20190116 18:32:44.681"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:44.684" endtime="20190116 18:32:44.696"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:45.202" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:44.699" endtime="20190116 18:32:45.204"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:45.211" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190116 18:32:45.299" level="INFO">Returning data (571 root      0:00 candump -t a -D -B can2 can2   572 root      0:00 sh -c ps aux | grep candump   574 root      0:00 grep candump, )</msg>
<msg timestamp="20190116 18:32:45.302" level="INFO">${ret} = ('571 root      0:00 candump -t a -D -B can2 can2   572 root      0:00 sh -c ps aux | grep candump   574 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190116 18:32:45.207" endtime="20190116 18:32:45.303"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:45.306" endtime="20190116 18:32:45.319"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:45.322" endtime="20190116 18:32:45.483"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:45.486" endtime="20190116 18:32:45.531"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:45.535" endtime="20190116 18:32:45.583"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:46.098" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:45.590" endtime="20190116 18:32:46.100"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:46.120" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190116 18:32:46.172" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:46.193" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:46.195" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:46.103" endtime="20190116 18:32:46.201"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:46.213" endtime="20190116 18:32:46.230"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:46.248" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:46.299" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:46.322" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:46.326" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:46.237" endtime="20190116 18:32:46.327"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:46.338" endtime="20190116 18:32:46.357"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:46.368" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190116 18:32:46.434" level="INFO">Returning data ((1547663566.171582)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547663566.298434)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190116 18:32:46.441" level="INFO">${ret} = ('(1547663566.171582)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547663566.298434)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status status="PASS" starttime="20190116 18:32:46.363" endtime="20190116 18:32:46.442"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:46.458" endtime="20190116 18:32:46.476"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:46.991" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:46.479" endtime="20190116 18:32:46.993"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190116 18:32:47.053" level="INFO">${res_list} = [{'timestamp': '16-01-2019 - 18:32:46.197642', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '16-01-2019 - 18:32:46.208265', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'t...</msg>
<status status="PASS" starttime="20190116 18:32:46.996" endtime="20190116 18:32:47.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:47.062" level="INFO">[{'timestamp': '16-01-2019 - 18:32:46.197642', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '16-01-2019 - 18:32:46.208265', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '16-01-2019 - 18:32:46.317597', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:46.332550', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190116 18:32:47.057" endtime="20190116 18:32:47.065"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190116 18:32:47.072" level="INFO">Length is 4</msg>
<msg timestamp="20190116 18:32:47.074" level="INFO">${MSG_LENGTH} = 4</msg>
<status status="PASS" starttime="20190116 18:32:47.068" endtime="20190116 18:32:47.075"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:47.084" endtime="20190116 18:32:47.090"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:47.078" endtime="20190116 18:32:47.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:47.115" level="INFO">Length is 4</msg>
<msg timestamp="20190116 18:32:47.118" level="INFO">${count} = 4</msg>
<status status="PASS" starttime="20190116 18:32:47.111" endtime="20190116 18:32:47.119"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:47.122" endtime="20190116 18:32:47.127"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:47.135" level="INFO">${msgcount} = 0</msg>
<status status="PASS" starttime="20190116 18:32:47.130" endtime="20190116 18:32:47.136"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:46.197642', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:47.152" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190116 18:32:47.144" endtime="20190116 18:32:47.153"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:47.164" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:47.156" endtime="20190116 18:32:47.165"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:47.174" level="INFO">${msgcount} = 1</msg>
<status status="PASS" starttime="20190116 18:32:47.168" endtime="20190116 18:32:47.175"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:47.141" endtime="20190116 18:32:47.175"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:46.208265', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:47.185" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190116 18:32:47.180" endtime="20190116 18:32:47.186"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:47.197" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:47.189" endtime="20190116 18:32:47.198"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:47.206" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:47.200" endtime="20190116 18:32:47.207"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:47.177" endtime="20190116 18:32:47.208"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:46.317597', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:47.217" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:47.212" endtime="20190116 18:32:47.218"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:47.229" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20190116 18:32:47.221" endtime="20190116 18:32:47.229"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:47.238" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:47.232" endtime="20190116 18:32:47.239"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:47.209" endtime="20190116 18:32:47.240"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:46.332550', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:47.249" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:47.245" endtime="20190116 18:32:47.250"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:47.261" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20190116 18:32:47.253" endtime="20190116 18:32:47.262"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:47.271" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:47.265" endtime="20190116 18:32:47.272"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:47.242" endtime="20190116 18:32:47.272"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:47.138" endtime="20190116 18:32:47.273"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:47.276" endtime="20190116 18:32:47.281"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:47.284" endtime="20190116 18:32:47.290"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:47.102" endtime="20190116 18:32:47.294"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:47.094" endtime="20190116 18:32:47.295"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:47.302" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190116 18:32:47.384" level="INFO">Returning data (571 root      0:00 candump -t a -D -B can2 can2   576 root      0:00 sh -c ps aux | grep candump   578 root      0:00 grep candump, )</msg>
<msg timestamp="20190116 18:32:47.387" level="INFO">${ret} = ('571 root      0:00 candump -t a -D -B can2 can2   576 root      0:00 sh -c ps aux | grep candump   578 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190116 18:32:47.298" endtime="20190116 18:32:47.388"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:47.391" endtime="20190116 18:32:47.402"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:47.409" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190116 18:32:47.530" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:47.532" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:47.405" endtime="20190116 18:32:47.533"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:32:48.546" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:32:47.536" endtime="20190116 18:32:48.548"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:41.064" endtime="20190116 18:32:48.551"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:41.059" endtime="20190116 18:32:48.553"></status>
</kw>
<kw name="cansend_125k">
<doc>Can 3 send message test with baudrate 125k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:48.577" level="INFO">Start test with can2 and bitrate: 125000</msg>
<status status="PASS" starttime="20190116 18:32:48.571" endtime="20190116 18:32:48.580"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:48.591" endtime="20190116 18:32:48.599"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:48.609" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:32:48.635" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:48.710" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:48.713" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:48.602" endtime="20190116 18:32:48.714"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:48.718" endtime="20190116 18:32:48.726"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:48.737" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190116 18:32:48.764" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:48.819" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:48.822" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:48.729" endtime="20190116 18:32:48.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:48.827" endtime="20190116 18:32:48.836"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:48.845" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:32:48.873" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:48.956" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:48.959" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:48.839" endtime="20190116 18:32:48.960"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:48.964" endtime="20190116 18:32:48.973"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:48.582" endtime="20190116 18:32:48.976"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:48.988" endtime="20190116 18:32:48.994"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:49.008" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190116 18:32:49.059" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:49.063" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:48.997" endtime="20190116 18:32:49.064"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:49.579" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:49.074" endtime="20190116 18:32:49.581"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:49.590" level="INFO">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190116 18:32:49.641" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:49.644" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:49.584" endtime="20190116 18:32:49.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:50.158" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:49.648" endtime="20190116 18:32:50.160"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:50.169" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190116 18:32:50.226" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:50.228" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:50.163" endtime="20190116 18:32:50.229"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:50.739" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:50.232" endtime="20190116 18:32:50.741"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:48.978" endtime="20190116 18:32:50.743"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:50.747" endtime="20190116 18:32:50.909"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:50.912" endtime="20190116 18:32:50.959"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:50.963" endtime="20190116 18:32:50.968"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:50.971" endtime="20190116 18:32:51.025"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:51.028" endtime="20190116 18:32:51.042"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:51.554" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:51.045" endtime="20190116 18:32:51.556"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:51.559" endtime="20190116 18:32:51.574"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190116 18:32:51.594" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:51.639" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:32:51.583" endtime="20190116 18:32:51.646"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190116 18:32:51.684" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:51.769" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:32:51.663" endtime="20190116 18:32:51.771"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg timestamp="20190116 18:32:51.804" level="INFO">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:51.880" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:32:51.782" endtime="20190116 18:32:51.882"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:52.407" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:51.898" endtime="20190116 18:32:52.409"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190116 18:32:52.470" level="INFO">${res_list} = [{'timestamp': '16-01-2019 - 18:32:51.649137', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:51.773120', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '...</msg>
<status status="PASS" starttime="20190116 18:32:52.416" endtime="20190116 18:32:52.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:52.480" level="INFO">[{'timestamp': '16-01-2019 - 18:32:51.649137', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:51.773120', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:51.885903', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190116 18:32:52.475" endtime="20190116 18:32:52.483"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190116 18:32:52.491" level="INFO">Length is 3</msg>
<msg timestamp="20190116 18:32:52.494" level="INFO">${MSG_LENGTH} = 3</msg>
<status status="PASS" starttime="20190116 18:32:52.486" endtime="20190116 18:32:52.494"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:52.503" endtime="20190116 18:32:52.510"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:52.498" endtime="20190116 18:32:52.511"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:52.536" level="INFO">Length is 3</msg>
<msg timestamp="20190116 18:32:52.538" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20190116 18:32:52.531" endtime="20190116 18:32:52.539"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:52.542" endtime="20190116 18:32:52.549"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:52.558" level="INFO">${msgcount} = 0</msg>
<status status="PASS" starttime="20190116 18:32:52.552" endtime="20190116 18:32:52.559"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:51.649137', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:52.574" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:52.567" endtime="20190116 18:32:52.575"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:52.585" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:52.578" endtime="20190116 18:32:52.586"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:52.596" level="INFO">${msgcount} = 1</msg>
<status status="PASS" starttime="20190116 18:32:52.589" endtime="20190116 18:32:52.597"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:52.563" endtime="20190116 18:32:52.598"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:51.773120', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:52.609" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:52.603" endtime="20190116 18:32:52.610"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:52.624" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:52.613" endtime="20190116 18:32:52.625"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:52.635" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:52.627" endtime="20190116 18:32:52.636"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:52.599" endtime="20190116 18:32:52.637"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:51.885903', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:52.647" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:52.641" endtime="20190116 18:32:52.649"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:52.659" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:52.651" endtime="20190116 18:32:52.660"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:52.670" level="INFO">${msgcount} = 3</msg>
<status status="PASS" starttime="20190116 18:32:52.663" endtime="20190116 18:32:52.671"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:52.638" endtime="20190116 18:32:52.671"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:52.560" endtime="20190116 18:32:52.672"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:52.675" endtime="20190116 18:32:52.681"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:52.684" endtime="20190116 18:32:52.691"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:52.522" endtime="20190116 18:32:52.695"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:52.514" endtime="20190116 18:32:52.696"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:48.561" endtime="20190116 18:32:52.698"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:48.555" endtime="20190116 18:32:52.701"></status>
</kw>
<kw name="can_loopback_125k">
<doc>Can 3 loopback test with baudrate 125k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:52.721" level="INFO">Can channel loopback: can2 with bitrate: 125000</msg>
<status status="PASS" starttime="20190116 18:32:52.716" endtime="20190116 18:32:52.724"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:52.736" endtime="20190116 18:32:52.743"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:52.752" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:32:52.779" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:52.859" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:52.862" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:52.746" endtime="20190116 18:32:52.863"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:52.868" endtime="20190116 18:32:52.877"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:52.887" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190116 18:32:52.916" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:52.973" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:52.976" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:52.880" endtime="20190116 18:32:52.978"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:52.981" endtime="20190116 18:32:52.991"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:32:53.001" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:32:53.027" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:53.112" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:53.115" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:52.994" endtime="20190116 18:32:53.116"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:53.120" endtime="20190116 18:32:53.128"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:52.726" endtime="20190116 18:32:53.131"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:53.144" endtime="20190116 18:32:53.150"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:53.159" level="INFO">Sending command to DUT ip link set can2 down</msg>
<msg timestamp="20190116 18:32:53.195" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:53.197" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:53.153" endtime="20190116 18:32:53.210"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:53.729" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:53.220" endtime="20190116 18:32:53.731"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:53.741" level="INFO">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190116 18:32:53.790" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:53.793" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:53.734" endtime="20190116 18:32:53.793"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:54.308" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:53.796" endtime="20190116 18:32:54.310"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:54.319" level="INFO">Sending command to DUT ip link set can2 up</msg>
<msg timestamp="20190116 18:32:54.371" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:54.375" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:54.313" endtime="20190116 18:32:54.376"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg timestamp="20190116 18:32:54.890" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:54.379" endtime="20190116 18:32:54.892"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190116 18:32:53.133" endtime="20190116 18:32:54.894"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:54.903" level="INFO">Starting process:
ip -details link show can2</msg>
<msg timestamp="20190116 18:32:54.930" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:54.943" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:54.945" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:54.898" endtime="20190116 18:32:54.946"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:54.950" endtime="20190116 18:32:54.958"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:54.967" level="INFO">Sending command to DUT ip -details link show can2</msg>
<msg timestamp="20190116 18:32:55.010" level="INFO">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 125000 sample-point 0.875  	  tq 500 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg timestamp="20190116 18:32:55.013" level="INFO">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 125000 sample-poi...</msg>
<status status="PASS" starttime="20190116 18:32:54.962" endtime="20190116 18:32:55.014"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:55.025" endtime="20190116 18:32:55.033"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:55.039" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190116 18:32:55.147" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:55.149" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:55.036" endtime="20190116 18:32:55.150"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:55.153" endtime="20190116 18:32:55.163"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:32:56.170" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:32:55.165" endtime="20190116 18:32:56.172"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:56.191" level="INFO">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg timestamp="20190116 18:32:56.238" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:56.241" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:56.175" endtime="20190116 18:32:56.241"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:56.244" endtime="20190116 18:32:56.252"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:56.759" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:56.255" endtime="20190116 18:32:56.761"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:56.767" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190116 18:32:56.857" level="INFO">Returning data (598 root      0:00 candump -t a -D -B can2 can2   599 root      0:00 sh -c ps aux | grep candump   601 root      0:00 grep candump, )</msg>
<msg timestamp="20190116 18:32:56.859" level="INFO">${ret} = ('598 root      0:00 candump -t a -D -B can2 can2   599 root      0:00 sh -c ps aux | grep candump   601 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190116 18:32:56.763" endtime="20190116 18:32:56.860"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:56.863" endtime="20190116 18:32:56.876"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:56.879" endtime="20190116 18:32:57.040"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:57.044" endtime="20190116 18:32:57.089"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:57.093" endtime="20190116 18:32:57.168"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:57.699" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:57.175" endtime="20190116 18:32:57.702"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:57.719" level="INFO">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg timestamp="20190116 18:32:57.771" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:57.794" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:57.798" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:57.709" endtime="20190116 18:32:57.799"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:57.807" endtime="20190116 18:32:57.829"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:57.847" level="INFO">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg timestamp="20190116 18:32:57.899" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:32:57.927" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:32:57.930" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:32:57.832" endtime="20190116 18:32:57.931"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:57.935" endtime="20190116 18:32:57.956"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:57.973" level="INFO">Sending command to DUT cat /root/candump.txt</msg>
<msg timestamp="20190116 18:32:58.035" level="INFO">Returning data ((1547663577.747096)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547663577.875052)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg timestamp="20190116 18:32:58.042" level="INFO">${ret} = ('(1547663577.747096)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1547663577.875052)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status status="PASS" starttime="20190116 18:32:57.959" endtime="20190116 18:32:58.043"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:58.046" endtime="20190116 18:32:58.078"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg timestamp="20190116 18:32:58.593" level="INFO">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190116 18:32:58.081" endtime="20190116 18:32:58.595"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg timestamp="20190116 18:32:58.657" level="INFO">${res_list} = [{'timestamp': '16-01-2019 - 18:32:57.789614', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '16-01-2019 - 18:32:57.809099', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'t...</msg>
<status status="PASS" starttime="20190116 18:32:58.600" endtime="20190116 18:32:58.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:32:58.665" level="INFO">[{'timestamp': '16-01-2019 - 18:32:57.789614', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '16-01-2019 - 18:32:57.809099', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}, {'timestamp': '16-01-2019 - 18:32:57.919760', 'payload': '11223344556677BB', 'id': '0x1a'}, {'timestamp': '16-01-2019 - 18:32:57.937285', 'payload': '11223344556677BB', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190116 18:32:58.661" endtime="20190116 18:32:58.668"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg timestamp="20190116 18:32:58.675" level="INFO">Length is 4</msg>
<msg timestamp="20190116 18:32:58.678" level="INFO">${MSG_LENGTH} = 4</msg>
<status status="PASS" starttime="20190116 18:32:58.671" endtime="20190116 18:32:58.678"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:58.688" endtime="20190116 18:32:58.694"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:58.683" endtime="20190116 18:32:58.695"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:58.719" level="INFO">Length is 4</msg>
<msg timestamp="20190116 18:32:58.721" level="INFO">${count} = 4</msg>
<status status="PASS" starttime="20190116 18:32:58.715" endtime="20190116 18:32:58.722"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:58.725" endtime="20190116 18:32:58.730"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:58.738" level="INFO">${msgcount} = 0</msg>
<status status="PASS" starttime="20190116 18:32:58.733" endtime="20190116 18:32:58.739"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:57.789614', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:58.755" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190116 18:32:58.746" endtime="20190116 18:32:58.756"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:58.766" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:58.759" endtime="20190116 18:32:58.767"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:58.776" level="INFO">${msgcount} = 1</msg>
<status status="PASS" starttime="20190116 18:32:58.770" endtime="20190116 18:32:58.777"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:58.743" endtime="20190116 18:32:58.778"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:57.809099', 'payload': 'FFEEEEDDFFAA1122', 'id': '0x18ef7777'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:58.788" level="INFO">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190116 18:32:58.782" endtime="20190116 18:32:58.789"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:58.799" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20190116 18:32:58.792" endtime="20190116 18:32:58.800"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:58.809" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:58.803" endtime="20190116 18:32:58.810"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:58.779" endtime="20190116 18:32:58.811"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:57.919760', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:58.821" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:58.815" endtime="20190116 18:32:58.822"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:58.832" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20190116 18:32:58.824" endtime="20190116 18:32:58.833"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:58.842" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:58.836" endtime="20190116 18:32:58.843"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:58.812" endtime="20190116 18:32:58.843"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '16-01-2019 - 18:32:57.937285', 'payload': '11223344556677BB', 'id': '0x1a'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:32:58.853" level="INFO">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190116 18:32:58.848" endtime="20190116 18:32:58.854"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:32:58.864" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20190116 18:32:58.857" endtime="20190116 18:32:58.865"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:32:58.874" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:32:58.868" endtime="20190116 18:32:58.875"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:58.845" endtime="20190116 18:32:58.876"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:58.740" endtime="20190116 18:32:58.877"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:58.880" endtime="20190116 18:32:58.886"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:58.889" endtime="20190116 18:32:58.898"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:58.706" endtime="20190116 18:32:58.902"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:58.699" endtime="20190116 18:32:58.903"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:58.912" level="INFO">Sending command to DUT ps aux | grep candump</msg>
<msg timestamp="20190116 18:32:59.002" level="INFO">Returning data (598 root      0:00 candump -t a -D -B can2 can2   603 root      0:00 sh -c ps aux | grep candump   605 root      0:00 grep candump, )</msg>
<msg timestamp="20190116 18:32:59.005" level="INFO">${ret} = ('598 root      0:00 candump -t a -D -B can2 can2   603 root      0:00 sh -c ps aux | grep candump   605 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190116 18:32:58.906" endtime="20190116 18:32:59.006"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:32:59.009" endtime="20190116 18:32:59.022"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:32:59.029" level="INFO">Sending command to DUT pkill candump</msg>
<msg timestamp="20190116 18:32:59.134" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:32:59.136" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:32:59.025" endtime="20190116 18:32:59.137"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:33:00.150" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:32:59.140" endtime="20190116 18:33:00.153"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:52.708" endtime="20190116 18:33:00.155"></status>
</kw>
<status status="PASS" starttime="20190116 18:32:52.703" endtime="20190116 18:33:00.157"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill ping</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:33:00.172" level="INFO">Starting process:
pkill ping</msg>
<msg timestamp="20190116 18:33:00.199" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:00.231" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:00.234" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:00.167" endtime="20190116 18:33:00.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_Teardown_Action"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:33:00.243" level="INFO">"Test_Teardown_Action"</msg>
<status status="PASS" starttime="20190116 18:33:00.239" endtime="20190116 18:33:00.245"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>systemctl poweroff</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:33:00.253" level="INFO">Sending command to DUT systemctl poweroff</msg>
<msg timestamp="20190116 18:33:00.381" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:33:00.384" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:33:00.248" endtime="20190116 18:33:00.385"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHUTDOWN_TIME}</arg>
</arguments>
<msg timestamp="20190116 18:33:15.399" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20190116 18:33:00.387" endtime="20190116 18:33:15.402"></status>
</kw>
<kw name="Close Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190116 18:33:15.408" level="INFO">Closing SSH connection to 192.168.1.101</msg>
<status status="PASS" starttime="20190116 18:33:15.405" endtime="20190116 18:33:15.410"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:15.413" endtime="20190116 18:33:15.462"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:15.465" endtime="20190116 18:33:15.513"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:00.161" endtime="20190116 18:33:15.522"></status>
</kw>
<doc>Implements Test Task SKTB-34994</doc>
<tags>
<tag>CAN 3 test</tag>
</tags>
<status status="PASS" starttime="20190116 18:31:46.401" critical="yes" endtime="20190116 18:33:15.523"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:33:17.110" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:33:17.157" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:33:15.608" endtime="20190116 18:33:17.158"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:15.558" endtime="20190116 18:33:17.176"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:15.540" endtime="20190116 18:33:17.178"></status>
</kw>
<doc>CAN 3 test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:31:43.706" endtime="20190116 18:33:17.179"></status>
</suite>
<suite name="SKTB-40097" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-40097.robot" id="s1-s8">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:33:17.822" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:33:17.808" endtime="20190116 18:33:17.834"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:33:17.854" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:33:17.856" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:33:20.023" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:33:17.837" endtime="20190116 18:33:20.046"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:17.802" endtime="20190116 18:33:20.056"></status>
</kw>
<test name="SKTB-40097 Read Write OTP Values" id="s1-s8-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:20.104" endtime="20190116 18:33:20.214"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:20.217" endtime="20190116 18:33:20.311"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:33:22.327" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:33:20.314" endtime="20190116 18:33:22.329"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:22.332" endtime="20190116 18:33:22.378"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:33:23.386" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:33:22.381" endtime="20190116 18:33:23.388"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:23.390" endtime="20190116 18:33:23.438"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:33:25.446" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:33:23.442" endtime="20190116 18:33:25.449"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:25.451" endtime="20190116 18:33:25.497"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:25.500" endtime="20190116 18:33:25.545"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:25.548" endtime="20190116 18:33:25.616"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:25.623" endtime="20190116 18:33:25.675"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:20.098" endtime="20190116 18:33:25.678"></status>
</kw>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:33:25.749" level="INFO">${res_dict} = {'status': True, 'request': '41', 'result': '4153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:33:25.688" endtime="20190116 18:33:25.750"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:33:25.779" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:33:25.753" endtime="20190116 18:33:25.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:25.782" endtime="20190116 18:33:25.788"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:33:26.795" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:33:25.791" endtime="20190116 18:33:26.798"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:25.681" endtime="20190116 18:33:26.800"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:33:26.868" level="INFO">${res_dict} = {'status': True, 'request': '41', 'result': '4153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:33:26.808" endtime="20190116 18:33:26.869"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:33:26.897" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:33:26.872" endtime="20190116 18:33:26.897"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:26.900" endtime="20190116 18:33:26.905"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:33:27.911" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:33:26.907" endtime="20190116 18:33:27.914"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:26.802" endtime="20190116 18:33:27.916"></status>
</kw>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${MEM_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190116 18:33:27.937" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineMemory_OLU_*.bin</msg>
<msg timestamp="20190116 18:33:27.964" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:27.979" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:27.981" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:27.931" endtime="20190116 18:33:27.982"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190116 18:33:27.992" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:33:27.986" endtime="20190116 18:33:27.993"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:33:27.999" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:33:28.002" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190116 18:33:27.995" endtime="20190116 18:33:28.003"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190116 18:33:28.012" level="INFO">${path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:33:28.006" endtime="20190116 18:33:28.013"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:28.016" endtime="20190116 18:33:28.021"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190116 18:33:28.028" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190116 18:33:28.024" endtime="20190116 18:33:28.030"></status>
</kw>
<msg timestamp="20190116 18:33:28.034" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:33:27.923" endtime="20190116 18:33:28.035"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:33:28.298" level="INFO">${res_dict} = {'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': 'dc15f69d'}</msg>
<status status="PASS" starttime="20190116 18:33:28.038" endtime="20190116 18:33:28.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${matched_path}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:33:28.320" level="INFO">/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:33:28.308" endtime="20190116 18:33:28.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:33:28.337" level="INFO">{'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': 'dc15f69d'}</msg>
<status status="PASS" starttime="20190116 18:33:28.332" endtime="20190116 18:33:28.340"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:33:30.348" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:33:28.343" endtime="20190116 18:33:30.350"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:33:30.378" level="INFO">${value} = 5453</msg>
<status status="PASS" starttime="20190116 18:33:30.353" endtime="20190116 18:33:30.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:30.382" endtime="20190116 18:33:30.388"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:27.918" endtime="20190116 18:33:30.390"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:33:30.463" level="INFO">${res_dict} = {'status': True, 'request': '49', 'result': '4953', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:33:30.399" endtime="20190116 18:33:30.464"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:33:30.492" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:33:30.467" endtime="20190116 18:33:30.493"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:30.496" endtime="20190116 18:33:30.500"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:33:31.507" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:33:30.503" endtime="20190116 18:33:31.509"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:30.392" endtime="20190116 18:33:31.511"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:33:31.586" level="INFO">${res_dict} = {'status': True, 'request': '4756', 'result': '475653', 'data': '0202'}</msg>
<status status="PASS" starttime="20190116 18:33:31.520" endtime="20190116 18:33:31.587"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:33:32.595" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:33:31.590" endtime="20190116 18:33:32.597"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:31.514" endtime="20190116 18:33:32.599"></status>
</kw>
<kw name="WRITE_OTP_CARIF_PSN_DEFAULT">
<doc>Write carif psn default value</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write carif psn default value</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:32.607" endtime="20190116 18:33:32.612"></status>
</kw>
<kw name="WRITE_OTP_VALUE">
<arguments>
<arg>${OTP_CARIF_PSN_ID}</arg>
<arg>${OTP_CARIF_PSN_DEFAULT}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${OTP_ID}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:33:32.683" level="INFO">${res_dict} = {'status': True, 'request': '53460000fffe', 'result': '534653', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:33:32.623" endtime="20190116 18:33:32.685"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:33:32.713" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:33:32.688" endtime="20190116 18:33:32.714"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:33:32.777" level="INFO">${res_dict} = {'status': True, 'request': '534200104c616972642050534e20787878787878', 'result': '534253', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:33:32.716" endtime="20190116 18:33:32.778"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:33:32.806" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:33:32.781" endtime="20190116 18:33:32.807"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${Memory_WriteOtpIdent}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:33:32.883" level="INFO">${res_dict} = {'status': False, 'request': '5201', 'result': '520146', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:33:32.810" endtime="20190116 18:33:32.885"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:33:32.915" level="INFO">${value} = False</msg>
<status status="PASS" starttime="20190116 18:33:32.888" endtime="20190116 18:33:32.915"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${value}\n</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:32.918" endtime="20190116 18:33:32.924"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg timestamp="20190116 18:33:32.933" level="FAIL">'False' should be true.</msg>
<status status="FAIL" starttime="20190116 18:33:32.927" endtime="20190116 18:33:32.934"></status>
</kw>
<status status="FAIL" starttime="20190116 18:33:32.614" endtime="20190116 18:33:32.937"></status>
</kw>
<status status="FAIL" starttime="20190116 18:33:32.601" endtime="20190116 18:33:32.939"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:32.950" endtime="20190116 18:33:32.997"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:33.000" endtime="20190116 18:33:33.049"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:33:34.056" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:33:33.052" endtime="20190116 18:33:34.058"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:34.061" endtime="20190116 18:33:34.106"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:32.943" endtime="20190116 18:33:34.109"></status>
</kw>
<doc>Implements Test Task SKTB-40097 read and Write otp value with testroutine</doc>
<tags>
<tag>Eeprom OTP Value</tag>
</tags>
<status status="FAIL" starttime="20190116 18:33:20.062" critical="yes" endtime="20190116 18:33:34.110">'False' should be true.</status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:33:35.610" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:33:35.686" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:33:34.154" endtime="20190116 18:33:35.687"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:34.127" endtime="20190116 18:33:35.689"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:34.121" endtime="20190116 18:33:35.691"></status>
</kw>
<doc>Eeprom OTP Value write read test with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190116 18:33:17.326" endtime="20190116 18:33:35.692"></status>
</suite>
<suite name="SKTB-41635" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41635.robot" id="s1-s9">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:33:36.323" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:33:36.294" endtime="20190116 18:33:36.328"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:33:36.337" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:33:36.345" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:33:38.594" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:33:36.331" endtime="20190116 18:33:38.607"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:36.289" endtime="20190116 18:33:38.609"></status>
</kw>
<test name="can_diag_test" id="s1-s9-t1">
<kw name="Test_precondition" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:33:38.666" level="INFO">"Test_precondition"</msg>
<status status="PASS" starttime="20190116 18:33:38.643" endtime="20190116 18:33:38.678"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:38.681" endtime="20190116 18:33:38.774"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:38.788" endtime="20190116 18:33:38.880"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:33:39.905" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:33:38.883" endtime="20190116 18:33:39.907"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:39.910" endtime="20190116 18:33:39.969"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<msg timestamp="20190116 18:33:40.077" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20190116 18:33:39.972" endtime="20190116 18:33:40.079"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:40.082" endtime="20190116 18:33:40.131"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:33:42.140" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:33:40.135" endtime="20190116 18:33:42.142"></status>
</kw>
<kw name="set_can_channels">
<doc>set bitrate for channels</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:33:42.160" level="INFO">Starting process:
sudo ip link set can0 down</msg>
<msg timestamp="20190116 18:33:42.187" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:42.261" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:42.263" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:42.154" endtime="20190116 18:33:42.266"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:33:42.277" level="INFO">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg timestamp="20190116 18:33:42.305" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:42.359" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:42.362" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:42.269" endtime="20190116 18:33:42.363"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:33:42.375" level="INFO">Starting process:
sudo ip link set can0 up</msg>
<msg timestamp="20190116 18:33:42.405" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:42.474" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:42.477" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:42.367" endtime="20190116 18:33:42.478"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status status="PASS" starttime="20190116 18:33:42.144" endtime="20190116 18:33:42.481"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:38.637" endtime="20190116 18:33:42.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:33:42.494" level="INFO">Start test</msg>
<status status="PASS" starttime="20190116 18:33:42.488" endtime="20190116 18:33:42.496"></status>
</kw>
<kw name="Req_1003">
<doc>Extended session</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Extended session</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:42.505" endtime="20190116 18:33:42.511"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:33:42.523" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190116 18:33:42.552" level="INFO">${candump_ID} = 152</msg>
<status status="PASS" starttime="20190116 18:33:42.514" endtime="20190116 18:33:42.557"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>10 03</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190116 18:33:42.588" level="INFO">Starting process:
echo 10 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190116 18:33:42.615" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:42.629" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:42.632" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:42.579" endtime="20190116 18:33:42.633"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:42.559" endtime="20190116 18:33:42.636"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:33:42.651" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:43.657" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:33:43.659" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:33:43.663" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:43.666" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:33:42.646" endtime="20190116 18:33:43.667"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:33:43.676" level="INFO">2 lines returned</msg>
<msg timestamp="20190116 18:33:43.679" level="INFO">${temp} = [' (1547663622.626396)  can0  7F8   [8]  02 10 03 00 00 00 00 00', ' (1547663622.631802)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA']</msg>
<status status="PASS" starttime="20190116 18:33:43.670" endtime="20190116 18:33:43.679"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:33:43.688" level="INFO">(1547663622.626396)  can0  7F8   [8]  02 10 03 00 00 00 00 00
 (1547663622.631802)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA</msg>
<msg timestamp="20190116 18:33:43.690" level="INFO">${ret_list} = [{'timestamp': '1547663622.626396', 'channel': 'can0', 'payload': '0210030000000000', 'id': '7F8'}, {'timestamp': '1547663622.631802', 'channel': 'can0', 'payload': '065003001400C8AA', 'id': '7F7'}]</msg>
<status status="PASS" starttime="20190116 18:33:43.682" endtime="20190116 18:33:43.691"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:43.694" endtime="20190116 18:33:43.701"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190116 18:33:43.712" level="INFO">${data} = True</msg>
<status status="PASS" starttime="20190116 18:33:43.704" endtime="20190116 18:33:43.713"></status>
</kw>
<msg timestamp="20190116 18:33:43.717" level="INFO">${res} = True</msg>
<status status="PASS" starttime="20190116 18:33:42.639" endtime="20190116 18:33:43.718"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:43.721" endtime="20190116 18:33:43.726"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:42.498" endtime="20190116 18:33:43.729"></status>
</kw>
<kw name="Req_F100">
<doc>Active_DiagnosticInformation</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Active_DiagnosticInformation</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:43.737" endtime="20190116 18:33:43.743"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:33:43.754" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190116 18:33:43.783" level="INFO">${candump_ID} = 154</msg>
<status status="PASS" starttime="20190116 18:33:43.746" endtime="20190116 18:33:43.787"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 00</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190116 18:33:43.815" level="INFO">Starting process:
echo 22 F1 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190116 18:33:43.842" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:43.855" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:43.858" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:43.807" endtime="20190116 18:33:43.859"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:43.798" endtime="20190116 18:33:43.862"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:33:43.880" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:44.926" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:33:44.928" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:33:44.953" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:44.955" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:33:43.874" endtime="20190116 18:33:44.959"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:33:44.978" level="INFO">3 lines returned</msg>
<msg timestamp="20190116 18:33:44.981" level="INFO">${temp} = [' (1547663623.853086)  can0  7F8   [8]  03 22 F1 00 00 00 00 00', ' (1547663623.871711)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1547663623.881728)  can0  7F7   [8]  07 62 F1 00 00 01 01 03']</msg>
<status status="PASS" starttime="20190116 18:33:44.962" endtime="20190116 18:33:44.982"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:33:45.050" level="INFO">(1547663623.853086)  can0  7F8   [8]  03 22 F1 00 00 00 00 00
 (1547663623.871711)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1547663623.881728)  can0  7F7   [8]  07 62 F1 00 00 01 01 03</msg>
<msg timestamp="20190116 18:33:45.059" level="INFO">${ret_list} = [{'timestamp': '1547663623.853086', 'channel': 'can0', 'payload': '0322F10000000000', 'id': '7F8'}, {'timestamp': '1547663623.871711', 'channel': 'can0', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status status="PASS" starttime="20190116 18:33:45.013" endtime="20190116 18:33:45.060"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:45.063" endtime="20190116 18:33:45.098"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190116 18:33:45.145" level="INFO">None</msg>
<msg timestamp="20190116 18:33:45.159" level="INFO">${data} = True</msg>
<status status="PASS" starttime="20190116 18:33:45.105" endtime="20190116 18:33:45.160"></status>
</kw>
<msg timestamp="20190116 18:33:45.164" level="INFO">${res} = True</msg>
<status status="PASS" starttime="20190116 18:33:43.865" endtime="20190116 18:33:45.165"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:45.168" endtime="20190116 18:33:45.196"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:43.731" endtime="20190116 18:33:45.199"></status>
</kw>
<kw name="Req_F10D">
<doc>DDS Package Release</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DDS Package Release</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:45.219" endtime="20190116 18:33:45.238"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:33:45.262" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190116 18:33:45.325" level="INFO">${candump_ID} = 156</msg>
<status status="PASS" starttime="20190116 18:33:45.242" endtime="20190116 18:33:45.327"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 0D</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190116 18:33:45.375" level="INFO">Starting process:
echo 22 F1 0D | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190116 18:33:45.453" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:45.469" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:45.472" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:45.354" endtime="20190116 18:33:45.473"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:45.346" endtime="20190116 18:33:45.475"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:33:45.508" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:46.521" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:33:46.523" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:33:46.527" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:46.529" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:33:45.494" endtime="20190116 18:33:46.530"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:33:46.540" level="INFO">3 lines returned</msg>
<msg timestamp="20190116 18:33:46.542" level="INFO">${temp} = [' (1547663625.465665)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00', ' (1547663625.481755)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1547663625.491768)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA']</msg>
<status status="PASS" starttime="20190116 18:33:46.533" endtime="20190116 18:33:46.543"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:33:46.553" level="INFO">(1547663625.465665)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00
 (1547663625.481755)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1547663625.491768)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA</msg>
<msg timestamp="20190116 18:33:46.555" level="INFO">${ret_list} = [{'timestamp': '1547663625.465665', 'channel': 'can0', 'payload': '0322F10D00000000', 'id': '7F8'}, {'timestamp': '1547663625.481755', 'channel': 'can0', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status status="PASS" starttime="20190116 18:33:46.546" endtime="20190116 18:33:46.556"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:46.559" endtime="20190116 18:33:46.566"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190116 18:33:46.576" level="INFO">${data} = True</msg>
<status status="PASS" starttime="20190116 18:33:46.569" endtime="20190116 18:33:46.577"></status>
</kw>
<msg timestamp="20190116 18:33:46.581" level="INFO">${res} = True</msg>
<status status="PASS" starttime="20190116 18:33:45.486" endtime="20190116 18:33:46.582"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:46.585" endtime="20190116 18:33:46.591"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:45.201" endtime="20190116 18:33:46.593"></status>
</kw>
<kw name="Req_F103">
<doc>Vedoc Relevant Information</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Vedoc Relevant Information</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:46.602" endtime="20190116 18:33:46.608"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:33:46.619" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190116 18:33:46.652" level="INFO">${candump_ID} = 158</msg>
<status status="PASS" starttime="20190116 18:33:46.611" endtime="20190116 18:33:46.653"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg timestamp="20190116 18:33:46.670" level="INFO">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190116 18:33:46.699" level="INFO">${isotprecv_ID} = 159</msg>
<status status="PASS" starttime="20190116 18:33:46.661" endtime="20190116 18:33:46.704"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 03</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190116 18:33:46.728" level="INFO">Starting process:
echo 22 F1 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190116 18:33:46.755" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:46.767" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:46.770" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:46.719" endtime="20190116 18:33:46.771"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:46.707" endtime="20190116 18:33:46.774"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:33:46.794" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:47.812" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:33:47.814" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:33:47.818" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:47.821" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:33:46.788" endtime="20190116 18:33:47.822"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:33:47.831" level="INFO">3 lines returned</msg>
<msg timestamp="20190116 18:33:47.833" level="INFO">${temp} = [' (1547663626.765248)  can0  7F8   [8]  03 22 F1 03 00 00 00 00', ' (1547663626.781813)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1547663626.791827)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69']</msg>
<status status="PASS" starttime="20190116 18:33:47.824" endtime="20190116 18:33:47.834"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:33:47.843" level="INFO">(1547663626.765248)  can0  7F8   [8]  03 22 F1 03 00 00 00 00
 (1547663626.781813)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1547663626.791827)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69</msg>
<msg timestamp="20190116 18:33:47.845" level="INFO">${ret_list} = [{'timestamp': '1547663626.765248', 'channel': 'can0', 'payload': '0322F10300000000', 'id': '7F8'}, {'timestamp': '1547663626.781813', 'channel': 'can0', 'payload': '037F2278AAAAAAAA', 'id': '7F7'}, {...</msg>
<status status="PASS" starttime="20190116 18:33:47.837" endtime="20190116 18:33:47.846"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:47.849" endtime="20190116 18:33:47.856"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190116 18:33:47.870" level="INFO">${data} = True</msg>
<status status="PASS" starttime="20190116 18:33:47.859" endtime="20190116 18:33:47.871"></status>
</kw>
<msg timestamp="20190116 18:33:47.875" level="INFO">${res} = True</msg>
<status status="PASS" starttime="20190116 18:33:46.777" endtime="20190116 18:33:47.876"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:47.878" endtime="20190116 18:33:47.884"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:46.595" endtime="20190116 18:33:47.886"></status>
</kw>
<kw name="Req_F1A0">
<doc>VIN Current</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:47.895" endtime="20190116 18:33:47.900"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:33:47.914" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190116 18:33:47.942" level="INFO">${candump_ID} = 161</msg>
<status status="PASS" starttime="20190116 18:33:47.904" endtime="20190116 18:33:47.944"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg timestamp="20190116 18:33:47.963" level="INFO">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190116 18:33:47.996" level="INFO">${isotprecv_ID} = 162</msg>
<status status="PASS" starttime="20190116 18:33:47.955" endtime="20190116 18:33:47.997"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 A0</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190116 18:33:48.022" level="INFO">Starting process:
echo 22 F1 A0 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190116 18:33:48.049" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:48.062" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:48.065" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:48.013" endtime="20190116 18:33:48.066"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:48.000" endtime="20190116 18:33:48.069"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:33:48.084" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:49.089" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:33:49.091" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:33:49.095" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:49.097" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:33:48.079" endtime="20190116 18:33:49.098"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:33:49.108" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:33:49.110" level="INFO">${temp} = [' (1547663628.059833)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00']</msg>
<status status="PASS" starttime="20190116 18:33:49.101" endtime="20190116 18:33:49.111"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:33:49.120" level="INFO">(1547663628.059833)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00</msg>
<msg timestamp="20190116 18:33:49.122" level="INFO">${ret_list} = [{'timestamp': '1547663628.059833', 'channel': 'can0', 'payload': '0322F1A000000000', 'id': '7F8'}]</msg>
<status status="PASS" starttime="20190116 18:33:49.114" endtime="20190116 18:33:49.123"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:49.125" endtime="20190116 18:33:49.132"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190116 18:33:49.143" level="INFO">${data} = True</msg>
<status status="PASS" starttime="20190116 18:33:49.135" endtime="20190116 18:33:49.144"></status>
</kw>
<msg timestamp="20190116 18:33:49.148" level="INFO">${res} = True</msg>
<status status="PASS" starttime="20190116 18:33:48.071" endtime="20190116 18:33:49.148"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:49.151" endtime="20190116 18:33:49.157"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:47.889" endtime="20190116 18:33:49.159"></status>
</kw>
<kw name="Req_F1A0_WRITE">
<doc>VIN Current</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current write</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:49.168" endtime="20190116 18:33:49.173"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:33:49.185" level="INFO">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg timestamp="20190116 18:33:49.214" level="INFO">${candump_ID} = 164</msg>
<status status="PASS" starttime="20190116 18:33:49.176" endtime="20190116 18:33:49.215"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg timestamp="20190116 18:33:49.242" level="INFO">Starting process:
echo 2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg timestamp="20190116 18:33:49.269" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:49.303" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:49.306" level="INFO">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:33:49.233" endtime="20190116 18:33:49.307"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:49.225" endtime="20190116 18:33:49.310"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:33:50.322" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:33:49.316" endtime="20190116 18:33:50.324"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:33:50.338" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:33:51.345" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:33:51.347" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:33:51.351" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:33:51.354" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:33:50.333" endtime="20190116 18:33:51.355"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:33:51.365" level="INFO">5 lines returned</msg>
<msg timestamp="20190116 18:33:51.368" level="INFO">${temp} = [' (1547663629.279769)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00', ' (1547663629.280311)  can0  7F7   [8]  30 08 0A AA AA AA AA AA', ' (1547663629.291353)  can0  7F8   [8]  21 00 00 00 00 00 00 00', '...</msg>
<status status="PASS" starttime="20190116 18:33:51.359" endtime="20190116 18:33:51.368"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:33:51.378" level="INFO">(1547663629.279769)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00
 (1547663629.280311)  can0  7F7   [8]  30 08 0A AA AA AA AA AA
 (1547663629.291353)  can0  7F8   [8]  21 00 00 00 00 00 00 00
 (1547663629.308124)  can0  7F8   [8]  22 00 00 00 00 00 00 00
 (1547663629.311939)  can0  7F7   [8]  03 7F 2E 33 AA AA AA AA</msg>
<msg timestamp="20190116 18:33:51.380" level="INFO">${ret_list} = [{'timestamp': '1547663629.279769', 'channel': 'can0', 'payload': '10142EF1A0000000', 'id': '7F8'}, {'timestamp': '1547663629.280311', 'channel': 'can0', 'payload': '30080AAAAAAAAAAA', 'id': '7F7'}, {...</msg>
<status status="PASS" starttime="20190116 18:33:51.371" endtime="20190116 18:33:51.381"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:51.384" endtime="20190116 18:33:51.394"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190116 18:33:51.405" level="INFO">None</msg>
<msg timestamp="20190116 18:33:51.407" level="INFO">${data} = False</msg>
<status status="PASS" starttime="20190116 18:33:51.397" endtime="20190116 18:33:51.408"></status>
</kw>
<msg timestamp="20190116 18:33:51.412" level="INFO">${res} = False</msg>
<status status="PASS" starttime="20190116 18:33:50.326" endtime="20190116 18:33:51.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:33:51.421" level="INFO">False</msg>
<status status="PASS" starttime="20190116 18:33:51.416" endtime="20190116 18:33:51.424"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:51.427" endtime="20190116 18:33:51.432"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:49.161" endtime="20190116 18:33:51.435"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg timestamp="20190116 18:33:51.450" level="INFO">Starting process:
pkill candump</msg>
<msg timestamp="20190116 18:33:51.478" level="INFO">${rm_res} = 166</msg>
<status status="PASS" starttime="20190116 18:33:51.445" endtime="20190116 18:33:51.479"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:51.491" endtime="20190116 18:33:51.561"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:51.564" endtime="20190116 18:33:51.615"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:51.438" endtime="20190116 18:33:51.619"></status>
</kw>
<doc>Can diagnose test</doc>
<tags>
<tag>CAN 1 diagnose test</tag>
</tags>
<timeout value="50 seconds"></timeout>
<status status="PASS" starttime="20190116 18:33:38.611" critical="yes" endtime="20190116 18:33:51.620"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:33:53.103" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:33:53.183" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:33:51.662" endtime="20190116 18:33:53.185"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:51.638" endtime="20190116 18:33:53.186"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:51.632" endtime="20190116 18:33:53.211"></status>
</kw>
<doc>CAN 1 diagnose test</doc>
<status status="PASS" starttime="20190116 18:33:35.868" endtime="20190116 18:33:53.212"></status>
</suite>
<suite name="SKTB-46886" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-46886.robot" id="s1-s10">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:33:53.833" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:33:53.817" endtime="20190116 18:33:53.857"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:33:53.875" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:33:53.877" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:33:56.000" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:33:53.861" endtime="20190116 18:33:56.002"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:53.811" endtime="20190116 18:33:56.005"></status>
</kw>
<test name="SKTB-GPIO FBUS test" id="s1-s10-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:56.067" endtime="20190116 18:33:56.155"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:56.158" endtime="20190116 18:33:56.272"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:56.275" endtime="20190116 18:33:56.413"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:33:58.429" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:33:56.417" endtime="20190116 18:33:58.431"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:58.434" endtime="20190116 18:33:58.479"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:58.483" endtime="20190116 18:33:58.531"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:58.534" endtime="20190116 18:33:58.579"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:58.583" endtime="20190116 18:33:58.629"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:58.633" endtime="20190116 18:33:58.679"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:33:58.682" endtime="20190116 18:33:58.729"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:34:00.737" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:33:58.732" endtime="20190116 18:34:00.739"></status>
</kw>
<status status="PASS" starttime="20190116 18:33:56.050" endtime="20190116 18:34:00.742"></status>
</kw>
<kw name="Test_GPIO_00">
<doc>Test HI SIDE SWITCH 01</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 01</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:00.750" endtime="20190116 18:34:00.755"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:00.959" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 42 3D F4</msg>
<status status="PASS" starttime="20190116 18:34:00.758" endtime="20190116 18:34:00.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:00.968" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 42 3D F4</msg>
<status status="PASS" starttime="20190116 18:34:00.963" endtime="20190116 18:34:00.970"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:01.176" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 43 3D F9</msg>
<status status="PASS" starttime="20190116 18:34:00.973" endtime="20190116 18:34:01.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:01.184" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 43 3D F9</msg>
<status status="PASS" starttime="20190116 18:34:01.180" endtime="20190116 18:34:01.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:01.190" endtime="20190116 18:34:01.198"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:01.405" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 44 3D F2</msg>
<status status="PASS" starttime="20190116 18:34:01.201" endtime="20190116 18:34:01.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:01.413" level="INFO">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 44 3D F2</msg>
<status status="PASS" starttime="20190116 18:34:01.409" endtime="20190116 18:34:01.416"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:01.623" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 03 00 01 45 3E FE</msg>
<status status="PASS" starttime="20190116 18:34:01.418" endtime="20190116 18:34:01.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:01.632" level="INFO">1E 14 54 8E 00 0A 01 0D 77 26 00 00 03 00 01 45 3E FE</msg>
<status status="PASS" starttime="20190116 18:34:01.628" endtime="20190116 18:34:01.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<msg timestamp="20190116 18:34:01.647" level="FAIL">'1E 14 54 8E 00 0A 01 0D 77 26 00 00 03 00 01 45 3E FE' does not contain '26 00 00 00 00'</msg>
<status status="FAIL" starttime="20190116 18:34:01.638" endtime="20190116 18:34:01.649"></status>
</kw>
<status status="FAIL" starttime="20190116 18:34:00.744" endtime="20190116 18:34:01.651"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:01.665" endtime="20190116 18:34:01.713"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:01.716" endtime="20190116 18:34:01.762"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:01.766" endtime="20190116 18:34:01.826"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:34:03.848" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:34:01.837" endtime="20190116 18:34:03.850"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:03.853" endtime="20190116 18:34:03.901"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:03.904" endtime="20190116 18:34:03.950"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:01.656" endtime="20190116 18:34:03.953"></status>
</kw>
<doc>Implements Test Task SKTB-46886</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status status="FAIL" starttime="20190116 18:33:56.007" critical="yes" endtime="20190116 18:34:03.954">'1E 14 54 8E 00 0A 01 0D 77 26 00 00 03 00 01 45 3E FE' does not contain '26 00 00 00 00'</status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:34:05.427" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:34:05.494" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:34:04.000" endtime="20190116 18:34:05.496"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:03.970" endtime="20190116 18:34:05.497"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:03.964" endtime="20190116 18:34:05.512"></status>
</kw>
<doc>Chorus Fbus GPIO Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190116 18:33:53.355" endtime="20190116 18:34:05.513"></status>
</suite>
<suite name="SKTB-47669" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-47669.robot" id="s1-s11">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:34:06.160" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:34:06.155" endtime="20190116 18:34:06.170"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:34:06.191" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:34:06.193" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:34:08.341" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:34:06.173" endtime="20190116 18:34:08.342"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:06.138" endtime="20190116 18:34:08.345"></status>
</kw>
<test name="SKTB-47669" id="s1-s11-t1">
<kw name="Test_precondition" type="setup">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:08.396" endtime="20190116 18:34:08.407"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:08.410" endtime="20190116 18:34:08.509"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:08.512" endtime="20190116 18:34:08.628"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:08.631" endtime="20190116 18:34:08.729"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:08.732" endtime="20190116 18:34:08.815"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:08.818" endtime="20190116 18:34:08.908"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:08.911" endtime="20190116 18:34:09.009"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:34:11.033" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:34:09.012" endtime="20190116 18:34:11.035"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:11.038" endtime="20190116 18:34:11.085"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:11.087" endtime="20190116 18:34:11.135"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${4}</arg>
</arguments>
<msg timestamp="20190116 18:34:15.142" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20190116 18:34:11.138" endtime="20190116 18:34:15.145"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:08.381" endtime="20190116 18:34:15.147"></status>
</kw>
<kw name="cansend_500k">
<doc>Trigger to send can message on can with bitrate 500000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 500000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:15.156" endtime="20190116 18:34:15.161"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:15.182" endtime="20190116 18:34:15.190"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:15.201" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:34:15.229" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:15.301" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:15.305" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:15.193" endtime="20190116 18:34:15.306"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:15.309" endtime="20190116 18:34:15.318"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:15.328" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190116 18:34:15.355" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:15.411" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:15.414" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:15.321" endtime="20190116 18:34:15.414"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:15.418" endtime="20190116 18:34:15.427"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:15.436" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:34:15.464" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:15.548" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:15.550" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:15.430" endtime="20190116 18:34:15.551"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:15.555" endtime="20190116 18:34:15.568"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:34:15.173" endtime="20190116 18:34:15.570"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:34:15.581" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190116 18:34:15.611" level="INFO">${candump_ID} = 170</msg>
<status status="PASS" starttime="20190116 18:34:15.574" endtime="20190116 18:34:15.616"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:15.671" endtime="20190116 18:34:15.677"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:15.686" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status status="PASS" starttime="20190116 18:34:15.680" endtime="20190116 18:34:15.687"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:15.690" endtime="20190116 18:34:15.696"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:15.901" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 46 E1 C0</msg>
<status status="PASS" starttime="20190116 18:34:15.699" endtime="20190116 18:34:15.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:15.910" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 46 E1 C0</msg>
<status status="PASS" starttime="20190116 18:34:15.906" endtime="20190116 18:34:15.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:15.916" endtime="20190116 18:34:15.923"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:15.619" endtime="20190116 18:34:15.925"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:15.936" endtime="20190116 18:34:15.940"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:15.950" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190116 18:34:15.943" endtime="20190116 18:34:15.951"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:15.954" endtime="20190116 18:34:15.959"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:16.163" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status status="PASS" starttime="20190116 18:34:15.962" endtime="20190116 18:34:16.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:16.171" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status status="PASS" starttime="20190116 18:34:16.167" endtime="20190116 18:34:16.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:16.177" endtime="20190116 18:34:16.185"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:15.927" endtime="20190116 18:34:16.187"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:16.190" endtime="20190116 18:34:16.196"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:16.215" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:16.207" endtime="20190116 18:34:16.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:16.218" endtime="20190116 18:34:16.224"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:16.417" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:16.227" endtime="20190116 18:34:16.418"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:16.198" endtime="20190116 18:34:16.420"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:34:16.434" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:17.440" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:34:17.441" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:34:17.446" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:17.448" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:34:16.429" endtime="20190116 18:34:17.449"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:34:17.457" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:34:17.459" level="INFO">${temp} = [' (1547663656.278970)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190116 18:34:17.452" endtime="20190116 18:34:17.460"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:34:17.468" level="INFO">(1547663656.278970)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190116 18:34:17.470" level="INFO">${ret_list} = [{'timestamp': '1547663656.278970', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190116 18:34:17.463" endtime="20190116 18:34:17.471"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:17.474" endtime="20190116 18:34:17.479"></status>
</kw>
<msg timestamp="20190116 18:34:17.483" level="INFO">${resp_list} = [{'timestamp': '1547663656.278970', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190116 18:34:16.422" endtime="20190116 18:34:17.484"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:34:17.497" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190116 18:34:17.487" endtime="20190116 18:34:17.498"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:17.501" endtime="20190116 18:34:17.506"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:17.541" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:34:17.509" endtime="20190116 18:34:17.542"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:17.545" endtime="20190116 18:34:17.549"></status>
</kw>
<msg timestamp="20190116 18:34:17.553" level="INFO">${resp} = True</msg>
<status status="PASS" starttime="20190116 18:34:15.163" endtime="20190116 18:34:17.554"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:17.557" endtime="20190116 18:34:17.561"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:15.150" endtime="20190116 18:34:17.563"></status>
</kw>
<kw name="cansend_500k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 500000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 500000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:17.612" endtime="20190116 18:34:17.641"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:17.709" endtime="20190116 18:34:17.729"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:17.751" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:34:17.806" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:17.912" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:17.915" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:17.732" endtime="20190116 18:34:17.916"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:17.920" endtime="20190116 18:34:17.950"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:17.970" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg timestamp="20190116 18:34:18.030" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:18.115" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:18.118" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:17.953" endtime="20190116 18:34:18.119"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:18.135" endtime="20190116 18:34:18.173"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:18.195" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:34:18.261" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:18.378" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:18.381" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:18.176" endtime="20190116 18:34:18.383"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:18.386" endtime="20190116 18:34:18.420"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:34:17.686" endtime="20190116 18:34:18.423"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:34:18.439" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190116 18:34:18.476" level="INFO">${candump_ID} = 174</msg>
<status status="PASS" starttime="20190116 18:34:18.431" endtime="20190116 18:34:18.480"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:18.498" endtime="20190116 18:34:18.502"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:18.512" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status status="PASS" starttime="20190116 18:34:18.506" endtime="20190116 18:34:18.513"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:18.516" endtime="20190116 18:34:18.522"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:18.725" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 46 E1 C0</msg>
<status status="PASS" starttime="20190116 18:34:18.525" endtime="20190116 18:34:18.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:18.734" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 46 E1 C0</msg>
<status status="PASS" starttime="20190116 18:34:18.730" endtime="20190116 18:34:18.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:18.740" endtime="20190116 18:34:18.747"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:18.483" endtime="20190116 18:34:18.749"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:18.760" endtime="20190116 18:34:18.765"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:18.790" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190116 18:34:18.767" endtime="20190116 18:34:18.791"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:18.794" endtime="20190116 18:34:18.800"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:19.003" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status status="PASS" starttime="20190116 18:34:18.803" endtime="20190116 18:34:19.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:19.012" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status status="PASS" starttime="20190116 18:34:19.008" endtime="20190116 18:34:19.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:19.018" endtime="20190116 18:34:19.026"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:18.751" endtime="20190116 18:34:19.028"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:19.031" endtime="20190116 18:34:19.037"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:19.055" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:19.047" endtime="20190116 18:34:19.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:19.059" endtime="20190116 18:34:19.065"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:19.255" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:19.068" endtime="20190116 18:34:19.257"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:19.039" endtime="20190116 18:34:19.259"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:34:19.273" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:20.278" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:34:20.279" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:34:20.284" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:20.286" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:34:19.268" endtime="20190116 18:34:20.287"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:34:20.299" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:34:20.301" level="INFO">${temp} = [' (1547663659.118006)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190116 18:34:20.292" endtime="20190116 18:34:20.302"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:34:20.311" level="INFO">(1547663659.118006)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190116 18:34:20.313" level="INFO">${ret_list} = [{'timestamp': '1547663659.118006', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190116 18:34:20.305" endtime="20190116 18:34:20.314"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.317" endtime="20190116 18:34:20.322"></status>
</kw>
<msg timestamp="20190116 18:34:20.326" level="INFO">${resp_list} = [{'timestamp': '1547663659.118006', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190116 18:34:19.262" endtime="20190116 18:34:20.327"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:34:20.337" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190116 18:34:20.330" endtime="20190116 18:34:20.337"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.340" endtime="20190116 18:34:20.346"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:20.380" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:34:20.349" endtime="20190116 18:34:20.381"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.384" endtime="20190116 18:34:20.389"></status>
</kw>
<msg timestamp="20190116 18:34:20.392" level="INFO">${resp} = True</msg>
<status status="PASS" starttime="20190116 18:34:17.643" endtime="20190116 18:34:20.394"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.397" endtime="20190116 18:34:20.401"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:17.573" endtime="20190116 18:34:20.403"></status>
</kw>
<kw name="cansend_250k">
<doc>Trigger to send can message on can with bitrate 250000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 250000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.412" endtime="20190116 18:34:20.417"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.439" endtime="20190116 18:34:20.446"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:20.455" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:34:20.483" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:20.552" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:20.555" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:20.449" endtime="20190116 18:34:20.556"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.560" endtime="20190116 18:34:20.569"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:20.580" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190116 18:34:20.607" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:20.663" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:20.666" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:20.572" endtime="20190116 18:34:20.667"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.671" endtime="20190116 18:34:20.685"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:20.694" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:34:20.721" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:20.803" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:20.806" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:20.688" endtime="20190116 18:34:20.807"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.811" endtime="20190116 18:34:20.820"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:34:20.428" endtime="20190116 18:34:20.823"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:34:20.833" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190116 18:34:20.862" level="INFO">${candump_ID} = 178</msg>
<status status="PASS" starttime="20190116 18:34:20.826" endtime="20190116 18:34:20.863"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.885" endtime="20190116 18:34:20.897"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:20.907" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status status="PASS" starttime="20190116 18:34:20.900" endtime="20190116 18:34:20.908"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:20.911" endtime="20190116 18:34:20.916"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:21.118" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 40 E1 C6</msg>
<status status="PASS" starttime="20190116 18:34:20.919" endtime="20190116 18:34:21.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:21.127" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 40 E1 C6</msg>
<status status="PASS" starttime="20190116 18:34:21.123" endtime="20190116 18:34:21.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:21.133" endtime="20190116 18:34:21.140"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:20.873" endtime="20190116 18:34:21.142"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:21.153" endtime="20190116 18:34:21.158"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:21.168" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190116 18:34:21.161" endtime="20190116 18:34:21.168"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:21.171" endtime="20190116 18:34:21.177"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:21.378" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 41 E3 C1</msg>
<status status="PASS" starttime="20190116 18:34:21.180" endtime="20190116 18:34:21.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:21.386" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 41 E3 C1</msg>
<status status="PASS" starttime="20190116 18:34:21.382" endtime="20190116 18:34:21.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:21.391" endtime="20190116 18:34:21.399"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:21.144" endtime="20190116 18:34:21.401"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:21.404" endtime="20190116 18:34:21.410"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:21.429" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:21.421" endtime="20190116 18:34:21.430"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:21.433" endtime="20190116 18:34:21.439"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:21.629" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:21.442" endtime="20190116 18:34:21.630"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:21.412" endtime="20190116 18:34:21.632"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:34:21.646" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:22.651" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:34:22.652" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:34:22.656" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:22.659" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:34:21.641" endtime="20190116 18:34:22.660"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:34:22.668" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:34:22.670" level="INFO">${temp} = [' (1547663661.491544)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190116 18:34:22.663" endtime="20190116 18:34:22.671"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:34:22.679" level="INFO">(1547663661.491544)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190116 18:34:22.682" level="INFO">${ret_list} = [{'timestamp': '1547663661.491544', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190116 18:34:22.674" endtime="20190116 18:34:22.683"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:22.686" endtime="20190116 18:34:22.691"></status>
</kw>
<msg timestamp="20190116 18:34:22.696" level="INFO">${resp_list} = [{'timestamp': '1547663661.491544', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190116 18:34:21.635" endtime="20190116 18:34:22.696"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:34:22.706" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190116 18:34:22.699" endtime="20190116 18:34:22.707"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:22.710" endtime="20190116 18:34:22.719"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:22.754" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:34:22.722" endtime="20190116 18:34:22.754"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:22.757" endtime="20190116 18:34:22.762"></status>
</kw>
<msg timestamp="20190116 18:34:22.766" level="INFO">${resp} = True</msg>
<status status="PASS" starttime="20190116 18:34:20.419" endtime="20190116 18:34:22.766"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:22.769" endtime="20190116 18:34:22.774"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:20.405" endtime="20190116 18:34:22.776"></status>
</kw>
<kw name="cansend_250k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 250000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 250000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:22.785" endtime="20190116 18:34:22.789"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:22.811" endtime="20190116 18:34:22.819"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:22.828" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:34:22.855" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:22.928" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:22.931" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:22.822" endtime="20190116 18:34:22.932"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:22.936" endtime="20190116 18:34:22.945"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:22.955" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190116 18:34:22.982" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:23.038" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:23.041" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:22.948" endtime="20190116 18:34:23.042"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:23.046" endtime="20190116 18:34:23.060"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:23.081" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:34:23.146" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:23.231" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:23.234" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:23.063" endtime="20190116 18:34:23.235"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:23.239" endtime="20190116 18:34:23.248"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:34:22.801" endtime="20190116 18:34:23.252"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:34:23.262" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190116 18:34:23.296" level="INFO">${candump_ID} = 182</msg>
<status status="PASS" starttime="20190116 18:34:23.255" endtime="20190116 18:34:23.297"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:23.324" endtime="20190116 18:34:23.329"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:23.341" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status status="PASS" starttime="20190116 18:34:23.334" endtime="20190116 18:34:23.341"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:23.345" endtime="20190116 18:34:23.351"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:23.555" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 44 E1 C2</msg>
<status status="PASS" starttime="20190116 18:34:23.354" endtime="20190116 18:34:23.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:23.564" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 44 E1 C2</msg>
<status status="PASS" starttime="20190116 18:34:23.559" endtime="20190116 18:34:23.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:23.570" endtime="20190116 18:34:23.577"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:23.300" endtime="20190116 18:34:23.580"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:23.591" endtime="20190116 18:34:23.595"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:23.605" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190116 18:34:23.598" endtime="20190116 18:34:23.606"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:23.609" endtime="20190116 18:34:23.618"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:23.822" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 45 E3 C5</msg>
<status status="PASS" starttime="20190116 18:34:23.622" endtime="20190116 18:34:23.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:23.831" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 45 E3 C5</msg>
<status status="PASS" starttime="20190116 18:34:23.827" endtime="20190116 18:34:23.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:23.836" endtime="20190116 18:34:23.844"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:23.582" endtime="20190116 18:34:23.846"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:23.849" endtime="20190116 18:34:23.855"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:23.874" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:23.866" endtime="20190116 18:34:23.875"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:23.878" endtime="20190116 18:34:23.883"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:24.075" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:23.886" endtime="20190116 18:34:24.077"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:23.857" endtime="20190116 18:34:24.079"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:34:24.092" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:25.098" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:34:25.099" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:34:25.103" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:25.106" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:34:24.088" endtime="20190116 18:34:25.107"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:34:25.115" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:34:25.117" level="INFO">${temp} = [' (1547663663.937566)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190116 18:34:25.110" endtime="20190116 18:34:25.118"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:34:25.125" level="INFO">(1547663663.937566)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190116 18:34:25.127" level="INFO">${ret_list} = [{'timestamp': '1547663663.937566', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190116 18:34:25.121" endtime="20190116 18:34:25.128"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.131" endtime="20190116 18:34:25.137"></status>
</kw>
<msg timestamp="20190116 18:34:25.140" level="INFO">${resp_list} = [{'timestamp': '1547663663.937566', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190116 18:34:24.082" endtime="20190116 18:34:25.142"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:34:25.152" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190116 18:34:25.145" endtime="20190116 18:34:25.153"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.156" endtime="20190116 18:34:25.161"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:25.196" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:34:25.164" endtime="20190116 18:34:25.197"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.200" endtime="20190116 18:34:25.204"></status>
</kw>
<msg timestamp="20190116 18:34:25.208" level="INFO">${resp} = True</msg>
<status status="PASS" starttime="20190116 18:34:22.792" endtime="20190116 18:34:25.208"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.211" endtime="20190116 18:34:25.216"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:22.778" endtime="20190116 18:34:25.218"></status>
</kw>
<kw name="cansend_125k">
<doc>Trigger to send can message on can with bitrate 125000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 125000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.226" endtime="20190116 18:34:25.231"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.253" endtime="20190116 18:34:25.260"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:25.269" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:34:25.297" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:25.368" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:25.371" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:25.263" endtime="20190116 18:34:25.372"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.376" endtime="20190116 18:34:25.385"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:25.395" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190116 18:34:25.423" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:25.478" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:25.481" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:25.388" endtime="20190116 18:34:25.482"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.486" endtime="20190116 18:34:25.499"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:25.509" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:34:25.537" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:25.618" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:25.621" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:25.503" endtime="20190116 18:34:25.622"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.626" endtime="20190116 18:34:25.635"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:34:25.243" endtime="20190116 18:34:25.638"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:34:25.648" level="INFO">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg timestamp="20190116 18:34:25.677" level="INFO">${candump_ID} = 186</msg>
<status status="PASS" starttime="20190116 18:34:25.641" endtime="20190116 18:34:25.679"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.700" endtime="20190116 18:34:25.711"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:25.721" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status status="PASS" starttime="20190116 18:34:25.715" endtime="20190116 18:34:25.722"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.725" endtime="20190116 18:34:25.731"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:25.935" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 46 E1 C0</msg>
<status status="PASS" starttime="20190116 18:34:25.734" endtime="20190116 18:34:25.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:25.945" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 46 E1 C0</msg>
<status status="PASS" starttime="20190116 18:34:25.940" endtime="20190116 18:34:25.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.950" endtime="20190116 18:34:25.958"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:25.689" endtime="20190116 18:34:25.960"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.971" endtime="20190116 18:34:25.975"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:25.985" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190116 18:34:25.978" endtime="20190116 18:34:25.986"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:25.989" endtime="20190116 18:34:25.995"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:26.198" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status status="PASS" starttime="20190116 18:34:25.998" endtime="20190116 18:34:26.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:26.207" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status status="PASS" starttime="20190116 18:34:26.203" endtime="20190116 18:34:26.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:26.213" endtime="20190116 18:34:26.220"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:25.962" endtime="20190116 18:34:26.223"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:26.226" endtime="20190116 18:34:26.231"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:26.250" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:26.242" endtime="20190116 18:34:26.251"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:26.254" endtime="20190116 18:34:26.260"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:26.451" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:26.263" endtime="20190116 18:34:26.452"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:26.234" endtime="20190116 18:34:26.455"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:34:26.468" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:27.473" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:34:27.475" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:34:27.479" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:27.481" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:34:26.463" endtime="20190116 18:34:27.482"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:34:27.490" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:34:27.493" level="INFO">${temp} = [' (1547663666.312959)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190116 18:34:27.485" endtime="20190116 18:34:27.493"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:34:27.501" level="INFO">(1547663666.312959)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190116 18:34:27.503" level="INFO">${ret_list} = [{'timestamp': '1547663666.312959', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190116 18:34:27.496" endtime="20190116 18:34:27.504"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:27.507" endtime="20190116 18:34:27.513"></status>
</kw>
<msg timestamp="20190116 18:34:27.517" level="INFO">${resp_list} = [{'timestamp': '1547663666.312959', 'channel': 'can2', 'payload': '1122334455667788', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190116 18:34:26.457" endtime="20190116 18:34:27.517"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:34:27.528" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190116 18:34:27.520" endtime="20190116 18:34:27.529"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:27.532" endtime="20190116 18:34:27.542"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:27.578" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:34:27.545" endtime="20190116 18:34:27.579"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:27.582" endtime="20190116 18:34:27.586"></status>
</kw>
<msg timestamp="20190116 18:34:27.590" level="INFO">${resp} = True</msg>
<status status="PASS" starttime="20190116 18:34:25.233" endtime="20190116 18:34:27.591"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:27.594" endtime="20190116 18:34:27.598"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:25.220" endtime="20190116 18:34:27.601"></status>
</kw>
<kw name="cansend_125k_ex">
<doc>Trigger to send can message on can with 29 ID and bitrate 125000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 ID and bitrate 125000</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:27.609" endtime="20190116 18:34:27.614"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:27.636" endtime="20190116 18:34:27.643"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:27.653" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:34:27.680" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:27.756" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:27.759" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:27.646" endtime="20190116 18:34:27.760"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:27.763" endtime="20190116 18:34:27.772"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:27.782" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190116 18:34:27.810" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:27.866" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:27.869" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:27.775" endtime="20190116 18:34:27.870"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:27.874" endtime="20190116 18:34:27.882"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:27.892" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:34:27.919" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:28.002" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:28.006" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:27.886" endtime="20190116 18:34:28.007"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:28.011" endtime="20190116 18:34:28.019"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:34:27.626" endtime="20190116 18:34:28.022"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:34:28.032" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190116 18:34:28.062" level="INFO">${candump_ID} = 190</msg>
<status status="PASS" starttime="20190116 18:34:28.025" endtime="20190116 18:34:28.063"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:28.085" endtime="20190116 18:34:28.096"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:28.107" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status status="PASS" starttime="20190116 18:34:28.100" endtime="20190116 18:34:28.107"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:28.110" endtime="20190116 18:34:28.116"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:28.322" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 40 E1 C6</msg>
<status status="PASS" starttime="20190116 18:34:28.119" endtime="20190116 18:34:28.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:28.331" level="INFO">1E 10 54 93 00 08 00 0E AA 03 00 00 01 40 E1 C6</msg>
<status status="PASS" starttime="20190116 18:34:28.327" endtime="20190116 18:34:28.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:28.337" endtime="20190116 18:34:28.344"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:28.071" endtime="20190116 18:34:28.347"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:28.358" endtime="20190116 18:34:28.363"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:28.373" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190116 18:34:28.366" endtime="20190116 18:34:28.374"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:28.377" endtime="20190116 18:34:28.386"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:28.590" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 41 E3 C1</msg>
<status status="PASS" starttime="20190116 18:34:28.389" endtime="20190116 18:34:28.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:28.599" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 41 E3 C1</msg>
<status status="PASS" starttime="20190116 18:34:28.595" endtime="20190116 18:34:28.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:28.605" endtime="20190116 18:34:28.613"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:28.350" endtime="20190116 18:34:28.615"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:28.618" endtime="20190116 18:34:28.624"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:28.643" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:28.635" endtime="20190116 18:34:28.644"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:28.646" endtime="20190116 18:34:28.652"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:28.844" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:28.655" endtime="20190116 18:34:28.845"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:28.626" endtime="20190116 18:34:28.848"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:34:28.861" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:29.935" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:34:29.937" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:34:29.941" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:29.944" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:34:28.857" endtime="20190116 18:34:29.945"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:34:29.967" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:34:29.969" level="INFO">${temp} = [' (1547663668.706319)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190116 18:34:29.948" endtime="20190116 18:34:29.970"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:34:29.989" level="INFO">(1547663668.706319)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190116 18:34:29.991" level="INFO">${ret_list} = [{'timestamp': '1547663668.706319', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190116 18:34:29.984" endtime="20190116 18:34:29.992"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.017" endtime="20190116 18:34:30.030"></status>
</kw>
<msg timestamp="20190116 18:34:30.034" level="INFO">${resp_list} = [{'timestamp': '1547663668.706319', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190116 18:34:28.850" endtime="20190116 18:34:30.035"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:34:30.066" level="INFO">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190116 18:34:30.058" endtime="20190116 18:34:30.067"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.079" endtime="20190116 18:34:30.099"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:30.195" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:34:30.103" endtime="20190116 18:34:30.196"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.199" endtime="20190116 18:34:30.219"></status>
</kw>
<msg timestamp="20190116 18:34:30.225" level="INFO">${resp} = True</msg>
<status status="PASS" starttime="20190116 18:34:27.616" endtime="20190116 18:34:30.225"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.228" endtime="20190116 18:34:30.245"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:27.603" endtime="20190116 18:34:30.247"></status>
</kw>
<kw name="can_setup_bitrate_1000k_negativtest">
<doc>Can setup channel and not supported bitrate 1000k negativtest</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and not supported bitrate 1000k negativtest</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.288" endtime="20190116 18:34:30.307"></status>
</kw>
<kw name="can_setup_bitrate_negativtest">
<doc>Can setup channel and bitrate negativtest</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${1000_KBAUD}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate negativtest</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.342" endtime="20190116 18:34:30.359"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:30.369" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 03</msg>
<status status="PASS" starttime="20190116 18:34:30.362" endtime="20190116 18:34:30.385"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.389" endtime="20190116 18:34:30.406"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:30.647" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 03 04 00 01 42 E5 C4</msg>
<status status="PASS" starttime="20190116 18:34:30.409" endtime="20190116 18:34:30.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:30.656" level="INFO">1E 10 54 93 00 08 00 0E AA 03 04 00 01 42 E5 C4</msg>
<status status="PASS" starttime="20190116 18:34:30.651" endtime="20190116 18:34:30.659"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.662" endtime="20190116 18:34:30.670"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:30.309" endtime="20190116 18:34:30.672"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:30.250" endtime="20190116 18:34:30.674"></status>
</kw>
<kw name="trigger_can_message_125k">
<doc>Trigger to send 5 can messages on specified can channel without change any settings</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send 5 can messages on specified can channel without change any settings</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.682" endtime="20190116 18:34:30.687"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.703" endtime="20190116 18:34:30.711"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:30.721" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:34:30.749" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:30.821" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:30.824" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:30.715" endtime="20190116 18:34:30.825"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.829" endtime="20190116 18:34:30.838"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:30.849" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190116 18:34:30.877" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:30.934" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:30.937" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:30.841" endtime="20190116 18:34:30.938"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:30.942" endtime="20190116 18:34:30.951"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:30.961" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:34:30.989" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:31.071" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:31.075" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:30.954" endtime="20190116 18:34:31.076"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:31.080" endtime="20190116 18:34:31.089"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:34:30.689" endtime="20190116 18:34:31.092"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:34:31.102" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190116 18:34:31.131" level="INFO">${candump_ID} = 194</msg>
<status status="PASS" starttime="20190116 18:34:31.095" endtime="20190116 18:34:31.136"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg timestamp="20190116 18:34:31.150" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:31.179" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:31.171" endtime="20190116 18:34:31.180"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:31.183" endtime="20190116 18:34:31.189"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:31.382" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:31.192" endtime="20190116 18:34:31.383"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:31.153" endtime="20190116 18:34:31.385"></status>
</kw>
<msg timestamp="20190116 18:34:31.386" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:31.406" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:31.397" endtime="20190116 18:34:31.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:31.409" endtime="20190116 18:34:31.415"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:31.606" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:31.418" endtime="20190116 18:34:31.607"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:31.389" endtime="20190116 18:34:31.610"></status>
</kw>
<msg timestamp="20190116 18:34:31.611" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:31.631" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:31.622" endtime="20190116 18:34:31.631"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:31.634" endtime="20190116 18:34:31.640"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:31.831" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:31.643" endtime="20190116 18:34:31.831"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:31.614" endtime="20190116 18:34:31.835"></status>
</kw>
<msg timestamp="20190116 18:34:31.836" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:31.855" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:31.847" endtime="20190116 18:34:31.856"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:31.859" endtime="20190116 18:34:31.864"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:32.061" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:31.867" endtime="20190116 18:34:32.062"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:31.838" endtime="20190116 18:34:32.064"></status>
</kw>
<msg timestamp="20190116 18:34:32.065" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:32.085" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:32.076" endtime="20190116 18:34:32.086"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:32.088" endtime="20190116 18:34:32.094"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:32.285" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:32.097" endtime="20190116 18:34:32.286"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:32.068" endtime="20190116 18:34:32.289"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:31.144" endtime="20190116 18:34:32.290"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:34:32.304" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:33.334" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:34:33.336" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:34:33.340" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:33.342" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:34:32.299" endtime="20190116 18:34:33.343"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:34:33.351" level="INFO">5 lines returned</msg>
<msg timestamp="20190116 18:34:33.354" level="INFO">${temp} = [' (1547663671.244262)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1547663671.469142)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1547663671.693952)  can2  18EF1B05   [8]  11 22 33 44 ...</msg>
<status status="PASS" starttime="20190116 18:34:33.346" endtime="20190116 18:34:33.355"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:34:33.363" level="INFO">(1547663671.244262)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1547663671.469142)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1547663671.693952)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1547663671.922697)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1547663672.148571)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg timestamp="20190116 18:34:33.365" level="INFO">${ret_list} = [{'timestamp': '1547663671.244262', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}, {'timestamp': '1547663671.469142', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18E...</msg>
<status status="PASS" starttime="20190116 18:34:33.358" endtime="20190116 18:34:33.366"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:33.369" endtime="20190116 18:34:33.375"></status>
</kw>
<msg timestamp="20190116 18:34:33.379" level="INFO">${resp_list} = [{'timestamp': '1547663671.244262', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18EF1B05'}, {'timestamp': '1547663671.469142', 'channel': 'can2', 'payload': '1122334455667788', 'id': '18E...</msg>
<status status="PASS" starttime="20190116 18:34:32.292" endtime="20190116 18:34:33.380"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:34:33.389" level="INFO">${res_dict} = {'status': True, 'count': 5}</msg>
<status status="PASS" starttime="20190116 18:34:33.383" endtime="20190116 18:34:33.390"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:33.393" endtime="20190116 18:34:33.399"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:33.433" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:34:33.402" endtime="20190116 18:34:33.433"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:33.436" endtime="20190116 18:34:33.441"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:34:33.519" level="INFO">${count} = 5</msg>
<status status="PASS" starttime="20190116 18:34:33.443" endtime="20190116 18:34:33.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${5}</arg>
<arg>${count}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:33.535" endtime="20190116 18:34:33.541"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:30.676" endtime="20190116 18:34:33.543"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:33.561" endtime="20190116 18:34:33.566"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:33.576" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status status="PASS" starttime="20190116 18:34:33.569" endtime="20190116 18:34:33.577"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:33.579" endtime="20190116 18:34:33.585"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:33.836" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 43 E3 C3</msg>
<status status="PASS" starttime="20190116 18:34:33.588" endtime="20190116 18:34:33.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:33.844" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 43 E3 C3</msg>
<status status="PASS" starttime="20190116 18:34:33.840" endtime="20190116 18:34:33.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:33.850" endtime="20190116 18:34:33.858"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:33.552" endtime="20190116 18:34:33.860"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:33.547" endtime="20190116 18:34:33.862"></status>
</kw>
<kw name="channel_off_trigger_can_message_125k_negativtest">
<doc>Set the channel off and trigger to send 5 can messages on specified can channel</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the channel off and trigger to send 5 can messages on specified can channel</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:33.871" endtime="20190116 18:34:33.876"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:33.890" endtime="20190116 18:34:33.897"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:33.911" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:34:33.941" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:34.016" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:34.020" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:33.900" endtime="20190116 18:34:34.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:34.025" endtime="20190116 18:34:34.034"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:34.044" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg timestamp="20190116 18:34:34.072" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:34.129" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:34.131" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:34.037" endtime="20190116 18:34:34.133"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:34.137" endtime="20190116 18:34:34.145"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:34:34.155" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:34:34.182" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:34.267" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:34.270" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:34:34.148" endtime="20190116 18:34:34.271"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:34.275" endtime="20190116 18:34:34.284"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:34:33.878" endtime="20190116 18:34:34.287"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:34:34.297" level="INFO">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg timestamp="20190116 18:34:34.326" level="INFO">${candump_ID} = 198</msg>
<status status="PASS" starttime="20190116 18:34:34.290" endtime="20190116 18:34:34.327"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg timestamp="20190116 18:34:34.343" level="INFO">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:34.373" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:34.364" endtime="20190116 18:34:34.373"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:34.376" endtime="20190116 18:34:34.382"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:34.575" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:34.386" endtime="20190116 18:34:34.576"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:34.346" endtime="20190116 18:34:34.579"></status>
</kw>
<msg timestamp="20190116 18:34:34.580" level="INFO">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:34.601" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:34.593" endtime="20190116 18:34:34.602"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:34.606" endtime="20190116 18:34:34.611"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:34.802" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:34.614" endtime="20190116 18:34:34.803"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:34.582" endtime="20190116 18:34:34.806"></status>
</kw>
<msg timestamp="20190116 18:34:34.807" level="INFO">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:34.827" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:34.818" endtime="20190116 18:34:34.827"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:34.830" endtime="20190116 18:34:34.837"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:35.030" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:34.840" endtime="20190116 18:34:35.031"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:34.809" endtime="20190116 18:34:35.034"></status>
</kw>
<msg timestamp="20190116 18:34:35.035" level="INFO">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:35.055" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:35.046" endtime="20190116 18:34:35.056"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:35.059" endtime="20190116 18:34:35.065"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:35.256" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:35.068" endtime="20190116 18:34:35.257"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:35.038" endtime="20190116 18:34:35.260"></status>
</kw>
<msg timestamp="20190116 18:34:35.261" level="INFO">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:35.284" level="INFO">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190116 18:34:35.276" endtime="20190116 18:34:35.285"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:35.288" endtime="20190116 18:34:35.293"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:35.484" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:34:35.296" endtime="20190116 18:34:35.486"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:35.263" endtime="20190116 18:34:35.488"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:34.339" endtime="20190116 18:34:35.489"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:34:35.502" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:34:36.507" level="INFO">Process did not complete in 1 second.</msg>
<msg timestamp="20190116 18:34:36.509" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:34:36.513" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:34:36.515" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:34:35.498" endtime="20190116 18:34:36.516"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:34:36.525" level="INFO">0 lines returned</msg>
<msg timestamp="20190116 18:34:36.527" level="INFO">${temp} = []</msg>
<status status="PASS" starttime="20190116 18:34:36.519" endtime="20190116 18:34:36.527"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:34:36.535" level="INFO">${ret_list} = []</msg>
<status status="PASS" starttime="20190116 18:34:36.530" endtime="20190116 18:34:36.536"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:36.539" endtime="20190116 18:34:36.544"></status>
</kw>
<msg timestamp="20190116 18:34:36.549" level="INFO">${resp_list} = []</msg>
<status status="PASS" starttime="20190116 18:34:35.492" endtime="20190116 18:34:36.550"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:34:36.559" level="INFO">${res_dict} = {'status': False, 'count': 0}</msg>
<status status="PASS" starttime="20190116 18:34:36.553" endtime="20190116 18:34:36.560"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:36.563" endtime="20190116 18:34:36.568"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:36.602" level="INFO">${value} = False</msg>
<status status="PASS" starttime="20190116 18:34:36.571" endtime="20190116 18:34:36.603"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:36.606" endtime="20190116 18:34:36.610"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:34:36.643" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20190116 18:34:36.613" endtime="20190116 18:34:36.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${0}</arg>
<arg>${count}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:36.647" endtime="20190116 18:34:36.653"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:33.865" endtime="20190116 18:34:36.656"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:36.667" endtime="20190116 18:34:36.671"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:36.689" endtime="20190116 18:34:36.693"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:36.703" level="INFO">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status status="PASS" starttime="20190116 18:34:36.696" endtime="20190116 18:34:36.704"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:36.707" endtime="20190116 18:34:36.713"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:36.915" level="INFO">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status status="PASS" starttime="20190116 18:34:36.715" endtime="20190116 18:34:36.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:34:36.924" level="INFO">1E 10 54 93 00 08 00 0E AA 05 02 00 01 47 E3 C7</msg>
<status status="PASS" starttime="20190116 18:34:36.920" endtime="20190116 18:34:36.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:36.930" endtime="20190116 18:34:36.938"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:36.679" endtime="20190116 18:34:36.940"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:36.674" endtime="20190116 18:34:36.942"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:36.945" endtime="20190116 18:34:36.993"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:36.997" endtime="20190116 18:34:37.045"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:37.048" endtime="20190116 18:34:37.093"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:36.660" endtime="20190116 18:34:37.095"></status>
</kw>
<doc>Implements Test Task SKTB-47669 for can3 channel</doc>
<tags>
<tag>CAN 3 test TX</tag>
</tags>
<status status="PASS" starttime="20190116 18:34:08.347" critical="yes" endtime="20190116 18:34:37.097"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:34:38.606" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:34:38.694" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:34:37.144" endtime="20190116 18:34:38.695"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:37.113" endtime="20190116 18:34:38.701"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:37.108" endtime="20190116 18:34:38.703"></status>
</kw>
<doc>CAN 3 test TX with FBUS</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:34:05.621" endtime="20190116 18:34:38.704"></status>
</suite>
<suite name="SKTB-48413" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-48413.robot" id="s1-s12">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:34:39.361" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:34:39.344" endtime="20190116 18:34:39.370"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:34:39.395" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:34:39.415" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:34:41.752" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:34:39.373" endtime="20190116 18:34:41.775"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:39.339" endtime="20190116 18:34:41.777"></status>
</kw>
<test name="SKTB-48413 FBUS test" id="s1-s12-t1">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:41.846" endtime="20190116 18:34:42.036"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:42.039" endtime="20190116 18:34:42.156"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:42.159" endtime="20190116 18:34:42.245"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:34:44.274" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:34:42.248" endtime="20190116 18:34:44.276"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:44.279" endtime="20190116 18:34:44.401"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:44.404" endtime="20190116 18:34:44.482"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:44.485" endtime="20190116 18:34:44.540"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:44.544" endtime="20190116 18:34:44.591"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:44.594" endtime="20190116 18:34:44.641"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:44.645" endtime="20190116 18:34:44.691"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:44.695" endtime="20190116 18:34:44.745"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:34:46.753" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:34:44.748" endtime="20190116 18:34:46.755"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:41.840" endtime="20190116 18:34:46.758"></status>
</kw>
<kw name="digit_out_led1_freq">
<doc>Toggle digital output led 1 with the supported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle digital output led 1 with the supported frequency</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:46.767" endtime="20190116 18:34:46.771"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:46.790" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 01</msg>
<status status="PASS" starttime="20190116 18:34:46.783" endtime="20190116 18:34:46.791"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:46.794" endtime="20190116 18:34:46.799"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:47.002" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 04 01 42 3D F4</msg>
<status status="PASS" starttime="20190116 18:34:46.802" endtime="20190116 18:34:47.003"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.007" endtime="20190116 18:34:47.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.015" endtime="20190116 18:34:47.022"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:46.774" endtime="20190116 18:34:47.025"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.028" endtime="20190116 18:34:47.032"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:47.050" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status status="PASS" starttime="20190116 18:34:47.044" endtime="20190116 18:34:47.051"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.054" endtime="20190116 18:34:47.059"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:47.360" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 43 3E FC</msg>
<status status="PASS" starttime="20190116 18:34:47.062" endtime="20190116 18:34:47.365"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.368" endtime="20190116 18:34:47.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.405" endtime="20190116 18:34:47.425"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:47.434" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '43', '3E', 'FC']</msg>
<status status="PASS" starttime="20190116 18:34:47.429" endtime="20190116 18:34:47.435"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:47.455" level="INFO">${value} = 00</msg>
<status status="PASS" starttime="20190116 18:34:47.449" endtime="20190116 18:34:47.456"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:47.034" endtime="20190116 18:34:47.475"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:46.760" endtime="20190116 18:34:47.478"></status>
</kw>
<kw name="digit_out_led1_freq_negativtest">
<doc>Toggle the digital output led 1 with the notsupported frequency negativ test</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 1 with the notsupported frequency negativtest</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.489" endtime="20190116 18:34:47.497"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:47.519" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 0B</msg>
<status status="PASS" starttime="20190116 18:34:47.512" endtime="20190116 18:34:47.520"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.523" endtime="20190116 18:34:47.530"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:47.755" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 04 01 46 3C F0</msg>
<status status="PASS" starttime="20190116 18:34:47.533" endtime="20190116 18:34:47.756"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.759" endtime="20190116 18:34:47.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.780" endtime="20190116 18:34:47.787"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:47.499" endtime="20190116 18:34:47.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.792" endtime="20190116 18:34:47.797"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:47.814" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status status="PASS" starttime="20190116 18:34:47.809" endtime="20190116 18:34:47.815"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:47.818" endtime="20190116 18:34:47.824"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:48.029" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 47 3E F8</msg>
<status status="PASS" starttime="20190116 18:34:47.827" endtime="20190116 18:34:48.030"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.033" endtime="20190116 18:34:48.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.041" endtime="20190116 18:34:48.049"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:48.057" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '47', '3E', 'F8']</msg>
<status status="PASS" starttime="20190116 18:34:48.052" endtime="20190116 18:34:48.058"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:48.066" level="INFO">${value} = 00</msg>
<status status="PASS" starttime="20190116 18:34:48.061" endtime="20190116 18:34:48.067"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:47.799" endtime="20190116 18:34:48.070"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:47.481" endtime="20190116 18:34:48.073"></status>
</kw>
<kw name="digit_out_led1_high">
<doc>Set the digital output led 1 high and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 high and test it</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.081" endtime="20190116 18:34:48.085"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:48.105" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 01</msg>
<status status="PASS" starttime="20190116 18:34:48.098" endtime="20190116 18:34:48.106"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.108" endtime="20190116 18:34:48.114"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:48.317" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 40 3D F2</msg>
<status status="PASS" starttime="20190116 18:34:48.117" endtime="20190116 18:34:48.318"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.322" endtime="20190116 18:34:48.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.330" endtime="20190116 18:34:48.337"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:48.088" endtime="20190116 18:34:48.340"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:48.358" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status status="PASS" starttime="20190116 18:34:48.352" endtime="20190116 18:34:48.359"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.361" endtime="20190116 18:34:48.367"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:48.574" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 01 01 41 3D FF</msg>
<status status="PASS" starttime="20190116 18:34:48.370" endtime="20190116 18:34:48.575"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.578" endtime="20190116 18:34:48.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.587" endtime="20190116 18:34:48.595"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:48.603" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '01', '01', '41', '3D', 'FF']</msg>
<status status="PASS" starttime="20190116 18:34:48.598" endtime="20190116 18:34:48.604"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:48.613" level="INFO">${value} = 01</msg>
<status status="PASS" starttime="20190116 18:34:48.607" endtime="20190116 18:34:48.614"></status>
</kw>
<msg timestamp="20190116 18:34:48.617" level="INFO">${res} = 01</msg>
<status status="PASS" starttime="20190116 18:34:48.342" endtime="20190116 18:34:48.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.621" endtime="20190116 18:34:48.626"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:48.075" endtime="20190116 18:34:48.628"></status>
</kw>
<kw name="digit_out_led1_low">
<doc>Set the digital output led 1 low and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 low and test it</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.637" endtime="20190116 18:34:48.641"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:48.661" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 00</msg>
<status status="PASS" starttime="20190116 18:34:48.654" endtime="20190116 18:34:48.662"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.665" endtime="20190116 18:34:48.671"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:48.873" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 44 3D F6</msg>
<status status="PASS" starttime="20190116 18:34:48.674" endtime="20190116 18:34:48.874"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.878" endtime="20190116 18:34:48.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.886" endtime="20190116 18:34:48.893"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:48.643" endtime="20190116 18:34:48.896"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:48.943" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status status="PASS" starttime="20190116 18:34:48.916" endtime="20190116 18:34:48.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:48.947" endtime="20190116 18:34:48.953"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:49.157" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 00 01 45 3D FA</msg>
<status status="PASS" starttime="20190116 18:34:48.956" endtime="20190116 18:34:49.158"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.161" endtime="20190116 18:34:49.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.169" endtime="20190116 18:34:49.177"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:49.185" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '00', '01', '45', '3D', 'FA']</msg>
<status status="PASS" starttime="20190116 18:34:49.180" endtime="20190116 18:34:49.186"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:49.194" level="INFO">${value} = 00</msg>
<status status="PASS" starttime="20190116 18:34:49.189" endtime="20190116 18:34:49.195"></status>
</kw>
<msg timestamp="20190116 18:34:49.199" level="INFO">${res} = 00</msg>
<status status="PASS" starttime="20190116 18:34:48.898" endtime="20190116 18:34:49.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.203" endtime="20190116 18:34:49.208"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:48.630" endtime="20190116 18:34:49.210"></status>
</kw>
<kw name="digit_out_led2_freq">
<doc>Toggle the digital output led 2 with the supported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2</arg>
<arg>with the supported frequency</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.219" endtime="20190116 18:34:49.224"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:49.243" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 01</msg>
<status status="PASS" starttime="20190116 18:34:49.236" endtime="20190116 18:34:49.244"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.247" endtime="20190116 18:34:49.252"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:49.459" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 05 01 46 3D F1</msg>
<status status="PASS" starttime="20190116 18:34:49.255" endtime="20190116 18:34:49.461"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.464" endtime="20190116 18:34:49.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.472" endtime="20190116 18:34:49.480"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:49.226" endtime="20190116 18:34:49.482"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.485" endtime="20190116 18:34:49.490"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:49.507" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status status="PASS" starttime="20190116 18:34:49.502" endtime="20190116 18:34:49.508"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.511" endtime="20190116 18:34:49.517"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:49.721" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 47 3E F9</msg>
<status status="PASS" starttime="20190116 18:34:49.520" endtime="20190116 18:34:49.722"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.726" endtime="20190116 18:34:49.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.734" endtime="20190116 18:34:49.742"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:49.750" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '47', '3E', 'F9']</msg>
<status status="PASS" starttime="20190116 18:34:49.745" endtime="20190116 18:34:49.751"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:49.781" level="INFO">${value} = 00</msg>
<status status="PASS" starttime="20190116 18:34:49.754" endtime="20190116 18:34:49.782"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:49.492" endtime="20190116 18:34:49.786"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:49.212" endtime="20190116 18:34:49.788"></status>
</kw>
<kw name="digit_out_led2_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.807" endtime="20190116 18:34:49.822"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:49.845" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 0B</msg>
<status status="PASS" starttime="20190116 18:34:49.838" endtime="20190116 18:34:49.846"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:49.849" endtime="20190116 18:34:49.855"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:50.059" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 05 01 40 3C F7</msg>
<status status="PASS" starttime="20190116 18:34:49.858" endtime="20190116 18:34:50.060"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.063" endtime="20190116 18:34:50.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.071" endtime="20190116 18:34:50.078"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:49.824" endtime="20190116 18:34:50.081"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.084" endtime="20190116 18:34:50.089"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:50.107" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status status="PASS" starttime="20190116 18:34:50.101" endtime="20190116 18:34:50.108"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.111" endtime="20190116 18:34:50.116"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:50.319" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 41 3E FF</msg>
<status status="PASS" starttime="20190116 18:34:50.119" endtime="20190116 18:34:50.321"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.324" endtime="20190116 18:34:50.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.332" endtime="20190116 18:34:50.341"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:50.349" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '41', '3E', 'FF']</msg>
<status status="PASS" starttime="20190116 18:34:50.344" endtime="20190116 18:34:50.349"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:50.362" level="INFO">${value} = 00</msg>
<status status="PASS" starttime="20190116 18:34:50.352" endtime="20190116 18:34:50.363"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:50.091" endtime="20190116 18:34:50.366"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:49.790" endtime="20190116 18:34:50.369"></status>
</kw>
<kw name="digit_out_led2_high">
<doc>Set the digital output led 2 high and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 high and test it</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.377" endtime="20190116 18:34:50.382"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:50.401" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 01</msg>
<status status="PASS" starttime="20190116 18:34:50.394" endtime="20190116 18:34:50.402"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.405" endtime="20190116 18:34:50.410"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:50.618" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 42 3D F1</msg>
<status status="PASS" starttime="20190116 18:34:50.413" endtime="20190116 18:34:50.619"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.623" endtime="20190116 18:34:50.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.632" endtime="20190116 18:34:50.639"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:50.384" endtime="20190116 18:34:50.642"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:50.659" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status status="PASS" starttime="20190116 18:34:50.653" endtime="20190116 18:34:50.660"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.663" endtime="20190116 18:34:50.669"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:50.871" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 01 01 43 3D FC</msg>
<status status="PASS" starttime="20190116 18:34:50.672" endtime="20190116 18:34:50.871"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.875" endtime="20190116 18:34:50.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.884" endtime="20190116 18:34:50.891"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:50.899" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '01', '01', '43', '3D', 'FC']</msg>
<status status="PASS" starttime="20190116 18:34:50.894" endtime="20190116 18:34:50.900"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:50.910" level="INFO">${value} = 01</msg>
<status status="PASS" starttime="20190116 18:34:50.903" endtime="20190116 18:34:50.911"></status>
</kw>
<msg timestamp="20190116 18:34:50.915" level="INFO">${res} = 01</msg>
<status status="PASS" starttime="20190116 18:34:50.644" endtime="20190116 18:34:50.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.918" endtime="20190116 18:34:50.923"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:50.371" endtime="20190116 18:34:50.925"></status>
</kw>
<kw name="digit_out_led2_low">
<doc>Set the digital output led 2 low and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 low and test it</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.934" endtime="20190116 18:34:50.939"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:50.957" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 00</msg>
<status status="PASS" starttime="20190116 18:34:50.951" endtime="20190116 18:34:50.958"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:50.961" endtime="20190116 18:34:50.967"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:51.170" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 44 3D F7</msg>
<status status="PASS" starttime="20190116 18:34:50.970" endtime="20190116 18:34:51.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.175" endtime="20190116 18:34:51.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.183" endtime="20190116 18:34:51.191"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:50.941" endtime="20190116 18:34:51.193"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:51.214" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status status="PASS" starttime="20190116 18:34:51.209" endtime="20190116 18:34:51.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.218" endtime="20190116 18:34:51.224"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:51.426" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 00 01 45 3D FB</msg>
<status status="PASS" starttime="20190116 18:34:51.227" endtime="20190116 18:34:51.427"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.431" endtime="20190116 18:34:51.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.439" endtime="20190116 18:34:51.448"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:51.456" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '00', '01', '45', '3D', 'FB']</msg>
<status status="PASS" starttime="20190116 18:34:51.451" endtime="20190116 18:34:51.456"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:51.465" level="INFO">${value} = 00</msg>
<status status="PASS" starttime="20190116 18:34:51.459" endtime="20190116 18:34:51.466"></status>
</kw>
<msg timestamp="20190116 18:34:51.477" level="INFO">${res} = 00</msg>
<status status="PASS" starttime="20190116 18:34:51.195" endtime="20190116 18:34:51.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.495" endtime="20190116 18:34:51.501"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:50.928" endtime="20190116 18:34:51.503"></status>
</kw>
<kw name="digit_out_crm_freq">
<doc>Toggle the digital output CRM with the supported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output CRM with the supported frequency</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.522" endtime="20190116 18:34:51.539"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:51.561" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 01</msg>
<status status="PASS" starttime="20190116 18:34:51.554" endtime="20190116 18:34:51.561"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.564" endtime="20190116 18:34:51.570"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:51.775" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 06 01 42 3D F6</msg>
<status status="PASS" starttime="20190116 18:34:51.573" endtime="20190116 18:34:51.776"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.779" endtime="20190116 18:34:51.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.788" endtime="20190116 18:34:51.795"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:51.542" endtime="20190116 18:34:51.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.800" endtime="20190116 18:34:51.805"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:51.822" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status status="PASS" starttime="20190116 18:34:51.817" endtime="20190116 18:34:51.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:51.826" endtime="20190116 18:34:51.832"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:52.035" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 43 3E FE</msg>
<status status="PASS" starttime="20190116 18:34:51.835" endtime="20190116 18:34:52.037"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.040" endtime="20190116 18:34:52.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.048" endtime="20190116 18:34:52.056"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:52.064" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '43', '3E', 'FE']</msg>
<status status="PASS" starttime="20190116 18:34:52.059" endtime="20190116 18:34:52.065"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:52.074" level="INFO">${value} = 00</msg>
<status status="PASS" starttime="20190116 18:34:52.068" endtime="20190116 18:34:52.075"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:51.807" endtime="20190116 18:34:52.078"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:51.505" endtime="20190116 18:34:52.080"></status>
</kw>
<kw name="digit_out_crm_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.089" endtime="20190116 18:34:52.093"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:52.116" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 0B</msg>
<status status="PASS" starttime="20190116 18:34:52.109" endtime="20190116 18:34:52.117"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.120" endtime="20190116 18:34:52.125"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:52.329" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 06 01 44 3C F0</msg>
<status status="PASS" starttime="20190116 18:34:52.128" endtime="20190116 18:34:52.330"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.333" endtime="20190116 18:34:52.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.341" endtime="20190116 18:34:52.348"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:52.095" endtime="20190116 18:34:52.351"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.354" endtime="20190116 18:34:52.358"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:52.376" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status status="PASS" starttime="20190116 18:34:52.370" endtime="20190116 18:34:52.377"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.380" endtime="20190116 18:34:52.385"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:52.589" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 45 3E F8</msg>
<status status="PASS" starttime="20190116 18:34:52.388" endtime="20190116 18:34:52.591"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.594" endtime="20190116 18:34:52.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.603" endtime="20190116 18:34:52.612"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:52.620" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '45', '3E', 'F8']</msg>
<status status="PASS" starttime="20190116 18:34:52.615" endtime="20190116 18:34:52.620"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:52.629" level="INFO">${value} = 00</msg>
<status status="PASS" starttime="20190116 18:34:52.623" endtime="20190116 18:34:52.630"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:52.360" endtime="20190116 18:34:52.634"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:52.082" endtime="20190116 18:34:52.636"></status>
</kw>
<kw name="digit_out_crm_high">
<doc>Set the digital output crm high and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm high and test it</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.644" endtime="20190116 18:34:52.650"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:52.668" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 01</msg>
<status status="PASS" starttime="20190116 18:34:52.662" endtime="20190116 18:34:52.669"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.672" endtime="20190116 18:34:52.678"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:52.882" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 46 3D F6</msg>
<status status="PASS" starttime="20190116 18:34:52.682" endtime="20190116 18:34:52.883"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.886" endtime="20190116 18:34:52.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.895" endtime="20190116 18:34:52.904"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:52.652" endtime="20190116 18:34:52.906"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:52.926" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status status="PASS" starttime="20190116 18:34:52.918" endtime="20190116 18:34:52.926"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:52.929" endtime="20190116 18:34:52.935"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:53.138" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 01 01 47 3D FB</msg>
<status status="PASS" starttime="20190116 18:34:52.938" endtime="20190116 18:34:53.139"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.142" endtime="20190116 18:34:53.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.155" endtime="20190116 18:34:53.163"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:53.171" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '01', '01', '47', '3D', 'FB']</msg>
<status status="PASS" starttime="20190116 18:34:53.166" endtime="20190116 18:34:53.172"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:53.180" level="INFO">${value} = 01</msg>
<status status="PASS" starttime="20190116 18:34:53.175" endtime="20190116 18:34:53.181"></status>
</kw>
<msg timestamp="20190116 18:34:53.185" level="INFO">${res} = 01</msg>
<status status="PASS" starttime="20190116 18:34:52.908" endtime="20190116 18:34:53.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.189" endtime="20190116 18:34:53.194"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:52.638" endtime="20190116 18:34:53.196"></status>
</kw>
<kw name="digit_out_crm_low">
<doc>Set the digital output crm low and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm low and test it</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.205" endtime="20190116 18:34:53.209"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:53.229" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 00</msg>
<status status="PASS" starttime="20190116 18:34:53.223" endtime="20190116 18:34:53.230"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.233" endtime="20190116 18:34:53.238"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:53.444" level="INFO">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 40 3D F0</msg>
<status status="PASS" starttime="20190116 18:34:53.241" endtime="20190116 18:34:53.445"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.448" endtime="20190116 18:34:53.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.459" endtime="20190116 18:34:53.471"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:53.211" endtime="20190116 18:34:53.474"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:34:53.495" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status status="PASS" starttime="20190116 18:34:53.489" endtime="20190116 18:34:53.496"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.499" endtime="20190116 18:34:53.507"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:34:53.718" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 00 01 41 3D FC</msg>
<status status="PASS" starttime="20190116 18:34:53.510" endtime="20190116 18:34:53.718"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.722" endtime="20190116 18:34:53.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.730" endtime="20190116 18:34:53.738"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:34:53.746" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '00', '01', '41', '3D', 'FC']</msg>
<status status="PASS" starttime="20190116 18:34:53.741" endtime="20190116 18:34:53.747"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:34:53.755" level="INFO">${value} = 00</msg>
<status status="PASS" starttime="20190116 18:34:53.750" endtime="20190116 18:34:53.756"></status>
</kw>
<msg timestamp="20190116 18:34:53.760" level="INFO">${res} = 00</msg>
<status status="PASS" starttime="20190116 18:34:53.476" endtime="20190116 18:34:53.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.764" endtime="20190116 18:34:53.769"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:53.198" endtime="20190116 18:34:53.771"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.781" endtime="20190116 18:34:53.829"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.831" endtime="20190116 18:34:53.878"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:53.881" endtime="20190116 18:34:53.928"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:34:55.936" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:34:53.931" endtime="20190116 18:34:55.938"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:55.941" endtime="20190116 18:34:55.987"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:34:55.990" endtime="20190116 18:34:56.039"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:53.775" endtime="20190116 18:34:56.042"></status>
</kw>
<doc>Implements Test Task SKTB-48413 toggle Digital Output Leds</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status status="PASS" starttime="20190116 18:34:41.779" critical="yes" endtime="20190116 18:34:56.043"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:34:57.548" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:34:57.613" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:34:56.093" endtime="20190116 18:34:57.615"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:56.059" endtime="20190116 18:34:57.616"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:56.053" endtime="20190116 18:34:57.618"></status>
</kw>
<doc>Chorus GPIO LED1, LED2, CRM test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:34:38.830" endtime="20190116 18:34:57.619"></status>
</suite>
<suite name="SKTB-49038" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49038.robot" id="s1-s13">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:34:58.321" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:34:58.316" endtime="20190116 18:34:58.335"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:34:58.343" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:34:58.369" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:35:00.531" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:34:58.338" endtime="20190116 18:35:00.533"></status>
</kw>
<status status="PASS" starttime="20190116 18:34:58.287" endtime="20190116 18:35:00.535"></status>
</kw>
<test name="SKTB-GPIO FBUS test" id="s1-s13-t1">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:00.583" endtime="20190116 18:35:00.678"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:00.681" endtime="20190116 18:35:00.763"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:00.766" endtime="20190116 18:35:00.885"></status>
</kw>
<kw name="Bidir Wake Up" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:00.888" endtime="20190116 18:35:01.506"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:35:03.522" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:35:01.509" endtime="20190116 18:35:03.525"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:03.527" endtime="20190116 18:35:03.575"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:03.579" endtime="20190116 18:35:03.626"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:03.630" endtime="20190116 18:35:03.675"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:03.679" endtime="20190116 18:35:03.726"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:03.729" endtime="20190116 18:35:03.776"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:03.779" endtime="20190116 18:35:03.826"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:35:05.834" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:35:03.830" endtime="20190116 18:35:05.837"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:00.577" endtime="20190116 18:35:05.839"></status>
</kw>
<kw name="digit_input_1">
<doc>Get digital input 1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 1</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:05.848" endtime="20190116 18:35:05.853"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_1_BUTTON_1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:05.870" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0A</msg>
<status status="PASS" starttime="20190116 18:35:05.865" endtime="20190116 18:35:05.871"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:05.874" endtime="20190116 18:35:05.879"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:35:06.085" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0A 00 01 01 42 3D F2</msg>
<status status="PASS" starttime="20190116 18:35:05.882" endtime="20190116 18:35:06.086"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.089" endtime="20190116 18:35:06.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.098" endtime="20190116 18:35:06.106"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:06.114" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0A', '00', '01', '01', '42', '3D', 'F2']</msg>
<status status="PASS" starttime="20190116 18:35:06.109" endtime="20190116 18:35:06.115"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:06.123" level="INFO">${value} = 01</msg>
<status status="PASS" starttime="20190116 18:35:06.118" endtime="20190116 18:35:06.124"></status>
</kw>
<msg timestamp="20190116 18:35:06.128" level="INFO">${res} = 01</msg>
<status status="PASS" starttime="20190116 18:35:05.855" endtime="20190116 18:35:06.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.132" endtime="20190116 18:35:06.137"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:05.842" endtime="20190116 18:35:06.139"></status>
</kw>
<kw name="digit_input_2">
<doc>Get digital input 2</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 2</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.147" endtime="20190116 18:35:06.153"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_2_BUTTON_2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:06.171" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0B</msg>
<status status="PASS" starttime="20190116 18:35:06.165" endtime="20190116 18:35:06.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.174" endtime="20190116 18:35:06.180"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:35:06.394" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0B 00 01 01 43 3D F2</msg>
<status status="PASS" starttime="20190116 18:35:06.183" endtime="20190116 18:35:06.394"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.398" endtime="20190116 18:35:06.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.406" endtime="20190116 18:35:06.414"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:06.422" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0B', '00', '01', '01', '43', '3D', 'F2']</msg>
<status status="PASS" starttime="20190116 18:35:06.418" endtime="20190116 18:35:06.423"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:06.432" level="INFO">${value} = 01</msg>
<status status="PASS" starttime="20190116 18:35:06.426" endtime="20190116 18:35:06.433"></status>
</kw>
<msg timestamp="20190116 18:35:06.436" level="INFO">${res} = 01</msg>
<status status="PASS" starttime="20190116 18:35:06.155" endtime="20190116 18:35:06.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.440" endtime="20190116 18:35:06.445"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:06.141" endtime="20190116 18:35:06.447"></status>
</kw>
<kw name="digit_input_3">
<doc>Get digital input 3</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 3</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.455" endtime="20190116 18:35:06.460"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_3_AIRB_PWM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:06.477" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0C</msg>
<status status="PASS" starttime="20190116 18:35:06.472" endtime="20190116 18:35:06.478"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.481" endtime="20190116 18:35:06.487"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:35:06.691" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0C 00 01 01 44 3D F2</msg>
<status status="PASS" starttime="20190116 18:35:06.490" endtime="20190116 18:35:06.693"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.696" endtime="20190116 18:35:06.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.704" endtime="20190116 18:35:06.712"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:06.721" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0C', '00', '01', '01', '44', '3D', 'F2']</msg>
<status status="PASS" starttime="20190116 18:35:06.715" endtime="20190116 18:35:06.721"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:06.730" level="INFO">${value} = 01</msg>
<status status="PASS" starttime="20190116 18:35:06.724" endtime="20190116 18:35:06.731"></status>
</kw>
<msg timestamp="20190116 18:35:06.734" level="INFO">${res} = 01</msg>
<status status="PASS" starttime="20190116 18:35:06.462" endtime="20190116 18:35:06.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.738" endtime="20190116 18:35:06.743"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:06.449" endtime="20190116 18:35:06.745"></status>
</kw>
<kw name="digit_input_bid">
<doc>Get digital input BIDR WUL</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input BIDR WUL</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.754" endtime="20190116 18:35:06.759"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${BIDIR_WUL_IN}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:06.777" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0E</msg>
<status status="PASS" starttime="20190116 18:35:06.771" endtime="20190116 18:35:06.779"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.782" endtime="20190116 18:35:06.787"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:35:06.991" level="INFO">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0E 00 00 01 47 3D F2</msg>
<status status="PASS" starttime="20190116 18:35:06.790" endtime="20190116 18:35:06.992"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:06.995" endtime="20190116 18:35:07.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:07.005" endtime="20190116 18:35:07.013"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:07.020" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0E', '00', '00', '01', '47', '3D', 'F2']</msg>
<status status="PASS" starttime="20190116 18:35:07.015" endtime="20190116 18:35:07.021"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:07.029" level="INFO">${value} = 00</msg>
<status status="PASS" starttime="20190116 18:35:07.024" endtime="20190116 18:35:07.030"></status>
</kw>
<msg timestamp="20190116 18:35:07.034" level="INFO">${res} = 00</msg>
<status status="PASS" starttime="20190116 18:35:06.761" endtime="20190116 18:35:07.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:07.037" endtime="20190116 18:35:07.042"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:06.747" endtime="20190116 18:35:07.046"></status>
</kw>
<kw name="digit_input_bid_low">
<doc>Set low digital input BIDR WUL and get this status</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set low digital input BIDR WUL and get this status</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:07.055" endtime="20190116 18:35:07.063"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${BIDIR_WUL_OUT}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:07.082" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 07 00</msg>
<status status="PASS" starttime="20190116 18:35:07.076" endtime="20190116 18:35:07.083"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (SET_REQ): ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:07.085" endtime="20190116 18:35:07.091"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:35:22.274" level="INFO">${info} = </msg>
<status status="PASS" starttime="20190116 18:35:07.094" endtime="20190116 18:35:22.275"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:22.279" endtime="20190116 18:35:22.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<msg timestamp="20190116 18:35:22.314" level="FAIL">'' does not contain '77 29 00 07'</msg>
<status status="FAIL" starttime="20190116 18:35:22.299" endtime="20190116 18:35:22.316"></status>
</kw>
<status status="FAIL" starttime="20190116 18:35:07.066" endtime="20190116 18:35:22.319"></status>
</kw>
<status status="FAIL" starttime="20190116 18:35:07.049" endtime="20190116 18:35:22.342"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:22.361" endtime="20190116 18:35:22.449"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:22.452" endtime="20190116 18:35:22.511"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:22.515" endtime="20190116 18:35:22.562"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:35:24.571" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:35:22.566" endtime="20190116 18:35:24.573"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:24.582" endtime="20190116 18:35:24.662"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:24.666" endtime="20190116 18:35:24.716"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:22.347" endtime="20190116 18:35:24.719"></status>
</kw>
<doc>Implements Test Task SKTB-49038</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status status="FAIL" starttime="20190116 18:35:00.551" critical="yes" endtime="20190116 18:35:24.720">'' does not contain '77 29 00 07'</status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:35:26.228" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:35:26.262" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:35:24.771" endtime="20190116 18:35:26.264"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:24.737" endtime="20190116 18:35:26.265"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:24.731" endtime="20190116 18:35:26.288"></status>
</kw>
<doc>Chorus GPIO input 1,2,3 BID_wul test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190116 18:34:57.802" endtime="20190116 18:35:26.289"></status>
</suite>
<suite name="SKTB-49357" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49357.robot" id="s1-s14">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:35:27.054" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:35:27.050" endtime="20190116 18:35:27.073"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:35:27.094" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:35:27.096" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:35:29.250" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:35:27.076" endtime="20190116 18:35:29.252"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:27.035" endtime="20190116 18:35:29.266"></status>
</kw>
<test name="SKTB-49357 Gpio pwm test" id="s1-s14-t1">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:29.319" endtime="20190116 18:35:29.413"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:29.416" endtime="20190116 18:35:29.503"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:29.506" endtime="20190116 18:35:29.610"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:35:31.624" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:35:29.613" endtime="20190116 18:35:31.626"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:31.629" endtime="20190116 18:35:31.676"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:31.679" endtime="20190116 18:35:31.726"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:31.730" endtime="20190116 18:35:31.775"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:31.778" endtime="20190116 18:35:31.825"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:31.828" endtime="20190116 18:35:31.875"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:31.878" endtime="20190116 18:35:31.925"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:31.929" endtime="20190116 18:35:31.979"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:35:32.987" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:35:31.983" endtime="20190116 18:35:32.989"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:29.296" endtime="20190116 18:35:32.992"></status>
</kw>
<kw name="digit_out_hs_1">
<doc>Set pwm for the digital output hs 1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 1</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.001" endtime="20190116 18:35:33.006"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_1}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.018" endtime="20190116 18:35:33.023"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:33.043" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 20</msg>
<status status="PASS" starttime="20190116 18:35:33.036" endtime="20190116 18:35:33.044"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.047" endtime="20190116 18:35:33.052"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:33.257" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 42 3D F6</msg>
<status status="PASS" starttime="20190116 18:35:33.055" endtime="20190116 18:35:33.258"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.262" endtime="20190116 18:35:33.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.270" endtime="20190116 18:35:33.276"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:33.285" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '42', '3D', 'F6']</msg>
<status status="PASS" starttime="20190116 18:35:33.280" endtime="20190116 18:35:33.286"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190116 18:35:33.294" level="INFO">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190116 18:35:33.289" endtime="20190116 18:35:33.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.298" endtime="20190116 18:35:33.305"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190116 18:35:33.313" level="INFO">${ret_val} = 00</msg>
<status status="PASS" starttime="20190116 18:35:33.307" endtime="20190116 18:35:33.314"></status>
</kw>
<msg timestamp="20190116 18:35:33.318" level="INFO">${resp} = 00</msg>
<status status="PASS" starttime="20190116 18:35:33.025" endtime="20190116 18:35:33.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.322" endtime="20190116 18:35:33.327"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.330" endtime="20190116 18:35:33.334"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:33.357" level="INFO">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0064 64</msg>
<status status="PASS" starttime="20190116 18:35:33.349" endtime="20190116 18:35:33.358"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.360" endtime="20190116 18:35:33.366"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:33.579" level="INFO">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 43 3C F7</msg>
<status status="PASS" starttime="20190116 18:35:33.369" endtime="20190116 18:35:33.581"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.587" endtime="20190116 18:35:33.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.595" endtime="20190116 18:35:33.601"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:33.609" level="INFO">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '43', '3C', 'F7']</msg>
<status status="PASS" starttime="20190116 18:35:33.604" endtime="20190116 18:35:33.610"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg timestamp="20190116 18:35:33.618" level="INFO">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190116 18:35:33.613" endtime="20190116 18:35:33.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.622" endtime="20190116 18:35:33.627"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg timestamp="20190116 18:35:33.636" level="INFO">${ret_val} = 01</msg>
<status status="PASS" starttime="20190116 18:35:33.630" endtime="20190116 18:35:33.637"></status>
</kw>
<msg timestamp="20190116 18:35:33.643" level="INFO">${resp} = 01</msg>
<status status="PASS" starttime="20190116 18:35:33.337" endtime="20190116 18:35:33.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<msg timestamp="20190116 18:35:33.654" level="FAIL">'01' does not contain '00'</msg>
<status status="FAIL" starttime="20190116 18:35:33.647" endtime="20190116 18:35:33.655"></status>
</kw>
<status status="FAIL" starttime="20190116 18:35:33.008" endtime="20190116 18:35:33.658"></status>
</kw>
<status status="FAIL" starttime="20190116 18:35:32.994" endtime="20190116 18:35:33.660"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.671" endtime="20190116 18:35:33.723"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.726" endtime="20190116 18:35:33.773"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.776" endtime="20190116 18:35:33.822"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:33.826" endtime="20190116 18:35:33.871"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:33.664" endtime="20190116 18:35:33.874"></status>
</kw>
<doc>Implements Test Task SKTB-49357 set pwm on Digital Outputs</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status status="FAIL" starttime="20190116 18:35:29.268" critical="yes" endtime="20190116 18:35:33.875">'01' does not contain '00'</status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:35:35.382" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:35:35.454" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:35:33.927" endtime="20190116 18:35:35.456"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:33.891" endtime="20190116 18:35:35.481"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:33.885" endtime="20190116 18:35:35.488"></status>
</kw>
<doc>Chorus GPIO outputs set pwm</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190116 18:35:26.483" endtime="20190116 18:35:35.514"></status>
</suite>
<suite name="SKTB-41553" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41553.robot" id="s1-s15">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:35:36.191" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:35:36.179" endtime="20190116 18:35:36.209"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:35:36.228" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:35:36.230" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:35:38.402" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:35:36.212" endtime="20190116 18:35:38.404"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:36.173" endtime="20190116 18:35:38.419"></status>
</kw>
<test name="SKTB-41553" id="s1-s15-t1">
<kw name="Test_precondition" type="setup">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:38.495" endtime="20190116 18:35:38.511"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:38.513" endtime="20190116 18:35:38.602"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:38.605" endtime="20190116 18:35:38.705"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:38.708" endtime="20190116 18:35:38.813"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:38.817" endtime="20190116 18:35:38.898"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:38.905" endtime="20190116 18:35:38.991"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:38.996" endtime="20190116 18:35:39.078"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:35:41.086" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:35:39.081" endtime="20190116 18:35:41.088"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:41.091" endtime="20190116 18:35:41.175"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:41.178" endtime="20190116 18:35:41.260"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:38.478" endtime="20190116 18:35:41.262"></status>
</kw>
<kw name="TEST_OTP_CARIF_PSN">
<doc>Test PSN value, write default value and read it, then write new value and read it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test PSN value, write and read default value</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:41.282" endtime="20190116 18:35:41.308"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read default otp value</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:41.311" endtime="20190116 18:35:41.327"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_PSN}</arg>
<arg>${PSN_LEN}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:41.367" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FE 00 10</msg>
<status status="PASS" starttime="20190116 18:35:41.360" endtime="20190116 18:35:41.368"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:41.379" endtime="20190116 18:35:41.399"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:41.659" level="INFO">${resp} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 30 31 32 33 34 35 01 41 00 6D 16</msg>
<status status="PASS" starttime="20190116 18:35:41.402" endtime="20190116 18:35:41.661"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:41.663" endtime="20190116 18:35:41.696"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:41.728" level="INFO">${temp1} = 1E105494001B000BEE04FFFE0010004C616972642050534E203031323334350141006D16</msg>
<status status="PASS" starttime="20190116 18:35:41.722" endtime="20190116 18:35:41.729"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:41.743" level="INFO">${temp2} = EE04FFFE001000</msg>
<status status="PASS" starttime="20190116 18:35:41.737" endtime="20190116 18:35:41.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:41.767" endtime="20190116 18:35:41.782"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:41.698" endtime="20190116 18:35:41.785"></status>
</kw>
<msg timestamp="20190116 18:35:41.792" level="INFO">${res} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 30 31 32 33 34 35 01 41 00 6D 16</msg>
<status status="PASS" starttime="20190116 18:35:41.329" endtime="20190116 18:35:41.793"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:41.275" endtime="20190116 18:35:41.801"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_PART_NO">
<doc>READ_OTP_CARIF_HW_PART_NO</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read otp_carif_hw_part_no</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:41.832" endtime="20190116 18:35:41.842"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_PART_NO}</arg>
<arg>${HW_PART_NO_LEN}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:41.878" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FD 00 0A</msg>
<status status="PASS" starttime="20190116 18:35:41.871" endtime="20190116 18:35:41.878"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:41.881" endtime="20190116 18:35:41.887"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:42.094" level="INFO">${resp} = 1E 10 54 94 00 15 00 0B EE 04 FF FD 00 0A 00 4C 61 69 72 64 20 30 31 32 33 01 43 00 29 2B</msg>
<status status="PASS" starttime="20190116 18:35:41.890" endtime="20190116 18:35:42.095"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.098" endtime="20190116 18:35:42.103"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:42.124" level="INFO">${temp1} = 1E1054940015000BEE04FFFD000A004C616972642030313233014300292B</msg>
<status status="PASS" starttime="20190116 18:35:42.116" endtime="20190116 18:35:42.125"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:42.133" level="INFO">${temp2} = EE04FFFD000A00</msg>
<status status="PASS" starttime="20190116 18:35:42.127" endtime="20190116 18:35:42.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.137" endtime="20190116 18:35:42.143"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:42.105" endtime="20190116 18:35:42.145"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:41.855" endtime="20190116 18:35:42.148"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:41.803" endtime="20190116 18:35:42.151"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_VERSION_INFO">
<doc>READ_OTP_CARIF_HW_VERSION_INFO</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_VERSION_INFO</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.159" endtime="20190116 18:35:42.164"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_VERSION_INFO}</arg>
<arg>${HW_VERSION_INFO_LEN}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:42.181" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FC 00 04</msg>
<status status="PASS" starttime="20190116 18:35:42.175" endtime="20190116 18:35:42.182"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.185" endtime="20190116 18:35:42.190"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:42.416" level="INFO">${resp} = 1E 10 54 94 00 0F 00 0B EE 04 FF FC 00 04 00 03 01 06 00 01 44 00 1E 78</msg>
<status status="PASS" starttime="20190116 18:35:42.193" endtime="20190116 18:35:42.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.420" endtime="20190116 18:35:42.426"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:42.444" level="INFO">${temp1} = 1E105494000F000BEE04FFFC000400030106000144001E78</msg>
<status status="PASS" starttime="20190116 18:35:42.438" endtime="20190116 18:35:42.445"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:42.454" level="INFO">${temp2} = EE04FFFC000400</msg>
<status status="PASS" starttime="20190116 18:35:42.448" endtime="20190116 18:35:42.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.457" endtime="20190116 18:35:42.463"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:42.428" endtime="20190116 18:35:42.465"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:42.166" endtime="20190116 18:35:42.468"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:42.153" endtime="20190116 18:35:42.471"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_SUPPLIER_INFO">
<doc>READ_OTP_CARIF_HW_SUPPLIER_INFO</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_SUPPLIER_INFO</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.479" endtime="20190116 18:35:42.484"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_SUPPLIER_INFO}</arg>
<arg>${HW_SUPPLIER_INFO_LEN}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:42.502" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FB 00 02</msg>
<status status="PASS" starttime="20190116 18:35:42.495" endtime="20190116 18:35:42.503"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.505" endtime="20190116 18:35:42.511"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:42.714" level="INFO">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF FB 00 02 00 30 31 01 45 00 2F 4E</msg>
<status status="PASS" starttime="20190116 18:35:42.515" endtime="20190116 18:35:42.715"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.718" endtime="20190116 18:35:42.724"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:42.746" level="INFO">${temp1} = 1E105494000D000BEE04FFFB00020030310145002F4E</msg>
<status status="PASS" starttime="20190116 18:35:42.740" endtime="20190116 18:35:42.747"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:42.756" level="INFO">${temp2} = EE04FFFB000200</msg>
<status status="PASS" starttime="20190116 18:35:42.750" endtime="20190116 18:35:42.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.759" endtime="20190116 18:35:42.765"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:42.726" endtime="20190116 18:35:42.767"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:42.486" endtime="20190116 18:35:42.770"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:42.473" endtime="20190116 18:35:42.773"></status>
</kw>
<kw name="TEST_EEPROM_SW_SPARE_PART_NUMBER">
<doc>Write and read the EEPROM_SW_SPARE_PART_NUMBER</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_SW_SPARE_PART_NUMBER</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.781" endtime="20190116 18:35:42.786"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write eeprom sw spare part number with default value</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.789" endtime="20190116 18:35:42.794"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:42.813" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 4e</msg>
<status status="PASS" starttime="20190116 18:35:42.806" endtime="20190116 18:35:42.814"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:42.829" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', '4e']</msg>
<status status="PASS" starttime="20190116 18:35:42.824" endtime="20190116 18:35:42.830"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:35:42.836" level="INFO">Length is 26</msg>
<msg timestamp="20190116 18:35:42.838" level="INFO">${length} = 26</msg>
<status status="PASS" starttime="20190116 18:35:42.833" endtime="20190116 18:35:42.839"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.842" endtime="20190116 18:35:42.847"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:42.856" level="INFO">${value} = 20</msg>
<status status="PASS" starttime="20190116 18:35:42.850" endtime="20190116 18:35:42.857"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:42.865" level="INFO">${res} = 14</msg>
<status status="PASS" starttime="20190116 18:35:42.859" endtime="20190116 18:35:42.866"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.869" endtime="20190116 18:35:42.874"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:42.883" level="INFO">${res} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status status="PASS" starttime="20190116 18:35:42.877" endtime="20190116 18:35:42.884"></status>
</kw>
<msg timestamp="20190116 18:35:42.888" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status status="PASS" starttime="20190116 18:35:42.816" endtime="20190116 18:35:42.889"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:42.891" endtime="20190116 18:35:42.897"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:43.320" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 46 5A 3F</msg>
<status status="PASS" starttime="20190116 18:35:42.900" endtime="20190116 18:35:43.321"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:43.324" endtime="20190116 18:35:43.330"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:43.349" level="INFO">${temp1} = 1E105494000A000BEE06FFFA000001465A3F</msg>
<status status="PASS" starttime="20190116 18:35:43.342" endtime="20190116 18:35:43.350"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:43.358" level="INFO">${temp2} = EE06FFFA00</msg>
<status status="PASS" starttime="20190116 18:35:43.352" endtime="20190116 18:35:43.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:43.362" endtime="20190116 18:35:43.367"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:43.332" endtime="20190116 18:35:43.369"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:42.796" endtime="20190116 18:35:43.372"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write eeprom sw spare part number with Different value</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:43.374" endtime="20190116 18:35:43.379"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:43.398" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 AA</msg>
<status status="PASS" starttime="20190116 18:35:43.391" endtime="20190116 18:35:43.399"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:43.419" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', 'AA']</msg>
<status status="PASS" starttime="20190116 18:35:43.409" endtime="20190116 18:35:43.422"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:35:43.432" level="INFO">Length is 26</msg>
<msg timestamp="20190116 18:35:43.434" level="INFO">${length} = 26</msg>
<status status="PASS" starttime="20190116 18:35:43.428" endtime="20190116 18:35:43.435"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:43.438" endtime="20190116 18:35:43.446"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:43.458" level="INFO">${value} = 20</msg>
<status status="PASS" starttime="20190116 18:35:43.449" endtime="20190116 18:35:43.460"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:43.468" level="INFO">${res} = 14</msg>
<status status="PASS" starttime="20190116 18:35:43.462" endtime="20190116 18:35:43.469"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:43.472" endtime="20190116 18:35:43.477"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:43.486" level="INFO">${res} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status status="PASS" starttime="20190116 18:35:43.480" endtime="20190116 18:35:43.487"></status>
</kw>
<msg timestamp="20190116 18:35:43.491" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status status="PASS" starttime="20190116 18:35:43.401" endtime="20190116 18:35:43.492"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:43.494" endtime="20190116 18:35:43.500"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:43.919" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 47 5A 3E</msg>
<status status="PASS" starttime="20190116 18:35:43.503" endtime="20190116 18:35:43.921"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:43.924" endtime="20190116 18:35:43.929"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:43.948" level="INFO">${temp1} = 1E105494000A000BEE06FFFA000001475A3E</msg>
<status status="PASS" starttime="20190116 18:35:43.942" endtime="20190116 18:35:43.949"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:43.957" level="INFO">${temp2} = EE06FFFA00</msg>
<status status="PASS" starttime="20190116 18:35:43.951" endtime="20190116 18:35:43.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:43.961" endtime="20190116 18:35:43.966"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:43.932" endtime="20190116 18:35:43.969"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:43.381" endtime="20190116 18:35:43.971"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:43.979" endtime="20190116 18:35:44.027"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:44.032" endtime="20190116 18:35:44.079"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:35:46.087" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:35:44.082" endtime="20190116 18:35:46.089"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.092" endtime="20190116 18:35:46.138"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.141" endtime="20190116 18:35:46.188"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:43.973" endtime="20190116 18:35:46.190"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:46.208" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FA 00 0C</msg>
<status status="PASS" starttime="20190116 18:35:46.202" endtime="20190116 18:35:46.209"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.212" endtime="20190116 18:35:46.217"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:46.639" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 42 00 84 3E</msg>
<status status="PASS" starttime="20190116 18:35:46.220" endtime="20190116 18:35:46.641"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.644" endtime="20190116 18:35:46.649"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:46.668" level="INFO">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014200843E</msg>
<status status="PASS" starttime="20190116 18:35:46.662" endtime="20190116 18:35:46.669"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:46.677" level="INFO">${temp2} = EE04FFFA000C00</msg>
<status status="PASS" starttime="20190116 18:35:46.672" endtime="20190116 18:35:46.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.681" endtime="20190116 18:35:46.686"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:46.651" endtime="20190116 18:35:46.689"></status>
</kw>
<msg timestamp="20190116 18:35:46.693" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 42 00 84 3E</msg>
<status status="PASS" starttime="20190116 18:35:46.193" endtime="20190116 18:35:46.694"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN} ${EEPROM_APP_OK} ${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:46.715" level="INFO">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014200843E</msg>
<status status="PASS" starttime="20190116 18:35:46.709" endtime="20190116 18:35:46.716"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:46.725" level="INFO">${temp2} = 000C005370617265205061727420AA</msg>
<status status="PASS" starttime="20190116 18:35:46.719" endtime="20190116 18:35:46.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.728" endtime="20190116 18:35:46.734"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:46.696" endtime="20190116 18:35:46.736"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:42.775" endtime="20190116 18:35:46.739"></status>
</kw>
<kw name="TEST_PRODUCT_NAME">
<doc>Write and read the EEPROM_PRODUCT_NAME</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_PRODUCT_NAME</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.747" endtime="20190116 18:35:46.751"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write default value</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.754" endtime="20190116 18:35:46.760"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:46.780" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 69</msg>
<status status="PASS" starttime="20190116 18:35:46.773" endtime="20190116 18:35:46.781"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:46.796" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', '69']</msg>
<status status="PASS" starttime="20190116 18:35:46.791" endtime="20190116 18:35:46.797"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:35:46.805" level="INFO">Length is 26</msg>
<msg timestamp="20190116 18:35:46.806" level="INFO">${length} = 26</msg>
<status status="PASS" starttime="20190116 18:35:46.801" endtime="20190116 18:35:46.807"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.810" endtime="20190116 18:35:46.815"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:46.824" level="INFO">${value} = 20</msg>
<status status="PASS" starttime="20190116 18:35:46.818" endtime="20190116 18:35:46.825"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:46.833" level="INFO">${res} = 14</msg>
<status status="PASS" starttime="20190116 18:35:46.827" endtime="20190116 18:35:46.834"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.837" endtime="20190116 18:35:46.842"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:46.851" level="INFO">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status status="PASS" starttime="20190116 18:35:46.845" endtime="20190116 18:35:46.852"></status>
</kw>
<msg timestamp="20190116 18:35:46.856" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status status="PASS" starttime="20190116 18:35:46.783" endtime="20190116 18:35:46.857"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:46.860" endtime="20190116 18:35:46.866"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:48.009" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 43 5A 39</msg>
<status status="PASS" starttime="20190116 18:35:46.869" endtime="20190116 18:35:48.010"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:48.013" endtime="20190116 18:35:48.019"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:48.037" level="INFO">${temp1} = 1E105494000A000BEE06FFF9000001435A39</msg>
<status status="PASS" starttime="20190116 18:35:48.031" endtime="20190116 18:35:48.038"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:48.047" level="INFO">${temp2} = EE06FFF900</msg>
<status status="PASS" starttime="20190116 18:35:48.041" endtime="20190116 18:35:48.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:48.051" endtime="20190116 18:35:48.056"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:48.021" endtime="20190116 18:35:48.059"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:46.763" endtime="20190116 18:35:48.061"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:48.080" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 BB</msg>
<status status="PASS" starttime="20190116 18:35:48.073" endtime="20190116 18:35:48.081"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:48.095" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', 'BB']</msg>
<status status="PASS" starttime="20190116 18:35:48.090" endtime="20190116 18:35:48.096"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:35:48.103" level="INFO">Length is 26</msg>
<msg timestamp="20190116 18:35:48.121" level="INFO">${length} = 26</msg>
<status status="PASS" starttime="20190116 18:35:48.099" endtime="20190116 18:35:48.122"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:48.124" endtime="20190116 18:35:48.130"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:48.139" level="INFO">${value} = 20</msg>
<status status="PASS" starttime="20190116 18:35:48.133" endtime="20190116 18:35:48.139"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:48.148" level="INFO">${res} = 14</msg>
<status status="PASS" starttime="20190116 18:35:48.143" endtime="20190116 18:35:48.149"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:48.152" endtime="20190116 18:35:48.157"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:48.167" level="INFO">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status status="PASS" starttime="20190116 18:35:48.161" endtime="20190116 18:35:48.168"></status>
</kw>
<msg timestamp="20190116 18:35:48.172" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status status="PASS" starttime="20190116 18:35:48.083" endtime="20190116 18:35:48.173"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:48.175" endtime="20190116 18:35:48.181"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:48.599" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 44 5A 3E</msg>
<status status="PASS" starttime="20190116 18:35:48.184" endtime="20190116 18:35:48.600"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:48.603" endtime="20190116 18:35:48.609"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:48.627" level="INFO">${temp1} = 1E105494000A000BEE06FFF9000001445A3E</msg>
<status status="PASS" starttime="20190116 18:35:48.621" endtime="20190116 18:35:48.628"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:48.637" level="INFO">${temp2} = EE06FFF900</msg>
<status status="PASS" starttime="20190116 18:35:48.631" endtime="20190116 18:35:48.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:48.640" endtime="20190116 18:35:48.646"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:48.611" endtime="20190116 18:35:48.648"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:48.063" endtime="20190116 18:35:48.650"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:48.659" endtime="20190116 18:35:48.706"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:48.709" endtime="20190116 18:35:48.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:35:50.764" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:35:48.760" endtime="20190116 18:35:50.767"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:50.769" endtime="20190116 18:35:50.815"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:50.818" endtime="20190116 18:35:50.867"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:48.652" endtime="20190116 18:35:50.874"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:50.893" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F9 00 0C</msg>
<status status="PASS" starttime="20190116 18:35:50.886" endtime="20190116 18:35:50.893"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:50.897" endtime="20190116 18:35:50.903"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:51.324" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 42 00 AC 4E</msg>
<status status="PASS" starttime="20190116 18:35:50.906" endtime="20190116 18:35:51.325"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:51.328" endtime="20190116 18:35:51.334"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:51.356" level="INFO">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014200AC4E</msg>
<status status="PASS" starttime="20190116 18:35:51.349" endtime="20190116 18:35:51.357"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:51.365" level="INFO">${temp2} = EE04FFF9000C00</msg>
<status status="PASS" starttime="20190116 18:35:51.359" endtime="20190116 18:35:51.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:51.369" endtime="20190116 18:35:51.375"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:51.336" endtime="20190116 18:35:51.377"></status>
</kw>
<msg timestamp="20190116 18:35:51.381" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 42 00 AC 4E</msg>
<status status="PASS" starttime="20190116 18:35:50.877" endtime="20190116 18:35:51.381"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN} ${EEPROM_APP_OK} ${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:51.401" level="INFO">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014200AC4E</msg>
<status status="PASS" starttime="20190116 18:35:51.393" endtime="20190116 18:35:51.401"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:51.414" level="INFO">${temp2} = 000C004f4c5520436f6e6e656374BB</msg>
<status status="PASS" starttime="20190116 18:35:51.404" endtime="20190116 18:35:51.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:51.417" endtime="20190116 18:35:51.423"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:51.383" endtime="20190116 18:35:51.425"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:46.741" endtime="20190116 18:35:51.427"></status>
</kw>
<kw name="TEST_LAST_POWER_STATE">
<doc>Write and read the EEPROM_LAST_POWER_STATE</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_LAST_POWER_STATE</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:51.436" endtime="20190116 18:35:51.441"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:51.460" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 FF</msg>
<status status="PASS" starttime="20190116 18:35:51.453" endtime="20190116 18:35:51.461"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:51.476" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'FF']</msg>
<status status="PASS" starttime="20190116 18:35:51.471" endtime="20190116 18:35:51.477"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:35:51.484" level="INFO">Length is 15</msg>
<msg timestamp="20190116 18:35:51.486" level="INFO">${length} = 15</msg>
<status status="PASS" starttime="20190116 18:35:51.480" endtime="20190116 18:35:51.486"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:51.489" endtime="20190116 18:35:51.494"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:51.503" level="INFO">${value} = 9</msg>
<status status="PASS" starttime="20190116 18:35:51.497" endtime="20190116 18:35:51.504"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:51.513" level="INFO">${res} = 09</msg>
<status status="PASS" starttime="20190116 18:35:51.507" endtime="20190116 18:35:51.514"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:51.516" endtime="20190116 18:35:51.522"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:51.531" level="INFO">${res} = 1E54109400090000EE05FFF80001FF</msg>
<status status="PASS" starttime="20190116 18:35:51.524" endtime="20190116 18:35:51.531"></status>
</kw>
<msg timestamp="20190116 18:35:51.535" level="INFO">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001FF</msg>
<status status="PASS" starttime="20190116 18:35:51.463" endtime="20190116 18:35:51.536"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:51.539" endtime="20190116 18:35:51.545"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:52.685" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 43 5A 38</msg>
<status status="PASS" starttime="20190116 18:35:51.547" endtime="20190116 18:35:52.686"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:52.704" endtime="20190116 18:35:52.710"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:52.728" level="INFO">${temp1} = 1E105494000A000BEE06FFF8000001435A38</msg>
<status status="PASS" starttime="20190116 18:35:52.722" endtime="20190116 18:35:52.729"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:52.738" level="INFO">${temp2} = EE06FFF800</msg>
<status status="PASS" starttime="20190116 18:35:52.732" endtime="20190116 18:35:52.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:52.741" endtime="20190116 18:35:52.747"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:52.712" endtime="20190116 18:35:52.749"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:51.443" endtime="20190116 18:35:52.751"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:52.771" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 AA</msg>
<status status="PASS" starttime="20190116 18:35:52.763" endtime="20190116 18:35:52.772"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:52.787" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'AA']</msg>
<status status="PASS" starttime="20190116 18:35:52.782" endtime="20190116 18:35:52.788"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:35:52.795" level="INFO">Length is 15</msg>
<msg timestamp="20190116 18:35:52.797" level="INFO">${length} = 15</msg>
<status status="PASS" starttime="20190116 18:35:52.791" endtime="20190116 18:35:52.798"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:52.801" endtime="20190116 18:35:52.807"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:52.819" level="INFO">${value} = 9</msg>
<status status="PASS" starttime="20190116 18:35:52.810" endtime="20190116 18:35:52.820"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:52.828" level="INFO">${res} = 09</msg>
<status status="PASS" starttime="20190116 18:35:52.822" endtime="20190116 18:35:52.829"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:52.832" endtime="20190116 18:35:52.837"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:52.846" level="INFO">${res} = 1E54109400090000EE05FFF80001AA</msg>
<status status="PASS" starttime="20190116 18:35:52.840" endtime="20190116 18:35:52.847"></status>
</kw>
<msg timestamp="20190116 18:35:52.850" level="INFO">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001AA</msg>
<status status="PASS" starttime="20190116 18:35:52.774" endtime="20190116 18:35:52.851"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:52.854" endtime="20190116 18:35:52.860"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:53.170" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 44 5A 3F</msg>
<status status="PASS" starttime="20190116 18:35:52.863" endtime="20190116 18:35:53.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:53.175" endtime="20190116 18:35:53.180"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:53.198" level="INFO">${temp1} = 1E105494000A000BEE06FFF8000001445A3F</msg>
<status status="PASS" starttime="20190116 18:35:53.192" endtime="20190116 18:35:53.199"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:53.208" level="INFO">${temp2} = EE06FFF800</msg>
<status status="PASS" starttime="20190116 18:35:53.202" endtime="20190116 18:35:53.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:53.212" endtime="20190116 18:35:53.217"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:53.182" endtime="20190116 18:35:53.220"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:52.753" endtime="20190116 18:35:53.222"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:53.232" endtime="20190116 18:35:53.279"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:53.282" endtime="20190116 18:35:53.329"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:35:55.357" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:35:53.333" endtime="20190116 18:35:55.359"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:55.367" endtime="20190116 18:35:55.531"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:55.538" endtime="20190116 18:35:55.684"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:53.225" endtime="20190116 18:35:55.687"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:55.728" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F8 00 01</msg>
<status status="PASS" starttime="20190116 18:35:55.721" endtime="20190116 18:35:55.729"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:55.732" endtime="20190116 18:35:55.750"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:57.163" level="INFO">${resp} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 42 5A 96</msg>
<status status="PASS" starttime="20190116 18:35:55.764" endtime="20190116 18:35:57.165"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.168" endtime="20190116 18:35:57.174"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:57.192" level="INFO">${temp1} = 1E105494000C000BEE04FFF8000100AA01425A96</msg>
<status status="PASS" starttime="20190116 18:35:57.187" endtime="20190116 18:35:57.193"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:57.202" level="INFO">${temp2} = EE04FFF8000100</msg>
<status status="PASS" starttime="20190116 18:35:57.196" endtime="20190116 18:35:57.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.206" endtime="20190116 18:35:57.212"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:57.176" endtime="20190116 18:35:57.214"></status>
</kw>
<msg timestamp="20190116 18:35:57.218" level="INFO">${RESP} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 42 5A 96</msg>
<status status="PASS" starttime="20190116 18:35:55.689" endtime="20190116 18:35:57.219"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN} ${EEPROM_APP_OK} ${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:57.237" level="INFO">${temp1} = 1E105494000C000BEE04FFF8000100AA01425A96</msg>
<status status="PASS" starttime="20190116 18:35:57.231" endtime="20190116 18:35:57.238"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:57.246" level="INFO">${temp2} = 000100AA</msg>
<status status="PASS" starttime="20190116 18:35:57.240" endtime="20190116 18:35:57.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.250" endtime="20190116 18:35:57.255"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:57.221" endtime="20190116 18:35:57.257"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:51.429" endtime="20190116 18:35:57.259"></status>
</kw>
<kw name="TEST_WAKE_BARRIERS">
<doc>Write and read the EEPROM_WAKE_BARRIERS</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_WAKE_BARRIERS</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.268" endtime="20190116 18:35:57.276"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:57.296" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 FF FF</msg>
<status status="PASS" starttime="20190116 18:35:57.289" endtime="20190116 18:35:57.297"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:57.312" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'FF', 'FF']</msg>
<status status="PASS" starttime="20190116 18:35:57.307" endtime="20190116 18:35:57.313"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:35:57.320" level="INFO">Length is 16</msg>
<msg timestamp="20190116 18:35:57.322" level="INFO">${length} = 16</msg>
<status status="PASS" starttime="20190116 18:35:57.316" endtime="20190116 18:35:57.323"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.325" endtime="20190116 18:35:57.331"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:57.339" level="INFO">${value} = 10</msg>
<status status="PASS" starttime="20190116 18:35:57.333" endtime="20190116 18:35:57.340"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:57.348" level="INFO">${res} = 0A</msg>
<status status="PASS" starttime="20190116 18:35:57.343" endtime="20190116 18:35:57.349"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.352" endtime="20190116 18:35:57.357"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:57.367" level="INFO">${res} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status status="PASS" starttime="20190116 18:35:57.360" endtime="20190116 18:35:57.368"></status>
</kw>
<msg timestamp="20190116 18:35:57.371" level="INFO">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status status="PASS" starttime="20190116 18:35:57.299" endtime="20190116 18:35:57.372"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.375" endtime="20190116 18:35:57.381"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:57.740" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 43 5A 37</msg>
<status status="PASS" starttime="20190116 18:35:57.384" endtime="20190116 18:35:57.742"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.744" endtime="20190116 18:35:57.750"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:57.768" level="INFO">${temp1} = 1E105494000A000BEE06FFF7000001435A37</msg>
<status status="PASS" starttime="20190116 18:35:57.763" endtime="20190116 18:35:57.769"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:57.778" level="INFO">${temp2} = EE06FFF700</msg>
<status status="PASS" starttime="20190116 18:35:57.772" endtime="20190116 18:35:57.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.781" endtime="20190116 18:35:57.787"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:57.752" endtime="20190116 18:35:57.789"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:57.279" endtime="20190116 18:35:57.791"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:35:57.810" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 AA BB</msg>
<status status="PASS" starttime="20190116 18:35:57.803" endtime="20190116 18:35:57.811"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:35:57.826" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'AA', 'BB']</msg>
<status status="PASS" starttime="20190116 18:35:57.821" endtime="20190116 18:35:57.827"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:35:57.834" level="INFO">Length is 16</msg>
<msg timestamp="20190116 18:35:57.836" level="INFO">${length} = 16</msg>
<status status="PASS" starttime="20190116 18:35:57.830" endtime="20190116 18:35:57.837"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.839" endtime="20190116 18:35:57.844"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:35:57.854" level="INFO">${value} = 10</msg>
<status status="PASS" starttime="20190116 18:35:57.847" endtime="20190116 18:35:57.854"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:57.863" level="INFO">${res} = 0A</msg>
<status status="PASS" starttime="20190116 18:35:57.857" endtime="20190116 18:35:57.864"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.867" endtime="20190116 18:35:57.872"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:35:57.884" level="INFO">${res} = 1E541094000A0000EE05FFF70002AABB</msg>
<status status="PASS" starttime="20190116 18:35:57.874" endtime="20190116 18:35:57.885"></status>
</kw>
<msg timestamp="20190116 18:35:57.889" level="INFO">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002AABB</msg>
<status status="PASS" starttime="20190116 18:35:57.813" endtime="20190116 18:35:57.890"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:57.892" endtime="20190116 18:35:57.898"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:35:58.211" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 44 5A 30</msg>
<status status="PASS" starttime="20190116 18:35:57.901" endtime="20190116 18:35:58.212"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:58.215" endtime="20190116 18:35:58.220"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:35:58.238" level="INFO">${temp1} = 1E105494000A000BEE06FFF7000001445A30</msg>
<status status="PASS" starttime="20190116 18:35:58.233" endtime="20190116 18:35:58.239"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:35:58.248" level="INFO">${temp2} = EE06FFF700</msg>
<status status="PASS" starttime="20190116 18:35:58.242" endtime="20190116 18:35:58.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:58.252" endtime="20190116 18:35:58.258"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:58.222" endtime="20190116 18:35:58.260"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:57.793" endtime="20190116 18:35:58.262"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:58.271" endtime="20190116 18:35:58.317"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:35:58.320" endtime="20190116 18:35:58.378"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:00.388" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:35:58.383" endtime="20190116 18:36:00.390"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:00.393" endtime="20190116 18:36:00.439"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:00.443" endtime="20190116 18:36:00.490"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:58.264" endtime="20190116 18:36:00.493"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:36:00.510" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F7 00 02</msg>
<status status="PASS" starttime="20190116 18:36:00.504" endtime="20190116 18:36:00.511"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:00.514" endtime="20190116 18:36:00.520"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:36:00.834" level="INFO">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 42 00 A2 D8</msg>
<status status="PASS" starttime="20190116 18:36:00.522" endtime="20190116 18:36:00.835"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:00.838" endtime="20190116 18:36:00.844"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:36:00.862" level="INFO">${temp1} = 1E105494000D000BEE04FFF7000200AABB014200A2D8</msg>
<status status="PASS" starttime="20190116 18:36:00.857" endtime="20190116 18:36:00.863"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:36:00.872" level="INFO">${temp2} = EE04FFF7000200</msg>
<status status="PASS" starttime="20190116 18:36:00.866" endtime="20190116 18:36:00.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:00.875" endtime="20190116 18:36:00.881"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:00.846" endtime="20190116 18:36:00.883"></status>
</kw>
<msg timestamp="20190116 18:36:00.887" level="INFO">${RESP} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 42 00 A2 D8</msg>
<status status="PASS" starttime="20190116 18:36:00.495" endtime="20190116 18:36:00.888"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN} ${EEPROM_APP_OK} ${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:36:00.905" level="INFO">${temp1} = 1E105494000D000BEE04FFF7000200AABB014200A2D8</msg>
<status status="PASS" starttime="20190116 18:36:00.900" endtime="20190116 18:36:00.906"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:36:00.915" level="INFO">${temp2} = 000200AABB</msg>
<status status="PASS" starttime="20190116 18:36:00.909" endtime="20190116 18:36:00.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:00.919" endtime="20190116 18:36:00.925"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:00.890" endtime="20190116 18:36:00.927"></status>
</kw>
<status status="PASS" starttime="20190116 18:35:57.262" endtime="20190116 18:36:00.929"></status>
</kw>
<kw name="TEST_DIAG_CODING">
<doc>Write and read the EEPROM_DIAG_CODING</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_DIAG_CODING</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:00.938" endtime="20190116 18:36:00.942"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:36:00.965" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 00</msg>
<status status="PASS" starttime="20190116 18:36:00.958" endtime="20190116 18:36:00.966"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:36:00.982" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', '00']</msg>
<status status="PASS" starttime="20190116 18:36:00.976" endtime="20190116 18:36:00.983"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:36:00.990" level="INFO">Length is 26</msg>
<msg timestamp="20190116 18:36:00.991" level="INFO">${length} = 26</msg>
<status status="PASS" starttime="20190116 18:36:00.986" endtime="20190116 18:36:00.992"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:00.995" endtime="20190116 18:36:01.001"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:01.009" level="INFO">${value} = 20</msg>
<status status="PASS" starttime="20190116 18:36:01.004" endtime="20190116 18:36:01.010"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:36:01.019" level="INFO">${res} = 14</msg>
<status status="PASS" starttime="20190116 18:36:01.013" endtime="20190116 18:36:01.020"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:01.022" endtime="20190116 18:36:01.028"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:36:01.037" level="INFO">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status status="PASS" starttime="20190116 18:36:01.031" endtime="20190116 18:36:01.038"></status>
</kw>
<msg timestamp="20190116 18:36:01.042" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status status="PASS" starttime="20190116 18:36:00.968" endtime="20190116 18:36:01.043"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:01.046" endtime="20190116 18:36:01.052"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:36:02.191" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 43 5A 36</msg>
<status status="PASS" starttime="20190116 18:36:01.055" endtime="20190116 18:36:02.192"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:02.203" endtime="20190116 18:36:02.209"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:36:02.227" level="INFO">${temp1} = 1E105494000A000BEE06FFF6000001435A36</msg>
<status status="PASS" starttime="20190116 18:36:02.221" endtime="20190116 18:36:02.228"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:36:02.236" level="INFO">${temp2} = EE06FFF600</msg>
<status status="PASS" starttime="20190116 18:36:02.231" endtime="20190116 18:36:02.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:02.240" endtime="20190116 18:36:02.246"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:02.211" endtime="20190116 18:36:02.248"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:00.944" endtime="20190116 18:36:02.250"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:36:02.269" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 CC</msg>
<status status="PASS" starttime="20190116 18:36:02.262" endtime="20190116 18:36:02.270"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:36:02.285" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', 'CC']</msg>
<status status="PASS" starttime="20190116 18:36:02.280" endtime="20190116 18:36:02.286"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:36:02.293" level="INFO">Length is 26</msg>
<msg timestamp="20190116 18:36:02.295" level="INFO">${length} = 26</msg>
<status status="PASS" starttime="20190116 18:36:02.288" endtime="20190116 18:36:02.296"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:02.298" endtime="20190116 18:36:02.304"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:02.312" level="INFO">${value} = 20</msg>
<status status="PASS" starttime="20190116 18:36:02.306" endtime="20190116 18:36:02.313"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:36:02.322" level="INFO">${res} = 14</msg>
<status status="PASS" starttime="20190116 18:36:02.316" endtime="20190116 18:36:02.323"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:02.326" endtime="20190116 18:36:02.331"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:36:02.341" level="INFO">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status status="PASS" starttime="20190116 18:36:02.334" endtime="20190116 18:36:02.341"></status>
</kw>
<msg timestamp="20190116 18:36:02.345" level="INFO">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status status="PASS" starttime="20190116 18:36:02.271" endtime="20190116 18:36:02.346"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:02.349" endtime="20190116 18:36:02.354"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:36:02.777" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 44 5A 31</msg>
<status status="PASS" starttime="20190116 18:36:02.357" endtime="20190116 18:36:02.778"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:02.782" endtime="20190116 18:36:02.787"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:36:02.805" level="INFO">${temp1} = 1E105494000A000BEE06FFF6000001445A31</msg>
<status status="PASS" starttime="20190116 18:36:02.800" endtime="20190116 18:36:02.806"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:36:02.815" level="INFO">${temp2} = EE06FFF600</msg>
<status status="PASS" starttime="20190116 18:36:02.809" endtime="20190116 18:36:02.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:02.819" endtime="20190116 18:36:02.824"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:02.789" endtime="20190116 18:36:02.826"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:02.252" endtime="20190116 18:36:02.829"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:02.837" endtime="20190116 18:36:02.885"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:02.888" endtime="20190116 18:36:02.941"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:04.951" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:02.944" endtime="20190116 18:36:04.953"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:04.956" endtime="20190116 18:36:05.005"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:05.008" endtime="20190116 18:36:05.058"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:02.831" endtime="20190116 18:36:05.060"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:36:05.078" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F6 00 0C</msg>
<status status="PASS" starttime="20190116 18:36:05.072" endtime="20190116 18:36:05.079"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:05.082" endtime="20190116 18:36:05.087"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:36:05.402" level="INFO">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 42 00 D4 0E</msg>
<status status="PASS" starttime="20190116 18:36:05.090" endtime="20190116 18:36:05.403"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:05.406" endtime="20190116 18:36:05.412"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:36:05.431" level="INFO">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014200D40E</msg>
<status status="PASS" starttime="20190116 18:36:05.425" endtime="20190116 18:36:05.432"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:36:05.440" level="INFO">${temp2} = EE04FFF6000C00</msg>
<status status="PASS" starttime="20190116 18:36:05.434" endtime="20190116 18:36:05.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:05.444" endtime="20190116 18:36:05.449"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:05.414" endtime="20190116 18:36:05.452"></status>
</kw>
<msg timestamp="20190116 18:36:05.456" level="INFO">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 42 00 D4 0E</msg>
<status status="PASS" starttime="20190116 18:36:05.063" endtime="20190116 18:36:05.457"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_DIAG_CODING_LEN} ${EEPROM_APP_OK} ${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:36:05.477" level="INFO">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014200D40E</msg>
<status status="PASS" starttime="20190116 18:36:05.471" endtime="20190116 18:36:05.478"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:36:05.486" level="INFO">${temp2} = 000C001115051501FF00017CFF00CC</msg>
<status status="PASS" starttime="20190116 18:36:05.481" endtime="20190116 18:36:05.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:05.490" endtime="20190116 18:36:05.495"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:05.460" endtime="20190116 18:36:05.498"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:00.931" endtime="20190116 18:36:05.500"></status>
</kw>
<kw name="TEST_RESET_BUFFER">
<doc>Write and read the EEPROM_RESET_BUFFER</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_RESET_BUFFER</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:05.508" endtime="20190116 18:36:05.513"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:36:05.537" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 00000000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190116 18:36:05.525" endtime="20190116 18:36:05.537"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:36:05.553" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', '00000000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status status="PASS" starttime="20190116 18:36:05.548" endtime="20190116 18:36:05.554"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:36:05.561" level="INFO">Length is 18</msg>
<msg timestamp="20190116 18:36:05.563" level="INFO">${length} = 18</msg>
<status status="PASS" starttime="20190116 18:36:05.557" endtime="20190116 18:36:05.564"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:05.567" endtime="20190116 18:36:05.572"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:05.580" level="INFO">${value} = 12</msg>
<status status="PASS" starttime="20190116 18:36:05.575" endtime="20190116 18:36:05.581"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:36:05.590" level="INFO">${res} = 0C</msg>
<status status="PASS" starttime="20190116 18:36:05.584" endtime="20190116 18:36:05.590"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:05.593" endtime="20190116 18:36:05.598"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:36:05.608" level="INFO">${res} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190116 18:36:05.601" endtime="20190116 18:36:05.609"></status>
</kw>
<msg timestamp="20190116 18:36:05.612" level="INFO">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190116 18:36:05.539" endtime="20190116 18:36:05.613"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:05.616" endtime="20190116 18:36:05.622"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:36:06.776" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 43 5A 35</msg>
<status status="PASS" starttime="20190116 18:36:05.625" endtime="20190116 18:36:06.777"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:06.780" endtime="20190116 18:36:06.785"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:36:06.804" level="INFO">${temp1} = 1E105494000A000BEE06FFF5000001435A35</msg>
<status status="PASS" starttime="20190116 18:36:06.798" endtime="20190116 18:36:06.805"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:36:06.813" level="INFO">${temp2} = EE06FFF500</msg>
<status status="PASS" starttime="20190116 18:36:06.808" endtime="20190116 18:36:06.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:06.818" endtime="20190116 18:36:06.823"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:06.787" endtime="20190116 18:36:06.826"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:05.515" endtime="20190116 18:36:06.828"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:36:06.847" level="INFO">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 AABB0000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190116 18:36:06.840" endtime="20190116 18:36:06.848"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:36:06.863" level="INFO">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', 'AABB0000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status status="PASS" starttime="20190116 18:36:06.858" endtime="20190116 18:36:06.864"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg timestamp="20190116 18:36:06.871" level="INFO">Length is 18</msg>
<msg timestamp="20190116 18:36:06.873" level="INFO">${length} = 18</msg>
<status status="PASS" starttime="20190116 18:36:06.867" endtime="20190116 18:36:06.874"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:06.876" endtime="20190116 18:36:06.881"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:06.890" level="INFO">${value} = 12</msg>
<status status="PASS" starttime="20190116 18:36:06.884" endtime="20190116 18:36:06.891"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:36:06.899" level="INFO">${res} = 0C</msg>
<status status="PASS" starttime="20190116 18:36:06.894" endtime="20190116 18:36:06.900"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:06.903" endtime="20190116 18:36:06.908"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:36:06.917" level="INFO">${res} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190116 18:36:06.911" endtime="20190116 18:36:06.918"></status>
</kw>
<msg timestamp="20190116 18:36:06.921" level="INFO">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190116 18:36:06.850" endtime="20190116 18:36:06.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:06.925" endtime="20190116 18:36:06.931"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:36:07.246" level="INFO">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 44 5A 32</msg>
<status status="PASS" starttime="20190116 18:36:06.934" endtime="20190116 18:36:07.247"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:07.250" endtime="20190116 18:36:07.256"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:36:07.278" level="INFO">${temp1} = 1E105494000A000BEE06FFF5000001445A32</msg>
<status status="PASS" starttime="20190116 18:36:07.273" endtime="20190116 18:36:07.280"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:36:07.288" level="INFO">${temp2} = EE06FFF500</msg>
<status status="PASS" starttime="20190116 18:36:07.283" endtime="20190116 18:36:07.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:07.292" endtime="20190116 18:36:07.298"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:07.258" endtime="20190116 18:36:07.300"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:06.830" endtime="20190116 18:36:07.302"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:07.310" endtime="20190116 18:36:07.358"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:07.361" endtime="20190116 18:36:07.409"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:09.416" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:07.412" endtime="20190116 18:36:09.418"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:09.421" endtime="20190116 18:36:09.467"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:09.471" endtime="20190116 18:36:09.518"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:07.304" endtime="20190116 18:36:09.521"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg timestamp="20190116 18:36:09.539" level="INFO">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F5 00 42</msg>
<status status="PASS" starttime="20190116 18:36:09.532" endtime="20190116 18:36:09.540"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:09.543" endtime="20190116 18:36:09.548"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:36:09.864" level="INFO">${resp} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status status="PASS" starttime="20190116 18:36:09.551" endtime="20190116 18:36:09.865"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:09.868" endtime="20190116 18:36:09.874"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:36:09.893" level="INFO">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014200A4DC</msg>
<status status="PASS" starttime="20190116 18:36:09.887" endtime="20190116 18:36:09.894"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:36:09.902" level="INFO">${temp2} = EE04FFF5004200</msg>
<status status="PASS" starttime="20190116 18:36:09.896" endtime="20190116 18:36:09.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:09.906" endtime="20190116 18:36:09.911"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:09.876" endtime="20190116 18:36:09.914"></status>
</kw>
<msg timestamp="20190116 18:36:09.917" level="INFO">${RESP} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status status="PASS" starttime="20190116 18:36:09.523" endtime="20190116 18:36:09.918"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN} ${EEPROM_APP_OK} ${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg timestamp="20190116 18:36:09.937" level="INFO">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014200A4DC</msg>
<status status="PASS" starttime="20190116 18:36:09.930" endtime="20190116 18:36:09.937"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg timestamp="20190116 18:36:09.946" level="INFO">${temp2} = 004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190116 18:36:09.940" endtime="20190116 18:36:09.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:09.950" endtime="20190116 18:36:09.955"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:09.920" endtime="20190116 18:36:09.958"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:05.502" endtime="20190116 18:36:09.960"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:09.970" endtime="20190116 18:36:09.975"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:09.978" endtime="20190116 18:36:10.025"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:10.029" endtime="20190116 18:36:10.077"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:10.080" endtime="20190116 18:36:10.125"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:09.963" endtime="20190116 18:36:10.128"></status>
</kw>
<doc>Implements Test Task SKTB-41553</doc>
<tags>
<tag>EEPROM</tag>
</tags>
<status status="PASS" starttime="20190116 18:35:38.421" critical="yes" endtime="20190116 18:36:10.129"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:36:11.650" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:36:11.730" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:36:10.187" endtime="20190116 18:36:11.732"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:10.146" endtime="20190116 18:36:11.750"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:10.140" endtime="20190116 18:36:11.752"></status>
</kw>
<doc>EEPROM write read test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:35:35.615" endtime="20190116 18:36:11.781"></status>
</suite>
<suite name="SKTB-56663" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56663.robot" id="s1-s16">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:36:12.461" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:36:12.449" endtime="20190116 18:36:12.485"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:36:12.508" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:36:12.510" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:36:14.671" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:36:12.488" endtime="20190116 18:36:14.685"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:12.443" endtime="20190116 18:36:14.687"></status>
</kw>
<test name="SKTB-56663" id="s1-s16-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:14.740" endtime="20190116 18:36:14.829"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:14.832" endtime="20190116 18:36:14.925"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:14.927" endtime="20190116 18:36:15.016"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:17.040" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:15.019" endtime="20190116 18:36:17.042"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:17.045" endtime="20190116 18:36:17.091"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:17.094" endtime="20190116 18:36:17.141"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:17.144" endtime="20190116 18:36:17.189"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:17.192" endtime="20190116 18:36:17.239"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:17.243" endtime="20190116 18:36:17.291"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:17.294" endtime="20190116 18:36:17.345"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:19.353" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:17.349" endtime="20190116 18:36:19.371"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:14.718" endtime="20190116 18:36:19.391"></status>
</kw>
<kw name="Step_1">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:36:19.658" level="INFO">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F DE 01 42 65 02</msg>
<status status="PASS" starttime="20190116 18:36:19.400" endtime="20190116 18:36:19.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:36:19.666" level="INFO">1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F DE 01 42 65 02</msg>
<status status="PASS" starttime="20190116 18:36:19.661" endtime="20190116 18:36:19.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:19.671" endtime="20190116 18:36:19.678"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:19.394" endtime="20190116 18:36:19.681"></status>
</kw>
<kw name="Step_2">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} 00</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:36:19.941" level="INFO">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 43 B4 23</msg>
<status status="PASS" starttime="20190116 18:36:19.712" endtime="20190116 18:36:19.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:36:19.950" level="INFO">1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 43 B4 23</msg>
<status status="PASS" starttime="20190116 18:36:19.946" endtime="20190116 18:36:19.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:19.956" endtime="20190116 18:36:19.962"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:19.683" endtime="20190116 18:36:19.965"></status>
</kw>
<kw name="Step_3">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:36:20.179" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 44 4A DE</msg>
<status status="PASS" starttime="20190116 18:36:19.973" endtime="20190116 18:36:20.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:36:20.189" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 44 4A DE</msg>
<status status="PASS" starttime="20190116 18:36:20.184" endtime="20190116 18:36:20.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:20.194" endtime="20190116 18:36:20.202"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:19.967" endtime="20190116 18:36:20.204"></status>
</kw>
<kw name="Step_4">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_EXCEED} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:36:20.418" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 47 4A DD</msg>
<status status="PASS" starttime="20190116 18:36:20.213" endtime="20190116 18:36:20.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:36:20.427" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 47 4A DD</msg>
<status status="PASS" starttime="20190116 18:36:20.422" endtime="20190116 18:36:20.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:20.432" endtime="20190116 18:36:20.439"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:20.206" endtime="20190116 18:36:20.442"></status>
</kw>
<kw name="Step_5">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_INVALID} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:36:20.661" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 01 01 40 4B DA</msg>
<status status="PASS" starttime="20190116 18:36:20.450" endtime="20190116 18:36:20.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:36:20.669" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 01 01 01 40 4B DA</msg>
<status status="PASS" starttime="20190116 18:36:20.665" endtime="20190116 18:36:20.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:20.674" endtime="20190116 18:36:20.692"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:20.444" endtime="20190116 18:36:20.695"></status>
</kw>
<kw name="Step_6">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} 00 ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg timestamp="20190116 18:36:20.990" level="INFO">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 00 01 41 4B DA</msg>
<status status="PASS" starttime="20190116 18:36:20.724" endtime="20190116 18:36:20.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:36:20.998" level="INFO">1E 14 54 8E 00 08 00 0D 01 04 01 00 01 41 4B DA</msg>
<status status="PASS" starttime="20190116 18:36:20.994" endtime="20190116 18:36:21.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:21.004" endtime="20190116 18:36:21.010"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:20.702" endtime="20190116 18:36:21.013"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:21.022" endtime="20190116 18:36:21.070"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:21.074" endtime="20190116 18:36:21.119"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:21.123" endtime="20190116 18:36:21.169"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:23.176" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:21.171" endtime="20190116 18:36:23.179"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:23.181" endtime="20190116 18:36:23.230"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:23.234" endtime="20190116 18:36:23.282"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:21.016" endtime="20190116 18:36:23.284"></status>
</kw>
<doc>Implements SW Test Case SKTB-56663</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status status="PASS" starttime="20190116 18:36:14.690" critical="yes" endtime="20190116 18:36:23.286"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:36:24.784" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:36:24.847" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:36:23.327" endtime="20190116 18:36:24.861"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:23.301" endtime="20190116 18:36:24.862"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:23.296" endtime="20190116 18:36:24.865"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:36:11.918" endtime="20190116 18:36:24.866"></status>
</suite>
<suite name="SKTB-56067" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56067.robot" id="s1-s17">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:36:25.532" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:36:25.523" endtime="20190116 18:36:25.550"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:36:25.573" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:36:25.575" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:36:27.678" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:36:25.553" endtime="20190116 18:36:27.680"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:25.508" endtime="20190116 18:36:27.699"></status>
</kw>
<test name="SKTB-SKTB-56067" id="s1-s17-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:27.744" endtime="20190116 18:36:27.849"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:27.852" endtime="20190116 18:36:27.979"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:27.982" endtime="20190116 18:36:28.073"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:30.088" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:28.076" endtime="20190116 18:36:30.090"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:30.093" endtime="20190116 18:36:30.139"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:36:31.147" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:36:30.142" endtime="20190116 18:36:31.149"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:31.151" endtime="20190116 18:36:31.198"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:33.207" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:31.202" endtime="20190116 18:36:33.209"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:33.212" endtime="20190116 18:36:33.257"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:33.261" endtime="20190116 18:36:33.307"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:33.311" endtime="20190116 18:36:33.356"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:33.359" endtime="20190116 18:36:33.405"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:27.721" endtime="20190116 18:36:33.407"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate</doc>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:36:33.490" level="INFO">${res_dict} = {'status': True, 'request': '41', 'result': '4153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:36:33.421" endtime="20190116 18:36:33.491"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:33.518" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:36:33.494" endtime="20190116 18:36:33.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:33.522" endtime="20190116 18:36:33.528"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:36:34.535" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:36:33.531" endtime="20190116 18:36:34.537"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:33.415" endtime="20190116 18:36:34.540"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:36:34.607" level="INFO">${res_dict} = {'status': True, 'request': '41', 'result': '4153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:36:34.547" endtime="20190116 18:36:34.609"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:34.633" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:36:34.612" endtime="20190116 18:36:34.634"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:34.636" endtime="20190116 18:36:34.641"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:36:35.648" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:36:34.643" endtime="20190116 18:36:35.653"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:34.542" endtime="20190116 18:36:35.655"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:33.410" endtime="20190116 18:36:35.657"></status>
</kw>
<kw name="POWER_ON_NAD">
<doc>Test the POWER_ON_NAD functionality</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the POWER_ON_NAD</arg>
<arg>functionality</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:35.665" endtime="20190116 18:36:35.669"></status>
</kw>
<kw name="POWERCYCLE">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:35.677" endtime="20190116 18:36:35.726"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:35.730" endtime="20190116 18:36:35.776"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:35.779" endtime="20190116 18:36:35.826"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:37.834" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:35.829" endtime="20190116 18:36:37.836"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:37.839" endtime="20190116 18:36:37.885"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:36:38.893" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:36:37.888" endtime="20190116 18:36:38.895"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:38.898" endtime="20190116 18:36:38.945"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:35.671" endtime="20190116 18:36:38.947"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190116 18:36:38.974" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190116 18:36:39.001" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:36:39.016" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:36:39.019" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:36:38.969" endtime="20190116 18:36:39.020"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190116 18:36:39.029" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:36:39.024" endtime="20190116 18:36:39.030"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:36:39.037" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:36:39.039" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190116 18:36:39.033" endtime="20190116 18:36:39.040"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190116 18:36:39.048" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:36:39.043" endtime="20190116 18:36:39.049"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:39.052" endtime="20190116 18:36:39.057"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190116 18:36:39.064" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190116 18:36:39.060" endtime="20190116 18:36:39.066"></status>
</kw>
<msg timestamp="20190116 18:36:39.070" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:36:38.961" endtime="20190116 18:36:39.071"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:36:39.207" level="INFO">${res_dict} = {'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190116 18:36:39.074" endtime="20190116 18:36:39.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:36:39.221" level="INFO">{'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190116 18:36:39.215" endtime="20190116 18:36:39.224"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:41.231" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:39.227" endtime="20190116 18:36:41.233"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:41.258" level="INFO">${value} = 5453</msg>
<status status="PASS" starttime="20190116 18:36:41.236" endtime="20190116 18:36:41.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:41.262" endtime="20190116 18:36:41.268"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:38.955" endtime="20190116 18:36:41.270"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:36:41.341" level="INFO">${res_dict} = {'status': True, 'request': '49', 'result': '4953', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:36:41.278" endtime="20190116 18:36:41.342"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:41.366" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:36:41.345" endtime="20190116 18:36:41.367"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:41.370" endtime="20190116 18:36:41.374"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:36:42.384" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:36:41.377" endtime="20190116 18:36:42.386"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:41.272" endtime="20190116 18:36:42.388"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:36:42.459" level="INFO">${res_dict} = {'status': True, 'request': '4756', 'result': '475653', 'data': '0100'}</msg>
<status status="PASS" starttime="20190116 18:36:42.396" endtime="20190116 18:36:42.461"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:42.464" endtime="20190116 18:36:42.470"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:36:43.477" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:36:42.473" endtime="20190116 18:36:43.481"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:42.390" endtime="20190116 18:36:43.483"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:38.950" endtime="20190116 18:36:43.485"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_POWERONNAD}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:36:43.559" level="INFO">${res_dict} = {'status': True, 'request': '5201', 'result': '520153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:36:43.497" endtime="20190116 18:36:43.561"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:43.565" endtime="20190116 18:36:43.574"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:43.630" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:36:43.582" endtime="20190116 18:36:43.630"></status>
</kw>
<msg timestamp="20190116 18:36:43.637" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:36:43.488" endtime="20190116 18:36:43.638"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:43.641" endtime="20190116 18:36:43.645"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20190116 18:36:53.652" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20190116 18:36:43.648" endtime="20190116 18:36:53.654"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:36:53.715" level="INFO">${KLEMME30} = [[12225, 135], [12300, 144]]</msg>
<status status="PASS" starttime="20190116 18:36:53.663" endtime="20190116 18:36:53.716"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:36:53.741" level="INFO">${CURR_VCARBAT} = 135</msg>
<status status="PASS" starttime="20190116 18:36:53.719" endtime="20190116 18:36:53.742"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:36:53.767" level="INFO">${CURR_KL30} = 144</msg>
<status status="PASS" starttime="20190116 18:36:53.745" endtime="20190116 18:36:53.768"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:36:53.775" level="INFO">${TIMENOW} = 1547663813</msg>
<status status="PASS" starttime="20190116 18:36:53.771" endtime="20190116 18:36:53.776"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:53.779" endtime="20190116 18:36:53.786"></status>
</kw>
<msg timestamp="20190116 18:36:53.791" level="INFO">${TIMENOW} = 1547663813</msg>
<msg timestamp="20190116 18:36:53.792" level="INFO">${CURR_VCARBAT} = 135</msg>
<msg timestamp="20190116 18:36:53.793" level="INFO">${CURR_KL30} = 144</msg>
<status status="PASS" starttime="20190116 18:36:53.656" endtime="20190116 18:36:53.794"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:53.802" endtime="20190116 18:36:53.808"></status>
</kw>
<msg timestamp="20190116 18:36:53.810" level="INFO">${fbus_resp} = None</msg>
<status status="PASS" starttime="20190116 18:36:53.797" endtime="20190116 18:36:53.810"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:35.659" endtime="20190116 18:36:53.812"></status>
</kw>
<kw name="SHUTDOWNSYSTEM">
<doc>Test the shutdownsystem functionality</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the shutdownsystem functionality</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:53.821" endtime="20190116 18:36:53.825"></status>
</kw>
<kw name="POWERCYCLE">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:53.833" endtime="20190116 18:36:53.882"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:53.885" endtime="20190116 18:36:53.932"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:53.935" endtime="20190116 18:36:53.981"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:55.989" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:53.985" endtime="20190116 18:36:55.991"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:55.994" endtime="20190116 18:36:56.041"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:36:57.049" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:36:56.044" endtime="20190116 18:36:57.051"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:57.053" endtime="20190116 18:36:57.101"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:53.827" endtime="20190116 18:36:57.103"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190116 18:36:57.132" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190116 18:36:57.159" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:36:57.174" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:36:57.177" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:36:57.126" endtime="20190116 18:36:57.178"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190116 18:36:57.188" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:36:57.183" endtime="20190116 18:36:57.189"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:36:57.196" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:36:57.198" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190116 18:36:57.192" endtime="20190116 18:36:57.199"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190116 18:36:57.207" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:36:57.202" endtime="20190116 18:36:57.208"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:57.211" endtime="20190116 18:36:57.216"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190116 18:36:57.223" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190116 18:36:57.219" endtime="20190116 18:36:57.225"></status>
</kw>
<msg timestamp="20190116 18:36:57.230" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:36:57.115" endtime="20190116 18:36:57.231"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:36:57.366" level="INFO">${res_dict} = {'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190116 18:36:57.233" endtime="20190116 18:36:57.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:36:57.383" level="INFO">{'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190116 18:36:57.377" endtime="20190116 18:36:57.386"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:36:59.397" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:36:57.389" endtime="20190116 18:36:59.399"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:59.483" level="INFO">${value} = 5453</msg>
<status status="PASS" starttime="20190116 18:36:59.402" endtime="20190116 18:36:59.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:59.495" endtime="20190116 18:36:59.501"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:57.110" endtime="20190116 18:36:59.524"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:36:59.614" level="INFO">${res_dict} = {'status': True, 'request': '49', 'result': '4953', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:36:59.533" endtime="20190116 18:36:59.615"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:36:59.640" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:36:59.618" endtime="20190116 18:36:59.641"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:36:59.644" endtime="20190116 18:36:59.648"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:00.655" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:36:59.651" endtime="20190116 18:37:00.658"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:59.526" endtime="20190116 18:37:00.660"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:00.731" level="INFO">${res_dict} = {'status': True, 'request': '4756', 'result': '475653', 'data': '0100'}</msg>
<status status="PASS" starttime="20190116 18:37:00.668" endtime="20190116 18:37:00.732"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:00.735" endtime="20190116 18:37:00.741"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:01.749" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:00.744" endtime="20190116 18:37:01.751"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:00.662" endtime="20190116 18:37:01.753"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:57.105" endtime="20190116 18:37:01.755"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_SHUTDOWNSYSTEM}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:01.837" level="INFO">${res_dict} = {'status': False, 'request': '5202', 'result': '520246', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:37:01.765" endtime="20190116 18:37:01.838"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:01.841" endtime="20190116 18:37:01.846"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:01.870" level="INFO">${value} = False</msg>
<status status="PASS" starttime="20190116 18:37:01.849" endtime="20190116 18:37:01.872"></status>
</kw>
<msg timestamp="20190116 18:37:01.876" level="INFO">${value} = False</msg>
<status status="PASS" starttime="20190116 18:37:01.757" endtime="20190116 18:37:01.877"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:01.880" endtime="20190116 18:37:01.884"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20190116 18:37:06.890" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190116 18:37:01.886" endtime="20190116 18:37:06.893"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:37:06.951" level="INFO">${KLEMME30} = [[12275, 1], [12350, 2]]</msg>
<status status="PASS" starttime="20190116 18:37:06.901" endtime="20190116 18:37:06.952"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:37:06.977" level="INFO">${CURR_VCARBAT} = 1</msg>
<status status="PASS" starttime="20190116 18:37:06.955" endtime="20190116 18:37:06.978"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:37:07.003" level="INFO">${CURR_KL30} = 2</msg>
<status status="PASS" starttime="20190116 18:37:06.981" endtime="20190116 18:37:07.004"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:37:07.011" level="INFO">${TIMENOW} = 1547663827</msg>
<status status="PASS" starttime="20190116 18:37:07.006" endtime="20190116 18:37:07.012"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:07.015" endtime="20190116 18:37:07.022"></status>
</kw>
<msg timestamp="20190116 18:37:07.027" level="INFO">${TIMENOW} = 1547663827</msg>
<msg timestamp="20190116 18:37:07.028" level="INFO">${CURR_VCARBAT} = 1</msg>
<msg timestamp="20190116 18:37:07.029" level="INFO">${CURR_KL30} = 2</msg>
<status status="PASS" starttime="20190116 18:37:06.895" endtime="20190116 18:37:07.030"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:07.038" endtime="20190116 18:37:07.047"></status>
</kw>
<msg timestamp="20190116 18:37:07.049" level="INFO">${fbus_resp} = None</msg>
<status status="PASS" starttime="20190116 18:37:07.033" endtime="20190116 18:37:07.050"></status>
</kw>
<status status="PASS" starttime="20190116 18:36:53.815" endtime="20190116 18:37:07.052"></status>
</kw>
<kw name="MCUSTANDBY">
<doc>Test the mcu stanby functionality</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the mcu stanby functionality</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:07.060" endtime="20190116 18:37:07.065"></status>
</kw>
<kw name="POWERCYCLE">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:07.072" endtime="20190116 18:37:07.119"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:07.122" endtime="20190116 18:37:07.169"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:07.173" endtime="20190116 18:37:07.219"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:37:09.230" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:37:07.222" endtime="20190116 18:37:09.232"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:09.235" endtime="20190116 18:37:09.305"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:10.312" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:09.308" endtime="20190116 18:37:10.314"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:10.317" endtime="20190116 18:37:10.364"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:07.067" endtime="20190116 18:37:10.367"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190116 18:37:10.392" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg timestamp="20190116 18:37:10.420" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:10.434" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:10.437" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:37:10.387" endtime="20190116 18:37:10.438"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190116 18:37:10.447" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:37:10.442" endtime="20190116 18:37:10.448"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:37:10.458" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:37:10.463" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190116 18:37:10.451" endtime="20190116 18:37:10.464"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190116 18:37:10.473" level="INFO">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:37:10.467" endtime="20190116 18:37:10.474"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:10.477" endtime="20190116 18:37:10.482"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190116 18:37:10.489" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190116 18:37:10.485" endtime="20190116 18:37:10.491"></status>
</kw>
<msg timestamp="20190116 18:37:10.495" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:37:10.379" endtime="20190116 18:37:10.496"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:10.632" level="INFO">${res_dict} = {'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190116 18:37:10.499" endtime="20190116 18:37:10.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:37:10.646" level="INFO">{'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190116 18:37:10.639" endtime="20190116 18:37:10.649"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:37:12.656" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:37:10.652" endtime="20190116 18:37:12.658"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:12.684" level="INFO">${value} = 5453</msg>
<status status="PASS" starttime="20190116 18:37:12.661" endtime="20190116 18:37:12.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:12.687" endtime="20190116 18:37:12.693"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:10.374" endtime="20190116 18:37:12.695"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:12.763" level="INFO">${res_dict} = {'status': True, 'request': '49', 'result': '4953', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:37:12.703" endtime="20190116 18:37:12.765"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:12.789" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:37:12.768" endtime="20190116 18:37:12.790"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:12.793" endtime="20190116 18:37:12.797"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:13.807" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:12.800" endtime="20190116 18:37:13.809"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:12.697" endtime="20190116 18:37:13.811"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:13.885" level="INFO">${res_dict} = {'status': True, 'request': '4756', 'result': '475653', 'data': '0100'}</msg>
<status status="PASS" starttime="20190116 18:37:13.820" endtime="20190116 18:37:13.886"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:13.889" endtime="20190116 18:37:13.895"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:14.902" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:13.898" endtime="20190116 18:37:14.904"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:13.813" endtime="20190116 18:37:14.907"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:10.369" endtime="20190116 18:37:14.909"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_MCUSTANDBY}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:15.084" level="INFO">${res_dict} = {'status': False, 'request': '5203', 'result': '00', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:37:14.918" endtime="20190116 18:37:15.085"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:15.088" endtime="20190116 18:37:15.094"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:15.118" level="INFO">${value} = False</msg>
<status status="PASS" starttime="20190116 18:37:15.097" endtime="20190116 18:37:15.119"></status>
</kw>
<msg timestamp="20190116 18:37:15.122" level="INFO">${value} = False</msg>
<status status="PASS" starttime="20190116 18:37:14.911" endtime="20190116 18:37:15.123"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:15.126" endtime="20190116 18:37:15.130"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20190116 18:37:20.137" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190116 18:37:15.133" endtime="20190116 18:37:20.139"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:37:20.197" level="INFO">${KLEMME30} = [[12275, 2], [12350, 2]]</msg>
<status status="PASS" starttime="20190116 18:37:20.148" endtime="20190116 18:37:20.199"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:37:20.225" level="INFO">${CURR_VCARBAT} = 2</msg>
<status status="PASS" starttime="20190116 18:37:20.203" endtime="20190116 18:37:20.225"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:37:20.250" level="INFO">${CURR_KL30} = 2</msg>
<status status="PASS" starttime="20190116 18:37:20.228" endtime="20190116 18:37:20.251"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:37:20.258" level="INFO">${TIMENOW} = 1547663840</msg>
<status status="PASS" starttime="20190116 18:37:20.254" endtime="20190116 18:37:20.259"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:20.262" endtime="20190116 18:37:20.269"></status>
</kw>
<msg timestamp="20190116 18:37:20.274" level="INFO">${TIMENOW} = 1547663840</msg>
<msg timestamp="20190116 18:37:20.275" level="INFO">${CURR_VCARBAT} = 2</msg>
<msg timestamp="20190116 18:37:20.276" level="INFO">${CURR_KL30} = 2</msg>
<status status="PASS" starttime="20190116 18:37:20.141" endtime="20190116 18:37:20.277"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:20.286" endtime="20190116 18:37:20.291"></status>
</kw>
<msg timestamp="20190116 18:37:20.293" level="INFO">${fbus_resp} = None</msg>
<status status="PASS" starttime="20190116 18:37:20.280" endtime="20190116 18:37:20.294"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:07.054" endtime="20190116 18:37:20.296"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:20.306" endtime="20190116 18:37:20.353"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:20.356" endtime="20190116 18:37:20.402"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:20.405" endtime="20190116 18:37:20.452"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:21.460" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:20.455" endtime="20190116 18:37:21.462"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:21.465" endtime="20190116 18:37:21.513"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:20.299" endtime="20190116 18:37:21.516"></status>
</kw>
<doc>Implements Test Task SKTB-SKTB-56067 Power testroutine</doc>
<tags>
<tag>Power testroutine</tag>
</tags>
<status status="PASS" starttime="20190116 18:36:27.701" critical="yes" endtime="20190116 18:37:21.517"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:37:23.022" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:37:23.092" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:37:21.558" endtime="20190116 18:37:23.094"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:21.535" endtime="20190116 18:37:23.095"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:21.529" endtime="20190116 18:37:23.098"></status>
</kw>
<doc>Power testroutine testcase</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:36:25.084" endtime="20190116 18:37:23.098"></status>
</suite>
<suite name="SKTB-56094" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56094.robot" id="s1-s18">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:37:23.736" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:37:23.720" endtime="20190116 18:37:23.743"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:37:23.773" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:37:23.775" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:37:25.940" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:37:23.746" endtime="20190116 18:37:25.967"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:23.714" endtime="20190116 18:37:25.969"></status>
</kw>
<test name="SKTB-SKTB-56094" id="s1-s18-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:26.023" endtime="20190116 18:37:26.140"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:26.143" endtime="20190116 18:37:26.230"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:26.233" endtime="20190116 18:37:26.329"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:37:28.352" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:37:26.332" endtime="20190116 18:37:28.354"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:28.357" endtime="20190116 18:37:28.403"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:29.410" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:28.406" endtime="20190116 18:37:29.413"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:29.416" endtime="20190116 18:37:29.463"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:37:31.472" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:37:29.466" endtime="20190116 18:37:31.474"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:31.477" endtime="20190116 18:37:31.522"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:31.525" endtime="20190116 18:37:31.570"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:31.574" endtime="20190116 18:37:31.667"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:31.670" endtime="20190116 18:37:31.759"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:26.017" endtime="20190116 18:37:31.766"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate if necessary</doc>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:31.943" level="INFO">${res_dict} = {'status': True, 'request': '41', 'result': '4153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:37:31.821" endtime="20190116 18:37:31.944"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:32.005" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:37:31.947" endtime="20190116 18:37:32.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:32.010" endtime="20190116 18:37:32.016"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:33.035" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:32.031" endtime="20190116 18:37:33.037"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:31.804" endtime="20190116 18:37:33.039"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:33.107" level="INFO">${res_dict} = {'status': True, 'request': '41', 'result': '4153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:37:33.047" endtime="20190116 18:37:33.108"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:33.135" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:37:33.111" endtime="20190116 18:37:33.136"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:33.138" endtime="20190116 18:37:33.143"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:34.150" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:33.145" endtime="20190116 18:37:34.152"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:33.041" endtime="20190116 18:37:34.154"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:31.797" endtime="20190116 18:37:34.156"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the rtestroutine and init it</doc>
<kw name="Step_load">
<arguments>
<arg>${VEHICLE_TR_PATH}</arg>
</arguments>
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${TESTROUTINE_FILEPATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190116 18:37:34.183" level="INFO">Starting process:
find /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_*.bin</msg>
<msg timestamp="20190116 18:37:34.210" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:34.226" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:34.229" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:37:34.177" endtime="20190116 18:37:34.230"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190116 18:37:34.239" level="INFO">${stdout_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:37:34.234" endtime="20190116 18:37:34.240"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:37:34.247" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:37:34.250" level="INFO">${temp} = ['/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190116 18:37:34.243" endtime="20190116 18:37:34.251"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190116 18:37:34.260" level="INFO">${path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:37:34.254" endtime="20190116 18:37:34.261"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:34.263" endtime="20190116 18:37:34.269"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190116 18:37:34.277" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190116 18:37:34.272" endtime="20190116 18:37:34.279"></status>
</kw>
<msg timestamp="20190116 18:37:34.282" level="INFO">${matched_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status status="PASS" starttime="20190116 18:37:34.170" endtime="20190116 18:37:34.284"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:34.891" level="INFO">${res_dict} = {'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': 'd8dd0dd1'}</msg>
<status status="PASS" starttime="20190116 18:37:34.287" endtime="20190116 18:37:34.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:37:34.907" level="INFO">{'status': True, 'request': '', 'result': '5453', 'response': 'TS', 'flowctrl': '', 'data': 'd8dd0dd1'}</msg>
<status status="PASS" starttime="20190116 18:37:34.903" endtime="20190116 18:37:34.918"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:37:36.935" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:37:34.925" endtime="20190116 18:37:36.937"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:36.965" level="INFO">${value} = 5453</msg>
<status status="PASS" starttime="20190116 18:37:36.940" endtime="20190116 18:37:36.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:36.969" endtime="20190116 18:37:36.974"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:34.163" endtime="20190116 18:37:36.977"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:37.045" level="INFO">${res_dict} = {'status': True, 'request': '49', 'result': '4953', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:37:36.985" endtime="20190116 18:37:37.046"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:37.076" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:37:37.049" endtime="20190116 18:37:37.077"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:37.080" endtime="20190116 18:37:37.084"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:38.091" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:37.087" endtime="20190116 18:37:38.093"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:36.979" endtime="20190116 18:37:38.095"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:38.166" level="INFO">${res_dict} = {'status': True, 'request': '4756', 'result': '475653', 'data': '0101'}</msg>
<status status="PASS" starttime="20190116 18:37:38.103" endtime="20190116 18:37:38.167"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:38.171" endtime="20190116 18:37:38.177"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:39.184" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:38.179" endtime="20190116 18:37:39.186"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:38.097" endtime="20190116 18:37:39.188"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:34.158" endtime="20190116 18:37:39.190"></status>
</kw>
<kw name="CAN_SENDDATA_CAN1_TEST">
<doc>Test can send and receive data can 1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 1</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:39.199" endtime="20190116 18:37:39.203"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:39.215" endtime="20190116 18:37:39.223"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:37:39.232" level="INFO">Starting process:
sudo ip link set can0 down</msg>
<msg timestamp="20190116 18:37:39.259" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:39.331" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:39.334" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:37:39.226" endtime="20190116 18:37:39.335"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:39.338" endtime="20190116 18:37:39.347"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:37:39.357" level="INFO">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg timestamp="20190116 18:37:39.384" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:39.439" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:39.442" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:37:39.350" endtime="20190116 18:37:39.443"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:39.446" endtime="20190116 18:37:39.455"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:37:39.464" level="INFO">Starting process:
sudo ip link set can0 up</msg>
<msg timestamp="20190116 18:37:39.491" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:39.560" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:39.563" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:37:39.458" endtime="20190116 18:37:39.565"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:39.569" endtime="20190116 18:37:39.577"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:37:39.206" endtime="20190116 18:37:39.580"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:37:39.594" level="INFO">Starting process:
candump -t a can0,767:7FF,768:7FF</msg>
<msg timestamp="20190116 18:37:39.625" level="INFO">${candump_ID} = 206</msg>
<status status="PASS" starttime="20190116 18:37:39.583" endtime="20190116 18:37:39.626"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_0}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg timestamp="20190116 18:37:39.653" level="INFO">Starting process:
cangen can0 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg timestamp="20190116 18:37:39.682" level="INFO">${cangen_ID} = 207</msg>
<status status="PASS" starttime="20190116 18:37:39.636" endtime="20190116 18:37:39.683"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN1}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:39.766" level="INFO">${res_dict} = {'status': True, 'request': '53420008aabbccdd11223344', 'result': '534253', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:37:39.703" endtime="20190116 18:37:39.766"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:39.770" endtime="20190116 18:37:39.775"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:39.803" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:37:39.778" endtime="20190116 18:37:39.804"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:39.807" endtime="20190116 18:37:39.813"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:39.876" level="INFO">${res_dict} = {'status': True, 'request': '5201', 'result': '520153', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:37:39.816" endtime="20190116 18:37:39.877"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:39.880" endtime="20190116 18:37:39.886"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:39.914" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:37:39.889" endtime="20190116 18:37:39.914"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:39.917" endtime="20190116 18:37:39.935"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:40.002" level="INFO">${res_dict} = {'status': True, 'request': '4742', 'result': '474253', 'data': 'aabbccdd11223344'}</msg>
<status status="PASS" starttime="20190116 18:37:39.938" endtime="20190116 18:37:40.003"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:40.006" endtime="20190116 18:37:40.012"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190116 18:37:40.039" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20190116 18:37:40.015" endtime="20190116 18:37:40.040"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:40.042" endtime="20190116 18:37:40.048"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190116 18:37:40.075" level="INFO">${data} = aabbccdd11223344</msg>
<status status="PASS" starttime="20190116 18:37:40.051" endtime="20190116 18:37:40.076"></status>
</kw>
<msg timestamp="20190116 18:37:40.081" level="INFO">${status} = True</msg>
<msg timestamp="20190116 18:37:40.082" level="INFO">${data} = aabbccdd11223344</msg>
<status status="PASS" starttime="20190116 18:37:39.693" endtime="20190116 18:37:40.082"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:40.085" endtime="20190116 18:37:40.090"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:40.092" endtime="20190116 18:37:40.099"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:37:40.112" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:40.616" level="INFO">Process did not complete in 500 milliseconds.</msg>
<msg timestamp="20190116 18:37:40.617" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:37:40.621" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:40.624" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:37:40.108" endtime="20190116 18:37:40.625"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:37:40.634" level="INFO">3 lines returned</msg>
<msg timestamp="20190116 18:37:40.636" level="INFO">${temp} = [' (1547663859.690993)  can0  768   [8]  AA BB CC DD 11 22 33 44', ' (1547663859.846351)  can0  767   [8]  AA BB CC DD 11 22 33 44', ' (1547663860.191171)  can0  768   [8]  AA BB CC DD 11 22 33 44']</msg>
<status status="PASS" starttime="20190116 18:37:40.627" endtime="20190116 18:37:40.636"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg timestamp="20190116 18:37:40.643" level="INFO">${FILTER} = ['withoutfilter']</msg>
<status status="PASS" starttime="20190116 18:37:40.639" endtime="20190116 18:37:40.644"></status>
</kw>
<kw name="Set Canid Status And Filter" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:40.647" endtime="20190116 18:37:40.651"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:37:40.659" level="INFO">(1547663859.690993)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1547663859.846351)  can0  767   [8]  AA BB CC DD 11 22 33 44
 (1547663860.191171)  can0  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg timestamp="20190116 18:37:40.661" level="INFO">${ret_list} = [{'timestamp': '1547663859.690993', 'channel': 'can0', 'payload': 'AABBCCDD11223344', 'id': '768'}, {'timestamp': '1547663859.846351', 'channel': 'can0', 'payload': 'AABBCCDD11223344', 'id': '767'}, {...</msg>
<status status="PASS" starttime="20190116 18:37:40.654" endtime="20190116 18:37:40.662"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:37:40.678" level="INFO">${RESULT} = False</msg>
<status status="PASS" starttime="20190116 18:37:40.673" endtime="20190116 18:37:40.679"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:37:40.685" level="INFO">Length is 3</msg>
<msg timestamp="20190116 18:37:40.687" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20190116 18:37:40.681" endtime="20190116 18:37:40.688"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:40.691" endtime="20190116 18:37:40.696"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:37:40.704" level="INFO">${msgcount} = 0</msg>
<status status="PASS" starttime="20190116 18:37:40.699" endtime="20190116 18:37:40.705"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'timestamp': '1547663859.690993', 'channel': 'can0', 'payload': 'AABBCCDD11223344', 'id': '768'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:37:40.717" level="INFO">${payload} = AABBCCDD11223344</msg>
<status status="PASS" starttime="20190116 18:37:40.712" endtime="20190116 18:37:40.718"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190116 18:37:40.726" level="INFO">${can_id} = 768</msg>
<status status="PASS" starttime="20190116 18:37:40.721" endtime="20190116 18:37:40.727"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190116 18:37:40.737" level="INFO">${count_msg} = 1</msg>
<status status="PASS" starttime="20190116 18:37:40.729" endtime="20190116 18:37:40.738"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190116 18:37:40.748" level="INFO">${count_id} = 0</msg>
<status status="PASS" starttime="20190116 18:37:40.740" endtime="20190116 18:37:40.749"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:37:40.757" level="INFO">${msgcount} = 1</msg>
<status status="PASS" starttime="20190116 18:37:40.751" endtime="20190116 18:37:40.758"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:37:40.768" level="INFO">${RESULT} = False</msg>
<status status="PASS" starttime="20190116 18:37:40.761" endtime="20190116 18:37:40.769"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:40.772" endtime="20190116 18:37:40.778"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:40.709" endtime="20190116 18:37:40.779"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '1547663859.846351', 'channel': 'can0', 'payload': 'AABBCCDD11223344', 'id': '767'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:37:40.788" level="INFO">${payload} = AABBCCDD11223344</msg>
<status status="PASS" starttime="20190116 18:37:40.784" endtime="20190116 18:37:40.789"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190116 18:37:40.797" level="INFO">${can_id} = 767</msg>
<status status="PASS" starttime="20190116 18:37:40.792" endtime="20190116 18:37:40.798"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190116 18:37:40.808" level="INFO">${count_msg} = 1</msg>
<status status="PASS" starttime="20190116 18:37:40.801" endtime="20190116 18:37:40.809"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190116 18:37:40.820" level="INFO">${count_id} = 1</msg>
<status status="PASS" starttime="20190116 18:37:40.812" endtime="20190116 18:37:40.821"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:37:40.833" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:37:40.824" endtime="20190116 18:37:40.834"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:37:40.844" level="INFO">${RESULT} = True</msg>
<status status="PASS" starttime="20190116 18:37:40.837" endtime="20190116 18:37:40.845"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg timestamp="20190116 18:37:40.853" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190116 18:37:40.847" endtime="20190116 18:37:40.855"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:40.781" endtime="20190116 18:37:40.856"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:40.706" endtime="20190116 18:37:40.857"></status>
</kw>
<msg timestamp="20190116 18:37:40.861" level="INFO">${res} = True</msg>
<status status="PASS" starttime="20190116 18:37:40.664" endtime="20190116 18:37:40.862"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:40.864" endtime="20190116 18:37:40.870"></status>
</kw>
<msg timestamp="20190116 18:37:40.874" level="INFO">${res} = True</msg>
<status status="PASS" starttime="20190116 18:37:40.101" endtime="20190116 18:37:40.874"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:40.877" endtime="20190116 18:37:40.881"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:39.193" endtime="20190116 18:37:40.884"></status>
</kw>
<kw name="CAN_SENDDATA_CAN3_TEST">
<doc>Test can send and receive data can 2</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 2</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:40.892" endtime="20190116 18:37:40.897"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg timestamp="20190116 18:37:42.903" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:37:40.899" endtime="20190116 18:37:42.906"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:42.918" endtime="20190116 18:37:42.925"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:37:42.934" level="INFO">Starting process:
sudo ip link set can2 down</msg>
<msg timestamp="20190116 18:37:42.961" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:43.031" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:43.034" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:37:42.928" endtime="20190116 18:37:43.035"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.039" endtime="20190116 18:37:43.047"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:37:43.057" level="INFO">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg timestamp="20190116 18:37:43.084" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:43.139" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:43.142" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:37:43.050" endtime="20190116 18:37:43.143"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.147" endtime="20190116 18:37:43.155"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20190116 18:37:43.165" level="INFO">Starting process:
sudo ip link set can2 up</msg>
<msg timestamp="20190116 18:37:43.192" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:43.274" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:43.277" level="INFO">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:37:43.158" endtime="20190116 18:37:43.279"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.282" endtime="20190116 18:37:43.291"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190116 18:37:42.908" endtime="20190116 18:37:43.294"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_2},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg timestamp="20190116 18:37:43.306" level="INFO">Starting process:
candump -t a can2,767:7FF,768:7FF</msg>
<msg timestamp="20190116 18:37:43.335" level="INFO">${candump_ID} = 211</msg>
<status status="PASS" starttime="20190116 18:37:43.298" endtime="20190116 18:37:43.340"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_2}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg timestamp="20190116 18:37:43.358" level="INFO">Starting process:
cangen can2 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg timestamp="20190116 18:37:43.395" level="INFO">${cangen_ID} = 212</msg>
<status status="PASS" starttime="20190116 18:37:43.344" endtime="20190116 18:37:43.396"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN3}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:43.493" level="INFO">${res_dict} = {'status': True, 'request': '53420008aabbccdd11223344', 'result': '534253', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:37:43.424" endtime="20190116 18:37:43.494"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.497" endtime="20190116 18:37:43.503"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:43.532" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:37:43.506" endtime="20190116 18:37:43.533"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.536" endtime="20190116 18:37:43.542"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:43.606" level="INFO">${res_dict} = {'status': True, 'request': '5203', 'result': '520353', 'data': ''}</msg>
<status status="PASS" starttime="20190116 18:37:43.545" endtime="20190116 18:37:43.606"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.610" endtime="20190116 18:37:43.615"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20190116 18:37:43.644" level="INFO">${value} = True</msg>
<status status="PASS" starttime="20190116 18:37:43.618" endtime="20190116 18:37:43.645"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.647" endtime="20190116 18:37:43.653"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg timestamp="20190116 18:37:43.720" level="INFO">${res_dict} = {'status': True, 'request': '4742', 'result': '474253', 'data': 'aabbccdd11223344'}</msg>
<status status="PASS" starttime="20190116 18:37:43.656" endtime="20190116 18:37:43.721"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.724" endtime="20190116 18:37:43.729"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20190116 18:37:43.760" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20190116 18:37:43.732" endtime="20190116 18:37:43.761"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.764" endtime="20190116 18:37:43.769"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20190116 18:37:43.797" level="INFO">${data} = aabbccdd11223344</msg>
<status status="PASS" starttime="20190116 18:37:43.772" endtime="20190116 18:37:43.798"></status>
</kw>
<msg timestamp="20190116 18:37:43.802" level="INFO">${status} = True</msg>
<msg timestamp="20190116 18:37:43.803" level="INFO">${data} = aabbccdd11223344</msg>
<status status="PASS" starttime="20190116 18:37:43.411" endtime="20190116 18:37:43.804"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.809" endtime="20190116 18:37:43.813"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:43.816" endtime="20190116 18:37:43.823"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg timestamp="20190116 18:37:43.836" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:44.340" level="INFO">Process did not complete in 500 milliseconds.</msg>
<msg timestamp="20190116 18:37:44.342" level="INFO">Gracefully terminating process.</msg>
<msg timestamp="20190116 18:37:44.346" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:44.349" level="INFO">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190116 18:37:43.832" endtime="20190116 18:37:44.350"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:37:44.358" level="INFO">3 lines returned</msg>
<msg timestamp="20190116 18:37:44.360" level="INFO">${temp} = [' (1547663863.407869)  can2  768   [8]  AA BB CC DD 11 22 33 44', ' (1547663863.576174)  can2  767   [8]  AA BB CC DD 11 22 33 44', ' (1547663863.913317)  can2  768   [8]  AA BB CC DD 11 22 33 44']</msg>
<status status="PASS" starttime="20190116 18:37:44.353" endtime="20190116 18:37:44.361"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg timestamp="20190116 18:37:44.367" level="INFO">${FILTER} = ['withoutfilter']</msg>
<status status="PASS" starttime="20190116 18:37:44.364" endtime="20190116 18:37:44.368"></status>
</kw>
<kw name="Set Canid Status And Filter" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:44.371" endtime="20190116 18:37:44.375"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg timestamp="20190116 18:37:44.383" level="INFO">(1547663863.407869)  can2  768   [8]  AA BB CC DD 11 22 33 44
 (1547663863.576174)  can2  767   [8]  AA BB CC DD 11 22 33 44
 (1547663863.913317)  can2  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg timestamp="20190116 18:37:44.385" level="INFO">${ret_list} = [{'timestamp': '1547663863.407869', 'channel': 'can2', 'payload': 'AABBCCDD11223344', 'id': '768'}, {'timestamp': '1547663863.576174', 'channel': 'can2', 'payload': 'AABBCCDD11223344', 'id': '767'}, {...</msg>
<status status="PASS" starttime="20190116 18:37:44.379" endtime="20190116 18:37:44.387"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:37:44.404" level="INFO">${RESULT} = False</msg>
<status status="PASS" starttime="20190116 18:37:44.399" endtime="20190116 18:37:44.405"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20190116 18:37:44.412" level="INFO">Length is 3</msg>
<msg timestamp="20190116 18:37:44.415" level="INFO">${count} = 3</msg>
<status status="PASS" starttime="20190116 18:37:44.408" endtime="20190116 18:37:44.416"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:44.418" endtime="20190116 18:37:44.424"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:37:44.432" level="INFO">${msgcount} = 0</msg>
<status status="PASS" starttime="20190116 18:37:44.427" endtime="20190116 18:37:44.433"></status>
</kw>
<kw name="${item_dict} IN [ @{responses_list} ]" type="for">
<kw name="${item_dict} = {'timestamp': '1547663863.407869', 'channel': 'can2', 'payload': 'AABBCCDD11223344', 'id': '768'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:37:44.445" level="INFO">${payload} = AABBCCDD11223344</msg>
<status status="PASS" starttime="20190116 18:37:44.440" endtime="20190116 18:37:44.446"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190116 18:37:44.454" level="INFO">${can_id} = 768</msg>
<status status="PASS" starttime="20190116 18:37:44.449" endtime="20190116 18:37:44.455"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190116 18:37:44.465" level="INFO">${count_msg} = 1</msg>
<status status="PASS" starttime="20190116 18:37:44.458" endtime="20190116 18:37:44.466"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190116 18:37:44.477" level="INFO">${count_id} = 0</msg>
<status status="PASS" starttime="20190116 18:37:44.469" endtime="20190116 18:37:44.478"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:37:44.487" level="INFO">${msgcount} = 1</msg>
<status status="PASS" starttime="20190116 18:37:44.481" endtime="20190116 18:37:44.487"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:37:44.498" level="INFO">${RESULT} = False</msg>
<status status="PASS" starttime="20190116 18:37:44.490" endtime="20190116 18:37:44.498"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:44.501" endtime="20190116 18:37:44.508"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:44.437" endtime="20190116 18:37:44.508"></status>
</kw>
<kw name="${item_dict} = {'timestamp': '1547663863.576174', 'channel': 'can2', 'payload': 'AABBCCDD11223344', 'id': '767'}" type="foritem">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg timestamp="20190116 18:37:44.518" level="INFO">${payload} = AABBCCDD11223344</msg>
<status status="PASS" starttime="20190116 18:37:44.513" endtime="20190116 18:37:44.518"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg timestamp="20190116 18:37:44.526" level="INFO">${can_id} = 767</msg>
<status status="PASS" starttime="20190116 18:37:44.522" endtime="20190116 18:37:44.527"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg timestamp="20190116 18:37:44.537" level="INFO">${count_msg} = 1</msg>
<status status="PASS" starttime="20190116 18:37:44.530" endtime="20190116 18:37:44.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg timestamp="20190116 18:37:44.548" level="INFO">${count_id} = 1</msg>
<status status="PASS" starttime="20190116 18:37:44.541" endtime="20190116 18:37:44.549"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg timestamp="20190116 18:37:44.558" level="INFO">${msgcount} = 2</msg>
<status status="PASS" starttime="20190116 18:37:44.552" endtime="20190116 18:37:44.559"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:37:44.569" level="INFO">${RESULT} = True</msg>
<status status="PASS" starttime="20190116 18:37:44.562" endtime="20190116 18:37:44.570"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg timestamp="20190116 18:37:44.579" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190116 18:37:44.573" endtime="20190116 18:37:44.581"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:44.510" endtime="20190116 18:37:44.582"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:44.434" endtime="20190116 18:37:44.582"></status>
</kw>
<msg timestamp="20190116 18:37:44.587" level="INFO">${res} = True</msg>
<status status="PASS" starttime="20190116 18:37:44.390" endtime="20190116 18:37:44.588"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:44.591" endtime="20190116 18:37:44.597"></status>
</kw>
<msg timestamp="20190116 18:37:44.601" level="INFO">${res} = True</msg>
<status status="PASS" starttime="20190116 18:37:43.825" endtime="20190116 18:37:44.602"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:44.606" endtime="20190116 18:37:44.610"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:40.886" endtime="20190116 18:37:44.612"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:44.626" endtime="20190116 18:37:44.673"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:44.676" endtime="20190116 18:37:44.723"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:44.726" endtime="20190116 18:37:44.773"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:45.781" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:44.776" endtime="20190116 18:37:45.783"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:45.786" endtime="20190116 18:37:45.831"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg timestamp="20190116 18:37:45.839" level="INFO">Starting process:
pkill candump</msg>
<msg timestamp="20190116 18:37:45.866" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:37:45.898" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:37:45.901" level="INFO">${rm_res} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:37:45.834" endtime="20190116 18:37:45.902"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:44.616" endtime="20190116 18:37:45.904"></status>
</kw>
<doc>Implements Test Task SKTB-56094 Vehicle buses testroutine</doc>
<tags>
<tag>Vehicle buses testroutine</tag>
</tags>
<status status="PASS" starttime="20190116 18:37:25.971" critical="yes" endtime="20190116 18:37:45.906"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:37:47.398" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:37:47.470" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:37:45.951" endtime="20190116 18:37:47.471"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:45.924" endtime="20190116 18:37:47.500"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:45.918" endtime="20190116 18:37:47.507"></status>
</kw>
<doc>Vehicle buses testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:37:23.237" endtime="20190116 18:37:47.508"></status>
</suite>
<suite name="SKTB-55194" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-55194.robot" id="s1-s19">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:37:48.263" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:37:48.259" endtime="20190116 18:37:48.273"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:37:48.295" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:37:48.297" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:37:50.480" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:37:48.276" endtime="20190116 18:37:50.503"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:48.242" endtime="20190116 18:37:50.505"></status>
</kw>
<test name="SKTB-55194" id="s1-s19-t1">
<kw name="Test_precondition" type="setup">
<doc>switch kl15 and kl 30 and prodmod off</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:50.567" endtime="20190116 18:37:50.672"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:50.678" endtime="20190116 18:37:50.770"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:50.773" endtime="20190116 18:37:50.853"></status>
</kw>
<kw name="Bidir Wake Up" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:50.860" endtime="20190116 18:37:51.436"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:37:53.453" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:37:51.439" endtime="20190116 18:37:53.455"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:53.458" endtime="20190116 18:37:53.505"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:53.509" endtime="20190116 18:37:53.557"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:53.559" endtime="20190116 18:37:53.609"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:53.612" endtime="20190116 18:37:53.687"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${1000}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:53.690" endtime="20190116 18:37:53.807"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg timestamp="20190116 18:37:54.814" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:53.810" endtime="20190116 18:37:54.816"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:50.540" endtime="20190116 18:37:54.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Implements Test Task SKTB-55194 Powermanagement</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:54.823" endtime="20190116 18:37:54.828"></status>
</kw>
<kw name="STEP_1">
<doc>Start device without KL15 and wait til device goes to standby, then wakeup with kl15 on</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start device without KL15 and wait til device goes to standby, then wakeup with kl15 on</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:54.836" endtime="20190116 18:37:54.841"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:54.844" endtime="20190116 18:37:54.892"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:54.895" endtime="20190116 18:37:54.943"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:37:56.955" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:37:54.946" endtime="20190116 18:37:56.958"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:56.960" endtime="20190116 18:37:57.058"></status>
</kw>
<kw name="WAIT_FOR_POWER_STATE">
<doc>Wait for powerstate within a given time</doc>
<arguments>
<arg>10</arg>
<arg>${POWER_APP_POWER_STATE_CARIF_ONLY}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TIMEOUT}</arg>
</arguments>
<assign>
<var>${LOOPS}</var>
</assign>
<msg timestamp="20190116 18:37:57.092" level="INFO">${LOOPS} = 10</msg>
<status status="PASS" starttime="20190116 18:37:57.081" endtime="20190116 18:37:57.093"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:37:57.122" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:37:57.096" endtime="20190116 18:37:57.123"></status>
</kw>
<kw name="${i} IN RANGE [ ${LOOPS} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:37:57.239" level="INFO">${KLEMME30} = [[12275, 30], [12325, 32]]</msg>
<status status="PASS" starttime="20190116 18:37:57.148" endtime="20190116 18:37:57.240"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:37:57.331" level="INFO">${CURR_VCARBAT} = 30</msg>
<status status="PASS" starttime="20190116 18:37:57.243" endtime="20190116 18:37:57.332"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:37:57.405" level="INFO">${CURR_KL30} = 32</msg>
<status status="PASS" starttime="20190116 18:37:57.335" endtime="20190116 18:37:57.405"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:37:57.417" level="INFO">${TIMENOW} = 1547663877</msg>
<status status="PASS" starttime="20190116 18:37:57.409" endtime="20190116 18:37:57.418"></status>
</kw>
<msg timestamp="20190116 18:37:57.423" level="INFO">${TIMENOW} = 1547663877</msg>
<msg timestamp="20190116 18:37:57.424" level="INFO">${CURR_VCARBAT} = 30</msg>
<msg timestamp="20190116 18:37:57.425" level="INFO">${CURR_KL30} = 32</msg>
<status status="PASS" starttime="20190116 18:37:57.141" endtime="20190116 18:37:57.426"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:57.435" endtime="20190116 18:37:57.636"></status>
</kw>
<msg timestamp="20190116 18:37:57.638" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190116 18:37:57.429" endtime="20190116 18:37:57.639"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:57.642" endtime="20190116 18:37:57.648"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:37:57.655" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:37:57.658" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:37:57.651" endtime="20190116 18:37:57.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:37:57.683" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190116 18:37:57.678" endtime="20190116 18:37:57.684"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:37:57.695" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:37:57.687" endtime="20190116 18:37:57.696"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:57.669" endtime="20190116 18:37:57.699"></status>
</kw>
<msg timestamp="20190116 18:37:57.701" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:37:57.662" endtime="20190116 18:37:57.702"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:37:57.715" level="INFO">${STATUS} = True</msg>
<status status="PASS" starttime="20190116 18:37:57.705" endtime="20190116 18:37:57.716"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<msg timestamp="20190116 18:37:57.726" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190116 18:37:57.720" endtime="20190116 18:37:57.727"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:57.127" endtime="20190116 18:37:57.728"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:57.124" endtime="20190116 18:37:57.729"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:57.732" endtime="20190116 18:37:57.739"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:57.742" endtime="20190116 18:37:57.748"></status>
</kw>
<msg timestamp="20190116 18:37:57.752" level="INFO">${STATUS} = True</msg>
<status status="PASS" starttime="20190116 18:37:57.060" endtime="20190116 18:37:57.753"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:57.756" endtime="20190116 18:37:57.760"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait until power state power down is reached</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:57.763" endtime="20190116 18:37:57.768"></status>
</kw>
<kw name="WAIT_FOR_POWER_STATE">
<doc>Wait for powerstate within a given time</doc>
<arguments>
<arg>70</arg>
<arg>${POWER_APP_POWER_STATE_POWER_DOWN}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TIMEOUT}</arg>
</arguments>
<assign>
<var>${LOOPS}</var>
</assign>
<msg timestamp="20190116 18:37:57.784" level="INFO">${LOOPS} = 70</msg>
<status status="PASS" starttime="20190116 18:37:57.778" endtime="20190116 18:37:57.785"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:37:57.793" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:37:57.788" endtime="20190116 18:37:57.794"></status>
</kw>
<kw name="${i} IN RANGE [ ${LOOPS} ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:37:57.860" level="INFO">${KLEMME30} = [[12250, 52], [12325, 54]]</msg>
<status status="PASS" starttime="20190116 18:37:57.809" endtime="20190116 18:37:57.861"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:37:57.910" level="INFO">${CURR_VCARBAT} = 52</msg>
<status status="PASS" starttime="20190116 18:37:57.864" endtime="20190116 18:37:57.911"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:37:58.005" level="INFO">${CURR_KL30} = 54</msg>
<status status="PASS" starttime="20190116 18:37:57.922" endtime="20190116 18:37:58.006"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:37:58.015" level="INFO">${TIMENOW} = 1547663878</msg>
<status status="PASS" starttime="20190116 18:37:58.010" endtime="20190116 18:37:58.015"></status>
</kw>
<msg timestamp="20190116 18:37:58.021" level="INFO">${TIMENOW} = 1547663878</msg>
<msg timestamp="20190116 18:37:58.022" level="INFO">${CURR_VCARBAT} = 52</msg>
<msg timestamp="20190116 18:37:58.023" level="INFO">${CURR_KL30} = 54</msg>
<status status="PASS" starttime="20190116 18:37:57.802" endtime="20190116 18:37:58.024"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:58.032" endtime="20190116 18:37:58.305"></status>
</kw>
<msg timestamp="20190116 18:37:58.307" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190116 18:37:58.027" endtime="20190116 18:37:58.308"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:58.311" endtime="20190116 18:37:58.316"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:37:58.323" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:37:58.325" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:37:58.319" endtime="20190116 18:37:58.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:37:58.354" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190116 18:37:58.348" endtime="20190116 18:37:58.355"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:37:58.372" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:37:58.358" endtime="20190116 18:37:58.373"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:58.336" endtime="20190116 18:37:58.376"></status>
</kw>
<msg timestamp="20190116 18:37:58.378" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:37:58.329" endtime="20190116 18:37:58.379"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:37:58.390" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:37:58.381" endtime="20190116 18:37:58.391"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:58.393" endtime="20190116 18:37:58.400"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:37:59.407" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:58.403" endtime="20190116 18:37:59.409"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:57.798" endtime="20190116 18:37:59.410"></status>
</kw>
<kw name="${i} = 1" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:37:59.470" level="INFO">${KLEMME30} = [[12250, 71], [12325, 75]]</msg>
<status status="PASS" starttime="20190116 18:37:59.420" endtime="20190116 18:37:59.470"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:37:59.508" level="INFO">${CURR_VCARBAT} = 71</msg>
<status status="PASS" starttime="20190116 18:37:59.474" endtime="20190116 18:37:59.509"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:37:59.545" level="INFO">${CURR_KL30} = 75</msg>
<status status="PASS" starttime="20190116 18:37:59.512" endtime="20190116 18:37:59.546"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:37:59.554" level="INFO">${TIMENOW} = 1547663879</msg>
<status status="PASS" starttime="20190116 18:37:59.549" endtime="20190116 18:37:59.555"></status>
</kw>
<msg timestamp="20190116 18:37:59.560" level="INFO">${TIMENOW} = 1547663879</msg>
<msg timestamp="20190116 18:37:59.561" level="INFO">${CURR_VCARBAT} = 71</msg>
<msg timestamp="20190116 18:37:59.562" level="INFO">${CURR_KL30} = 75</msg>
<status status="PASS" starttime="20190116 18:37:59.413" endtime="20190116 18:37:59.563"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:59.572" endtime="20190116 18:37:59.769"></status>
</kw>
<msg timestamp="20190116 18:37:59.771" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190116 18:37:59.566" endtime="20190116 18:37:59.772"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:59.775" endtime="20190116 18:37:59.780"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:37:59.787" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:37:59.789" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:37:59.783" endtime="20190116 18:37:59.790"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:37:59.814" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190116 18:37:59.809" endtime="20190116 18:37:59.815"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:37:59.823" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:37:59.818" endtime="20190116 18:37:59.824"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:59.800" endtime="20190116 18:37:59.827"></status>
</kw>
<msg timestamp="20190116 18:37:59.829" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:37:59.793" endtime="20190116 18:37:59.830"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:37:59.840" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:37:59.833" endtime="20190116 18:37:59.841"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:37:59.844" endtime="20190116 18:37:59.850"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:00.885" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:37:59.853" endtime="20190116 18:38:00.887"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:59.411" endtime="20190116 18:38:00.887"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:01.079" level="INFO">${KLEMME30} = [[12250, 80], [12325, 85]]</msg>
<status status="PASS" starttime="20190116 18:38:00.926" endtime="20190116 18:38:01.080"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:01.160" level="INFO">${CURR_VCARBAT} = 80</msg>
<status status="PASS" starttime="20190116 18:38:01.083" endtime="20190116 18:38:01.161"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:01.198" level="INFO">${CURR_KL30} = 85</msg>
<status status="PASS" starttime="20190116 18:38:01.164" endtime="20190116 18:38:01.199"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:01.206" level="INFO">${TIMENOW} = 1547663881</msg>
<status status="PASS" starttime="20190116 18:38:01.202" endtime="20190116 18:38:01.207"></status>
</kw>
<msg timestamp="20190116 18:38:01.212" level="INFO">${TIMENOW} = 1547663881</msg>
<msg timestamp="20190116 18:38:01.213" level="INFO">${CURR_VCARBAT} = 80</msg>
<msg timestamp="20190116 18:38:01.215" level="INFO">${CURR_KL30} = 85</msg>
<status status="PASS" starttime="20190116 18:38:00.895" endtime="20190116 18:38:01.215"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:01.224" endtime="20190116 18:38:01.491"></status>
</kw>
<msg timestamp="20190116 18:38:01.494" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190116 18:38:01.218" endtime="20190116 18:38:01.494"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:01.510" endtime="20190116 18:38:01.517"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:01.525" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:01.527" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:01.520" endtime="20190116 18:38:01.528"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:01.556" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:01.547" endtime="20190116 18:38:01.557"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:01.566" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:01.560" endtime="20190116 18:38:01.566"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:01.537" endtime="20190116 18:38:01.570"></status>
</kw>
<msg timestamp="20190116 18:38:01.571" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:01.531" endtime="20190116 18:38:01.572"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:01.583" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:01.575" endtime="20190116 18:38:01.584"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:01.586" endtime="20190116 18:38:01.593"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:02.600" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:01.596" endtime="20190116 18:38:02.602"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:00.893" endtime="20190116 18:38:02.603"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:02.661" level="INFO">${KLEMME30} = [[12250, 97], [12300, 97]]</msg>
<status status="PASS" starttime="20190116 18:38:02.612" endtime="20190116 18:38:02.662"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:02.698" level="INFO">${CURR_VCARBAT} = 97</msg>
<status status="PASS" starttime="20190116 18:38:02.665" endtime="20190116 18:38:02.699"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:02.734" level="INFO">${CURR_KL30} = 97</msg>
<status status="PASS" starttime="20190116 18:38:02.702" endtime="20190116 18:38:02.735"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:02.743" level="INFO">${TIMENOW} = 1547663882</msg>
<status status="PASS" starttime="20190116 18:38:02.738" endtime="20190116 18:38:02.744"></status>
</kw>
<msg timestamp="20190116 18:38:02.749" level="INFO">${TIMENOW} = 1547663882</msg>
<msg timestamp="20190116 18:38:02.750" level="INFO">${CURR_VCARBAT} = 97</msg>
<msg timestamp="20190116 18:38:02.751" level="INFO">${CURR_KL30} = 97</msg>
<status status="PASS" starttime="20190116 18:38:02.606" endtime="20190116 18:38:02.751"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:02.760" endtime="20190116 18:38:02.957"></status>
</kw>
<msg timestamp="20190116 18:38:02.960" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190116 18:38:02.754" endtime="20190116 18:38:02.961"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:02.964" endtime="20190116 18:38:02.969"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:02.977" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:02.979" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:02.972" endtime="20190116 18:38:02.980"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:03.004" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:02.998" endtime="20190116 18:38:03.005"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:03.013" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:03.007" endtime="20190116 18:38:03.014"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:02.990" endtime="20190116 18:38:03.017"></status>
</kw>
<msg timestamp="20190116 18:38:03.018" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:02.983" endtime="20190116 18:38:03.019"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:03.029" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:03.022" endtime="20190116 18:38:03.030"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:03.033" endtime="20190116 18:38:03.039"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:04.045" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:03.041" endtime="20190116 18:38:04.048"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:02.604" endtime="20190116 18:38:04.048"></status>
</kw>
<kw name="${i} = 4" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:04.107" level="INFO">${KLEMME30} = [[12250, 72], [12325, 76]]</msg>
<status status="PASS" starttime="20190116 18:38:04.058" endtime="20190116 18:38:04.109"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:04.144" level="INFO">${CURR_VCARBAT} = 72</msg>
<status status="PASS" starttime="20190116 18:38:04.112" endtime="20190116 18:38:04.145"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:04.181" level="INFO">${CURR_KL30} = 76</msg>
<status status="PASS" starttime="20190116 18:38:04.148" endtime="20190116 18:38:04.182"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:04.190" level="INFO">${TIMENOW} = 1547663884</msg>
<status status="PASS" starttime="20190116 18:38:04.185" endtime="20190116 18:38:04.190"></status>
</kw>
<msg timestamp="20190116 18:38:04.195" level="INFO">${TIMENOW} = 1547663884</msg>
<msg timestamp="20190116 18:38:04.196" level="INFO">${CURR_VCARBAT} = 72</msg>
<msg timestamp="20190116 18:38:04.197" level="INFO">${CURR_KL30} = 76</msg>
<status status="PASS" starttime="20190116 18:38:04.052" endtime="20190116 18:38:04.198"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:04.207" endtime="20190116 18:38:04.409"></status>
</kw>
<msg timestamp="20190116 18:38:04.411" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190116 18:38:04.201" endtime="20190116 18:38:04.412"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:04.415" endtime="20190116 18:38:04.420"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:04.427" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:04.429" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:04.423" endtime="20190116 18:38:04.430"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:04.457" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:04.448" endtime="20190116 18:38:04.458"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:04.466" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:04.460" endtime="20190116 18:38:04.467"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:04.440" endtime="20190116 18:38:04.471"></status>
</kw>
<msg timestamp="20190116 18:38:04.472" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:04.433" endtime="20190116 18:38:04.473"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:04.491" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:04.476" endtime="20190116 18:38:04.492"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:04.495" endtime="20190116 18:38:04.501"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:05.508" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:04.504" endtime="20190116 18:38:05.510"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:04.050" endtime="20190116 18:38:05.511"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:05.569" level="INFO">${KLEMME30} = [[12250, 77], [12325, 81]]</msg>
<status status="PASS" starttime="20190116 18:38:05.520" endtime="20190116 18:38:05.570"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:05.606" level="INFO">${CURR_VCARBAT} = 77</msg>
<status status="PASS" starttime="20190116 18:38:05.574" endtime="20190116 18:38:05.607"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:05.644" level="INFO">${CURR_KL30} = 81</msg>
<status status="PASS" starttime="20190116 18:38:05.611" endtime="20190116 18:38:05.645"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:05.653" level="INFO">${TIMENOW} = 1547663885</msg>
<status status="PASS" starttime="20190116 18:38:05.648" endtime="20190116 18:38:05.653"></status>
</kw>
<msg timestamp="20190116 18:38:05.658" level="INFO">${TIMENOW} = 1547663885</msg>
<msg timestamp="20190116 18:38:05.659" level="INFO">${CURR_VCARBAT} = 77</msg>
<msg timestamp="20190116 18:38:05.661" level="INFO">${CURR_KL30} = 81</msg>
<status status="PASS" starttime="20190116 18:38:05.514" endtime="20190116 18:38:05.661"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:05.670" endtime="20190116 18:38:05.866"></status>
</kw>
<msg timestamp="20190116 18:38:05.868" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190116 18:38:05.665" endtime="20190116 18:38:05.869"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:05.872" endtime="20190116 18:38:05.878"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:05.885" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:05.887" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:05.881" endtime="20190116 18:38:05.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:05.910" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:05.906" endtime="20190116 18:38:05.911"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:05.919" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:05.914" endtime="20190116 18:38:05.920"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:05.897" endtime="20190116 18:38:05.923"></status>
</kw>
<msg timestamp="20190116 18:38:05.925" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:05.890" endtime="20190116 18:38:05.925"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:05.935" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:05.928" endtime="20190116 18:38:05.936"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:05.939" endtime="20190116 18:38:05.945"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:06.952" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:05.948" endtime="20190116 18:38:06.954"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:05.512" endtime="20190116 18:38:06.954"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:07.038" level="INFO">${KLEMME30} = [[12225, 108], [12300, 132]]</msg>
<status status="PASS" starttime="20190116 18:38:06.964" endtime="20190116 18:38:07.039"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:07.084" level="INFO">${CURR_VCARBAT} = 108</msg>
<status status="PASS" starttime="20190116 18:38:07.046" endtime="20190116 18:38:07.085"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:07.207" level="INFO">${CURR_KL30} = 132</msg>
<status status="PASS" starttime="20190116 18:38:07.088" endtime="20190116 18:38:07.212"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:07.244" level="INFO">${TIMENOW} = 1547663887</msg>
<status status="PASS" starttime="20190116 18:38:07.215" endtime="20190116 18:38:07.249"></status>
</kw>
<msg timestamp="20190116 18:38:07.295" level="INFO">${TIMENOW} = 1547663887</msg>
<msg timestamp="20190116 18:38:07.296" level="INFO">${CURR_VCARBAT} = 108</msg>
<msg timestamp="20190116 18:38:07.297" level="INFO">${CURR_KL30} = 132</msg>
<status status="PASS" starttime="20190116 18:38:06.958" endtime="20190116 18:38:07.298"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:07.319" endtime="20190116 18:38:07.562"></status>
</kw>
<msg timestamp="20190116 18:38:07.563" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190116 18:38:07.301" endtime="20190116 18:38:07.565"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:07.568" endtime="20190116 18:38:07.585"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:07.593" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:07.596" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:07.589" endtime="20190116 18:38:07.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:07.625" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:07.619" endtime="20190116 18:38:07.626"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:07.635" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:07.629" endtime="20190116 18:38:07.635"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:07.607" endtime="20190116 18:38:07.639"></status>
</kw>
<msg timestamp="20190116 18:38:07.641" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:07.599" endtime="20190116 18:38:07.642"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:07.652" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:07.645" endtime="20190116 18:38:07.653"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:07.656" endtime="20190116 18:38:07.662"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:08.669" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:07.665" endtime="20190116 18:38:08.671"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:06.956" endtime="20190116 18:38:08.672"></status>
</kw>
<kw name="${i} = 7" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:08.715" level="INFO">${KLEMME30} = [[12200, 175], [12275, 191]]</msg>
<status status="PASS" starttime="20190116 18:38:08.682" endtime="20190116 18:38:08.715"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:08.752" level="INFO">${CURR_VCARBAT} = 175</msg>
<status status="PASS" starttime="20190116 18:38:08.719" endtime="20190116 18:38:08.752"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:08.788" level="INFO">${CURR_KL30} = 191</msg>
<status status="PASS" starttime="20190116 18:38:08.755" endtime="20190116 18:38:08.789"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:08.797" level="INFO">${TIMENOW} = 1547663888</msg>
<status status="PASS" starttime="20190116 18:38:08.792" endtime="20190116 18:38:08.798"></status>
</kw>
<msg timestamp="20190116 18:38:08.802" level="INFO">${TIMENOW} = 1547663888</msg>
<msg timestamp="20190116 18:38:08.803" level="INFO">${CURR_VCARBAT} = 175</msg>
<msg timestamp="20190116 18:38:08.805" level="INFO">${CURR_KL30} = 191</msg>
<status status="PASS" starttime="20190116 18:38:08.676" endtime="20190116 18:38:08.806"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:08.814" endtime="20190116 18:38:08.961"></status>
</kw>
<msg timestamp="20190116 18:38:08.963" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190116 18:38:08.809" endtime="20190116 18:38:08.964"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:08.967" endtime="20190116 18:38:08.974"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:08.982" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:08.984" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:08.978" endtime="20190116 18:38:08.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:09.009" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:09.005" endtime="20190116 18:38:09.010"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:09.018" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:09.013" endtime="20190116 18:38:09.019"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:08.995" endtime="20190116 18:38:09.022"></status>
</kw>
<msg timestamp="20190116 18:38:09.024" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:08.988" endtime="20190116 18:38:09.025"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:09.035" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:09.028" endtime="20190116 18:38:09.035"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:09.038" endtime="20190116 18:38:09.044"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:10.052" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:09.047" endtime="20190116 18:38:10.054"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:08.673" endtime="20190116 18:38:10.055"></status>
</kw>
<kw name="${i} = 8" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:10.156" level="INFO">${KLEMME30} = [[12200, 177], [12275, 186]]</msg>
<status status="PASS" starttime="20190116 18:38:10.065" endtime="20190116 18:38:10.157"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:10.288" level="INFO">${CURR_VCARBAT} = 177</msg>
<status status="PASS" starttime="20190116 18:38:10.160" endtime="20190116 18:38:10.289"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:10.371" level="INFO">${CURR_KL30} = 186</msg>
<status status="PASS" starttime="20190116 18:38:10.304" endtime="20190116 18:38:10.373"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:10.391" level="INFO">${TIMENOW} = 1547663890</msg>
<status status="PASS" starttime="20190116 18:38:10.376" endtime="20190116 18:38:10.391"></status>
</kw>
<msg timestamp="20190116 18:38:10.396" level="INFO">${TIMENOW} = 1547663890</msg>
<msg timestamp="20190116 18:38:10.398" level="INFO">${CURR_VCARBAT} = 177</msg>
<msg timestamp="20190116 18:38:10.399" level="INFO">${CURR_KL30} = 186</msg>
<status status="PASS" starttime="20190116 18:38:10.058" endtime="20190116 18:38:10.399"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:10.411" endtime="20190116 18:38:10.615"></status>
</kw>
<msg timestamp="20190116 18:38:10.617" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190116 18:38:10.405" endtime="20190116 18:38:10.618"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:10.621" endtime="20190116 18:38:10.626"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:10.634" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:10.635" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:10.629" endtime="20190116 18:38:10.636"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:10.663" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:10.654" endtime="20190116 18:38:10.664"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:10.673" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:10.667" endtime="20190116 18:38:10.674"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:10.646" endtime="20190116 18:38:10.677"></status>
</kw>
<msg timestamp="20190116 18:38:10.679" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:10.639" endtime="20190116 18:38:10.680"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:10.690" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:10.683" endtime="20190116 18:38:10.691"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:10.694" endtime="20190116 18:38:10.700"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:11.707" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:10.703" endtime="20190116 18:38:11.709"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:10.056" endtime="20190116 18:38:11.710"></status>
</kw>
<kw name="${i} = 9" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:11.769" level="INFO">${KLEMME30} = [[12225, 133], [12300, 141]]</msg>
<status status="PASS" starttime="20190116 18:38:11.720" endtime="20190116 18:38:11.770"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:11.806" level="INFO">${CURR_VCARBAT} = 133</msg>
<status status="PASS" starttime="20190116 18:38:11.773" endtime="20190116 18:38:11.807"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:11.843" level="INFO">${CURR_KL30} = 141</msg>
<status status="PASS" starttime="20190116 18:38:11.810" endtime="20190116 18:38:11.844"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:11.851" level="INFO">${TIMENOW} = 1547663891</msg>
<status status="PASS" starttime="20190116 18:38:11.846" endtime="20190116 18:38:11.852"></status>
</kw>
<msg timestamp="20190116 18:38:11.857" level="INFO">${TIMENOW} = 1547663891</msg>
<msg timestamp="20190116 18:38:11.858" level="INFO">${CURR_VCARBAT} = 133</msg>
<msg timestamp="20190116 18:38:11.859" level="INFO">${CURR_KL30} = 141</msg>
<status status="PASS" starttime="20190116 18:38:11.713" endtime="20190116 18:38:11.859"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:11.868" endtime="20190116 18:38:12.066"></status>
</kw>
<msg timestamp="20190116 18:38:12.067" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190116 18:38:11.862" endtime="20190116 18:38:12.069"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:12.072" endtime="20190116 18:38:12.077"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:12.084" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:12.087" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:12.080" endtime="20190116 18:38:12.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:12.111" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:12.107" endtime="20190116 18:38:12.112"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:12.120" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:12.115" endtime="20190116 18:38:12.121"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:12.098" endtime="20190116 18:38:12.124"></status>
</kw>
<msg timestamp="20190116 18:38:12.126" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:12.091" endtime="20190116 18:38:12.127"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:12.137" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:12.130" endtime="20190116 18:38:12.137"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:12.140" endtime="20190116 18:38:12.146"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:13.153" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:12.149" endtime="20190116 18:38:13.155"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:11.711" endtime="20190116 18:38:13.156"></status>
</kw>
<kw name="${i} = 10" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:13.215" level="INFO">${KLEMME30} = [[12200, 189], [12275, 200]]</msg>
<status status="PASS" starttime="20190116 18:38:13.166" endtime="20190116 18:38:13.216"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:13.253" level="INFO">${CURR_VCARBAT} = 189</msg>
<status status="PASS" starttime="20190116 18:38:13.219" endtime="20190116 18:38:13.254"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:13.293" level="INFO">${CURR_KL30} = 200</msg>
<status status="PASS" starttime="20190116 18:38:13.257" endtime="20190116 18:38:13.294"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:13.301" level="INFO">${TIMENOW} = 1547663893</msg>
<status status="PASS" starttime="20190116 18:38:13.297" endtime="20190116 18:38:13.302"></status>
</kw>
<msg timestamp="20190116 18:38:13.307" level="INFO">${TIMENOW} = 1547663893</msg>
<msg timestamp="20190116 18:38:13.308" level="INFO">${CURR_VCARBAT} = 189</msg>
<msg timestamp="20190116 18:38:13.309" level="INFO">${CURR_KL30} = 200</msg>
<status status="PASS" starttime="20190116 18:38:13.159" endtime="20190116 18:38:13.310"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:13.318" endtime="20190116 18:38:13.530"></status>
</kw>
<msg timestamp="20190116 18:38:13.532" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190116 18:38:13.313" endtime="20190116 18:38:13.532"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:13.535" endtime="20190116 18:38:13.541"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:13.548" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:13.550" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:13.544" endtime="20190116 18:38:13.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:13.587" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:13.569" endtime="20190116 18:38:13.588"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:13.596" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:13.591" endtime="20190116 18:38:13.597"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:13.560" endtime="20190116 18:38:13.600"></status>
</kw>
<msg timestamp="20190116 18:38:13.602" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:13.554" endtime="20190116 18:38:13.603"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:13.613" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:13.605" endtime="20190116 18:38:13.613"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:13.616" endtime="20190116 18:38:13.622"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:14.629" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:13.625" endtime="20190116 18:38:14.631"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:13.157" endtime="20190116 18:38:14.632"></status>
</kw>
<kw name="${i} = 11" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:14.694" level="INFO">${KLEMME30} = [[12200, 190], [12275, 202]]</msg>
<status status="PASS" starttime="20190116 18:38:14.642" endtime="20190116 18:38:14.695"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:14.731" level="INFO">${CURR_VCARBAT} = 190</msg>
<status status="PASS" starttime="20190116 18:38:14.698" endtime="20190116 18:38:14.732"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:14.768" level="INFO">${CURR_KL30} = 202</msg>
<status status="PASS" starttime="20190116 18:38:14.735" endtime="20190116 18:38:14.769"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:14.776" level="INFO">${TIMENOW} = 1547663894</msg>
<status status="PASS" starttime="20190116 18:38:14.771" endtime="20190116 18:38:14.777"></status>
</kw>
<msg timestamp="20190116 18:38:14.782" level="INFO">${TIMENOW} = 1547663894</msg>
<msg timestamp="20190116 18:38:14.783" level="INFO">${CURR_VCARBAT} = 190</msg>
<msg timestamp="20190116 18:38:14.785" level="INFO">${CURR_KL30} = 202</msg>
<status status="PASS" starttime="20190116 18:38:14.635" endtime="20190116 18:38:14.785"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:14.794" endtime="20190116 18:38:14.991"></status>
</kw>
<msg timestamp="20190116 18:38:14.993" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190116 18:38:14.788" endtime="20190116 18:38:14.995"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:14.998" endtime="20190116 18:38:15.004"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:15.012" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:15.014" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:15.007" endtime="20190116 18:38:15.015"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:15.040" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:15.035" endtime="20190116 18:38:15.041"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:15.049" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:15.044" endtime="20190116 18:38:15.051"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:15.026" endtime="20190116 18:38:15.054"></status>
</kw>
<msg timestamp="20190116 18:38:15.055" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:15.018" endtime="20190116 18:38:15.056"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:15.066" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:15.059" endtime="20190116 18:38:15.067"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:15.070" endtime="20190116 18:38:15.076"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:16.083" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:15.079" endtime="20190116 18:38:16.086"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:14.633" endtime="20190116 18:38:16.086"></status>
</kw>
<kw name="${i} = 12" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:16.145" level="INFO">${KLEMME30} = [[12200, 191], [12275, 201]]</msg>
<status status="PASS" starttime="20190116 18:38:16.097" endtime="20190116 18:38:16.146"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:16.182" level="INFO">${CURR_VCARBAT} = 191</msg>
<status status="PASS" starttime="20190116 18:38:16.150" endtime="20190116 18:38:16.183"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:16.219" level="INFO">${CURR_KL30} = 201</msg>
<status status="PASS" starttime="20190116 18:38:16.186" endtime="20190116 18:38:16.220"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:16.227" level="INFO">${TIMENOW} = 1547663896</msg>
<status status="PASS" starttime="20190116 18:38:16.223" endtime="20190116 18:38:16.228"></status>
</kw>
<msg timestamp="20190116 18:38:16.233" level="INFO">${TIMENOW} = 1547663896</msg>
<msg timestamp="20190116 18:38:16.234" level="INFO">${CURR_VCARBAT} = 191</msg>
<msg timestamp="20190116 18:38:16.235" level="INFO">${CURR_KL30} = 201</msg>
<status status="PASS" starttime="20190116 18:38:16.090" endtime="20190116 18:38:16.236"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:16.245" endtime="20190116 18:38:16.440"></status>
</kw>
<msg timestamp="20190116 18:38:16.442" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190116 18:38:16.239" endtime="20190116 18:38:16.443"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:16.448" endtime="20190116 18:38:16.455"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:16.486" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:16.488" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:16.465" endtime="20190116 18:38:16.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:16.540" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:16.530" endtime="20190116 18:38:16.541"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:16.551" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:16.544" endtime="20190116 18:38:16.551"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:16.509" endtime="20190116 18:38:16.555"></status>
</kw>
<msg timestamp="20190116 18:38:16.556" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:16.492" endtime="20190116 18:38:16.557"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:16.567" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:16.560" endtime="20190116 18:38:16.568"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:16.571" endtime="20190116 18:38:16.577"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:17.584" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:16.580" endtime="20190116 18:38:17.586"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:16.088" endtime="20190116 18:38:17.587"></status>
</kw>
<kw name="${i} = 13" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:17.646" level="INFO">${KLEMME30} = [[12200, 162], [12275, 171]]</msg>
<status status="PASS" starttime="20190116 18:38:17.597" endtime="20190116 18:38:17.647"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:17.683" level="INFO">${CURR_VCARBAT} = 162</msg>
<status status="PASS" starttime="20190116 18:38:17.650" endtime="20190116 18:38:17.684"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:17.720" level="INFO">${CURR_KL30} = 171</msg>
<status status="PASS" starttime="20190116 18:38:17.687" endtime="20190116 18:38:17.721"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:17.728" level="INFO">${TIMENOW} = 1547663897</msg>
<status status="PASS" starttime="20190116 18:38:17.724" endtime="20190116 18:38:17.729"></status>
</kw>
<msg timestamp="20190116 18:38:17.734" level="INFO">${TIMENOW} = 1547663897</msg>
<msg timestamp="20190116 18:38:17.735" level="INFO">${CURR_VCARBAT} = 162</msg>
<msg timestamp="20190116 18:38:17.736" level="INFO">${CURR_KL30} = 171</msg>
<status status="PASS" starttime="20190116 18:38:17.590" endtime="20190116 18:38:17.737"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:17.745" endtime="20190116 18:38:17.941"></status>
</kw>
<msg timestamp="20190116 18:38:17.943" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190116 18:38:17.740" endtime="20190116 18:38:17.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:17.947" endtime="20190116 18:38:17.952"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:17.959" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:17.961" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:17.955" endtime="20190116 18:38:17.962"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:17.985" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:17.980" endtime="20190116 18:38:17.986"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:17.994" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:17.989" endtime="20190116 18:38:17.995"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:17.972" endtime="20190116 18:38:17.998"></status>
</kw>
<msg timestamp="20190116 18:38:18.000" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:17.965" endtime="20190116 18:38:18.001"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:18.011" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:18.004" endtime="20190116 18:38:18.012"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:18.015" endtime="20190116 18:38:18.021"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:19.028" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:18.024" endtime="20190116 18:38:19.030"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:17.588" endtime="20190116 18:38:19.030"></status>
</kw>
<kw name="${i} = 14" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:19.089" level="INFO">${KLEMME30} = [[12200, 205], [12275, 172]]</msg>
<status status="PASS" starttime="20190116 18:38:19.040" endtime="20190116 18:38:19.090"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:19.127" level="INFO">${CURR_VCARBAT} = 205</msg>
<status status="PASS" starttime="20190116 18:38:19.095" endtime="20190116 18:38:19.128"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:19.168" level="INFO">${CURR_KL30} = 172</msg>
<status status="PASS" starttime="20190116 18:38:19.131" endtime="20190116 18:38:19.169"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:19.176" level="INFO">${TIMENOW} = 1547663899</msg>
<status status="PASS" starttime="20190116 18:38:19.172" endtime="20190116 18:38:19.177"></status>
</kw>
<msg timestamp="20190116 18:38:19.182" level="INFO">${TIMENOW} = 1547663899</msg>
<msg timestamp="20190116 18:38:19.183" level="INFO">${CURR_VCARBAT} = 205</msg>
<msg timestamp="20190116 18:38:19.184" level="INFO">${CURR_KL30} = 172</msg>
<status status="PASS" starttime="20190116 18:38:19.034" endtime="20190116 18:38:19.185"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:19.193" endtime="20190116 18:38:19.390"></status>
</kw>
<msg timestamp="20190116 18:38:19.392" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190116 18:38:19.188" endtime="20190116 18:38:19.393"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:19.396" endtime="20190116 18:38:19.402"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:19.409" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:19.411" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:19.405" endtime="20190116 18:38:19.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:19.438" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:19.430" endtime="20190116 18:38:19.439"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:19.447" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:19.442" endtime="20190116 18:38:19.448"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:19.421" endtime="20190116 18:38:19.451"></status>
</kw>
<msg timestamp="20190116 18:38:19.453" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:19.414" endtime="20190116 18:38:19.454"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:19.463" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:19.457" endtime="20190116 18:38:19.464"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:19.467" endtime="20190116 18:38:19.473"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:20.481" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:19.476" endtime="20190116 18:38:20.483"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:19.032" endtime="20190116 18:38:20.483"></status>
</kw>
<kw name="${i} = 15" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:20.542" level="INFO">${KLEMME30} = [[12225, 157], [12275, 168]]</msg>
<status status="PASS" starttime="20190116 18:38:20.494" endtime="20190116 18:38:20.543"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:20.579" level="INFO">${CURR_VCARBAT} = 157</msg>
<status status="PASS" starttime="20190116 18:38:20.547" endtime="20190116 18:38:20.580"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:20.616" level="INFO">${CURR_KL30} = 168</msg>
<status status="PASS" starttime="20190116 18:38:20.583" endtime="20190116 18:38:20.617"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:20.624" level="INFO">${TIMENOW} = 1547663900</msg>
<status status="PASS" starttime="20190116 18:38:20.620" endtime="20190116 18:38:20.625"></status>
</kw>
<msg timestamp="20190116 18:38:20.630" level="INFO">${TIMENOW} = 1547663900</msg>
<msg timestamp="20190116 18:38:20.631" level="INFO">${CURR_VCARBAT} = 157</msg>
<msg timestamp="20190116 18:38:20.632" level="INFO">${CURR_KL30} = 168</msg>
<status status="PASS" starttime="20190116 18:38:20.487" endtime="20190116 18:38:20.633"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:20.641" endtime="20190116 18:38:20.838"></status>
</kw>
<msg timestamp="20190116 18:38:20.841" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190116 18:38:20.636" endtime="20190116 18:38:20.842"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:20.845" endtime="20190116 18:38:20.850"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:20.858" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:20.859" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:20.853" endtime="20190116 18:38:20.860"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:20.884" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:20.879" endtime="20190116 18:38:20.885"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:20.893" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:20.887" endtime="20190116 18:38:20.894"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:20.870" endtime="20190116 18:38:20.897"></status>
</kw>
<msg timestamp="20190116 18:38:20.898" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:20.863" endtime="20190116 18:38:20.899"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:20.909" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:20.902" endtime="20190116 18:38:20.910"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:20.913" endtime="20190116 18:38:20.919"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:21.926" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:20.922" endtime="20190116 18:38:21.928"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:20.485" endtime="20190116 18:38:21.928"></status>
</kw>
<kw name="${i} = 16" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:21.998" level="INFO">${KLEMME30} = [[12200, 189], [0, 0]]</msg>
<status status="PASS" starttime="20190116 18:38:21.940" endtime="20190116 18:38:21.999"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:22.038" level="INFO">${CURR_VCARBAT} = 189</msg>
<status status="PASS" starttime="20190116 18:38:22.002" endtime="20190116 18:38:22.038"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:22.074" level="INFO">${CURR_KL30} = 0</msg>
<status status="PASS" starttime="20190116 18:38:22.041" endtime="20190116 18:38:22.075"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:22.085" level="INFO">${TIMENOW} = 1547663902</msg>
<status status="PASS" starttime="20190116 18:38:22.078" endtime="20190116 18:38:22.085"></status>
</kw>
<msg timestamp="20190116 18:38:22.090" level="INFO">${TIMENOW} = 1547663902</msg>
<msg timestamp="20190116 18:38:22.091" level="INFO">${CURR_VCARBAT} = 189</msg>
<msg timestamp="20190116 18:38:22.092" level="INFO">${CURR_KL30} = 0</msg>
<status status="PASS" starttime="20190116 18:38:21.933" endtime="20190116 18:38:22.093"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:22.102" endtime="20190116 18:38:22.298"></status>
</kw>
<msg timestamp="20190116 18:38:22.300" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190116 18:38:22.096" endtime="20190116 18:38:22.301"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:22.304" endtime="20190116 18:38:22.310"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:22.317" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:22.319" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:22.313" endtime="20190116 18:38:22.319"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:22.347" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:22.338" endtime="20190116 18:38:22.348"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:22.357" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:22.350" endtime="20190116 18:38:22.358"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:22.329" endtime="20190116 18:38:22.361"></status>
</kw>
<msg timestamp="20190116 18:38:22.362" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:22.323" endtime="20190116 18:38:22.363"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:22.373" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:22.366" endtime="20190116 18:38:22.374"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:22.377" endtime="20190116 18:38:22.383"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:23.390" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:22.386" endtime="20190116 18:38:23.392"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:21.930" endtime="20190116 18:38:23.392"></status>
</kw>
<kw name="${i} = 17" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:23.451" level="INFO">${KLEMME30} = [[12200, 195], [12275, 184]]</msg>
<status status="PASS" starttime="20190116 18:38:23.402" endtime="20190116 18:38:23.453"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:23.496" level="INFO">${CURR_VCARBAT} = 195</msg>
<status status="PASS" starttime="20190116 18:38:23.457" endtime="20190116 18:38:23.497"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:23.539" level="INFO">${CURR_KL30} = 184</msg>
<status status="PASS" starttime="20190116 18:38:23.499" endtime="20190116 18:38:23.539"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:23.547" level="INFO">${TIMENOW} = 1547663903</msg>
<status status="PASS" starttime="20190116 18:38:23.542" endtime="20190116 18:38:23.547"></status>
</kw>
<msg timestamp="20190116 18:38:23.552" level="INFO">${TIMENOW} = 1547663903</msg>
<msg timestamp="20190116 18:38:23.554" level="INFO">${CURR_VCARBAT} = 195</msg>
<msg timestamp="20190116 18:38:23.555" level="INFO">${CURR_KL30} = 184</msg>
<status status="PASS" starttime="20190116 18:38:23.396" endtime="20190116 18:38:23.555"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:23.566" endtime="20190116 18:38:23.765"></status>
</kw>
<msg timestamp="20190116 18:38:23.767" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190116 18:38:23.560" endtime="20190116 18:38:23.767"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:23.770" endtime="20190116 18:38:23.776"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:23.783" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:23.785" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:23.779" endtime="20190116 18:38:23.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:23.809" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:23.804" endtime="20190116 18:38:23.810"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:23.819" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:23.813" endtime="20190116 18:38:23.820"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:23.795" endtime="20190116 18:38:23.823"></status>
</kw>
<msg timestamp="20190116 18:38:23.825" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:23.789" endtime="20190116 18:38:23.825"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:23.835" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:23.828" endtime="20190116 18:38:23.836"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:23.839" endtime="20190116 18:38:23.845"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:24.853" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:23.848" endtime="20190116 18:38:24.855"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:23.394" endtime="20190116 18:38:24.856"></status>
</kw>
<kw name="${i} = 18" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:25.126" level="INFO">${KLEMME30} = [[12175, 221], [12250, 232]]</msg>
<status status="PASS" starttime="20190116 18:38:24.983" endtime="20190116 18:38:25.170"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:25.237" level="INFO">${CURR_VCARBAT} = 221</msg>
<status status="PASS" starttime="20190116 18:38:25.177" endtime="20190116 18:38:25.238"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:25.278" level="INFO">${CURR_KL30} = 232</msg>
<status status="PASS" starttime="20190116 18:38:25.241" endtime="20190116 18:38:25.279"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:25.286" level="INFO">${TIMENOW} = 1547663905</msg>
<status status="PASS" starttime="20190116 18:38:25.282" endtime="20190116 18:38:25.287"></status>
</kw>
<msg timestamp="20190116 18:38:25.294" level="INFO">${TIMENOW} = 1547663905</msg>
<msg timestamp="20190116 18:38:25.295" level="INFO">${CURR_VCARBAT} = 221</msg>
<msg timestamp="20190116 18:38:25.296" level="INFO">${CURR_KL30} = 232</msg>
<status status="PASS" starttime="20190116 18:38:24.963" endtime="20190116 18:38:25.297"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:25.306" endtime="20190116 18:38:25.504"></status>
</kw>
<msg timestamp="20190116 18:38:25.508" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190116 18:38:25.300" endtime="20190116 18:38:25.509"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:25.514" endtime="20190116 18:38:25.519"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:25.526" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:25.528" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:25.522" endtime="20190116 18:38:25.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:25.559" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:25.550" endtime="20190116 18:38:25.560"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:25.568" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:25.563" endtime="20190116 18:38:25.569"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:25.539" endtime="20190116 18:38:25.572"></status>
</kw>
<msg timestamp="20190116 18:38:25.573" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:25.532" endtime="20190116 18:38:25.574"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:25.584" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:25.577" endtime="20190116 18:38:25.585"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:25.588" endtime="20190116 18:38:25.595"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:26.603" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:25.598" endtime="20190116 18:38:26.605"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:24.886" endtime="20190116 18:38:26.606"></status>
</kw>
<kw name="${i} = 19" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:26.665" level="INFO">${KLEMME30} = [[12200, 166], [12275, 168]]</msg>
<status status="PASS" starttime="20190116 18:38:26.616" endtime="20190116 18:38:26.666"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:26.702" level="INFO">${CURR_VCARBAT} = 166</msg>
<status status="PASS" starttime="20190116 18:38:26.670" endtime="20190116 18:38:26.703"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:26.739" level="INFO">${CURR_KL30} = 168</msg>
<status status="PASS" starttime="20190116 18:38:26.706" endtime="20190116 18:38:26.740"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:26.747" level="INFO">${TIMENOW} = 1547663906</msg>
<status status="PASS" starttime="20190116 18:38:26.742" endtime="20190116 18:38:26.748"></status>
</kw>
<msg timestamp="20190116 18:38:26.753" level="INFO">${TIMENOW} = 1547663906</msg>
<msg timestamp="20190116 18:38:26.754" level="INFO">${CURR_VCARBAT} = 166</msg>
<msg timestamp="20190116 18:38:26.755" level="INFO">${CURR_KL30} = 168</msg>
<status status="PASS" starttime="20190116 18:38:26.610" endtime="20190116 18:38:26.755"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:26.764" endtime="20190116 18:38:27.019"></status>
</kw>
<msg timestamp="20190116 18:38:27.021" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190116 18:38:26.758" endtime="20190116 18:38:27.022"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:27.025" endtime="20190116 18:38:27.036"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:27.043" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:27.045" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:27.039" endtime="20190116 18:38:27.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:27.069" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:27.064" endtime="20190116 18:38:27.070"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:27.078" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:27.073" endtime="20190116 18:38:27.079"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:27.055" endtime="20190116 18:38:27.082"></status>
</kw>
<msg timestamp="20190116 18:38:27.084" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:27.049" endtime="20190116 18:38:27.085"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:27.094" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:27.087" endtime="20190116 18:38:27.095"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:27.098" endtime="20190116 18:38:27.104"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:28.111" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:27.107" endtime="20190116 18:38:28.113"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:26.608" endtime="20190116 18:38:28.114"></status>
</kw>
<kw name="${i} = 20" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:28.180" level="INFO">${KLEMME30} = [[12225, 134], [12300, 149]]</msg>
<status status="PASS" starttime="20190116 18:38:28.124" endtime="20190116 18:38:28.181"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:28.260" level="INFO">${CURR_VCARBAT} = 134</msg>
<status status="PASS" starttime="20190116 18:38:28.186" endtime="20190116 18:38:28.261"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:28.373" level="INFO">${CURR_KL30} = 149</msg>
<status status="PASS" starttime="20190116 18:38:28.287" endtime="20190116 18:38:28.374"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:28.394" level="INFO">${TIMENOW} = 1547663908</msg>
<status status="PASS" starttime="20190116 18:38:28.377" endtime="20190116 18:38:28.394"></status>
</kw>
<msg timestamp="20190116 18:38:28.399" level="INFO">${TIMENOW} = 1547663908</msg>
<msg timestamp="20190116 18:38:28.401" level="INFO">${CURR_VCARBAT} = 134</msg>
<msg timestamp="20190116 18:38:28.402" level="INFO">${CURR_KL30} = 149</msg>
<status status="PASS" starttime="20190116 18:38:28.118" endtime="20190116 18:38:28.402"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:28.422" endtime="20190116 18:38:28.665"></status>
</kw>
<msg timestamp="20190116 18:38:28.667" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190116 18:38:28.416" endtime="20190116 18:38:28.668"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:28.671" endtime="20190116 18:38:28.677"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:28.684" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:28.687" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:28.680" endtime="20190116 18:38:28.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:28.716" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:28.707" endtime="20190116 18:38:28.717"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:28.726" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:28.721" endtime="20190116 18:38:28.727"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:28.698" endtime="20190116 18:38:28.730"></status>
</kw>
<msg timestamp="20190116 18:38:28.732" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:28.691" endtime="20190116 18:38:28.733"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:28.743" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:28.735" endtime="20190116 18:38:28.744"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:28.746" endtime="20190116 18:38:28.753"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:29.763" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:28.756" endtime="20190116 18:38:29.765"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:28.115" endtime="20190116 18:38:29.766"></status>
</kw>
<kw name="${i} = 21" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:29.825" level="INFO">${KLEMME30} = [[12200, 122], [12300, 174]]</msg>
<status status="PASS" starttime="20190116 18:38:29.775" endtime="20190116 18:38:29.826"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:29.862" level="INFO">${CURR_VCARBAT} = 122</msg>
<status status="PASS" starttime="20190116 18:38:29.829" endtime="20190116 18:38:29.863"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:29.898" level="INFO">${CURR_KL30} = 174</msg>
<status status="PASS" starttime="20190116 18:38:29.865" endtime="20190116 18:38:29.899"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:29.906" level="INFO">${TIMENOW} = 1547663909</msg>
<status status="PASS" starttime="20190116 18:38:29.902" endtime="20190116 18:38:29.907"></status>
</kw>
<msg timestamp="20190116 18:38:29.912" level="INFO">${TIMENOW} = 1547663909</msg>
<msg timestamp="20190116 18:38:29.913" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190116 18:38:29.915" level="INFO">${CURR_KL30} = 174</msg>
<status status="PASS" starttime="20190116 18:38:29.769" endtime="20190116 18:38:29.915"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:29.924" endtime="20190116 18:38:30.122"></status>
</kw>
<msg timestamp="20190116 18:38:30.124" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190116 18:38:29.918" endtime="20190116 18:38:30.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:30.128" endtime="20190116 18:38:30.134"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:30.141" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:30.143" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:30.137" endtime="20190116 18:38:30.143"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:30.166" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:30.161" endtime="20190116 18:38:30.167"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:30.175" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:30.170" endtime="20190116 18:38:30.176"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:30.153" endtime="20190116 18:38:30.179"></status>
</kw>
<msg timestamp="20190116 18:38:30.181" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:30.146" endtime="20190116 18:38:30.181"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:30.191" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:30.184" endtime="20190116 18:38:30.192"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:30.195" endtime="20190116 18:38:30.201"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:31.207" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:30.203" endtime="20190116 18:38:31.210"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:29.767" endtime="20190116 18:38:31.210"></status>
</kw>
<kw name="${i} = 22" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:31.278" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:31.220" endtime="20190116 18:38:31.279"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:31.315" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:38:31.282" endtime="20190116 18:38:31.316"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:31.353" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:31.319" endtime="20190116 18:38:31.354"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:31.361" level="INFO">${TIMENOW} = 1547663911</msg>
<status status="PASS" starttime="20190116 18:38:31.357" endtime="20190116 18:38:31.362"></status>
</kw>
<msg timestamp="20190116 18:38:31.367" level="INFO">${TIMENOW} = 1547663911</msg>
<msg timestamp="20190116 18:38:31.368" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:38:31.369" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:31.214" endtime="20190116 18:38:31.370"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:31.378" endtime="20190116 18:38:31.577"></status>
</kw>
<msg timestamp="20190116 18:38:31.579" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190116 18:38:31.373" endtime="20190116 18:38:31.581"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:31.584" endtime="20190116 18:38:31.589"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:31.596" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:31.598" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:31.592" endtime="20190116 18:38:31.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:31.626" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:31.617" endtime="20190116 18:38:31.627"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:31.635" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:31.630" endtime="20190116 18:38:31.636"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:31.608" endtime="20190116 18:38:31.639"></status>
</kw>
<msg timestamp="20190116 18:38:31.641" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:31.602" endtime="20190116 18:38:31.641"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:31.651" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:31.644" endtime="20190116 18:38:31.652"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:31.655" endtime="20190116 18:38:31.661"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:32.668" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:31.664" endtime="20190116 18:38:32.670"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:31.212" endtime="20190116 18:38:32.671"></status>
</kw>
<kw name="${i} = 23" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:32.729" level="INFO">${KLEMME30} = [[12225, 152], [12275, 164]]</msg>
<status status="PASS" starttime="20190116 18:38:32.680" endtime="20190116 18:38:32.730"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:32.766" level="INFO">${CURR_VCARBAT} = 152</msg>
<status status="PASS" starttime="20190116 18:38:32.733" endtime="20190116 18:38:32.767"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:32.802" level="INFO">${CURR_KL30} = 164</msg>
<status status="PASS" starttime="20190116 18:38:32.770" endtime="20190116 18:38:32.803"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:32.810" level="INFO">${TIMENOW} = 1547663912</msg>
<status status="PASS" starttime="20190116 18:38:32.806" endtime="20190116 18:38:32.811"></status>
</kw>
<msg timestamp="20190116 18:38:32.816" level="INFO">${TIMENOW} = 1547663912</msg>
<msg timestamp="20190116 18:38:32.817" level="INFO">${CURR_VCARBAT} = 152</msg>
<msg timestamp="20190116 18:38:32.818" level="INFO">${CURR_KL30} = 164</msg>
<status status="PASS" starttime="20190116 18:38:32.674" endtime="20190116 18:38:32.819"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:32.829" endtime="20190116 18:38:33.026"></status>
</kw>
<msg timestamp="20190116 18:38:33.028" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190116 18:38:32.822" endtime="20190116 18:38:33.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:33.032" endtime="20190116 18:38:33.038"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:33.045" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:33.047" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:33.040" endtime="20190116 18:38:33.047"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:33.071" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:33.066" endtime="20190116 18:38:33.071"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:33.079" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:33.074" endtime="20190116 18:38:33.080"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:33.057" endtime="20190116 18:38:33.083"></status>
</kw>
<msg timestamp="20190116 18:38:33.085" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:33.051" endtime="20190116 18:38:33.086"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:33.095" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:33.089" endtime="20190116 18:38:33.096"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:33.099" endtime="20190116 18:38:33.105"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:34.112" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:33.108" endtime="20190116 18:38:34.114"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:32.672" endtime="20190116 18:38:34.115"></status>
</kw>
<kw name="${i} = 24" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:34.174" level="INFO">${KLEMME30} = [[12225, 132], [12300, 127]]</msg>
<status status="PASS" starttime="20190116 18:38:34.125" endtime="20190116 18:38:34.174"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:34.210" level="INFO">${CURR_VCARBAT} = 132</msg>
<status status="PASS" starttime="20190116 18:38:34.178" endtime="20190116 18:38:34.211"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:34.248" level="INFO">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190116 18:38:34.214" endtime="20190116 18:38:34.249"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:34.256" level="INFO">${TIMENOW} = 1547663914</msg>
<status status="PASS" starttime="20190116 18:38:34.252" endtime="20190116 18:38:34.257"></status>
</kw>
<msg timestamp="20190116 18:38:34.263" level="INFO">${TIMENOW} = 1547663914</msg>
<msg timestamp="20190116 18:38:34.264" level="INFO">${CURR_VCARBAT} = 132</msg>
<msg timestamp="20190116 18:38:34.265" level="INFO">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190116 18:38:34.118" endtime="20190116 18:38:34.266"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:34.275" endtime="20190116 18:38:34.475"></status>
</kw>
<msg timestamp="20190116 18:38:34.477" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190116 18:38:34.269" endtime="20190116 18:38:34.478"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:34.481" endtime="20190116 18:38:34.486"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:34.494" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:34.496" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:34.490" endtime="20190116 18:38:34.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:34.524" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:34.515" endtime="20190116 18:38:34.526"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:34.534" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:34.529" endtime="20190116 18:38:34.535"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:34.506" endtime="20190116 18:38:34.538"></status>
</kw>
<msg timestamp="20190116 18:38:34.540" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:34.500" endtime="20190116 18:38:34.541"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:34.551" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:34.544" endtime="20190116 18:38:34.551"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:34.554" endtime="20190116 18:38:34.560"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:35.567" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:34.563" endtime="20190116 18:38:35.569"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:34.116" endtime="20190116 18:38:35.570"></status>
</kw>
<kw name="${i} = 25" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:35.629" level="INFO">${KLEMME30} = [[12225, 119], [12300, 3264]]</msg>
<status status="PASS" starttime="20190116 18:38:35.580" endtime="20190116 18:38:35.630"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:35.665" level="INFO">${CURR_VCARBAT} = 119</msg>
<status status="PASS" starttime="20190116 18:38:35.633" endtime="20190116 18:38:35.666"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:35.702" level="INFO">${CURR_KL30} = 3264</msg>
<status status="PASS" starttime="20190116 18:38:35.669" endtime="20190116 18:38:35.702"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:35.710" level="INFO">${TIMENOW} = 1547663915</msg>
<status status="PASS" starttime="20190116 18:38:35.705" endtime="20190116 18:38:35.711"></status>
</kw>
<msg timestamp="20190116 18:38:35.715" level="INFO">${TIMENOW} = 1547663915</msg>
<msg timestamp="20190116 18:38:35.717" level="INFO">${CURR_VCARBAT} = 119</msg>
<msg timestamp="20190116 18:38:35.718" level="INFO">${CURR_KL30} = 3264</msg>
<status status="PASS" starttime="20190116 18:38:35.573" endtime="20190116 18:38:35.718"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:35.727" endtime="20190116 18:38:35.925"></status>
</kw>
<msg timestamp="20190116 18:38:35.926" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190116 18:38:35.721" endtime="20190116 18:38:35.927"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:35.931" endtime="20190116 18:38:35.936"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:35.943" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:35.945" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:35.939" endtime="20190116 18:38:35.946"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:35.969" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:35.964" endtime="20190116 18:38:35.970"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:35.978" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:35.973" endtime="20190116 18:38:35.979"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:35.955" endtime="20190116 18:38:35.982"></status>
</kw>
<msg timestamp="20190116 18:38:35.984" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:35.949" endtime="20190116 18:38:35.984"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:35.994" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:35.987" endtime="20190116 18:38:35.995"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:35.998" endtime="20190116 18:38:36.005"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:37.011" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:36.007" endtime="20190116 18:38:37.014"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:35.571" endtime="20190116 18:38:37.014"></status>
</kw>
<kw name="${i} = 26" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:37.074" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:37.025" endtime="20190116 18:38:37.075"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:37.111" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:38:37.078" endtime="20190116 18:38:37.112"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:37.148" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:37.114" endtime="20190116 18:38:37.149"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:37.156" level="INFO">${TIMENOW} = 1547663917</msg>
<status status="PASS" starttime="20190116 18:38:37.152" endtime="20190116 18:38:37.157"></status>
</kw>
<msg timestamp="20190116 18:38:37.162" level="INFO">${TIMENOW} = 1547663917</msg>
<msg timestamp="20190116 18:38:37.164" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:38:37.165" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:37.019" endtime="20190116 18:38:37.166"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:37.174" endtime="20190116 18:38:37.373"></status>
</kw>
<msg timestamp="20190116 18:38:37.374" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190116 18:38:37.169" endtime="20190116 18:38:37.375"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:37.378" endtime="20190116 18:38:37.383"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:37.390" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:37.392" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:37.386" endtime="20190116 18:38:37.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:37.420" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:37.411" endtime="20190116 18:38:37.421"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:37.429" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:37.424" endtime="20190116 18:38:37.430"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:37.403" endtime="20190116 18:38:37.433"></status>
</kw>
<msg timestamp="20190116 18:38:37.435" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:37.396" endtime="20190116 18:38:37.436"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:37.446" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:37.439" endtime="20190116 18:38:37.446"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:37.449" endtime="20190116 18:38:37.455"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:38.473" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:37.458" endtime="20190116 18:38:38.475"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:37.017" endtime="20190116 18:38:38.476"></status>
</kw>
<kw name="${i} = 27" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:38.568" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:38.498" endtime="20190116 18:38:38.569"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:38.606" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:38:38.572" endtime="20190116 18:38:38.607"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:38.644" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:38.610" endtime="20190116 18:38:38.645"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:38.652" level="INFO">${TIMENOW} = 1547663918</msg>
<status status="PASS" starttime="20190116 18:38:38.648" endtime="20190116 18:38:38.653"></status>
</kw>
<msg timestamp="20190116 18:38:38.659" level="INFO">${TIMENOW} = 1547663918</msg>
<msg timestamp="20190116 18:38:38.660" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:38:38.661" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:38.480" endtime="20190116 18:38:38.661"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:38.671" endtime="20190116 18:38:38.870"></status>
</kw>
<msg timestamp="20190116 18:38:38.871" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190116 18:38:38.665" endtime="20190116 18:38:38.873"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:38.876" endtime="20190116 18:38:38.881"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:38.889" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:38.891" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:38.884" endtime="20190116 18:38:38.891"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:38.914" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:38.910" endtime="20190116 18:38:38.915"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:38.923" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:38.918" endtime="20190116 18:38:38.924"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:38.901" endtime="20190116 18:38:38.927"></status>
</kw>
<msg timestamp="20190116 18:38:38.929" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:38.894" endtime="20190116 18:38:38.930"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:38.940" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:38.932" endtime="20190116 18:38:38.941"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:38.943" endtime="20190116 18:38:38.949"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:39.956" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:38.952" endtime="20190116 18:38:39.958"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:38.477" endtime="20190116 18:38:39.959"></status>
</kw>
<kw name="${i} = 28" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:40.021" level="INFO">${KLEMME30} = [[12200, 159], [12275, 168]]</msg>
<status status="PASS" starttime="20190116 18:38:39.969" endtime="20190116 18:38:40.022"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:40.060" level="INFO">${CURR_VCARBAT} = 159</msg>
<status status="PASS" starttime="20190116 18:38:40.027" endtime="20190116 18:38:40.061"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:40.129" level="INFO">${CURR_KL30} = 168</msg>
<status status="PASS" starttime="20190116 18:38:40.064" endtime="20190116 18:38:40.130"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:40.146" level="INFO">${TIMENOW} = 1547663920</msg>
<status status="PASS" starttime="20190116 18:38:40.137" endtime="20190116 18:38:40.146"></status>
</kw>
<msg timestamp="20190116 18:38:40.155" level="INFO">${TIMENOW} = 1547663920</msg>
<msg timestamp="20190116 18:38:40.161" level="INFO">${CURR_VCARBAT} = 159</msg>
<msg timestamp="20190116 18:38:40.162" level="INFO">${CURR_KL30} = 168</msg>
<status status="PASS" starttime="20190116 18:38:39.962" endtime="20190116 18:38:40.162"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:40.179" endtime="20190116 18:38:40.417"></status>
</kw>
<msg timestamp="20190116 18:38:40.419" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190116 18:38:40.169" endtime="20190116 18:38:40.419"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:40.425" endtime="20190116 18:38:40.432"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:40.439" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:40.441" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:40.435" endtime="20190116 18:38:40.442"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:40.480" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:40.461" endtime="20190116 18:38:40.485"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:40.501" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:40.488" endtime="20190116 18:38:40.502"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:40.452" endtime="20190116 18:38:40.509"></status>
</kw>
<msg timestamp="20190116 18:38:40.511" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:40.445" endtime="20190116 18:38:40.512"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:40.532" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:40.518" endtime="20190116 18:38:40.533"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:40.535" endtime="20190116 18:38:40.543"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:41.551" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:40.545" endtime="20190116 18:38:41.553"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:39.960" endtime="20190116 18:38:41.554"></status>
</kw>
<kw name="${i} = 29" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:41.613" level="INFO">${KLEMME30} = [[12200, 129], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:41.564" endtime="20190116 18:38:41.614"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:41.649" level="INFO">${CURR_VCARBAT} = 129</msg>
<status status="PASS" starttime="20190116 18:38:41.616" endtime="20190116 18:38:41.650"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:41.686" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:41.653" endtime="20190116 18:38:41.686"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:41.694" level="INFO">${TIMENOW} = 1547663921</msg>
<status status="PASS" starttime="20190116 18:38:41.690" endtime="20190116 18:38:41.695"></status>
</kw>
<msg timestamp="20190116 18:38:41.700" level="INFO">${TIMENOW} = 1547663921</msg>
<msg timestamp="20190116 18:38:41.701" level="INFO">${CURR_VCARBAT} = 129</msg>
<msg timestamp="20190116 18:38:41.702" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:41.557" endtime="20190116 18:38:41.703"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:41.711" endtime="20190116 18:38:41.937"></status>
</kw>
<msg timestamp="20190116 18:38:41.939" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190116 18:38:41.706" endtime="20190116 18:38:41.939"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:41.946" endtime="20190116 18:38:41.956"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:41.971" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:41.977" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:41.959" endtime="20190116 18:38:41.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:42.025" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:42.016" endtime="20190116 18:38:42.026"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:42.043" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:42.033" endtime="20190116 18:38:42.044"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:41.995" endtime="20190116 18:38:42.051"></status>
</kw>
<msg timestamp="20190116 18:38:42.057" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:41.985" endtime="20190116 18:38:42.057"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:42.075" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:42.064" endtime="20190116 18:38:42.079"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:42.083" endtime="20190116 18:38:42.091"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:43.105" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:42.094" endtime="20190116 18:38:43.108"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:41.555" endtime="20190116 18:38:43.109"></status>
</kw>
<kw name="${i} = 30" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:43.170" level="INFO">${KLEMME30} = [[12225, 120], [12275, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:43.119" endtime="20190116 18:38:43.170"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:43.206" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:38:43.173" endtime="20190116 18:38:43.206"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:43.241" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:43.209" endtime="20190116 18:38:43.242"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:43.250" level="INFO">${TIMENOW} = 1547663923</msg>
<status status="PASS" starttime="20190116 18:38:43.246" endtime="20190116 18:38:43.251"></status>
</kw>
<msg timestamp="20190116 18:38:43.256" level="INFO">${TIMENOW} = 1547663923</msg>
<msg timestamp="20190116 18:38:43.257" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:38:43.258" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:43.113" endtime="20190116 18:38:43.259"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:43.267" endtime="20190116 18:38:43.497"></status>
</kw>
<msg timestamp="20190116 18:38:43.498" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190116 18:38:43.262" endtime="20190116 18:38:43.499"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:43.507" endtime="20190116 18:38:43.516"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:43.531" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:43.537" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:43.519" endtime="20190116 18:38:43.538"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:43.606" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:43.582" endtime="20190116 18:38:43.607"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:43.623" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:43.614" endtime="20190116 18:38:43.628"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:43.560" endtime="20190116 18:38:43.631"></status>
</kw>
<msg timestamp="20190116 18:38:43.637" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:43.544" endtime="20190116 18:38:43.638"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:43.656" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:43.645" endtime="20190116 18:38:43.657"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:43.660" endtime="20190116 18:38:43.674"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:44.689" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:43.681" endtime="20190116 18:38:44.691"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:43.111" endtime="20190116 18:38:44.692"></status>
</kw>
<kw name="${i} = 31" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:44.751" level="INFO">${KLEMME30} = [[12225, 123], [12300, 129]]</msg>
<status status="PASS" starttime="20190116 18:38:44.702" endtime="20190116 18:38:44.753"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:44.789" level="INFO">${CURR_VCARBAT} = 123</msg>
<status status="PASS" starttime="20190116 18:38:44.756" endtime="20190116 18:38:44.789"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:44.826" level="INFO">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190116 18:38:44.792" endtime="20190116 18:38:44.827"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:44.834" level="INFO">${TIMENOW} = 1547663924</msg>
<status status="PASS" starttime="20190116 18:38:44.829" endtime="20190116 18:38:44.835"></status>
</kw>
<msg timestamp="20190116 18:38:44.840" level="INFO">${TIMENOW} = 1547663924</msg>
<msg timestamp="20190116 18:38:44.841" level="INFO">${CURR_VCARBAT} = 123</msg>
<msg timestamp="20190116 18:38:44.843" level="INFO">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190116 18:38:44.696" endtime="20190116 18:38:44.844"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:44.853" endtime="20190116 18:38:45.050"></status>
</kw>
<msg timestamp="20190116 18:38:45.053" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190116 18:38:44.847" endtime="20190116 18:38:45.054"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:45.057" endtime="20190116 18:38:45.062"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:45.071" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:45.073" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:45.066" endtime="20190116 18:38:45.074"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:45.098" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:45.093" endtime="20190116 18:38:45.099"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:45.107" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:45.101" endtime="20190116 18:38:45.108"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:45.084" endtime="20190116 18:38:45.111"></status>
</kw>
<msg timestamp="20190116 18:38:45.113" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:45.077" endtime="20190116 18:38:45.114"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:45.125" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:45.116" endtime="20190116 18:38:45.126"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:45.129" endtime="20190116 18:38:45.135"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:46.142" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:45.138" endtime="20190116 18:38:46.144"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:44.694" endtime="20190116 18:38:46.145"></status>
</kw>
<kw name="${i} = 32" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:46.203" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:46.155" endtime="20190116 18:38:46.205"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:46.240" level="INFO">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190116 18:38:46.208" endtime="20190116 18:38:46.241"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:46.277" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:46.244" endtime="20190116 18:38:46.278"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:46.285" level="INFO">${TIMENOW} = 1547663926</msg>
<status status="PASS" starttime="20190116 18:38:46.281" endtime="20190116 18:38:46.286"></status>
</kw>
<msg timestamp="20190116 18:38:46.291" level="INFO">${TIMENOW} = 1547663926</msg>
<msg timestamp="20190116 18:38:46.292" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190116 18:38:46.293" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:46.148" endtime="20190116 18:38:46.294"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:46.302" endtime="20190116 18:38:46.499"></status>
</kw>
<msg timestamp="20190116 18:38:46.502" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190116 18:38:46.297" endtime="20190116 18:38:46.503"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:46.506" endtime="20190116 18:38:46.511"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:46.518" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:46.520" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:46.514" endtime="20190116 18:38:46.521"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:46.549" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:46.540" endtime="20190116 18:38:46.550"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:46.558" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:46.553" endtime="20190116 18:38:46.559"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:46.531" endtime="20190116 18:38:46.562"></status>
</kw>
<msg timestamp="20190116 18:38:46.564" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:46.524" endtime="20190116 18:38:46.564"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:46.574" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:46.567" endtime="20190116 18:38:46.575"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:46.578" endtime="20190116 18:38:46.585"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:47.591" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:46.587" endtime="20190116 18:38:47.594"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:46.146" endtime="20190116 18:38:47.594"></status>
</kw>
<kw name="${i} = 33" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:47.653" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:47.604" endtime="20190116 18:38:47.654"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:47.690" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:38:47.657" endtime="20190116 18:38:47.691"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:47.726" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:47.693" endtime="20190116 18:38:47.727"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:47.734" level="INFO">${TIMENOW} = 1547663927</msg>
<status status="PASS" starttime="20190116 18:38:47.730" endtime="20190116 18:38:47.735"></status>
</kw>
<msg timestamp="20190116 18:38:47.740" level="INFO">${TIMENOW} = 1547663927</msg>
<msg timestamp="20190116 18:38:47.741" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:38:47.742" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:47.598" endtime="20190116 18:38:47.743"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:47.752" endtime="20190116 18:38:47.952"></status>
</kw>
<msg timestamp="20190116 18:38:47.954" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190116 18:38:47.746" endtime="20190116 18:38:47.954"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:47.958" endtime="20190116 18:38:47.963"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:47.971" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:47.973" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:47.966" endtime="20190116 18:38:47.973"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:47.996" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:47.991" endtime="20190116 18:38:47.997"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:48.006" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:48.000" endtime="20190116 18:38:48.007"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:47.983" endtime="20190116 18:38:48.010"></status>
</kw>
<msg timestamp="20190116 18:38:48.012" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:47.976" endtime="20190116 18:38:48.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:48.022" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:48.015" endtime="20190116 18:38:48.023"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:48.026" endtime="20190116 18:38:48.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:49.040" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:48.036" endtime="20190116 18:38:49.042"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:47.596" endtime="20190116 18:38:49.043"></status>
</kw>
<kw name="${i} = 34" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:49.106" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:49.053" endtime="20190116 18:38:49.107"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:49.144" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:38:49.111" endtime="20190116 18:38:49.145"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:49.180" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:49.147" endtime="20190116 18:38:49.181"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:49.188" level="INFO">${TIMENOW} = 1547663929</msg>
<status status="PASS" starttime="20190116 18:38:49.184" endtime="20190116 18:38:49.189"></status>
</kw>
<msg timestamp="20190116 18:38:49.194" level="INFO">${TIMENOW} = 1547663929</msg>
<msg timestamp="20190116 18:38:49.195" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:38:49.196" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:49.046" endtime="20190116 18:38:49.197"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:49.205" endtime="20190116 18:38:49.405"></status>
</kw>
<msg timestamp="20190116 18:38:49.406" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190116 18:38:49.200" endtime="20190116 18:38:49.407"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:49.411" endtime="20190116 18:38:49.416"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:49.423" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:49.425" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:49.419" endtime="20190116 18:38:49.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:49.457" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:49.444" endtime="20190116 18:38:49.458"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:49.466" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:49.461" endtime="20190116 18:38:49.467"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:49.436" endtime="20190116 18:38:49.470"></status>
</kw>
<msg timestamp="20190116 18:38:49.472" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:49.429" endtime="20190116 18:38:49.473"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:49.482" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:49.475" endtime="20190116 18:38:49.483"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:49.486" endtime="20190116 18:38:49.492"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:50.499" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:49.495" endtime="20190116 18:38:50.501"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:49.044" endtime="20190116 18:38:50.502"></status>
</kw>
<kw name="${i} = 35" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:50.561" level="INFO">${KLEMME30} = [[12225, 132], [12300, 139]]</msg>
<status status="PASS" starttime="20190116 18:38:50.511" endtime="20190116 18:38:50.562"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:50.598" level="INFO">${CURR_VCARBAT} = 132</msg>
<status status="PASS" starttime="20190116 18:38:50.565" endtime="20190116 18:38:50.599"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:50.634" level="INFO">${CURR_KL30} = 139</msg>
<status status="PASS" starttime="20190116 18:38:50.602" endtime="20190116 18:38:50.635"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:50.642" level="INFO">${TIMENOW} = 1547663930</msg>
<status status="PASS" starttime="20190116 18:38:50.638" endtime="20190116 18:38:50.643"></status>
</kw>
<msg timestamp="20190116 18:38:50.649" level="INFO">${TIMENOW} = 1547663930</msg>
<msg timestamp="20190116 18:38:50.650" level="INFO">${CURR_VCARBAT} = 132</msg>
<msg timestamp="20190116 18:38:50.651" level="INFO">${CURR_KL30} = 139</msg>
<status status="PASS" starttime="20190116 18:38:50.505" endtime="20190116 18:38:50.652"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:50.661" endtime="20190116 18:38:50.857"></status>
</kw>
<msg timestamp="20190116 18:38:50.859" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190116 18:38:50.655" endtime="20190116 18:38:50.860"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:50.863" endtime="20190116 18:38:50.868"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:50.875" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:50.877" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:50.871" endtime="20190116 18:38:50.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:50.901" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:50.896" endtime="20190116 18:38:50.902"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:50.911" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:50.905" endtime="20190116 18:38:50.911"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:50.888" endtime="20190116 18:38:50.914"></status>
</kw>
<msg timestamp="20190116 18:38:50.916" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:50.881" endtime="20190116 18:38:50.917"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:50.927" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:50.920" endtime="20190116 18:38:50.927"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:50.930" endtime="20190116 18:38:50.937"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:51.943" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:50.939" endtime="20190116 18:38:51.945"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:50.503" endtime="20190116 18:38:51.946"></status>
</kw>
<kw name="${i} = 36" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:52.006" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:51.956" endtime="20190116 18:38:52.007"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:52.043" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:38:52.010" endtime="20190116 18:38:52.044"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:52.080" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:52.047" endtime="20190116 18:38:52.081"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:52.088" level="INFO">${TIMENOW} = 1547663932</msg>
<status status="PASS" starttime="20190116 18:38:52.083" endtime="20190116 18:38:52.089"></status>
</kw>
<msg timestamp="20190116 18:38:52.096" level="INFO">${TIMENOW} = 1547663932</msg>
<msg timestamp="20190116 18:38:52.098" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:38:52.099" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:51.950" endtime="20190116 18:38:52.099"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:52.108" endtime="20190116 18:38:52.306"></status>
</kw>
<msg timestamp="20190116 18:38:52.309" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190116 18:38:52.102" endtime="20190116 18:38:52.310"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:52.312" endtime="20190116 18:38:52.318"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:52.325" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:52.327" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:52.321" endtime="20190116 18:38:52.328"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:52.576" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:52.347" endtime="20190116 18:38:52.577"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:52.585" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:52.580" endtime="20190116 18:38:52.586"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:52.338" endtime="20190116 18:38:52.589"></status>
</kw>
<msg timestamp="20190116 18:38:52.591" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:52.331" endtime="20190116 18:38:52.592"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:52.602" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:52.595" endtime="20190116 18:38:52.603"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:52.606" endtime="20190116 18:38:52.612"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:53.618" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:52.615" endtime="20190116 18:38:53.621"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:51.948" endtime="20190116 18:38:53.621"></status>
</kw>
<kw name="${i} = 37" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:53.705" level="INFO">${KLEMME30} = [[12225, 122], [12300, 130]]</msg>
<status status="PASS" starttime="20190116 18:38:53.631" endtime="20190116 18:38:53.706"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:53.773" level="INFO">${CURR_VCARBAT} = 122</msg>
<status status="PASS" starttime="20190116 18:38:53.709" endtime="20190116 18:38:53.774"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:53.823" level="INFO">${CURR_KL30} = 130</msg>
<status status="PASS" starttime="20190116 18:38:53.786" endtime="20190116 18:38:53.824"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:53.831" level="INFO">${TIMENOW} = 1547663933</msg>
<status status="PASS" starttime="20190116 18:38:53.826" endtime="20190116 18:38:53.832"></status>
</kw>
<msg timestamp="20190116 18:38:53.837" level="INFO">${TIMENOW} = 1547663933</msg>
<msg timestamp="20190116 18:38:53.838" level="INFO">${CURR_VCARBAT} = 122</msg>
<msg timestamp="20190116 18:38:53.839" level="INFO">${CURR_KL30} = 130</msg>
<status status="PASS" starttime="20190116 18:38:53.625" endtime="20190116 18:38:53.839"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:53.848" endtime="20190116 18:38:54.045"></status>
</kw>
<msg timestamp="20190116 18:38:54.048" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190116 18:38:53.842" endtime="20190116 18:38:54.049"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:54.052" endtime="20190116 18:38:54.058"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:54.065" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:54.067" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:54.061" endtime="20190116 18:38:54.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:54.091" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:54.087" endtime="20190116 18:38:54.092"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:54.100" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:54.095" endtime="20190116 18:38:54.101"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:54.078" endtime="20190116 18:38:54.104"></status>
</kw>
<msg timestamp="20190116 18:38:54.106" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:54.071" endtime="20190116 18:38:54.107"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:54.116" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:54.109" endtime="20190116 18:38:54.117"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:54.120" endtime="20190116 18:38:54.127"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:55.148" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:54.130" endtime="20190116 18:38:55.150"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:53.623" endtime="20190116 18:38:55.151"></status>
</kw>
<kw name="${i} = 38" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:55.247" level="INFO">${KLEMME30} = [[12225, 123], [12300, 129]]</msg>
<status status="PASS" starttime="20190116 18:38:55.170" endtime="20190116 18:38:55.248"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:55.324" level="INFO">${CURR_VCARBAT} = 123</msg>
<status status="PASS" starttime="20190116 18:38:55.251" endtime="20190116 18:38:55.325"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:55.433" level="INFO">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190116 18:38:55.328" endtime="20190116 18:38:55.434"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:55.451" level="INFO">${TIMENOW} = 1547663935</msg>
<status status="PASS" starttime="20190116 18:38:55.437" endtime="20190116 18:38:55.452"></status>
</kw>
<msg timestamp="20190116 18:38:55.457" level="INFO">${TIMENOW} = 1547663935</msg>
<msg timestamp="20190116 18:38:55.477" level="INFO">${CURR_VCARBAT} = 123</msg>
<msg timestamp="20190116 18:38:55.478" level="INFO">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190116 18:38:55.155" endtime="20190116 18:38:55.479"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:55.500" endtime="20190116 18:38:55.751"></status>
</kw>
<msg timestamp="20190116 18:38:55.753" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190116 18:38:55.482" endtime="20190116 18:38:55.754"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:55.757" endtime="20190116 18:38:55.795"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:55.802" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:55.804" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:55.798" endtime="20190116 18:38:55.805"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:55.888" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:55.858" endtime="20190116 18:38:55.889"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:55.904" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:55.892" endtime="20190116 18:38:55.905"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:55.827" endtime="20190116 18:38:55.908"></status>
</kw>
<msg timestamp="20190116 18:38:55.930" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:55.820" endtime="20190116 18:38:55.931"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:55.968" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:55.934" endtime="20190116 18:38:55.969"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:55.972" endtime="20190116 18:38:55.988"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:56.995" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:55.991" endtime="20190116 18:38:56.997"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:55.153" endtime="20190116 18:38:56.998"></status>
</kw>
<kw name="${i} = 39" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:57.061" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:57.009" endtime="20190116 18:38:57.062"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:57.097" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:38:57.065" endtime="20190116 18:38:57.098"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:57.133" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:57.101" endtime="20190116 18:38:57.134"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:57.142" level="INFO">${TIMENOW} = 1547663937</msg>
<status status="PASS" starttime="20190116 18:38:57.137" endtime="20190116 18:38:57.143"></status>
</kw>
<msg timestamp="20190116 18:38:57.148" level="INFO">${TIMENOW} = 1547663937</msg>
<msg timestamp="20190116 18:38:57.149" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:38:57.150" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:57.001" endtime="20190116 18:38:57.151"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:57.160" endtime="20190116 18:38:57.358"></status>
</kw>
<msg timestamp="20190116 18:38:57.359" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190116 18:38:57.154" endtime="20190116 18:38:57.361"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:57.364" endtime="20190116 18:38:57.369"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:57.377" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:57.379" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:57.372" endtime="20190116 18:38:57.379"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:57.402" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:57.397" endtime="20190116 18:38:57.403"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:57.415" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:57.406" endtime="20190116 18:38:57.415"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:57.389" endtime="20190116 18:38:57.419"></status>
</kw>
<msg timestamp="20190116 18:38:57.421" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:57.382" endtime="20190116 18:38:57.421"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:57.431" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:57.424" endtime="20190116 18:38:57.432"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:57.435" endtime="20190116 18:38:57.441"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:58.447" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:57.444" endtime="20190116 18:38:58.450"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:56.999" endtime="20190116 18:38:58.450"></status>
</kw>
<kw name="${i} = 40" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:58.510" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:58.460" endtime="20190116 18:38:58.510"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:38:58.550" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:38:58.514" endtime="20190116 18:38:58.551"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:38:58.588" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:58.554" endtime="20190116 18:38:58.588"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:38:58.596" level="INFO">${TIMENOW} = 1547663938</msg>
<status status="PASS" starttime="20190116 18:38:58.591" endtime="20190116 18:38:58.597"></status>
</kw>
<msg timestamp="20190116 18:38:58.602" level="INFO">${TIMENOW} = 1547663938</msg>
<msg timestamp="20190116 18:38:58.603" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:38:58.604" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:58.454" endtime="20190116 18:38:58.605"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:58.613" endtime="20190116 18:38:58.813"></status>
</kw>
<msg timestamp="20190116 18:38:58.815" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190116 18:38:58.608" endtime="20190116 18:38:58.816"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:58.819" endtime="20190116 18:38:58.825"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:38:58.832" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:38:58.834" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:38:58.827" endtime="20190116 18:38:58.834"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:38:58.859" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190116 18:38:58.854" endtime="20190116 18:38:58.860"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:38:58.869" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:38:58.863" endtime="20190116 18:38:58.869"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:58.846" endtime="20190116 18:38:58.873"></status>
</kw>
<msg timestamp="20190116 18:38:58.875" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:38:58.838" endtime="20190116 18:38:58.875"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:38:58.885" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:38:58.878" endtime="20190116 18:38:58.886"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:38:58.889" endtime="20190116 18:38:58.895"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:38:59.902" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:38:58.898" endtime="20190116 18:38:59.904"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:58.452" endtime="20190116 18:38:59.905"></status>
</kw>
<kw name="${i} = 41" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:38:59.963" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:38:59.914" endtime="20190116 18:38:59.965"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:00.000" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:38:59.968" endtime="20190116 18:39:00.001"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:00.037" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:00.004" endtime="20190116 18:39:00.038"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:00.045" level="INFO">${TIMENOW} = 1547663940</msg>
<status status="PASS" starttime="20190116 18:39:00.041" endtime="20190116 18:39:00.046"></status>
</kw>
<msg timestamp="20190116 18:39:00.051" level="INFO">${TIMENOW} = 1547663940</msg>
<msg timestamp="20190116 18:39:00.052" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:00.053" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:38:59.908" endtime="20190116 18:39:00.054"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:00.063" endtime="20190116 18:39:00.261"></status>
</kw>
<msg timestamp="20190116 18:39:00.262" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190116 18:39:00.057" endtime="20190116 18:39:00.263"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:00.267" endtime="20190116 18:39:00.272"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:00.279" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:00.281" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:00.275" endtime="20190116 18:39:00.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:00.309" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:00.304" endtime="20190116 18:39:00.310"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:00.318" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:00.313" endtime="20190116 18:39:00.319"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:00.292" endtime="20190116 18:39:00.322"></status>
</kw>
<msg timestamp="20190116 18:39:00.324" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:00.285" endtime="20190116 18:39:00.325"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:00.334" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:00.327" endtime="20190116 18:39:00.335"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:00.339" endtime="20190116 18:39:00.345"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:01.352" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:00.348" endtime="20190116 18:39:01.354"></status>
</kw>
<status status="PASS" starttime="20190116 18:38:59.906" endtime="20190116 18:39:01.355"></status>
</kw>
<kw name="${i} = 42" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:01.413" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:01.364" endtime="20190116 18:39:01.414"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:01.451" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:01.418" endtime="20190116 18:39:01.451"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:01.487" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:01.454" endtime="20190116 18:39:01.488"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:01.495" level="INFO">${TIMENOW} = 1547663941</msg>
<status status="PASS" starttime="20190116 18:39:01.491" endtime="20190116 18:39:01.496"></status>
</kw>
<msg timestamp="20190116 18:39:01.501" level="INFO">${TIMENOW} = 1547663941</msg>
<msg timestamp="20190116 18:39:01.502" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:01.503" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:01.358" endtime="20190116 18:39:01.504"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:01.513" endtime="20190116 18:39:01.710"></status>
</kw>
<msg timestamp="20190116 18:39:01.713" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190116 18:39:01.507" endtime="20190116 18:39:01.714"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:01.716" endtime="20190116 18:39:01.722"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:01.729" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:01.731" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:01.725" endtime="20190116 18:39:01.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:01.755" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:01.750" endtime="20190116 18:39:01.756"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:01.764" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:01.759" endtime="20190116 18:39:01.765"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:01.741" endtime="20190116 18:39:01.768"></status>
</kw>
<msg timestamp="20190116 18:39:01.770" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:01.735" endtime="20190116 18:39:01.770"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:01.781" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:01.773" endtime="20190116 18:39:01.782"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:01.784" endtime="20190116 18:39:01.791"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:02.797" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:01.793" endtime="20190116 18:39:02.799"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:01.356" endtime="20190116 18:39:02.800"></status>
</kw>
<kw name="${i} = 43" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:02.859" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:02.810" endtime="20190116 18:39:02.860"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:02.896" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:02.863" endtime="20190116 18:39:02.896"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:02.934" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:02.899" endtime="20190116 18:39:02.935"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:02.943" level="INFO">${TIMENOW} = 1547663942</msg>
<status status="PASS" starttime="20190116 18:39:02.939" endtime="20190116 18:39:02.944"></status>
</kw>
<msg timestamp="20190116 18:39:02.949" level="INFO">${TIMENOW} = 1547663942</msg>
<msg timestamp="20190116 18:39:02.950" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:02.951" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:02.803" endtime="20190116 18:39:02.952"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:02.960" endtime="20190116 18:39:03.157"></status>
</kw>
<msg timestamp="20190116 18:39:03.159" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190116 18:39:02.955" endtime="20190116 18:39:03.160"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:03.163" endtime="20190116 18:39:03.169"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:03.176" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:03.179" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:03.172" endtime="20190116 18:39:03.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:03.207" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:03.201" endtime="20190116 18:39:03.207"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:03.216" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:03.210" endtime="20190116 18:39:03.216"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:03.189" endtime="20190116 18:39:03.219"></status>
</kw>
<msg timestamp="20190116 18:39:03.221" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:03.182" endtime="20190116 18:39:03.222"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:03.232" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:03.225" endtime="20190116 18:39:03.232"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:03.235" endtime="20190116 18:39:03.241"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:04.249" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:03.245" endtime="20190116 18:39:04.251"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:02.801" endtime="20190116 18:39:04.251"></status>
</kw>
<kw name="${i} = 44" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:04.314" level="INFO">${KLEMME30} = [[12225, 128], [12300, 136]]</msg>
<status status="PASS" starttime="20190116 18:39:04.262" endtime="20190116 18:39:04.314"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:04.350" level="INFO">${CURR_VCARBAT} = 128</msg>
<status status="PASS" starttime="20190116 18:39:04.317" endtime="20190116 18:39:04.351"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:04.388" level="INFO">${CURR_KL30} = 136</msg>
<status status="PASS" starttime="20190116 18:39:04.354" endtime="20190116 18:39:04.389"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:04.396" level="INFO">${TIMENOW} = 1547663944</msg>
<status status="PASS" starttime="20190116 18:39:04.392" endtime="20190116 18:39:04.397"></status>
</kw>
<msg timestamp="20190116 18:39:04.402" level="INFO">${TIMENOW} = 1547663944</msg>
<msg timestamp="20190116 18:39:04.403" level="INFO">${CURR_VCARBAT} = 128</msg>
<msg timestamp="20190116 18:39:04.404" level="INFO">${CURR_KL30} = 136</msg>
<status status="PASS" starttime="20190116 18:39:04.255" endtime="20190116 18:39:04.405"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:04.413" endtime="20190116 18:39:04.609"></status>
</kw>
<msg timestamp="20190116 18:39:04.611" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190116 18:39:04.408" endtime="20190116 18:39:04.612"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:04.614" endtime="20190116 18:39:04.620"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:04.627" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:04.631" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:04.623" endtime="20190116 18:39:04.631"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:04.655" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:04.650" endtime="20190116 18:39:04.656"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:04.664" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:04.659" endtime="20190116 18:39:04.665"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:04.641" endtime="20190116 18:39:04.668"></status>
</kw>
<msg timestamp="20190116 18:39:04.670" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:04.634" endtime="20190116 18:39:04.671"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:04.681" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:04.673" endtime="20190116 18:39:04.681"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:04.684" endtime="20190116 18:39:04.690"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:05.697" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:04.693" endtime="20190116 18:39:05.699"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:04.253" endtime="20190116 18:39:05.700"></status>
</kw>
<kw name="${i} = 45" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:05.759" level="INFO">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status status="PASS" starttime="20190116 18:39:05.710" endtime="20190116 18:39:05.760"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:05.796" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:05.763" endtime="20190116 18:39:05.797"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:05.832" level="INFO">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190116 18:39:05.800" endtime="20190116 18:39:05.833"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:05.840" level="INFO">${TIMENOW} = 1547663945</msg>
<status status="PASS" starttime="20190116 18:39:05.836" endtime="20190116 18:39:05.841"></status>
</kw>
<msg timestamp="20190116 18:39:05.846" level="INFO">${TIMENOW} = 1547663945</msg>
<msg timestamp="20190116 18:39:05.848" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:05.849" level="INFO">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190116 18:39:05.703" endtime="20190116 18:39:05.849"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:05.858" endtime="20190116 18:39:06.054"></status>
</kw>
<msg timestamp="20190116 18:39:06.056" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190116 18:39:05.853" endtime="20190116 18:39:06.057"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:06.060" endtime="20190116 18:39:06.066"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:06.073" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:06.075" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:06.069" endtime="20190116 18:39:06.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:06.103" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:06.098" endtime="20190116 18:39:06.103"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:06.112" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:06.106" endtime="20190116 18:39:06.113"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:06.085" endtime="20190116 18:39:06.116"></status>
</kw>
<msg timestamp="20190116 18:39:06.117" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:06.078" endtime="20190116 18:39:06.118"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:06.129" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:06.121" endtime="20190116 18:39:06.130"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:06.132" endtime="20190116 18:39:06.139"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:07.145" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:06.141" endtime="20190116 18:39:07.147"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:05.701" endtime="20190116 18:39:07.148"></status>
</kw>
<kw name="${i} = 46" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:07.210" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:07.158" endtime="20190116 18:39:07.211"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:07.249" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:07.216" endtime="20190116 18:39:07.250"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:07.285" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:07.252" endtime="20190116 18:39:07.286"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:07.294" level="INFO">${TIMENOW} = 1547663947</msg>
<status status="PASS" starttime="20190116 18:39:07.290" endtime="20190116 18:39:07.295"></status>
</kw>
<msg timestamp="20190116 18:39:07.300" level="INFO">${TIMENOW} = 1547663947</msg>
<msg timestamp="20190116 18:39:07.301" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:07.302" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:07.152" endtime="20190116 18:39:07.303"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:07.311" endtime="20190116 18:39:07.509"></status>
</kw>
<msg timestamp="20190116 18:39:07.511" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190116 18:39:07.306" endtime="20190116 18:39:07.512"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:07.514" endtime="20190116 18:39:07.520"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:07.527" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:07.529" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:07.523" endtime="20190116 18:39:07.530"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:07.553" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:07.548" endtime="20190116 18:39:07.554"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:07.562" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:07.556" endtime="20190116 18:39:07.563"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:07.539" endtime="20190116 18:39:07.566"></status>
</kw>
<msg timestamp="20190116 18:39:07.567" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:07.533" endtime="20190116 18:39:07.568"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:07.578" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:07.571" endtime="20190116 18:39:07.579"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:07.582" endtime="20190116 18:39:07.588"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:08.606" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:07.591" endtime="20190116 18:39:08.608"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:07.150" endtime="20190116 18:39:08.609"></status>
</kw>
<kw name="${i} = 47" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:08.721" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:08.636" endtime="20190116 18:39:08.722"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:08.802" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:08.725" endtime="20190116 18:39:08.803"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:08.842" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:08.806" endtime="20190116 18:39:08.843"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:08.850" level="INFO">${TIMENOW} = 1547663948</msg>
<status status="PASS" starttime="20190116 18:39:08.846" endtime="20190116 18:39:08.851"></status>
</kw>
<msg timestamp="20190116 18:39:08.856" level="INFO">${TIMENOW} = 1547663948</msg>
<msg timestamp="20190116 18:39:08.857" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:08.858" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:08.612" endtime="20190116 18:39:08.859"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:08.867" endtime="20190116 18:39:09.066"></status>
</kw>
<msg timestamp="20190116 18:39:09.069" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190116 18:39:08.862" endtime="20190116 18:39:09.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:09.073" endtime="20190116 18:39:09.078"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:09.085" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:09.087" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:09.081" endtime="20190116 18:39:09.088"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:09.116" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:09.111" endtime="20190116 18:39:09.117"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:09.125" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:09.120" endtime="20190116 18:39:09.126"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:09.098" endtime="20190116 18:39:09.130"></status>
</kw>
<msg timestamp="20190116 18:39:09.131" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:09.091" endtime="20190116 18:39:09.132"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:09.142" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:09.135" endtime="20190116 18:39:09.143"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:09.146" endtime="20190116 18:39:09.153"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:10.159" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:09.156" endtime="20190116 18:39:10.162"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:08.610" endtime="20190116 18:39:10.162"></status>
</kw>
<kw name="${i} = 48" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:10.225" level="INFO">${KLEMME30} = [[12225, 120], [12300, 127]]</msg>
<status status="PASS" starttime="20190116 18:39:10.172" endtime="20190116 18:39:10.226"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:10.263" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:10.229" endtime="20190116 18:39:10.264"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:10.300" level="INFO">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190116 18:39:10.267" endtime="20190116 18:39:10.301"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:10.308" level="INFO">${TIMENOW} = 1547663950</msg>
<status status="PASS" starttime="20190116 18:39:10.304" endtime="20190116 18:39:10.309"></status>
</kw>
<msg timestamp="20190116 18:39:10.314" level="INFO">${TIMENOW} = 1547663950</msg>
<msg timestamp="20190116 18:39:10.315" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:10.316" level="INFO">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190116 18:39:10.166" endtime="20190116 18:39:10.317"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:10.325" endtime="20190116 18:39:10.521"></status>
</kw>
<msg timestamp="20190116 18:39:10.523" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190116 18:39:10.320" endtime="20190116 18:39:10.525"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:10.528" endtime="20190116 18:39:10.533"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:10.541" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:10.543" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:10.537" endtime="20190116 18:39:10.544"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:10.567" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:10.562" endtime="20190116 18:39:10.568"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:10.576" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:10.570" endtime="20190116 18:39:10.577"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:10.553" endtime="20190116 18:39:10.580"></status>
</kw>
<msg timestamp="20190116 18:39:10.581" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:10.547" endtime="20190116 18:39:10.582"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:10.593" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:10.585" endtime="20190116 18:39:10.593"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:10.596" endtime="20190116 18:39:10.602"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:11.609" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:10.605" endtime="20190116 18:39:11.611"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:10.164" endtime="20190116 18:39:11.612"></status>
</kw>
<kw name="${i} = 49" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:11.671" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:11.622" endtime="20190116 18:39:11.673"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:11.708" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:11.675" endtime="20190116 18:39:11.709"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:11.744" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:11.712" endtime="20190116 18:39:11.745"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:11.752" level="INFO">${TIMENOW} = 1547663951</msg>
<status status="PASS" starttime="20190116 18:39:11.748" endtime="20190116 18:39:11.753"></status>
</kw>
<msg timestamp="20190116 18:39:11.758" level="INFO">${TIMENOW} = 1547663951</msg>
<msg timestamp="20190116 18:39:11.759" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:11.760" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:11.615" endtime="20190116 18:39:11.761"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:11.769" endtime="20190116 18:39:11.966"></status>
</kw>
<msg timestamp="20190116 18:39:11.968" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190116 18:39:11.764" endtime="20190116 18:39:11.969"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:11.972" endtime="20190116 18:39:11.977"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:11.984" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:11.986" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:11.980" endtime="20190116 18:39:11.987"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:12.015" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:12.010" endtime="20190116 18:39:12.016"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:12.024" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:12.019" endtime="20190116 18:39:12.025"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:11.997" endtime="20190116 18:39:12.028"></status>
</kw>
<msg timestamp="20190116 18:39:12.030" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:11.990" endtime="20190116 18:39:12.031"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:12.041" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:12.034" endtime="20190116 18:39:12.042"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:12.045" endtime="20190116 18:39:12.051"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:13.058" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:12.054" endtime="20190116 18:39:13.060"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:11.613" endtime="20190116 18:39:13.061"></status>
</kw>
<kw name="${i} = 50" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:13.120" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:13.071" endtime="20190116 18:39:13.121"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:13.157" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:13.124" endtime="20190116 18:39:13.157"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:13.193" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:13.160" endtime="20190116 18:39:13.194"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:13.201" level="INFO">${TIMENOW} = 1547663953</msg>
<status status="PASS" starttime="20190116 18:39:13.197" endtime="20190116 18:39:13.202"></status>
</kw>
<msg timestamp="20190116 18:39:13.207" level="INFO">${TIMENOW} = 1547663953</msg>
<msg timestamp="20190116 18:39:13.208" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:13.209" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:13.064" endtime="20190116 18:39:13.210"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:13.219" endtime="20190116 18:39:13.422"></status>
</kw>
<msg timestamp="20190116 18:39:13.425" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190116 18:39:13.213" endtime="20190116 18:39:13.426"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:13.428" endtime="20190116 18:39:13.436"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:13.444" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:13.446" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:13.440" endtime="20190116 18:39:13.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:13.472" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:13.466" endtime="20190116 18:39:13.473"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:13.486" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:13.478" endtime="20190116 18:39:13.487"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:13.457" endtime="20190116 18:39:13.490"></status>
</kw>
<msg timestamp="20190116 18:39:13.492" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:13.450" endtime="20190116 18:39:13.493"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:13.507" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:13.499" endtime="20190116 18:39:13.507"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:13.512" endtime="20190116 18:39:13.520"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:14.526" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:13.523" endtime="20190116 18:39:14.529"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:13.062" endtime="20190116 18:39:14.529"></status>
</kw>
<kw name="${i} = 51" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:14.588" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:14.539" endtime="20190116 18:39:14.590"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:14.626" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:14.593" endtime="20190116 18:39:14.626"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:14.663" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:14.630" endtime="20190116 18:39:14.664"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:14.671" level="INFO">${TIMENOW} = 1547663954</msg>
<status status="PASS" starttime="20190116 18:39:14.667" endtime="20190116 18:39:14.672"></status>
</kw>
<msg timestamp="20190116 18:39:14.677" level="INFO">${TIMENOW} = 1547663954</msg>
<msg timestamp="20190116 18:39:14.678" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:14.679" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:14.533" endtime="20190116 18:39:14.680"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:14.688" endtime="20190116 18:39:14.885"></status>
</kw>
<msg timestamp="20190116 18:39:14.887" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190116 18:39:14.683" endtime="20190116 18:39:14.887"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:14.891" endtime="20190116 18:39:14.897"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:14.904" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:14.906" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:14.900" endtime="20190116 18:39:14.907"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:14.934" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:14.929" endtime="20190116 18:39:14.935"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:14.943" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:14.938" endtime="20190116 18:39:14.944"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:14.916" endtime="20190116 18:39:14.947"></status>
</kw>
<msg timestamp="20190116 18:39:14.949" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:14.910" endtime="20190116 18:39:14.950"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:14.960" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:14.953" endtime="20190116 18:39:14.961"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:14.964" endtime="20190116 18:39:14.970"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:15.977" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:14.973" endtime="20190116 18:39:15.979"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:14.531" endtime="20190116 18:39:15.979"></status>
</kw>
<kw name="${i} = 52" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:16.039" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:15.989" endtime="20190116 18:39:16.039"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:16.075" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:16.043" endtime="20190116 18:39:16.076"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:16.112" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:16.079" endtime="20190116 18:39:16.113"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:16.120" level="INFO">${TIMENOW} = 1547663956</msg>
<status status="PASS" starttime="20190116 18:39:16.115" endtime="20190116 18:39:16.121"></status>
</kw>
<msg timestamp="20190116 18:39:16.126" level="INFO">${TIMENOW} = 1547663956</msg>
<msg timestamp="20190116 18:39:16.127" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:16.128" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:15.983" endtime="20190116 18:39:16.129"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:16.138" endtime="20190116 18:39:16.336"></status>
</kw>
<msg timestamp="20190116 18:39:16.338" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190116 18:39:16.132" endtime="20190116 18:39:16.339"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:16.342" endtime="20190116 18:39:16.349"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:16.356" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:16.358" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:16.351" endtime="20190116 18:39:16.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:16.382" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:16.377" endtime="20190116 18:39:16.382"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:16.391" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:16.385" endtime="20190116 18:39:16.391"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:16.368" endtime="20190116 18:39:16.395"></status>
</kw>
<msg timestamp="20190116 18:39:16.396" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:16.361" endtime="20190116 18:39:16.397"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:16.407" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:16.400" endtime="20190116 18:39:16.408"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:16.411" endtime="20190116 18:39:16.417"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:17.424" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:16.420" endtime="20190116 18:39:17.426"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:15.981" endtime="20190116 18:39:17.426"></status>
</kw>
<kw name="${i} = 53" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:17.485" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:17.436" endtime="20190116 18:39:17.486"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:17.523" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:17.489" endtime="20190116 18:39:17.524"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:17.560" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:17.527" endtime="20190116 18:39:17.561"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:17.568" level="INFO">${TIMENOW} = 1547663957</msg>
<status status="PASS" starttime="20190116 18:39:17.564" endtime="20190116 18:39:17.569"></status>
</kw>
<msg timestamp="20190116 18:39:17.574" level="INFO">${TIMENOW} = 1547663957</msg>
<msg timestamp="20190116 18:39:17.575" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:17.576" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:17.430" endtime="20190116 18:39:17.577"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:17.585" endtime="20190116 18:39:17.781"></status>
</kw>
<msg timestamp="20190116 18:39:17.783" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190116 18:39:17.580" endtime="20190116 18:39:17.784"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:17.787" endtime="20190116 18:39:17.793"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:17.800" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:17.802" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:17.796" endtime="20190116 18:39:17.803"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:17.830" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:17.821" endtime="20190116 18:39:17.831"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:17.839" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:17.834" endtime="20190116 18:39:17.840"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:17.813" endtime="20190116 18:39:17.843"></status>
</kw>
<msg timestamp="20190116 18:39:17.845" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:17.806" endtime="20190116 18:39:17.846"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:17.856" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:17.849" endtime="20190116 18:39:17.857"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:17.860" endtime="20190116 18:39:17.866"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:18.873" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:17.869" endtime="20190116 18:39:18.876"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:17.428" endtime="20190116 18:39:18.877"></status>
</kw>
<kw name="${i} = 54" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:18.950" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:18.890" endtime="20190116 18:39:18.951"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:19.002" level="INFO">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190116 18:39:18.958" endtime="20190116 18:39:19.003"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:19.039" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:19.006" endtime="20190116 18:39:19.040"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:19.048" level="INFO">${TIMENOW} = 1547663959</msg>
<status status="PASS" starttime="20190116 18:39:19.043" endtime="20190116 18:39:19.048"></status>
</kw>
<msg timestamp="20190116 18:39:19.053" level="INFO">${TIMENOW} = 1547663959</msg>
<msg timestamp="20190116 18:39:19.054" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190116 18:39:19.055" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:18.882" endtime="20190116 18:39:19.056"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:19.065" endtime="20190116 18:39:19.261"></status>
</kw>
<msg timestamp="20190116 18:39:19.263" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190116 18:39:19.059" endtime="20190116 18:39:19.263"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:19.266" endtime="20190116 18:39:19.272"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:19.282" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:19.284" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:19.277" endtime="20190116 18:39:19.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:19.311" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:19.306" endtime="20190116 18:39:19.311"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:19.320" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:19.314" endtime="20190116 18:39:19.320"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:19.297" endtime="20190116 18:39:19.323"></status>
</kw>
<msg timestamp="20190116 18:39:19.325" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:19.288" endtime="20190116 18:39:19.326"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:19.336" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:19.329" endtime="20190116 18:39:19.336"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:19.339" endtime="20190116 18:39:19.345"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:20.352" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:19.348" endtime="20190116 18:39:20.354"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:18.878" endtime="20190116 18:39:20.355"></status>
</kw>
<kw name="${i} = 55" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:20.414" level="INFO">${KLEMME30} = [[12225, 120], [12300, 135]]</msg>
<status status="PASS" starttime="20190116 18:39:20.365" endtime="20190116 18:39:20.415"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:20.452" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:20.418" endtime="20190116 18:39:20.453"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:20.488" level="INFO">${CURR_KL30} = 135</msg>
<status status="PASS" starttime="20190116 18:39:20.455" endtime="20190116 18:39:20.489"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:20.496" level="INFO">${TIMENOW} = 1547663960</msg>
<status status="PASS" starttime="20190116 18:39:20.492" endtime="20190116 18:39:20.497"></status>
</kw>
<msg timestamp="20190116 18:39:20.503" level="INFO">${TIMENOW} = 1547663960</msg>
<msg timestamp="20190116 18:39:20.504" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:20.505" level="INFO">${CURR_KL30} = 135</msg>
<status status="PASS" starttime="20190116 18:39:20.358" endtime="20190116 18:39:20.506"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:20.515" endtime="20190116 18:39:20.711"></status>
</kw>
<msg timestamp="20190116 18:39:20.713" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190116 18:39:20.509" endtime="20190116 18:39:20.714"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:20.717" endtime="20190116 18:39:20.722"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:20.730" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:20.731" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:20.725" endtime="20190116 18:39:20.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:20.759" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:20.750" endtime="20190116 18:39:20.760"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:20.768" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:20.763" endtime="20190116 18:39:20.769"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:20.742" endtime="20190116 18:39:20.772"></status>
</kw>
<msg timestamp="20190116 18:39:20.774" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:20.735" endtime="20190116 18:39:20.775"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:20.784" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:20.777" endtime="20190116 18:39:20.785"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:20.788" endtime="20190116 18:39:20.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:21.801" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:20.797" endtime="20190116 18:39:21.803"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:20.356" endtime="20190116 18:39:21.804"></status>
</kw>
<kw name="${i} = 56" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:21.862" level="INFO">${KLEMME30} = [[12225, 120], [12300, 127]]</msg>
<status status="PASS" starttime="20190116 18:39:21.814" endtime="20190116 18:39:21.863"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:21.899" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:21.866" endtime="20190116 18:39:21.900"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:21.990" level="INFO">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190116 18:39:21.905" endtime="20190116 18:39:21.991"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:21.999" level="INFO">${TIMENOW} = 1547663961</msg>
<status status="PASS" starttime="20190116 18:39:21.994" endtime="20190116 18:39:22.000"></status>
</kw>
<msg timestamp="20190116 18:39:22.010" level="INFO">${TIMENOW} = 1547663961</msg>
<msg timestamp="20190116 18:39:22.011" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:22.013" level="INFO">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190116 18:39:21.807" endtime="20190116 18:39:22.013"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:22.043" endtime="20190116 18:39:22.267"></status>
</kw>
<msg timestamp="20190116 18:39:22.269" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190116 18:39:22.037" endtime="20190116 18:39:22.271"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:22.274" endtime="20190116 18:39:22.279"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:22.286" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:22.289" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:22.282" endtime="20190116 18:39:22.289"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:22.318" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:22.311" endtime="20190116 18:39:22.319"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:22.327" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:22.322" endtime="20190116 18:39:22.328"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:22.302" endtime="20190116 18:39:22.331"></status>
</kw>
<msg timestamp="20190116 18:39:22.332" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:22.295" endtime="20190116 18:39:22.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:22.343" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:22.336" endtime="20190116 18:39:22.344"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:22.347" endtime="20190116 18:39:22.353"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:23.359" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:22.356" endtime="20190116 18:39:23.362"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:21.805" endtime="20190116 18:39:23.362"></status>
</kw>
<kw name="${i} = 57" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:23.421" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:23.372" endtime="20190116 18:39:23.422"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:23.458" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:23.426" endtime="20190116 18:39:23.459"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:23.507" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:23.464" endtime="20190116 18:39:23.509"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:23.517" level="INFO">${TIMENOW} = 1547663963</msg>
<status status="PASS" starttime="20190116 18:39:23.512" endtime="20190116 18:39:23.518"></status>
</kw>
<msg timestamp="20190116 18:39:23.523" level="INFO">${TIMENOW} = 1547663963</msg>
<msg timestamp="20190116 18:39:23.524" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:23.525" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:23.366" endtime="20190116 18:39:23.525"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:23.534" endtime="20190116 18:39:23.734"></status>
</kw>
<msg timestamp="20190116 18:39:23.736" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190116 18:39:23.528" endtime="20190116 18:39:23.737"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:23.740" endtime="20190116 18:39:23.746"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:23.753" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:23.755" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:23.749" endtime="20190116 18:39:23.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:23.783" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:23.774" endtime="20190116 18:39:23.783"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:23.792" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:23.786" endtime="20190116 18:39:23.793"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:23.765" endtime="20190116 18:39:23.796"></status>
</kw>
<msg timestamp="20190116 18:39:23.798" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:23.758" endtime="20190116 18:39:23.799"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:23.809" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:23.802" endtime="20190116 18:39:23.809"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:23.818" endtime="20190116 18:39:23.826"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:24.833" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:23.829" endtime="20190116 18:39:24.835"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:23.364" endtime="20190116 18:39:24.836"></status>
</kw>
<kw name="${i} = 58" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:24.895" level="INFO">${KLEMME30} = [[12225, 120], [12300, 127]]</msg>
<status status="PASS" starttime="20190116 18:39:24.846" endtime="20190116 18:39:24.896"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:24.933" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:24.899" endtime="20190116 18:39:24.933"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:24.969" level="INFO">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190116 18:39:24.936" endtime="20190116 18:39:24.970"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:24.978" level="INFO">${TIMENOW} = 1547663964</msg>
<status status="PASS" starttime="20190116 18:39:24.973" endtime="20190116 18:39:24.979"></status>
</kw>
<msg timestamp="20190116 18:39:24.984" level="INFO">${TIMENOW} = 1547663964</msg>
<msg timestamp="20190116 18:39:24.985" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:24.986" level="INFO">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190116 18:39:24.839" endtime="20190116 18:39:24.987"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:25.001" endtime="20190116 18:39:25.203"></status>
</kw>
<msg timestamp="20190116 18:39:25.206" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190116 18:39:24.993" endtime="20190116 18:39:25.207"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:25.211" endtime="20190116 18:39:25.218"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:25.225" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:25.227" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:25.221" endtime="20190116 18:39:25.228"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:25.254" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:25.248" endtime="20190116 18:39:25.255"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:25.273" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:25.268" endtime="20190116 18:39:25.274"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:25.239" endtime="20190116 18:39:25.286"></status>
</kw>
<msg timestamp="20190116 18:39:25.288" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:25.233" endtime="20190116 18:39:25.289"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:25.309" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:25.292" endtime="20190116 18:39:25.310"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:25.313" endtime="20190116 18:39:25.327"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:26.333" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:25.329" endtime="20190116 18:39:26.335"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:24.837" endtime="20190116 18:39:26.336"></status>
</kw>
<kw name="${i} = 59" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:26.395" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:26.346" endtime="20190116 18:39:26.397"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:26.434" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:26.400" endtime="20190116 18:39:26.435"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:26.470" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:26.437" endtime="20190116 18:39:26.471"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:26.479" level="INFO">${TIMENOW} = 1547663966</msg>
<status status="PASS" starttime="20190116 18:39:26.474" endtime="20190116 18:39:26.480"></status>
</kw>
<msg timestamp="20190116 18:39:26.485" level="INFO">${TIMENOW} = 1547663966</msg>
<msg timestamp="20190116 18:39:26.486" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:26.487" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:26.340" endtime="20190116 18:39:26.487"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:26.496" endtime="20190116 18:39:26.694"></status>
</kw>
<msg timestamp="20190116 18:39:26.695" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190116 18:39:26.490" endtime="20190116 18:39:26.697"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:26.700" endtime="20190116 18:39:26.705"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:26.712" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:26.714" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:26.708" endtime="20190116 18:39:26.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:26.746" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:26.734" endtime="20190116 18:39:26.747"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:26.755" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:26.750" endtime="20190116 18:39:26.756"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:26.725" endtime="20190116 18:39:26.759"></status>
</kw>
<msg timestamp="20190116 18:39:26.761" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:26.718" endtime="20190116 18:39:26.762"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:26.772" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:26.765" endtime="20190116 18:39:26.773"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:26.775" endtime="20190116 18:39:26.782"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:27.788" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:26.784" endtime="20190116 18:39:27.790"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:26.338" endtime="20190116 18:39:27.791"></status>
</kw>
<kw name="${i} = 60" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:27.850" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:27.801" endtime="20190116 18:39:27.851"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:27.887" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:27.854" endtime="20190116 18:39:27.888"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:27.923" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:27.890" endtime="20190116 18:39:27.924"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:27.931" level="INFO">${TIMENOW} = 1547663967</msg>
<status status="PASS" starttime="20190116 18:39:27.927" endtime="20190116 18:39:27.932"></status>
</kw>
<msg timestamp="20190116 18:39:27.937" level="INFO">${TIMENOW} = 1547663967</msg>
<msg timestamp="20190116 18:39:27.938" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:27.939" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:27.795" endtime="20190116 18:39:27.940"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:27.949" endtime="20190116 18:39:28.145"></status>
</kw>
<msg timestamp="20190116 18:39:28.149" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190116 18:39:27.943" endtime="20190116 18:39:28.150"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:28.153" endtime="20190116 18:39:28.158"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:28.165" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:28.167" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:28.161" endtime="20190116 18:39:28.168"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:28.191" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:28.186" endtime="20190116 18:39:28.192"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:28.200" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:28.195" endtime="20190116 18:39:28.201"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:28.178" endtime="20190116 18:39:28.204"></status>
</kw>
<msg timestamp="20190116 18:39:28.205" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:28.171" endtime="20190116 18:39:28.206"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:28.216" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:28.209" endtime="20190116 18:39:28.217"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:28.220" endtime="20190116 18:39:28.226"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:29.233" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:28.229" endtime="20190116 18:39:29.235"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:27.793" endtime="20190116 18:39:29.236"></status>
</kw>
<kw name="${i} = 61" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:29.295" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:29.246" endtime="20190116 18:39:29.296"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:29.333" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:29.299" endtime="20190116 18:39:29.334"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:29.369" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:29.337" endtime="20190116 18:39:29.370"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:29.377" level="INFO">${TIMENOW} = 1547663969</msg>
<status status="PASS" starttime="20190116 18:39:29.373" endtime="20190116 18:39:29.378"></status>
</kw>
<msg timestamp="20190116 18:39:29.383" level="INFO">${TIMENOW} = 1547663969</msg>
<msg timestamp="20190116 18:39:29.384" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:29.385" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:29.239" endtime="20190116 18:39:29.386"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:29.408" endtime="20190116 18:39:29.640"></status>
</kw>
<msg timestamp="20190116 18:39:29.642" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190116 18:39:29.391" endtime="20190116 18:39:29.643"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:29.646" endtime="20190116 18:39:29.651"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:29.658" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:29.660" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:29.654" endtime="20190116 18:39:29.661"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:29.688" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:29.679" endtime="20190116 18:39:29.689"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:29.699" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:29.692" endtime="20190116 18:39:29.699"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:29.671" endtime="20190116 18:39:29.702"></status>
</kw>
<msg timestamp="20190116 18:39:29.704" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:29.664" endtime="20190116 18:39:29.705"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:29.716" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:29.708" endtime="20190116 18:39:29.716"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:29.719" endtime="20190116 18:39:29.725"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:30.732" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:29.728" endtime="20190116 18:39:30.734"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:29.237" endtime="20190116 18:39:30.735"></status>
</kw>
<kw name="${i} = 62" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:30.794" level="INFO">${KLEMME30} = [[12225, 133], [12300, 140]]</msg>
<status status="PASS" starttime="20190116 18:39:30.745" endtime="20190116 18:39:30.794"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:30.831" level="INFO">${CURR_VCARBAT} = 133</msg>
<status status="PASS" starttime="20190116 18:39:30.798" endtime="20190116 18:39:30.832"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:30.867" level="INFO">${CURR_KL30} = 140</msg>
<status status="PASS" starttime="20190116 18:39:30.834" endtime="20190116 18:39:30.868"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:30.875" level="INFO">${TIMENOW} = 1547663970</msg>
<status status="PASS" starttime="20190116 18:39:30.871" endtime="20190116 18:39:30.876"></status>
</kw>
<msg timestamp="20190116 18:39:30.883" level="INFO">${TIMENOW} = 1547663970</msg>
<msg timestamp="20190116 18:39:30.884" level="INFO">${CURR_VCARBAT} = 133</msg>
<msg timestamp="20190116 18:39:30.885" level="INFO">${CURR_KL30} = 140</msg>
<status status="PASS" starttime="20190116 18:39:30.739" endtime="20190116 18:39:30.886"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:30.895" endtime="20190116 18:39:31.119"></status>
</kw>
<msg timestamp="20190116 18:39:31.121" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190116 18:39:30.889" endtime="20190116 18:39:31.121"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:31.124" endtime="20190116 18:39:31.147"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:31.154" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:31.178" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:31.150" endtime="20190116 18:39:31.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:31.222" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:31.217" endtime="20190116 18:39:31.234"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:31.242" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:31.237" endtime="20190116 18:39:31.243"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:31.197" endtime="20190116 18:39:31.249"></status>
</kw>
<msg timestamp="20190116 18:39:31.251" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:31.182" endtime="20190116 18:39:31.252"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:31.262" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:31.255" endtime="20190116 18:39:31.262"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:31.265" endtime="20190116 18:39:31.272"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:32.278" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:31.274" endtime="20190116 18:39:32.280"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:30.737" endtime="20190116 18:39:32.281"></status>
</kw>
<kw name="${i} = 63" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:32.346" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:32.292" endtime="20190116 18:39:32.347"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:32.394" level="INFO">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190116 18:39:32.350" endtime="20190116 18:39:32.396"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:32.473" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:32.399" endtime="20190116 18:39:32.474"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:32.494" level="INFO">${TIMENOW} = 1547663972</msg>
<status status="PASS" starttime="20190116 18:39:32.489" endtime="20190116 18:39:32.495"></status>
</kw>
<msg timestamp="20190116 18:39:32.522" level="INFO">${TIMENOW} = 1547663972</msg>
<msg timestamp="20190116 18:39:32.523" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190116 18:39:32.525" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:32.285" endtime="20190116 18:39:32.525"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:32.548" endtime="20190116 18:39:32.787"></status>
</kw>
<msg timestamp="20190116 18:39:32.790" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190116 18:39:32.542" endtime="20190116 18:39:32.791"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:32.793" endtime="20190116 18:39:32.799"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:32.806" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:32.808" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:32.802" endtime="20190116 18:39:32.809"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:32.837" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:32.827" endtime="20190116 18:39:32.840"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:32.848" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:32.843" endtime="20190116 18:39:32.849"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:32.818" endtime="20190116 18:39:32.852"></status>
</kw>
<msg timestamp="20190116 18:39:32.854" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:32.812" endtime="20190116 18:39:32.855"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:32.866" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:32.857" endtime="20190116 18:39:32.867"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:32.883" endtime="20190116 18:39:32.890"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:33.906" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:32.902" endtime="20190116 18:39:33.908"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:32.283" endtime="20190116 18:39:33.909"></status>
</kw>
<kw name="${i} = 64" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:33.971" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:33.919" endtime="20190116 18:39:33.972"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:34.009" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:33.975" endtime="20190116 18:39:34.010"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:34.047" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:34.013" endtime="20190116 18:39:34.048"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:34.056" level="INFO">${TIMENOW} = 1547663974</msg>
<status status="PASS" starttime="20190116 18:39:34.051" endtime="20190116 18:39:34.057"></status>
</kw>
<msg timestamp="20190116 18:39:34.062" level="INFO">${TIMENOW} = 1547663974</msg>
<msg timestamp="20190116 18:39:34.063" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:34.064" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:33.913" endtime="20190116 18:39:34.065"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:34.073" endtime="20190116 18:39:34.275"></status>
</kw>
<msg timestamp="20190116 18:39:34.277" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190116 18:39:34.068" endtime="20190116 18:39:34.278"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:34.281" endtime="20190116 18:39:34.287"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:34.294" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:34.297" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:34.290" endtime="20190116 18:39:34.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:34.322" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:34.317" endtime="20190116 18:39:34.322"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:34.330" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:34.325" endtime="20190116 18:39:34.331"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:34.308" endtime="20190116 18:39:34.334"></status>
</kw>
<msg timestamp="20190116 18:39:34.336" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:34.301" endtime="20190116 18:39:34.337"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:34.347" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:34.340" endtime="20190116 18:39:34.348"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:34.350" endtime="20190116 18:39:34.357"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:35.363" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:34.359" endtime="20190116 18:39:35.366"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:33.910" endtime="20190116 18:39:35.366"></status>
</kw>
<kw name="${i} = 65" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:35.425" level="INFO">${KLEMME30} = [[12225, 132], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:35.376" endtime="20190116 18:39:35.426"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:35.462" level="INFO">${CURR_VCARBAT} = 132</msg>
<status status="PASS" starttime="20190116 18:39:35.429" endtime="20190116 18:39:35.463"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:35.499" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:35.465" endtime="20190116 18:39:35.499"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:35.508" level="INFO">${TIMENOW} = 1547663975</msg>
<status status="PASS" starttime="20190116 18:39:35.502" endtime="20190116 18:39:35.509"></status>
</kw>
<msg timestamp="20190116 18:39:35.514" level="INFO">${TIMENOW} = 1547663975</msg>
<msg timestamp="20190116 18:39:35.515" level="INFO">${CURR_VCARBAT} = 132</msg>
<msg timestamp="20190116 18:39:35.516" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:35.370" endtime="20190116 18:39:35.517"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:35.525" endtime="20190116 18:39:35.721"></status>
</kw>
<msg timestamp="20190116 18:39:35.723" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190116 18:39:35.520" endtime="20190116 18:39:35.724"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:35.727" endtime="20190116 18:39:35.733"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:35.740" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:35.742" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:35.735" endtime="20190116 18:39:35.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:35.770" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:35.761" endtime="20190116 18:39:35.771"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:35.780" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:35.775" endtime="20190116 18:39:35.781"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:35.752" endtime="20190116 18:39:35.784"></status>
</kw>
<msg timestamp="20190116 18:39:35.786" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:35.746" endtime="20190116 18:39:35.787"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:35.797" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:35.789" endtime="20190116 18:39:35.798"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:35.800" endtime="20190116 18:39:35.807"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:36.813" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:35.809" endtime="20190116 18:39:36.815"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:35.368" endtime="20190116 18:39:36.816"></status>
</kw>
<kw name="${i} = 66" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:36.875" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:36.826" endtime="20190116 18:39:36.877"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:36.912" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:36.880" endtime="20190116 18:39:36.913"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:36.949" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:36.916" endtime="20190116 18:39:36.950"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:36.957" level="INFO">${TIMENOW} = 1547663976</msg>
<status status="PASS" starttime="20190116 18:39:36.953" endtime="20190116 18:39:36.958"></status>
</kw>
<msg timestamp="20190116 18:39:36.963" level="INFO">${TIMENOW} = 1547663976</msg>
<msg timestamp="20190116 18:39:36.964" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:36.965" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:36.820" endtime="20190116 18:39:36.966"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:36.975" endtime="20190116 18:39:37.173"></status>
</kw>
<msg timestamp="20190116 18:39:37.175" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190116 18:39:36.969" endtime="20190116 18:39:37.176"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:37.179" endtime="20190116 18:39:37.184"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:37.191" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:37.193" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:37.187" endtime="20190116 18:39:37.194"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:37.217" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:37.212" endtime="20190116 18:39:37.218"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:37.226" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:37.221" endtime="20190116 18:39:37.227"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:37.204" endtime="20190116 18:39:37.230"></status>
</kw>
<msg timestamp="20190116 18:39:37.231" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:37.197" endtime="20190116 18:39:37.232"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:37.242" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:37.235" endtime="20190116 18:39:37.243"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:37.246" endtime="20190116 18:39:37.253"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:38.259" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:37.255" endtime="20190116 18:39:38.262"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:36.818" endtime="20190116 18:39:38.262"></status>
</kw>
<kw name="${i} = 67" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:38.322" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:38.272" endtime="20190116 18:39:38.324"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:38.362" level="INFO">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190116 18:39:38.327" endtime="20190116 18:39:38.363"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:38.404" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:38.366" endtime="20190116 18:39:38.405"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:38.412" level="INFO">${TIMENOW} = 1547663978</msg>
<status status="PASS" starttime="20190116 18:39:38.408" endtime="20190116 18:39:38.413"></status>
</kw>
<msg timestamp="20190116 18:39:38.418" level="INFO">${TIMENOW} = 1547663978</msg>
<msg timestamp="20190116 18:39:38.419" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190116 18:39:38.420" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:38.266" endtime="20190116 18:39:38.421"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:38.429" endtime="20190116 18:39:38.649"></status>
</kw>
<msg timestamp="20190116 18:39:38.651" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190116 18:39:38.424" endtime="20190116 18:39:38.652"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:38.666" endtime="20190116 18:39:38.686"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:38.705" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:38.707" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:38.689" endtime="20190116 18:39:38.708"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:38.762" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:38.756" endtime="20190116 18:39:38.763"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:38.784" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:38.778" endtime="20190116 18:39:38.785"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:38.730" endtime="20190116 18:39:38.788"></status>
</kw>
<msg timestamp="20190116 18:39:38.802" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:38.711" endtime="20190116 18:39:38.803"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:38.813" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:38.806" endtime="20190116 18:39:38.826"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:38.829" endtime="20190116 18:39:38.835"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:39.854" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:38.850" endtime="20190116 18:39:39.856"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:38.264" endtime="20190116 18:39:39.857"></status>
</kw>
<kw name="${i} = 68" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:39.915" level="INFO">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:39.866" endtime="20190116 18:39:39.916"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:39.952" level="INFO">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190116 18:39:39.919" endtime="20190116 18:39:39.953"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:39.988" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:39.956" endtime="20190116 18:39:39.989"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:39.997" level="INFO">${TIMENOW} = 1547663979</msg>
<status status="PASS" starttime="20190116 18:39:39.992" endtime="20190116 18:39:39.997"></status>
</kw>
<msg timestamp="20190116 18:39:40.003" level="INFO">${TIMENOW} = 1547663979</msg>
<msg timestamp="20190116 18:39:40.004" level="INFO">${CURR_VCARBAT} = 120</msg>
<msg timestamp="20190116 18:39:40.005" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:39.860" endtime="20190116 18:39:40.006"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:40.015" endtime="20190116 18:39:40.213"></status>
</kw>
<msg timestamp="20190116 18:39:40.214" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190116 18:39:40.009" endtime="20190116 18:39:40.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:40.219" endtime="20190116 18:39:40.224"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:40.231" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:40.233" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:40.227" endtime="20190116 18:39:40.234"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:40.258" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:40.253" endtime="20190116 18:39:40.259"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:40.267" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:40.262" endtime="20190116 18:39:40.268"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:40.244" endtime="20190116 18:39:40.271"></status>
</kw>
<msg timestamp="20190116 18:39:40.273" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:40.238" endtime="20190116 18:39:40.273"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:40.283" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:40.276" endtime="20190116 18:39:40.284"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:40.287" endtime="20190116 18:39:40.293"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:41.299" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:40.296" endtime="20190116 18:39:41.302"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:39.858" endtime="20190116 18:39:41.302"></status>
</kw>
<kw name="${i} = 69" type="foritem">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:39:41.361" level="INFO">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190116 18:39:41.312" endtime="20190116 18:39:41.362"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:39:41.399" level="INFO">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190116 18:39:41.365" endtime="20190116 18:39:41.399"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:39:41.435" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:41.402" endtime="20190116 18:39:41.436"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:39:41.443" level="INFO">${TIMENOW} = 1547663981</msg>
<status status="PASS" starttime="20190116 18:39:41.439" endtime="20190116 18:39:41.444"></status>
</kw>
<msg timestamp="20190116 18:39:41.449" level="INFO">${TIMENOW} = 1547663981</msg>
<msg timestamp="20190116 18:39:41.450" level="INFO">${CURR_VCARBAT} = 121</msg>
<msg timestamp="20190116 18:39:41.451" level="INFO">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190116 18:39:41.306" endtime="20190116 18:39:41.452"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:41.461" endtime="20190116 18:39:41.661"></status>
</kw>
<msg timestamp="20190116 18:39:41.663" level="INFO">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190116 18:39:41.455" endtime="20190116 18:39:41.664"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:41.667" endtime="20190116 18:39:41.674"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg timestamp="20190116 18:39:41.681" level="INFO">Length is 62</msg>
<msg timestamp="20190116 18:39:41.683" level="INFO">${msg_len} = 62</msg>
<status status="PASS" starttime="20190116 18:39:41.677" endtime="20190116 18:39:41.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20190116 18:39:41.711" level="INFO">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190116 18:39:41.702" endtime="20190116 18:39:41.713"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg timestamp="20190116 18:39:41.722" level="INFO">${RES} = 03</msg>
<status status="PASS" starttime="20190116 18:39:41.716" endtime="20190116 18:39:41.722"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:41.694" endtime="20190116 18:39:41.726"></status>
</kw>
<msg timestamp="20190116 18:39:41.727" level="INFO">${resp} = 03</msg>
<status status="PASS" starttime="20190116 18:39:41.687" endtime="20190116 18:39:41.728"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg timestamp="20190116 18:39:41.738" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:39:41.731" endtime="20190116 18:39:41.739"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:41.741" endtime="20190116 18:39:41.747"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg timestamp="20190116 18:39:42.754" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20190116 18:39:41.750" endtime="20190116 18:39:42.757"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:41.304" endtime="20190116 18:39:42.757"></status>
</kw>
<status status="PASS" starttime="20190116 18:37:57.795" endtime="20190116 18:39:42.758"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:42.761" endtime="20190116 18:39:42.768"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:42.770" endtime="20190116 18:39:42.776"></status>
</kw>
<msg timestamp="20190116 18:39:42.780" level="INFO">${STATUS} = False</msg>
<status status="PASS" starttime="20190116 18:37:57.770" endtime="20190116 18:39:42.780"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<msg timestamp="20190116 18:39:42.789" level="FAIL">'False' should be true.</msg>
<status status="FAIL" starttime="20190116 18:39:42.783" endtime="20190116 18:39:42.790"></status>
</kw>
<status status="FAIL" starttime="20190116 18:37:54.830" endtime="20190116 18:39:42.793"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:42.804" endtime="20190116 18:39:42.853"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:42.855" endtime="20190116 18:39:42.903"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:42.907" endtime="20190116 18:39:42.954"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:42.958" endtime="20190116 18:39:43.003"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:42.797" endtime="20190116 18:39:43.006"></status>
</kw>
<doc>Implements Test Task SKTB-55194 Powermanagement</doc>
<tags>
<tag>Powermanagement test</tag>
</tags>
<status status="FAIL" starttime="20190116 18:37:50.507" critical="yes" endtime="20190116 18:39:43.007">'False' should be true.</status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:39:44.627" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:39:44.683" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:39:43.140" endtime="20190116 18:39:44.691"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:43.023" endtime="20190116 18:39:44.710"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:43.017" endtime="20190116 18:39:44.719"></status>
</kw>
<doc>Chorus Power wake up down test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190116 18:37:47.669" endtime="20190116 18:39:44.720"></status>
</suite>
<suite name="SKTB-FLASHDOWN" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-FLASHDOWN.robot" id="s1-s20">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:39:45.343" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:39:45.325" endtime="20190116 18:39:45.355"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:39:45.378" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:39:45.380" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:39:47.559" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:39:45.358" endtime="20190116 18:39:47.561"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:45.320" endtime="20190116 18:39:47.586"></status>
</kw>
<test name="SKTB-FLSHDOWN Chorus SW Flashing" id="s1-s20-t1">
<kw name="Test_precondition" type="setup">
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:47.621" endtime="20190116 18:39:47.705"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:47.708" endtime="20190116 18:39:47.800"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:47.803" endtime="20190116 18:39:47.904"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:39:49.922" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:39:47.907" endtime="20190116 18:39:49.925"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:49.927" endtime="20190116 18:39:49.973"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:49.977" endtime="20190116 18:39:50.024"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190116 18:39:50.027" endtime="20190116 18:39:50.074"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:47.607" endtime="20190116 18:39:50.077"></status>
</kw>
<kw name="update_prev">
<doc>Flashing previous version</doc>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg timestamp="20190116 18:39:52.090" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:39:50.086" endtime="20190116 18:39:52.092"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20190116 18:41:18.069" level="INFO">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:39:52.095" endtime="20190116 18:41:18.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:41:18.077" level="INFO">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190116 18:41:18.073" endtime="20190116 18:41:18.079"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:41:20.086" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:41:18.082" endtime="20190116 18:41:20.089"></status>
</kw>
<status status="PASS" starttime="20190116 18:39:50.080" endtime="20190116 18:41:20.091"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:20.100" endtime="20190116 18:41:20.147"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:20.150" endtime="20190116 18:41:20.195"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:20.199" endtime="20190116 18:41:20.245"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:20.247" endtime="20190116 18:41:20.295"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:20.298" endtime="20190116 18:41:20.345"></status>
</kw>
<status status="PASS" starttime="20190116 18:41:20.094" endtime="20190116 18:41:20.347"></status>
</kw>
<doc>Implements Test Task SKTB-FLASHDOWN</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status status="PASS" starttime="20190116 18:39:47.588" critical="yes" endtime="20190116 18:41:20.349"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:41:21.865" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:41:21.968" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:41:20.386" endtime="20190116 18:41:21.970"></status>
</kw>
<status status="PASS" starttime="20190116 18:41:20.364" endtime="20190116 18:41:21.971"></status>
</kw>
<status status="PASS" starttime="20190116 18:41:20.358" endtime="20190116 18:41:21.973"></status>
</kw>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:39:44.896" endtime="20190116 18:41:21.974"></status>
</suite>
<suite name="SKTB-50571" source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-50571.robot" id="s1-s21">
<kw name="Setup Actions" type="setup" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg timestamp="20190116 18:41:22.579" level="INFO">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190116 18:41:22.570" endtime="20190116 18:41:22.608"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg timestamp="20190116 18:41:22.636" level="INFO">Using robot-framework-tnt-client v1.3.1</msg>
<msg timestamp="20190116 18:41:22.638" level="INFO">Connecting to server localhost:5554</msg>
<msg timestamp="20190116 18:41:24.782" level="INFO">Reloaded library robot_framework_tnt.Client with 37 keywords.</msg>
<status status="PASS" starttime="20190116 18:41:22.611" endtime="20190116 18:41:24.784"></status>
</kw>
<status status="PASS" starttime="20190116 18:41:22.557" endtime="20190116 18:41:24.802"></status>
</kw>
<test name="SKTB-50571 OTA update" id="s1-s21-t1">
<kw name="Test_precondition" type="setup">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:41:24.883" level="INFO">"Test_precondition"</msg>
<status status="PASS" starttime="20190116 18:41:24.879" endtime="20190116 18:41:24.894"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:24.896" endtime="20190116 18:41:24.990"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:24.993" endtime="20190116 18:41:25.110"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:25.113" endtime="20190116 18:41:25.218"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg timestamp="20190116 18:41:27.225" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20190116 18:41:25.221" endtime="20190116 18:41:27.228"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:27.231" endtime="20190116 18:41:27.307"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:27.310" endtime="20190116 18:41:27.394"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait til the device is powered on it takes: ${BOOT_TIME}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:41:27.397" endtime="20190116 18:41:27.410"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${BOOT_TIME}</arg>
</arguments>
<msg timestamp="20190116 18:42:27.417" level="INFO">Slept 1 minute</msg>
<status status="PASS" starttime="20190116 18:41:27.413" endtime="20190116 18:42:27.420"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>ping ${HOST_IP}</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20190116 18:42:27.429" level="INFO">Starting process:
ping 192.168.1.101</msg>
<status status="PASS" starttime="20190116 18:42:27.423" endtime="20190116 18:42:27.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:42:27.474" level="INFO">"Setup ssh"</msg>
<status status="PASS" starttime="20190116 18:42:27.469" endtime="20190116 18:42:27.479"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw name="Open Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg timestamp="20190116 18:42:27.497" level="INFO">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status status="PASS" starttime="20190116 18:42:27.491" endtime="20190116 18:42:28.353"></status>
</kw>
<status status="PASS" starttime="20190116 18:42:27.483" endtime="20190116 18:42:28.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh done!"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:42:28.361" level="INFO">"Setup ssh done!"</msg>
<status status="PASS" starttime="20190116 18:42:28.357" endtime="20190116 18:42:28.363"></status>
</kw>
<status status="PASS" starttime="20190116 18:41:24.843" endtime="20190116 18:42:28.366"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Implements Test Task SKTB-50571 OTA chorus update</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:28.370" endtime="20190116 18:42:28.374"></status>
</kw>
<kw name="PREPARE_FILE">
<doc>remove old and copy the new loader, pbl and appl debian package to the dut</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Remove old carif files</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:28.383" endtime="20190116 18:42:28.388"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>rm ${OLU-CARIF}*</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:42:28.396" level="INFO">Sending command to DUT rm olu-carif*</msg>
<msg timestamp="20190116 18:42:28.466" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:42:28.469" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:42:28.391" endtime="20190116 18:42:28.470"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:28.473" endtime="20190116 18:42:28.486"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>rm -f ${RESULT_APPL_FILE} ${RESULT_PBL_FILE}</arg>
</arguments>
<msg timestamp="20190116 18:42:28.494" level="INFO">Sending command to DUT rm -f /root/appl50571.txt /root/pbl50571.txt</msg>
<msg timestamp="20190116 18:42:28.569" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:42:28.489" endtime="20190116 18:42:28.571"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste all .deb files</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:28.588" endtime="20190116 18:42:28.597"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ls -al | grep ${OLU-CARIF}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:42:28.605" level="INFO">Sending command to DUT ls -al | grep olu-carif</msg>
<msg timestamp="20190116 18:42:28.679" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:42:28.682" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:42:28.600" endtime="20190116 18:42:28.683"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:28.686" endtime="20190116 18:42:28.698"></status>
</kw>
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${LD_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_LD}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190116 18:42:28.717" level="INFO">Starting process:
find /home/debian/chorus_deb/olu-carif-ld_*.deb</msg>
<msg timestamp="20190116 18:42:28.745" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:42:28.761" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:42:28.764" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:42:28.709" endtime="20190116 18:42:28.765"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190116 18:42:28.774" level="INFO">${stdout_path} = /home/debian/chorus_deb/olu-carif-ld_0009.9.0_i386.deb</msg>
<status status="PASS" starttime="20190116 18:42:28.769" endtime="20190116 18:42:28.775"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:42:28.782" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:42:28.785" level="INFO">${temp} = ['/home/debian/chorus_deb/olu-carif-ld_0009.9.0_i386.deb']</msg>
<status status="PASS" starttime="20190116 18:42:28.778" endtime="20190116 18:42:28.786"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190116 18:42:28.794" level="INFO">${path} = /home/debian/chorus_deb/olu-carif-ld_0009.9.0_i386.deb</msg>
<status status="PASS" starttime="20190116 18:42:28.788" endtime="20190116 18:42:28.795"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:28.797" endtime="20190116 18:42:28.803"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190116 18:42:28.810" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-ld_0009.9.0_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-ld_0009.9.0_i386.deb&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190116 18:42:28.806" endtime="20190116 18:42:28.813"></status>
</kw>
<msg timestamp="20190116 18:42:28.817" level="INFO">${matched_path_LD} = /home/debian/chorus_deb/olu-carif-ld_0009.9.0_i386.deb</msg>
<status status="PASS" starttime="20190116 18:42:28.701" endtime="20190116 18:42:28.818"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum LD Original:</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:28.822" endtime="20190116 18:42:28.827"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_LD}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:42:28.843" level="INFO">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-ld_0009.9.0_i386.deb</msg>
<msg timestamp="20190116 18:42:28.871" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:42:28.883" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:42:28.886" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:42:28.837" endtime="20190116 18:42:28.887"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg timestamp="20190116 18:42:28.896" level="INFO">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:42:28.891" endtime="20190116 18:42:28.897"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:28.900" endtime="20190116 18:42:28.907"></status>
</kw>
<status status="PASS" starttime="20190116 18:42:28.829" endtime="20190116 18:42:28.910"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy LD to DUT</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:28.913" endtime="20190116 18:42:28.918"></status>
</kw>
<kw name="Upload File To Dut" library="lairdcvs.testlibrary.TestLibrary">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_LD}</arg>
<arg>/root</arg>
</arguments>
<msg timestamp="20190116 18:42:28.926" level="INFO">Uploading file /home/debian/chorus_deb/olu-carif-ld_0009.9.0_i386.deb to /root</msg>
<status status="PASS" starttime="20190116 18:42:28.921" endtime="20190116 18:42:29.017"></status>
</kw>
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${PBL_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_PBL}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190116 18:42:29.042" level="INFO">Starting process:
find /home/debian/chorus_deb/olu-carif-pbl_*.deb</msg>
<msg timestamp="20190116 18:42:29.070" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:42:29.085" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:42:29.088" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:42:29.035" endtime="20190116 18:42:29.089"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190116 18:42:29.099" level="INFO">${stdout_path} = /home/debian/chorus_deb/olu-carif-pbl_0009.9.0_i386.deb</msg>
<status status="PASS" starttime="20190116 18:42:29.093" endtime="20190116 18:42:29.099"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:42:29.107" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:42:29.109" level="INFO">${temp} = ['/home/debian/chorus_deb/olu-carif-pbl_0009.9.0_i386.deb']</msg>
<status status="PASS" starttime="20190116 18:42:29.102" endtime="20190116 18:42:29.110"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190116 18:42:29.118" level="INFO">${path} = /home/debian/chorus_deb/olu-carif-pbl_0009.9.0_i386.deb</msg>
<status status="PASS" starttime="20190116 18:42:29.113" endtime="20190116 18:42:29.119"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:29.122" endtime="20190116 18:42:29.127"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190116 18:42:29.136" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-pbl_0009.9.0_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-pbl_0009.9.0_i386.deb&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190116 18:42:29.130" endtime="20190116 18:42:29.138"></status>
</kw>
<msg timestamp="20190116 18:42:29.142" level="INFO">${matched_path_PBL} = /home/debian/chorus_deb/olu-carif-pbl_0009.9.0_i386.deb</msg>
<status status="PASS" starttime="20190116 18:42:29.021" endtime="20190116 18:42:29.143"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum PBL Original:</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:29.146" endtime="20190116 18:42:29.150"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_PBL}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:42:29.180" level="INFO">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-pbl_0009.9.0_i386.deb</msg>
<msg timestamp="20190116 18:42:29.208" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:42:29.220" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:42:29.223" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:42:29.174" endtime="20190116 18:42:29.224"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg timestamp="20190116 18:42:29.233" level="INFO">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:42:29.228" endtime="20190116 18:42:29.234"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:29.238" endtime="20190116 18:42:29.245"></status>
</kw>
<status status="PASS" starttime="20190116 18:42:29.152" endtime="20190116 18:42:29.248"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy PBL to DUT</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:29.251" endtime="20190116 18:42:29.255"></status>
</kw>
<kw name="Upload File To Dut" library="lairdcvs.testlibrary.TestLibrary">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_PBL}</arg>
<arg>/root</arg>
</arguments>
<msg timestamp="20190116 18:42:29.265" level="INFO">Uploading file /home/debian/chorus_deb/olu-carif-pbl_0009.9.0_i386.deb to /root</msg>
<status status="PASS" starttime="20190116 18:42:29.258" endtime="20190116 18:42:29.355"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy APPL to DUT</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:29.359" endtime="20190116 18:42:29.369"></status>
</kw>
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${APPL_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_APPL}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg timestamp="20190116 18:42:29.386" level="INFO">Starting process:
find /home/debian/chorus_deb/olu-carif-appl_*.deb</msg>
<msg timestamp="20190116 18:42:29.414" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:42:29.429" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:42:29.431" level="INFO">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:42:29.380" endtime="20190116 18:42:29.433"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg timestamp="20190116 18:42:29.443" level="INFO">${stdout_path} = /home/debian/chorus_deb/olu-carif-appl_0009.9.0_i386.deb</msg>
<status status="PASS" starttime="20190116 18:42:29.437" endtime="20190116 18:42:29.444"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg timestamp="20190116 18:42:29.452" level="INFO">1 lines returned</msg>
<msg timestamp="20190116 18:42:29.454" level="INFO">${temp} = ['/home/debian/chorus_deb/olu-carif-appl_0009.9.0_i386.deb']</msg>
<status status="PASS" starttime="20190116 18:42:29.446" endtime="20190116 18:42:29.455"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg timestamp="20190116 18:42:29.463" level="INFO">${path} = /home/debian/chorus_deb/olu-carif-appl_0009.9.0_i386.deb</msg>
<status status="PASS" starttime="20190116 18:42:29.458" endtime="20190116 18:42:29.464"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:29.467" endtime="20190116 18:42:29.473"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg timestamp="20190116 18:42:29.481" html="yes" level="INFO">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-appl_0009.9.0_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-appl_0009.9.0_i386.deb&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190116 18:42:29.476" endtime="20190116 18:42:29.483"></status>
</kw>
<msg timestamp="20190116 18:42:29.488" level="INFO">${matched_path_APPL} = /home/debian/chorus_deb/olu-carif-appl_0009.9.0_i386.deb</msg>
<status status="PASS" starttime="20190116 18:42:29.372" endtime="20190116 18:42:29.489"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum APPL Original:</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:29.492" endtime="20190116 18:42:29.496"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_APPL}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:42:29.512" level="INFO">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-appl_0009.9.0_i386.deb</msg>
<msg timestamp="20190116 18:42:29.540" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:42:29.554" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:42:29.558" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:42:29.507" endtime="20190116 18:42:29.559"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg timestamp="20190116 18:42:29.568" level="INFO">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:42:29.563" endtime="20190116 18:42:29.569"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:29.572" endtime="20190116 18:42:29.580"></status>
</kw>
<status status="PASS" starttime="20190116 18:42:29.499" endtime="20190116 18:42:29.582"></status>
</kw>
<kw name="Upload File To Dut" library="lairdcvs.testlibrary.TestLibrary">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_APPL}</arg>
<arg>/root</arg>
</arguments>
<msg timestamp="20190116 18:42:29.590" level="INFO">Uploading file /home/debian/chorus_deb/olu-carif-appl_0009.9.0_i386.deb to /root</msg>
<status status="PASS" starttime="20190116 18:42:29.585" endtime="20190116 18:42:29.718"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Starte sync</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:29.722" endtime="20190116 18:42:29.732"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>sync</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:42:29.739" level="INFO">Sending command to DUT sync</msg>
<msg timestamp="20190116 18:42:30.621" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:42:30.624" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:42:29.736" endtime="20190116 18:42:30.625"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:30.628" endtime="20190116 18:42:30.640"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nMD5SUM for OLU-CARIF deb packages</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:30.643" endtime="20190116 18:42:30.648"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>md5sum ${LD_NAME}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:42:30.656" level="INFO">Sending command to DUT md5sum olu-carif-ld_*.deb</msg>
<msg timestamp="20190116 18:42:30.721" level="INFO">Returning data (d85c0f52cf5373509f3570d4b8f98ee4  olu-carif-ld_0009.9.0_i386.deb, )</msg>
<msg timestamp="20190116 18:42:30.723" level="INFO">${ret} = ('d85c0f52cf5373509f3570d4b8f98ee4  olu-carif-ld_0009.9.0_i386.deb', '')</msg>
<status status="PASS" starttime="20190116 18:42:30.651" endtime="20190116 18:42:30.730"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:30.733" endtime="20190116 18:42:30.741"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Show all files</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:30.744" endtime="20190116 18:42:30.749"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ls -al | grep ${OLU-CARIF}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:42:30.757" level="INFO">Sending command to DUT ls -al | grep olu-carif</msg>
<msg timestamp="20190116 18:42:30.829" level="INFO">Returning data (-rw-r--r--    1 root     root        186806 Jan 16 18:39 olu-carif-appl_0009.9.0_i386.deb -rw-r--r--    1 root     root         47784 Jan 16 18:39 olu-carif-ld_0009.9.0_i386.deb -rw-r--r--    1 root     root         47966 Jan 16 18:39 olu-carif-pbl_0009.9.0_i386.deb, )</msg>
<msg timestamp="20190116 18:42:30.832" level="INFO">${ret} = ('-rw-r--r--    1 root     root        186806 Jan 16 18:39 olu-carif-appl_0009.9.0_i386.deb -rw-r--r--    1 root     root         47784 Jan 16 18:39 olu-carif-ld_0009.9.0_i386.deb -rw-r--r--    1 root...</msg>
<status status="PASS" starttime="20190116 18:42:30.752" endtime="20190116 18:42:30.833"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:30.836" endtime="20190116 18:42:30.848"></status>
</kw>
<status status="PASS" starttime="20190116 18:42:28.377" endtime="20190116 18:42:30.851"></status>
</kw>
<kw name="UPDATE_CHORUS">
<doc>Update chorus</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Update chorus"</arg>
</arguments>
<status status="PASS" starttime="20190116 18:42:30.860" endtime="20190116 18:42:30.865"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>run ssh command</arg>
<arg>${ENV_PATHVAR} nohup ${DPKG_INSTALL} ${LD_NAME} ${PBL_NAME} ${APPL_NAME} &gt; ${RESULT_APPL_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>${ENV_PATHVAR} nohup ${DPKG_INSTALL} ${LD_NAME} ${PBL_NAME} ${APPL_NAME} &gt; ${RESULT_APPL_FILE}</arg>
</arguments>
<msg timestamp="20190116 18:42:30.886" level="INFO">Sending command to DUT PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin nohup dpkg -i olu-carif-ld_*.deb olu-carif-pbl_*.deb olu-carif-appl_*.deb &gt; /root/appl50571.txt</msg>
<msg timestamp="20190116 18:43:18.539" level="INFO">Returning data (, )</msg>
<status status="PASS" starttime="20190116 18:42:30.874" endtime="20190116 18:43:18.541"></status>
</kw>
<msg timestamp="20190116 18:43:18.543" level="INFO">${ret} = ('PASS', ('', ''))</msg>
<status status="PASS" starttime="20190116 18:42:30.868" endtime="20190116 18:43:18.544"></status>
</kw>
<kw name="Close Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190116 18:43:18.557" level="INFO">Closing SSH connection to 192.168.1.101</msg>
<status status="PASS" starttime="20190116 18:43:18.547" endtime="20190116 18:43:18.559"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Wait until the update success, it takes: ${UPDATE_TIME}"</arg>
</arguments>
<status status="PASS" starttime="20190116 18:43:18.562" endtime="20190116 18:43:18.568"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${UPDATE_TIME}</arg>
</arguments>
<msg timestamp="20190116 18:44:08.576" level="INFO">Slept 50 seconds</msg>
<status status="PASS" starttime="20190116 18:43:18.571" endtime="20190116 18:44:08.578"></status>
</kw>
<kw name="check_stdoutfile">
<doc>Check stdout file</doc>
<arguments>
<arg>${RESULT_APPL_FILE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Check stdout file: ${result_file}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:08.589" endtime="20190116 18:44:08.595"></status>
</kw>
<kw name="Close Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190116 18:44:08.601" level="INFO">No SSH connection currently established.</msg>
<status status="PASS" starttime="20190116 18:44:08.598" endtime="20190116 18:44:08.603"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:08.606" endtime="20190116 18:44:08.653"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:08.661" endtime="20190116 18:44:08.710"></status>
</kw>
<kw name="Measure_Current_kl30">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg timestamp="20190116 18:44:08.787" level="INFO">${KLEMME30} = [[0, 0], [0, 0]]</msg>
<status status="PASS" starttime="20190116 18:44:08.733" endtime="20190116 18:44:08.817"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg timestamp="20190116 18:44:08.957" level="INFO">${CURR_VCARBAT} = 0</msg>
<status status="PASS" starttime="20190116 18:44:08.820" endtime="20190116 18:44:08.957"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg timestamp="20190116 18:44:09.056" level="INFO">${CURR_KL30} = 0</msg>
<status status="PASS" starttime="20190116 18:44:08.984" endtime="20190116 18:44:09.059"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg timestamp="20190116 18:44:09.067" level="INFO">${TIMENOW} = 1547664249</msg>
<status status="PASS" starttime="20190116 18:44:09.062" endtime="20190116 18:44:09.068"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:09.071" endtime="20190116 18:44:09.078"></status>
</kw>
<status status="PASS" starttime="20190116 18:44:08.718" endtime="20190116 18:44:09.082"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait 5 seconds</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:09.085" endtime="20190116 18:44:09.090"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5 seconds</arg>
</arguments>
<msg timestamp="20190116 18:44:14.097" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20190116 18:44:09.092" endtime="20190116 18:44:14.099"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:14.101" endtime="20190116 18:44:14.147"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:14.151" endtime="20190116 18:44:14.201"></status>
</kw>
<kw name="WAIT_UNTIL_DEVICE_IS_READY">
<doc>Waiting for device to be ready, up to 90 seconds</doc>
<assign>
<var>${status}</var>
</assign>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${secs}</var>
</assign>
<msg timestamp="20190116 18:44:14.217" level="INFO">${secs} = 1547664254</msg>
<status status="PASS" starttime="20190116 18:44:14.211" endtime="20190116 18:44:14.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Waiting for device to be ready, up to 90 seconds. Timestamp: ${secs}\n</arg>
<arg>console=true</arg>
</arguments>
<msg timestamp="20190116 18:44:14.225" level="INFO">Waiting for device to be ready, up to 90 seconds. Timestamp: 1547664254
</msg>
<status status="PASS" starttime="20190116 18:44:14.220" endtime="20190116 18:44:14.227"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait until keyword succeeds</arg>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:14.258" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:14.288" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:14.308" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:14.311" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:14.251" endtime="20190116 18:44:14.313"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:14.326" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:14.317" endtime="20190116 18:44:14.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:14.342" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:14.330" endtime="20190116 18:44:14.343"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:14.244" endtime="20190116 18:44:14.346"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:14.485" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:14.514" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:14.534" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:14.538" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:14.478" endtime="20190116 18:44:14.538"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:14.552" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:14.543" endtime="20190116 18:44:14.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:14.564" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:14.556" endtime="20190116 18:44:14.566"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:14.470" endtime="20190116 18:44:14.570"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:14.719" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:14.787" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:14.816" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:14.819" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:14.703" endtime="20190116 18:44:14.821"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:14.833" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:14.824" endtime="20190116 18:44:14.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:14.845" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:14.837" endtime="20190116 18:44:14.846"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:14.694" endtime="20190116 18:44:14.850"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:15.012" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:15.074" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:15.106" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:15.110" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:15.002" endtime="20190116 18:44:15.110"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:15.124" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:15.114" endtime="20190116 18:44:15.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:15.135" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:15.127" endtime="20190116 18:44:15.137"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:14.973" endtime="20190116 18:44:15.140"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:15.283" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:15.313" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:15.334" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:15.337" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:15.271" endtime="20190116 18:44:15.338"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:15.351" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:15.342" endtime="20190116 18:44:15.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:15.363" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:15.355" endtime="20190116 18:44:15.364"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:15.263" endtime="20190116 18:44:15.367"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:15.505" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:15.536" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:15.557" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:15.560" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:15.499" endtime="20190116 18:44:15.561"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:15.574" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:15.565" endtime="20190116 18:44:15.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:15.589" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:15.580" endtime="20190116 18:44:15.591"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:15.491" endtime="20190116 18:44:15.594"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:15.732" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:15.762" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:15.783" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:15.786" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:15.725" endtime="20190116 18:44:15.787"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:15.801" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:15.791" endtime="20190116 18:44:15.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:15.813" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:15.805" endtime="20190116 18:44:15.815"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:15.717" endtime="20190116 18:44:15.818"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:15.956" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:15.986" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:16.007" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:16.010" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:15.949" endtime="20190116 18:44:16.011"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:16.025" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:16.015" endtime="20190116 18:44:16.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:16.036" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:16.028" endtime="20190116 18:44:16.037"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:15.941" endtime="20190116 18:44:16.041"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:16.182" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:16.212" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:16.233" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:16.237" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:16.172" endtime="20190116 18:44:16.238"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:16.251" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:16.241" endtime="20190116 18:44:16.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:16.262" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:16.254" endtime="20190116 18:44:16.263"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:16.164" endtime="20190116 18:44:16.267"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:16.406" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:16.435" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:16.456" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:16.459" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:16.398" endtime="20190116 18:44:16.460"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:16.473" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:16.464" endtime="20190116 18:44:16.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:16.484" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:16.476" endtime="20190116 18:44:16.486"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:16.390" endtime="20190116 18:44:16.489"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:16.627" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:16.656" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:16.677" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:16.680" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:16.621" endtime="20190116 18:44:16.681"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:16.694" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:16.685" endtime="20190116 18:44:16.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:16.706" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:16.698" endtime="20190116 18:44:16.708"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:16.612" endtime="20190116 18:44:16.711"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:16.851" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:16.881" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:16.902" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:16.905" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:16.843" endtime="20190116 18:44:16.906"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:16.919" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:16.910" endtime="20190116 18:44:16.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:16.942" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:16.924" endtime="20190116 18:44:16.944"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:16.834" endtime="20190116 18:44:16.947"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:17.089" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:17.118" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:17.139" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:17.142" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:17.079" endtime="20190116 18:44:17.143"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:17.156" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:17.147" endtime="20190116 18:44:17.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:17.168" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:17.160" endtime="20190116 18:44:17.170"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:17.070" endtime="20190116 18:44:17.173"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:17.311" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:17.340" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:17.361" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:17.364" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:17.304" endtime="20190116 18:44:17.365"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:17.378" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:17.369" endtime="20190116 18:44:17.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:17.390" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:17.382" endtime="20190116 18:44:17.391"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:17.296" endtime="20190116 18:44:17.394"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:17.532" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:17.562" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:17.583" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:17.587" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:17.526" endtime="20190116 18:44:17.588"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:17.601" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:17.592" endtime="20190116 18:44:17.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:17.612" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:17.604" endtime="20190116 18:44:17.614"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:17.517" endtime="20190116 18:44:17.617"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:17.755" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:17.784" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:17.804" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:17.807" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:17.748" endtime="20190116 18:44:17.809"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:17.821" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:17.812" endtime="20190116 18:44:17.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:17.833" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:17.825" endtime="20190116 18:44:17.835"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:17.740" endtime="20190116 18:44:17.838"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:17.979" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:18.007" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:18.028" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:18.031" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:17.969" endtime="20190116 18:44:18.033"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:18.045" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:18.036" endtime="20190116 18:44:18.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:18.057" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:18.049" endtime="20190116 18:44:18.058"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:17.961" endtime="20190116 18:44:18.061"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:18.199" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:18.228" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:18.248" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:18.251" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:18.193" endtime="20190116 18:44:18.252"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:18.265" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:18.256" endtime="20190116 18:44:18.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:18.276" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:18.268" endtime="20190116 18:44:18.278"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:18.185" endtime="20190116 18:44:18.281"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:18.420" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:18.448" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:18.468" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:18.471" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:18.413" endtime="20190116 18:44:18.472"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:18.485" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:18.476" endtime="20190116 18:44:18.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:18.519" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:18.489" endtime="20190116 18:44:18.523"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:18.404" endtime="20190116 18:44:18.530"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:18.668" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:18.700" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:18.748" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:18.752" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:18.661" endtime="20190116 18:44:18.753"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:18.772" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:18.757" endtime="20190116 18:44:18.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:18.784" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:18.776" endtime="20190116 18:44:18.786"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:18.653" endtime="20190116 18:44:18.790"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:18.933" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:18.960" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:18.980" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:18.983" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:18.922" endtime="20190116 18:44:18.984"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:18.997" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:18.988" endtime="20190116 18:44:18.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:19.010" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:19.001" endtime="20190116 18:44:19.011"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:18.914" endtime="20190116 18:44:19.014"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:19.152" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:19.179" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:19.199" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:19.202" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:19.145" endtime="20190116 18:44:19.203"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:19.216" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:19.207" endtime="20190116 18:44:19.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:19.228" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:19.220" endtime="20190116 18:44:19.230"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:19.137" endtime="20190116 18:44:19.233"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:19.371" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:19.398" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:19.418" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:19.421" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:19.364" endtime="20190116 18:44:19.422"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:19.435" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:19.426" endtime="20190116 18:44:19.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:19.446" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:19.438" endtime="20190116 18:44:19.448"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:19.356" endtime="20190116 18:44:19.451"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:19.588" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:19.616" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:19.636" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:19.639" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:19.582" endtime="20190116 18:44:19.640"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:19.653" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:19.644" endtime="20190116 18:44:19.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:19.665" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:19.657" endtime="20190116 18:44:19.666"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:19.574" endtime="20190116 18:44:19.669"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:19.811" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:19.840" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:19.860" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:19.863" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:19.801" endtime="20190116 18:44:19.865"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:19.878" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:19.869" endtime="20190116 18:44:19.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:19.890" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:19.882" endtime="20190116 18:44:19.891"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:19.793" endtime="20190116 18:44:19.894"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:20.033" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:20.060" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:20.080" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:20.083" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:20.026" endtime="20190116 18:44:20.084"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:20.097" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:20.088" endtime="20190116 18:44:20.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:20.109" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:20.101" endtime="20190116 18:44:20.111"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:20.017" endtime="20190116 18:44:20.114"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:20.252" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:20.279" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:20.299" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:20.302" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:20.245" endtime="20190116 18:44:20.303"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:20.316" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:20.307" endtime="20190116 18:44:20.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:20.328" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:20.320" endtime="20190116 18:44:20.329"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:20.237" endtime="20190116 18:44:20.333"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:20.470" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:20.498" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:20.517" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:20.520" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:20.463" endtime="20190116 18:44:20.521"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:20.534" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:20.525" endtime="20190116 18:44:20.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:20.545" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:20.538" endtime="20190116 18:44:20.547"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:20.456" endtime="20190116 18:44:20.550"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:20.692" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:20.746" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:20.775" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:20.778" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:20.681" endtime="20190116 18:44:20.779"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:20.797" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:20.783" endtime="20190116 18:44:20.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:20.819" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:20.811" endtime="20190116 18:44:20.820"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:20.673" endtime="20190116 18:44:20.830"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:20.968" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:20.997" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:21.018" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:21.021" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:20.961" endtime="20190116 18:44:21.022"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:21.037" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:21.026" endtime="20190116 18:44:21.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:21.048" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:21.040" endtime="20190116 18:44:21.049"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:20.953" endtime="20190116 18:44:21.053"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:21.191" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:21.220" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:21.241" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:21.245" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:21.184" endtime="20190116 18:44:21.246"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:21.258" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:21.249" endtime="20190116 18:44:21.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:21.270" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:21.262" endtime="20190116 18:44:21.272"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:21.176" endtime="20190116 18:44:21.275"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:21.413" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:21.442" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:21.462" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:21.465" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:21.406" endtime="20190116 18:44:21.466"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:21.479" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:21.470" endtime="20190116 18:44:21.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:21.490" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:21.483" endtime="20190116 18:44:21.492"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:21.398" endtime="20190116 18:44:21.495"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:21.637" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:21.667" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:21.687" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:21.691" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:21.626" endtime="20190116 18:44:21.692"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:21.704" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:21.695" endtime="20190116 18:44:21.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:21.716" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:21.708" endtime="20190116 18:44:21.717"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:21.618" endtime="20190116 18:44:21.720"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:21.858" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:21.887" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:21.907" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:21.910" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:21.851" endtime="20190116 18:44:21.911"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:21.924" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:21.915" endtime="20190116 18:44:21.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:21.936" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:21.928" endtime="20190116 18:44:21.937"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:21.843" endtime="20190116 18:44:21.940"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:22.079" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:22.108" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:22.129" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:22.132" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:22.072" endtime="20190116 18:44:22.133"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:22.146" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:22.137" endtime="20190116 18:44:22.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:22.159" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:22.151" endtime="20190116 18:44:22.160"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:22.064" endtime="20190116 18:44:22.163"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:22.301" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:22.329" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:22.350" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:22.353" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:22.294" endtime="20190116 18:44:22.354"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:22.370" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:22.358" endtime="20190116 18:44:22.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:22.381" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:22.373" endtime="20190116 18:44:22.383"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:22.286" endtime="20190116 18:44:22.386"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:22.527" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:22.557" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:22.578" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:22.581" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:22.517" endtime="20190116 18:44:22.582"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:22.595" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:22.586" endtime="20190116 18:44:22.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:22.606" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:22.598" endtime="20190116 18:44:22.608"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:22.509" endtime="20190116 18:44:22.611"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:22.749" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:22.777" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:22.799" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:22.802" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:22.742" endtime="20190116 18:44:22.803"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:22.815" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:22.806" endtime="20190116 18:44:22.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:22.827" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:22.819" endtime="20190116 18:44:22.828"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:22.734" endtime="20190116 18:44:22.831"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:22.969" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:22.998" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:23.019" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:23.022" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:22.963" endtime="20190116 18:44:23.023"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:23.036" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:23.027" endtime="20190116 18:44:23.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:23.048" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:23.040" endtime="20190116 18:44:23.049"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:22.955" endtime="20190116 18:44:23.052"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:23.190" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:23.218" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:23.238" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:23.241" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:23.183" endtime="20190116 18:44:23.242"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:23.255" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:23.246" endtime="20190116 18:44:23.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:23.270" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:23.258" endtime="20190116 18:44:23.271"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:23.175" endtime="20190116 18:44:23.274"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:23.426" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:23.455" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:23.480" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:23.483" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:23.406" endtime="20190116 18:44:23.484"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:23.498" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:23.489" endtime="20190116 18:44:23.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:23.513" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:23.502" endtime="20190116 18:44:23.514"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:23.397" endtime="20190116 18:44:23.519"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:23.661" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:23.689" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:23.727" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:23.730" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:23.654" endtime="20190116 18:44:23.731"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:23.757" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:23.735" endtime="20190116 18:44:23.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:23.800" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:23.766" endtime="20190116 18:44:23.802"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:23.642" endtime="20190116 18:44:23.805"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:23.943" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:23.971" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:23.991" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:23.994" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:23.937" endtime="20190116 18:44:23.995"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:24.009" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:23.999" endtime="20190116 18:44:24.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:24.021" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:24.013" endtime="20190116 18:44:24.023"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:23.928" endtime="20190116 18:44:24.027"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:24.165" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:24.193" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:24.214" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:24.217" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:24.158" endtime="20190116 18:44:24.218"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:24.231" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:24.222" endtime="20190116 18:44:24.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:24.245" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:24.237" endtime="20190116 18:44:24.247"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:24.150" endtime="20190116 18:44:24.250"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:24.389" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:24.417" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:24.466" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:24.468" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:24.382" endtime="20190116 18:44:24.469"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:24.489" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:24.473" endtime="20190116 18:44:24.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:24.518" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:24.505" endtime="20190116 18:44:24.520"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:24.374" endtime="20190116 18:44:24.523"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:24.661" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:24.689" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:24.710" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:24.714" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:24.654" endtime="20190116 18:44:24.715"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:24.729" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:24.719" endtime="20190116 18:44:24.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:24.741" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:24.733" endtime="20190116 18:44:24.743"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:24.646" endtime="20190116 18:44:24.746"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:24.884" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:24.912" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:24.933" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:24.936" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:24.877" endtime="20190116 18:44:24.938"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:24.950" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:24.941" endtime="20190116 18:44:24.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:24.962" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:24.954" endtime="20190116 18:44:24.963"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:24.869" endtime="20190116 18:44:24.966"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:25.138" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:25.205" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:25.261" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:25.264" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:25.118" endtime="20190116 18:44:25.265"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:25.300" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:25.269" endtime="20190116 18:44:25.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:25.319" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:25.311" endtime="20190116 18:44:25.321"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:25.099" endtime="20190116 18:44:25.324"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:25.462" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:25.494" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:25.513" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:25.517" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:25.455" endtime="20190116 18:44:25.518"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:25.535" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:25.521" endtime="20190116 18:44:25.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:25.547" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:25.539" endtime="20190116 18:44:25.549"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:25.447" endtime="20190116 18:44:25.552"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:25.731" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:25.776" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:25.833" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:25.836" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:25.691" endtime="20190116 18:44:25.837"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:25.879" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:25.841" endtime="20190116 18:44:25.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:25.908" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:25.883" endtime="20190116 18:44:25.910"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:25.683" endtime="20190116 18:44:25.923"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:26.095" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:26.154" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:26.189" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:26.191" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:26.078" endtime="20190116 18:44:26.193"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:26.243" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:26.196" endtime="20190116 18:44:26.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:26.265" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:26.248" endtime="20190116 18:44:26.266"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:26.051" endtime="20190116 18:44:26.269"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:26.445" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:26.501" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:26.542" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:26.545" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:26.414" endtime="20190116 18:44:26.546"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:26.573" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:26.563" endtime="20190116 18:44:26.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:26.619" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:26.595" endtime="20190116 18:44:26.621"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:26.395" endtime="20190116 18:44:26.624"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:26.777" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:26.842" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:26.858" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:26.861" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:26.770" endtime="20190116 18:44:26.862"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:26.879" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:26.866" endtime="20190116 18:44:26.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:26.891" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:26.883" endtime="20190116 18:44:26.893"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:26.747" endtime="20190116 18:44:26.896"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:27.034" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:27.064" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:27.085" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:27.088" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:27.028" endtime="20190116 18:44:27.089"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:27.102" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:27.093" endtime="20190116 18:44:27.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:27.114" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:27.106" endtime="20190116 18:44:27.115"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:27.019" endtime="20190116 18:44:27.119"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:27.257" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:27.285" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:27.305" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:27.308" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:27.250" endtime="20190116 18:44:27.309"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:27.322" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:27.313" endtime="20190116 18:44:27.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:27.334" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:27.326" endtime="20190116 18:44:27.335"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:27.242" endtime="20190116 18:44:27.338"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:27.477" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:27.505" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:27.525" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:27.528" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:27.471" endtime="20190116 18:44:27.529"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:27.542" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:27.533" endtime="20190116 18:44:27.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:27.554" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:27.546" endtime="20190116 18:44:27.555"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:27.463" endtime="20190116 18:44:27.558"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:27.696" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:27.724" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:27.744" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:27.747" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:27.689" endtime="20190116 18:44:27.747"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:27.761" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:27.752" endtime="20190116 18:44:27.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:27.777" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:27.764" endtime="20190116 18:44:27.778"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:27.681" endtime="20190116 18:44:27.781"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:27.919" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:27.947" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:27.967" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:27.970" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:27.912" endtime="20190116 18:44:27.971"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:27.984" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:27.975" endtime="20190116 18:44:27.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:27.995" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:27.987" endtime="20190116 18:44:27.997"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:27.905" endtime="20190116 18:44:28.000"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:28.138" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:28.166" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:28.186" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:28.189" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:28.131" endtime="20190116 18:44:28.190"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:28.202" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:28.194" endtime="20190116 18:44:28.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:28.214" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:28.206" endtime="20190116 18:44:28.215"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:28.123" endtime="20190116 18:44:28.218"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:28.368" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:28.426" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:28.468" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:28.471" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:28.352" endtime="20190116 18:44:28.472"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:28.497" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:28.476" endtime="20190116 18:44:28.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:28.521" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:28.501" endtime="20190116 18:44:28.522"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:28.342" endtime="20190116 18:44:28.536"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:28.676" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:28.705" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:28.724" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:28.727" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:28.668" endtime="20190116 18:44:28.728"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:28.741" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:28.732" endtime="20190116 18:44:28.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:28.757" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:28.745" endtime="20190116 18:44:28.759"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:28.660" endtime="20190116 18:44:28.762"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:28.900" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:28.928" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:28.948" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:28.951" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:28.893" endtime="20190116 18:44:28.952"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:28.965" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:28.956" endtime="20190116 18:44:28.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:28.976" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:28.968" endtime="20190116 18:44:28.978"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:28.885" endtime="20190116 18:44:28.981"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:29.119" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:29.147" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:29.167" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:29.170" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:29.112" endtime="20190116 18:44:29.171"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:29.184" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:29.175" endtime="20190116 18:44:29.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:29.195" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:29.187" endtime="20190116 18:44:29.197"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:29.104" endtime="20190116 18:44:29.200"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:29.338" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:29.366" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:29.386" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:29.389" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:29.331" endtime="20190116 18:44:29.390"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:29.403" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:29.394" endtime="20190116 18:44:29.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:29.414" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:29.406" endtime="20190116 18:44:29.416"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:29.323" endtime="20190116 18:44:29.419"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:29.557" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:29.584" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:29.604" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:29.607" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:29.550" endtime="20190116 18:44:29.609"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:29.621" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:29.612" endtime="20190116 18:44:29.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:29.633" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:29.625" endtime="20190116 18:44:29.634"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:29.542" endtime="20190116 18:44:29.637"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:29.779" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:29.808" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:29.828" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:29.831" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:29.773" endtime="20190116 18:44:29.832"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:29.844" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:29.836" endtime="20190116 18:44:29.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:29.857" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:29.848" endtime="20190116 18:44:29.858"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:29.761" endtime="20190116 18:44:29.861"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:29.999" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:30.027" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:30.047" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:30.050" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:29.992" endtime="20190116 18:44:30.051"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:30.064" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:30.055" endtime="20190116 18:44:30.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:30.076" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:30.068" endtime="20190116 18:44:30.078"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:29.984" endtime="20190116 18:44:30.081"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:30.219" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:30.246" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:30.266" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:30.269" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:30.212" endtime="20190116 18:44:30.270"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:30.283" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:30.274" endtime="20190116 18:44:30.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:30.294" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:30.287" endtime="20190116 18:44:30.296"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:30.204" endtime="20190116 18:44:30.299"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:30.437" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:30.465" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:30.488" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:30.491" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:30.430" endtime="20190116 18:44:30.492"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:30.505" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:30.496" endtime="20190116 18:44:30.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:30.517" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:30.509" endtime="20190116 18:44:30.518"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:30.422" endtime="20190116 18:44:30.521"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:30.663" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:30.691" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:30.711" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:30.714" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:30.657" endtime="20190116 18:44:30.715"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:30.728" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:30.719" endtime="20190116 18:44:30.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:30.740" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:30.732" endtime="20190116 18:44:30.741"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:30.644" endtime="20190116 18:44:30.744"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:30.883" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:30.911" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:30.932" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:30.935" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:30.877" endtime="20190116 18:44:30.936"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:30.949" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:30.940" endtime="20190116 18:44:30.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:30.960" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:30.952" endtime="20190116 18:44:30.962"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:30.868" endtime="20190116 18:44:30.965"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:31.103" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:31.130" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:31.150" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:31.153" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:31.096" endtime="20190116 18:44:31.154"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:31.168" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:31.159" endtime="20190116 18:44:31.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:31.180" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:31.172" endtime="20190116 18:44:31.181"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:31.088" endtime="20190116 18:44:31.185"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:31.322" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:31.350" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:31.370" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:31.373" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:31.316" endtime="20190116 18:44:31.374"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:31.387" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:31.378" endtime="20190116 18:44:31.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:31.401" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:31.391" endtime="20190116 18:44:31.402"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:31.308" endtime="20190116 18:44:31.405"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:31.547" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:31.575" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:31.595" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:31.598" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:31.537" endtime="20190116 18:44:31.599"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:31.612" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:31.603" endtime="20190116 18:44:31.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:31.623" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:31.616" endtime="20190116 18:44:31.625"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:31.529" endtime="20190116 18:44:31.628"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:31.766" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:31.794" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:31.814" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:31.817" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:31.759" endtime="20190116 18:44:31.818"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:31.831" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:31.822" endtime="20190116 18:44:31.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:31.842" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:31.835" endtime="20190116 18:44:31.844"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:31.751" endtime="20190116 18:44:31.847"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:31.985" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:32.013" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:32.033" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:32.036" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:31.978" endtime="20190116 18:44:32.038"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:32.051" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:32.042" endtime="20190116 18:44:32.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:32.063" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:32.054" endtime="20190116 18:44:32.064"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:31.970" endtime="20190116 18:44:32.067"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:32.205" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:32.233" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:32.253" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:32.256" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:32.198" endtime="20190116 18:44:32.257"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:32.270" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:32.261" endtime="20190116 18:44:32.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:32.282" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:32.274" endtime="20190116 18:44:32.283"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:32.190" endtime="20190116 18:44:32.286"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:32.428" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:32.456" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:32.475" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:32.478" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:32.417" endtime="20190116 18:44:32.479"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:32.492" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:32.483" endtime="20190116 18:44:32.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:32.504" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:32.496" endtime="20190116 18:44:32.505"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:32.409" endtime="20190116 18:44:32.508"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:32.646" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:32.674" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:32.694" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:32.697" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:32.639" endtime="20190116 18:44:32.698"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:32.711" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:32.702" endtime="20190116 18:44:32.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:32.723" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:32.715" endtime="20190116 18:44:32.724"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:32.631" endtime="20190116 18:44:32.727"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:32.865" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:32.893" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:32.913" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:32.916" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:32.859" endtime="20190116 18:44:32.917"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:32.932" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:32.921" endtime="20190116 18:44:32.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:32.944" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:32.936" endtime="20190116 18:44:32.945"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:32.851" endtime="20190116 18:44:32.948"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:33.086" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:33.114" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:33.134" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:33.137" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:33.080" endtime="20190116 18:44:33.138"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:33.152" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:33.142" endtime="20190116 18:44:33.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:33.164" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:33.156" endtime="20190116 18:44:33.165"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:33.071" endtime="20190116 18:44:33.168"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:33.310" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:33.339" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:33.359" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:33.362" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:33.300" endtime="20190116 18:44:33.363"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:33.376" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:33.367" endtime="20190116 18:44:33.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:33.388" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:33.380" endtime="20190116 18:44:33.389"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:33.291" endtime="20190116 18:44:33.392"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:33.533" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:33.561" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:33.581" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:33.584" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:33.523" endtime="20190116 18:44:33.585"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:33.598" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:33.589" endtime="20190116 18:44:33.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:33.609" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:33.602" endtime="20190116 18:44:33.611"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:33.515" endtime="20190116 18:44:33.614"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:33.752" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:33.780" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:33.800" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:33.803" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:33.745" endtime="20190116 18:44:33.804"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:33.818" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:33.809" endtime="20190116 18:44:33.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:33.830" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:33.822" endtime="20190116 18:44:33.831"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:33.737" endtime="20190116 18:44:33.835"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:33.973" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:34.001" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:34.021" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:34.024" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:33.966" endtime="20190116 18:44:34.025"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:34.038" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:34.029" endtime="20190116 18:44:34.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:34.050" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:34.042" endtime="20190116 18:44:34.051"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:33.958" endtime="20190116 18:44:34.054"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:34.194" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:34.246" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:34.276" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:34.279" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:34.186" endtime="20190116 18:44:34.280"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:34.308" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:34.285" endtime="20190116 18:44:34.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:34.326" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:34.318" endtime="20190116 18:44:34.327"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:34.178" endtime="20190116 18:44:34.331"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:34.469" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:34.497" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:34.517" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:34.520" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:34.462" endtime="20190116 18:44:34.521"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:34.534" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:34.525" endtime="20190116 18:44:34.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:34.545" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:34.538" endtime="20190116 18:44:34.547"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:34.454" endtime="20190116 18:44:34.550"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:34.689" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:34.717" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:34.737" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:34.741" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:34.682" endtime="20190116 18:44:34.742"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:34.754" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:34.745" endtime="20190116 18:44:34.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:34.766" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:34.758" endtime="20190116 18:44:34.767"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:34.673" endtime="20190116 18:44:34.771"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:34.909" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:34.936" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:34.956" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:34.959" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:34.902" endtime="20190116 18:44:34.960"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:34.973" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:34.964" endtime="20190116 18:44:34.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:34.985" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:34.977" endtime="20190116 18:44:34.986"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:34.894" endtime="20190116 18:44:34.989"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:35.141" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:35.173" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:35.193" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:35.196" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:35.121" endtime="20190116 18:44:35.197"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:35.210" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:35.201" endtime="20190116 18:44:35.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:35.221" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:35.214" endtime="20190116 18:44:35.223"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:35.113" endtime="20190116 18:44:35.226"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:35.364" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:35.392" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:35.412" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:35.415" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:35.357" endtime="20190116 18:44:35.416"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:35.429" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:35.420" endtime="20190116 18:44:35.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:35.442" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:35.434" endtime="20190116 18:44:35.444"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:35.349" endtime="20190116 18:44:35.447"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:35.585" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:35.613" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:35.633" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:35.636" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:35.578" endtime="20190116 18:44:35.637"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:35.650" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:35.641" endtime="20190116 18:44:35.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:35.662" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:35.654" endtime="20190116 18:44:35.663"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:35.570" endtime="20190116 18:44:35.667"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:35.805" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:35.833" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:35.853" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:35.855" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:35.798" endtime="20190116 18:44:35.857"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:35.870" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:35.861" endtime="20190116 18:44:35.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:35.881" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:35.874" endtime="20190116 18:44:35.883"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:35.790" endtime="20190116 18:44:35.886"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:36.024" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:36.052" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:36.073" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:36.076" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:36.018" endtime="20190116 18:44:36.077"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:36.094" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:36.081" endtime="20190116 18:44:36.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:36.106" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:36.098" endtime="20190116 18:44:36.107"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:36.009" endtime="20190116 18:44:36.110"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:36.247" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:36.275" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:36.295" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:36.298" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:36.241" endtime="20190116 18:44:36.299"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:36.313" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:36.303" endtime="20190116 18:44:36.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:36.325" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:36.317" endtime="20190116 18:44:36.326"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:36.233" endtime="20190116 18:44:36.330"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:36.469" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:36.496" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:36.516" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:36.519" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:36.462" endtime="20190116 18:44:36.520"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:36.533" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:36.524" endtime="20190116 18:44:36.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:36.546" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:36.537" endtime="20190116 18:44:36.548"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:36.454" endtime="20190116 18:44:36.551"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:36.689" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:36.717" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:36.737" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:36.740" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:36.682" endtime="20190116 18:44:36.741"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:36.754" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:36.745" endtime="20190116 18:44:36.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:36.766" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:36.758" endtime="20190116 18:44:36.768"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:36.674" endtime="20190116 18:44:36.771"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:36.909" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:36.937" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:36.957" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:36.959" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:36.902" endtime="20190116 18:44:36.961"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:36.974" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:36.964" endtime="20190116 18:44:36.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:36.990" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:36.978" endtime="20190116 18:44:36.991"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:36.894" endtime="20190116 18:44:36.994"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:37.132" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:37.160" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:37.180" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:37.183" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:37.126" endtime="20190116 18:44:37.185"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:37.197" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:37.188" endtime="20190116 18:44:37.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:37.209" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:37.201" endtime="20190116 18:44:37.210"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:37.117" endtime="20190116 18:44:37.213"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:37.351" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:37.380" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:37.399" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:37.402" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:37.345" endtime="20190116 18:44:37.403"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:37.417" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:37.407" endtime="20190116 18:44:37.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:37.428" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:37.420" endtime="20190116 18:44:37.429"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:37.337" endtime="20190116 18:44:37.433"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:37.571" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:37.599" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:37.618" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:37.622" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:37.564" endtime="20190116 18:44:37.623"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:37.635" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:37.626" endtime="20190116 18:44:37.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:37.648" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:37.639" endtime="20190116 18:44:37.743"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:37.556" endtime="20190116 18:44:37.746"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:37.886" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:37.914" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:37.934" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:37.937" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:37.878" endtime="20190116 18:44:37.938"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:37.950" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:37.942" endtime="20190116 18:44:37.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:37.966" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:37.954" endtime="20190116 18:44:37.968"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:37.870" endtime="20190116 18:44:37.971"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:38.109" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:38.137" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:38.157" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:38.160" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:38.103" endtime="20190116 18:44:38.161"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:38.174" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:38.165" endtime="20190116 18:44:38.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:38.186" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:38.178" endtime="20190116 18:44:38.187"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:38.094" endtime="20190116 18:44:38.190"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:38.328" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:38.356" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:38.377" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:38.380" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:38.322" endtime="20190116 18:44:38.381"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:38.400" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:38.391" endtime="20190116 18:44:38.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:38.412" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:38.404" endtime="20190116 18:44:38.413"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:38.314" endtime="20190116 18:44:38.416"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:38.554" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:38.582" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:38.603" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:38.606" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:38.547" endtime="20190116 18:44:38.607"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:38.620" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:38.611" endtime="20190116 18:44:38.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:38.631" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:38.624" endtime="20190116 18:44:38.633"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:38.539" endtime="20190116 18:44:38.636"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:38.774" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:38.802" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:38.822" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:38.825" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:38.767" endtime="20190116 18:44:38.826"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:38.838" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:38.830" endtime="20190116 18:44:38.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:38.850" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:38.842" endtime="20190116 18:44:38.851"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:38.759" endtime="20190116 18:44:38.855"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:38.998" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:39.026" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:39.046" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:39.049" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:38.991" endtime="20190116 18:44:39.050"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:39.063" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:39.054" endtime="20190116 18:44:39.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:39.075" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:39.067" endtime="20190116 18:44:39.077"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:38.979" endtime="20190116 18:44:39.080"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:39.218" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:39.246" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:39.266" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:39.269" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:39.211" endtime="20190116 18:44:39.270"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:39.283" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:39.274" endtime="20190116 18:44:39.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:39.294" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:39.286" endtime="20190116 18:44:39.296"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:39.203" endtime="20190116 18:44:39.299"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:39.436" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:39.464" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:39.484" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:39.487" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:39.430" endtime="20190116 18:44:39.488"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:39.501" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:39.492" endtime="20190116 18:44:39.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:39.513" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:39.505" endtime="20190116 18:44:39.514"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:39.422" endtime="20190116 18:44:39.517"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:39.655" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:39.683" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:39.703" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:39.706" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:39.649" endtime="20190116 18:44:39.707"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:39.720" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:39.711" endtime="20190116 18:44:39.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:39.732" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:39.724" endtime="20190116 18:44:39.733"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:39.641" endtime="20190116 18:44:39.736"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:39.906" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:39.966" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:40.000" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:40.004" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:39.889" endtime="20190116 18:44:40.005"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:40.030" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:40.008" endtime="20190116 18:44:40.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:40.054" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:40.046" endtime="20190116 18:44:40.055"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:39.869" endtime="20190116 18:44:40.071"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:40.210" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:40.239" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:40.259" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:40.262" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:40.203" endtime="20190116 18:44:40.263"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:40.276" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:40.267" endtime="20190116 18:44:40.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:40.288" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:40.280" endtime="20190116 18:44:40.289"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:40.194" endtime="20190116 18:44:40.292"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:40.430" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:40.459" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:40.479" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:40.482" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:40.424" endtime="20190116 18:44:40.483"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:40.496" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:40.487" endtime="20190116 18:44:40.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:40.507" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:40.499" endtime="20190116 18:44:40.509"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:40.416" endtime="20190116 18:44:40.512"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:40.650" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:40.678" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:40.698" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:40.701" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:40.643" endtime="20190116 18:44:40.702"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:40.715" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:40.706" endtime="20190116 18:44:40.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:40.726" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:40.719" endtime="20190116 18:44:40.728"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:40.635" endtime="20190116 18:44:40.731"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:40.873" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:40.902" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:40.922" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:40.925" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:40.862" endtime="20190116 18:44:40.926"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:40.938" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:40.930" endtime="20190116 18:44:40.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:40.950" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:40.942" endtime="20190116 18:44:40.951"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:40.854" endtime="20190116 18:44:40.955"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:41.093" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:41.122" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:41.142" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:41.145" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:41.086" endtime="20190116 18:44:41.146"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:41.159" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:41.150" endtime="20190116 18:44:41.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:41.170" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:41.162" endtime="20190116 18:44:41.172"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:41.078" endtime="20190116 18:44:41.175"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:41.314" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:41.342" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:41.362" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:41.365" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:41.306" endtime="20190116 18:44:41.366"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:41.379" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:41.370" endtime="20190116 18:44:41.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:41.391" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:41.383" endtime="20190116 18:44:41.393"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:41.298" endtime="20190116 18:44:41.396"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:41.534" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:41.562" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:41.582" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:41.585" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:41.527" endtime="20190116 18:44:41.586"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:41.601" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:41.591" endtime="20190116 18:44:41.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:41.612" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:41.605" endtime="20190116 18:44:41.614"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:41.519" endtime="20190116 18:44:41.617"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:41.755" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:41.783" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:41.804" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:41.807" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:41.748" endtime="20190116 18:44:41.807"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:41.825" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:41.812" endtime="20190116 18:44:41.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:41.836" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:41.829" endtime="20190116 18:44:41.838"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:41.740" endtime="20190116 18:44:41.841"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:41.978" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:42.007" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:42.027" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:42.030" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:41.972" endtime="20190116 18:44:42.032"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:42.044" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:42.035" endtime="20190116 18:44:42.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:42.056" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:42.048" endtime="20190116 18:44:42.058"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:41.964" endtime="20190116 18:44:42.061"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:42.199" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:42.227" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:42.247" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:42.250" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:42.192" endtime="20190116 18:44:42.251"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:42.264" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:42.254" endtime="20190116 18:44:42.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:42.276" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:42.268" endtime="20190116 18:44:42.277"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:42.184" endtime="20190116 18:44:42.281"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:42.418" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:42.448" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:42.468" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:42.471" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:42.412" endtime="20190116 18:44:42.473"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:42.486" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:42.476" endtime="20190116 18:44:42.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:42.498" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:42.490" endtime="20190116 18:44:42.500"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:42.404" endtime="20190116 18:44:42.503"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:42.641" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:42.669" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:42.690" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:42.693" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:42.635" endtime="20190116 18:44:42.694"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:42.712" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:42.698" endtime="20190116 18:44:42.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:42.724" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:42.716" endtime="20190116 18:44:42.726"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:42.627" endtime="20190116 18:44:42.729"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:42.866" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:42.894" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:42.914" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:42.919" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:42.860" endtime="20190116 18:44:42.920"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:42.933" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:42.924" endtime="20190116 18:44:42.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:42.945" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:42.937" endtime="20190116 18:44:42.946"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:42.852" endtime="20190116 18:44:42.950"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:43.088" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:43.116" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:43.136" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:43.139" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:43.082" endtime="20190116 18:44:43.140"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:43.153" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:43.144" endtime="20190116 18:44:43.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:43.165" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:43.157" endtime="20190116 18:44:43.166"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:43.073" endtime="20190116 18:44:43.169"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:43.307" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:43.335" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:43.355" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:43.358" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:43.301" endtime="20190116 18:44:43.359"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:43.372" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:43.363" endtime="20190116 18:44:43.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:43.384" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:43.376" endtime="20190116 18:44:43.385"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:43.293" endtime="20190116 18:44:43.389"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:43.530" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:43.557" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:43.579" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:43.589" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:43.523" endtime="20190116 18:44:43.590"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:43.608" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:43.595" endtime="20190116 18:44:43.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:43.619" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:43.612" endtime="20190116 18:44:43.621"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:43.513" endtime="20190116 18:44:43.624"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:43.761" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:43.790" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:43.809" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:43.813" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:43.755" endtime="20190116 18:44:43.814"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:43.827" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:43.818" endtime="20190116 18:44:43.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:43.838" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:43.830" endtime="20190116 18:44:43.840"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:43.747" endtime="20190116 18:44:43.843"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:43.982" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:44.009" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:44.029" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:44.033" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:43.974" endtime="20190116 18:44:44.034"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:44.047" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:44.037" endtime="20190116 18:44:44.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:44.059" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:44.051" endtime="20190116 18:44:44.060"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:43.966" endtime="20190116 18:44:44.063"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:44.201" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:44.229" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:44.250" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:44.254" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:44.195" endtime="20190116 18:44:44.255"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:44.269" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:44.259" endtime="20190116 18:44:44.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:44.280" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:44.273" endtime="20190116 18:44:44.282"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:44.187" endtime="20190116 18:44:44.285"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:44.424" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:44.452" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:44.472" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:44.475" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:44.417" endtime="20190116 18:44:44.477"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:44.493" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:44.480" endtime="20190116 18:44:44.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:44.505" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:44.497" endtime="20190116 18:44:44.507"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:44.409" endtime="20190116 18:44:44.510"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:44.648" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:44.676" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:44.696" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:44.699" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:44.641" endtime="20190116 18:44:44.700"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:44.715" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:44.705" endtime="20190116 18:44:44.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:44.728" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:44.720" endtime="20190116 18:44:44.730"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:44.633" endtime="20190116 18:44:44.733"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:44.900" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:44.928" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:44.981" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:44.988" level="INFO">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190116 18:44:44.864" endtime="20190116 18:44:44.989"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:45.020" level="INFO">${resp} = </msg>
<status status="PASS" starttime="20190116 18:44:44.999" endtime="20190116 18:44:45.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg timestamp="20190116 18:44:45.062" level="FAIL">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190116 18:44:45.045" endtime="20190116 18:44:45.064"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190116 18:44:44.856" endtime="20190116 18:44:45.071"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:45.245" level="INFO">Starting process:
ip a | grep usb_max</msg>
<msg timestamp="20190116 18:44:45.313" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:44:45.394" level="INFO">Process completed.</msg>
<msg timestamp="20190116 18:44:45.404" level="INFO">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190116 18:44:45.215" endtime="20190116 18:44:45.424"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg timestamp="20190116 18:44:45.479" level="INFO">${resp} = 186: usb_max: &lt;BROADCAST,MULTICAST&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</msg>
<status status="PASS" starttime="20190116 18:44:45.441" endtime="20190116 18:44:45.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:45.498" endtime="20190116 18:44:45.520"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190116 18:44:45.199" endtime="20190116 18:44:45.530"></status>
</kw>
<status status="PASS" starttime="20190116 18:44:14.238" endtime="20190116 18:44:45.532"></status>
</kw>
<msg timestamp="20190116 18:44:45.560" level="INFO">${STATUS} = True</msg>
<status status="PASS" starttime="20190116 18:44:14.231" endtime="20190116 18:44:45.561"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${secs}</var>
</assign>
<msg timestamp="20190116 18:44:45.577" level="INFO">${secs} = 1547664285</msg>
<status status="PASS" starttime="20190116 18:44:45.572" endtime="20190116 18:44:45.578"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DUT ready status: ${STATUS}, Timestamp: ${secs}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:45.581" endtime="20190116 18:44:45.588"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3 seconds</arg>
</arguments>
<msg timestamp="20190116 18:44:48.599" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20190116 18:44:45.590" endtime="20190116 18:44:48.601"></status>
</kw>
<msg timestamp="20190116 18:44:48.606" level="INFO">${status} = True</msg>
<status status="PASS" starttime="20190116 18:44:14.204" endtime="20190116 18:44:48.606"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Device does not exist</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:48.633" endtime="20190116 18:44:48.638"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw name="Open Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg timestamp="20190116 18:44:48.692" level="INFO">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status status="PASS" starttime="20190116 18:44:48.685" endtime="20190116 18:44:49.654"></status>
</kw>
<status status="PASS" starttime="20190116 18:44:48.667" endtime="20190116 18:44:49.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh success!"</arg>
<arg>console=True</arg>
</arguments>
<msg timestamp="20190116 18:44:49.662" level="INFO">"Setup ssh success!"</msg>
<status status="PASS" starttime="20190116 18:44:49.658" endtime="20190116 18:44:49.664"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>grep ${CarIfUpdater} ${result_file}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:49.673" level="INFO">Sending command to DUT grep CarIfUpdater /root/appl50571.txt</msg>
<msg timestamp="20190116 18:44:49.739" level="INFO">Returning data (CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0042_C1_0009.9.0.bin /lib/firmware/carif/CarIF_LD_OLU_0042_C2_0009.9.0.bin CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_PBL_OLU_0042_C1_0009.9.0.bin /lib/firmware/carif/CarIF_PBL_OLU_0042_C2_0009.9.0.bin CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_Appl_OLU_0042_C1_0009.9.0.bin /lib/firmware/carif/CarIF_Appl_OLU_0042_C2_0009.9.0.bin, )</msg>
<msg timestamp="20190116 18:44:49.742" level="INFO">${ret} = ('CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0042_C1_0009.9.0.bin /lib/firmware/carif/CarIF_LD_OLU_0042_C2_0009.9.0.bin CarIfUpdater exit value : 0Remove files: /lib/fir...</msg>
<status status="PASS" starttime="20190116 18:44:49.667" endtime="20190116 18:44:49.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:49.746" endtime="20190116 18:44:49.760"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$ret[0]</arg>
</arguments>
<assign>
<var>${str_val}</var>
</assign>
<msg timestamp="20190116 18:44:49.789" level="INFO">${str_val} = CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0042_C1_0009.9.0.bin /lib/firmware/carif/CarIF_LD_OLU_0042_C2_0009.9.0.bin CarIfUpdater exit value : 0Remove files: /lib/firmw...</msg>
<status status="PASS" starttime="20190116 18:44:49.763" endtime="20190116 18:44:49.790"></status>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${str_val}</arg>
<arg>${SUCCESS_STR}</arg>
<arg>3</arg>
<arg>ignore_case=True</arg>
</arguments>
<msg timestamp="20190116 18:44:49.799" level="INFO">Item found from the first item 3 times</msg>
<status status="PASS" starttime="20190116 18:44:49.793" endtime="20190116 18:44:49.802"></status>
</kw>
<status status="PASS" starttime="20190116 18:44:08.581" endtime="20190116 18:44:49.804"></status>
</kw>
<status status="PASS" starttime="20190116 18:42:30.853" endtime="20190116 18:44:49.806"></status>
</kw>
<kw name="Test_Teardown_Action" type="teardown">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"Test_Teardown_Action"</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:49.817" endtime="20190116 18:44:49.821"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>systemctl poweroff</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg timestamp="20190116 18:44:49.828" level="INFO">Sending command to DUT systemctl poweroff</msg>
<msg timestamp="20190116 18:44:49.926" level="INFO">Returning data (, )</msg>
<msg timestamp="20190116 18:44:49.928" level="INFO">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190116 18:44:49.824" endtime="20190116 18:44:49.929"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait until the device power down, it takes: ${SHUTDOWN_TIME}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:44:49.932" endtime="20190116 18:44:49.944"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHUTDOWN_TIME}</arg>
</arguments>
<msg timestamp="20190116 18:45:04.952" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20190116 18:44:49.947" endtime="20190116 18:45:04.954"></status>
</kw>
<kw name="Close Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Disconnect the ssh connection</doc>
<msg timestamp="20190116 18:45:04.961" level="INFO">Closing SSH connection to 192.168.1.101</msg>
<status status="PASS" starttime="20190116 18:45:04.957" endtime="20190116 18:45:04.963"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill ping</arg>
<arg>shell=True</arg>
</arguments>
<msg timestamp="20190116 18:45:04.970" level="INFO">Starting process:
pkill ping</msg>
<msg timestamp="20190116 18:45:04.999" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20190116 18:45:05.033" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20190116 18:45:04.965" endtime="20190116 18:45:05.035"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:45:05.039" endtime="20190116 18:45:05.089"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:45:05.093" endtime="20190116 18:45:05.143"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190116 18:45:05.146" endtime="20190116 18:45:05.197"></status>
</kw>
<status status="PASS" starttime="20190116 18:44:49.810" endtime="20190116 18:45:05.200"></status>
</kw>
<doc>Implements Test Task SKTB-50571 OTA chorus update</doc>
<tags>
<tag>OTA flashing</tag>
</tags>
<status status="PASS" starttime="20190116 18:41:24.803" critical="yes" endtime="20190116 18:45:05.201"></status>
</test>
<kw name="Teardown Actions" type="teardown" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg timestamp="20190116 18:45:06.673" level="INFO">Disconnecting from server, keeping session: False</msg>
<msg timestamp="20190116 18:45:06.734" level="INFO">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190116 18:45:05.247" endtime="20190116 18:45:06.770"></status>
</kw>
<status status="PASS" starttime="20190116 18:45:05.219" endtime="20190116 18:45:06.778"></status>
</kw>
<status status="PASS" starttime="20190116 18:45:05.212" endtime="20190116 18:45:06.802"></status>
</kw>
<doc>OTA flashing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190116 18:41:22.109" endtime="20190116 18:45:06.803"></status>
</suite>
<status status="FAIL" starttime="20190116 18:18:04.894" endtime="20190116 18:45:07.072"></status>
</suite>
<statistics>
<total>
<stat fail="5" pass="16">Critical Tests</stat>
<stat fail="5" pass="16">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="1">CAN 1 diagnose test</stat>
<stat fail="0" pass="1">CAN 3 test</stat>
<stat fail="0" pass="1">CAN 3 test TX</stat>
<stat fail="0" pass="1">EEPROM</stat>
<stat fail="1" pass="0">Eeprom OTP Value</stat>
<stat fail="1" pass="3">FBUS</stat>
<stat fail="0" pass="3">Flashing</stat>
<stat fail="0" pass="2">GpioAdc testroutine</stat>
<stat fail="2" pass="1">GPIO Test</stat>
<stat fail="0" pass="1">OTA flashing</stat>
<stat fail="1" pass="0">Powermanagement test</stat>
<stat fail="0" pass="1">Power testroutine</stat>
<stat fail="0" pass="1">Vehicle buses testroutine</stat>
</tag>
<suite>
<stat name="Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571" fail="5" pass="16" id="s1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571</stat>
<stat name="Update-Nad" fail="0" pass="1" id="s1-s1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.Update-Nad</stat>
<stat name="CI update chorus" fail="0" pass="1" id="s1-s2">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.CI update chorus</stat>
<stat name="SKTB-31396" fail="0" pass="1" id="s1-s3">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-31396</stat>
<stat name="SKTB-31405" fail="0" pass="1" id="s1-s4">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-31405</stat>
<stat name="SKTB-33244" fail="0" pass="1" id="s1-s5">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-33244</stat>
<stat name="SKTB-13351" fail="0" pass="1" id="s1-s6">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-13351</stat>
<stat name="SKTB-34994" fail="0" pass="1" id="s1-s7">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-34994</stat>
<stat name="SKTB-40097" fail="1" pass="0" id="s1-s8">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-40097</stat>
<stat name="SKTB-41635" fail="0" pass="1" id="s1-s9">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-41635</stat>
<stat name="SKTB-46886" fail="1" pass="0" id="s1-s10">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-46886</stat>
<stat name="SKTB-47669" fail="0" pass="1" id="s1-s11">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-47669</stat>
<stat name="SKTB-48413" fail="0" pass="1" id="s1-s12">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-48413</stat>
<stat name="SKTB-49038" fail="1" pass="0" id="s1-s13">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-49038</stat>
<stat name="SKTB-49357" fail="1" pass="0" id="s1-s14">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-49357</stat>
<stat name="SKTB-41553" fail="0" pass="1" id="s1-s15">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-41553</stat>
<stat name="SKTB-56663" fail="0" pass="1" id="s1-s16">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56663</stat>
<stat name="SKTB-56067" fail="0" pass="1" id="s1-s17">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56067</stat>
<stat name="SKTB-56094" fail="0" pass="1" id="s1-s18">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56094</stat>
<stat name="SKTB-55194" fail="1" pass="0" id="s1-s19">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-55194</stat>
<stat name="SKTB-FLASHDOWN" fail="0" pass="1" id="s1-s20">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-FLASHDOWN</stat>
<stat name="SKTB-50571" fail="0" pass="1" id="s1-s21">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-50571</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
