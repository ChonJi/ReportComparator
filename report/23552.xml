<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.0.2 (Python 3.5.3 on linux)" generated="20190122 07:34:30.469">
<suite name="Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571" id="s1">
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/update-nad.robot" name="Update-Nad" id="s1-s1">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:34:36.264">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:34:36.259" endtime="20190122 07:34:36.267"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:34:36.278">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:34:36.280">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:34:38.501">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:34:36.270" endtime="20190122 07:34:38.503"></status>
</kw>
<status status="PASS" starttime="20190122 07:34:36.254" endtime="20190122 07:34:38.505"></status>
</kw>
<test name="SKTB-13351 FBUS test" id="s1-s1-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:34:38.531" endtime="20190122 07:34:38.594"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:34:38.598" endtime="20190122 07:34:38.714"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:34:38.726" endtime="20190122 07:34:38.890"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:34:40.898">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:34:38.893" endtime="20190122 07:34:40.900"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:34:40.903" endtime="20190122 07:34:40.950"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:34:40.953" endtime="20190122 07:34:41.000"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>45s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:35:26.008">Slept 45 seconds</msg>
<status status="PASS" starttime="20190122 07:34:41.004" endtime="20190122 07:35:26.010"></status>
</kw>
<status status="PASS" starttime="20190122 07:34:38.525" endtime="20190122 07:35:26.012"></status>
</kw>
<kw name="Step_1">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:35:26.025">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get update'</msg>
<msg level="INFO" timestamp="20190122 07:35:26.050">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:35:30.411">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:35:30.414">${info} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:35:26.021" endtime="20190122 07:35:30.415"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:30.419" endtime="20190122 07:35:30.426"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:35:30.433">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get upgrade -y'</msg>
<msg level="INFO" timestamp="20190122 07:35:30.457">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:35:31.386">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:35:31.389">${info} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:35:30.429" endtime="20190122 07:35:31.390"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:31.394" endtime="20190122 07:35:31.405"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:35:31.421">Starting process:
ssh -i ~/.ssh/id_rsa_tnt_max root@192.168.1.101 'apt-get install -y can-utils'</msg>
<msg level="INFO" timestamp="20190122 07:35:31.463">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:35:32.288">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:35:32.291">${info} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:35:31.408" endtime="20190122 07:35:32.292"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:32.296" endtime="20190122 07:35:32.303"></status>
</kw>
<status status="PASS" starttime="20190122 07:35:26.015" endtime="20190122 07:35:32.306"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:32.316" endtime="20190122 07:35:32.370"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:32.378" endtime="20190122 07:35:32.419"></status>
</kw>
<status status="PASS" starttime="20190122 07:35:32.309" endtime="20190122 07:35:32.426"></status>
</kw>
<doc>Implements Test Task SKTB-update-nad</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:34:38.515" endtime="20190122 07:35:32.427"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:35:34.290">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:35:34.322">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:35:32.839" endtime="20190122 07:35:34.325"></status>
</kw>
<status status="PASS" starttime="20190122 07:35:32.471" endtime="20190122 07:35:34.326"></status>
</kw>
<status status="PASS" starttime="20190122 07:35:32.452" endtime="20190122 07:35:34.329"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:34:30.928" endtime="20190122 07:35:34.329"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/CI_update_chorus.robot" name="CI update chorus" id="s1-s2">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:35:35.042">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:35:35.038" endtime="20190122 07:35:35.054"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:35:35.082">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:35:35.106">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:35:37.095">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:35:35.057" endtime="20190122 07:35:37.097"></status>
</kw>
<status status="PASS" starttime="20190122 07:35:35.018" endtime="20190122 07:35:37.099"></status>
</kw>
<test name="Ci_update_chorus Chorus SW Flashing" id="s1-s2-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:37.145" endtime="20190122 07:35:37.225"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:37.228" endtime="20190122 07:35:37.329"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:37.332" endtime="20190122 07:35:37.501"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:35:39.512">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:35:37.508" endtime="20190122 07:35:39.514"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:39.517" endtime="20190122 07:35:39.562"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:39.565" endtime="20190122 07:35:39.611"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:35:39.614" endtime="20190122 07:35:39.661"></status>
</kw>
<status status="PASS" starttime="20190122 07:35:37.127" endtime="20190122 07:35:39.664"></status>
</kw>
<kw name="Step_1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:35:41.678">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:35:39.673" endtime="20190122 07:35:41.680"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:37:10.136">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:35:41.683" endtime="20190122 07:37:10.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:37:10.144">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:37:10.140" endtime="20190122 07:37:10.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:10.150" endtime="20190122 07:37:10.155"></status>
</kw>
<status status="PASS" starttime="20190122 07:35:39.667" endtime="20190122 07:37:10.157"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:10.166" endtime="20190122 07:37:10.213"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:10.217" endtime="20190122 07:37:10.264"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:10.267" endtime="20190122 07:37:10.313"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:10.316" endtime="20190122 07:37:10.381"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:10.384" endtime="20190122 07:37:10.564"></status>
</kw>
<status status="PASS" starttime="20190122 07:37:10.160" endtime="20190122 07:37:10.566"></status>
</kw>
<doc>Implements Test Task Ci_update_chorus</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:35:37.101" endtime="20190122 07:37:10.567"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:37:12.181">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:37:12.269">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:37:10.711" endtime="20190122 07:37:12.271"></status>
</kw>
<status status="PASS" starttime="20190122 07:37:10.648" endtime="20190122 07:37:12.289"></status>
</kw>
<status status="PASS" starttime="20190122 07:37:10.638" endtime="20190122 07:37:12.292"></status>
</kw>
<doc>Serial flashing test fof CI</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:35:34.463" endtime="20190122 07:37:12.292"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-31396.robot" name="SKTB-31396" id="s1-s3">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:37:12.832">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:37:12.822" endtime="20190122 07:37:12.850"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:37:12.875">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:37:12.877">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:37:15.118">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:37:12.853" endtime="20190122 07:37:15.119"></status>
</kw>
<status status="PASS" starttime="20190122 07:37:12.816" endtime="20190122 07:37:15.127"></status>
</kw>
<test name="SKTB-31396 Chorus SW Flashing" id="s1-s3-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:15.171" endtime="20190122 07:37:15.262"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:15.265" endtime="20190122 07:37:15.356"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:15.365" endtime="20190122 07:37:15.520"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:37:17.535">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:37:15.523" endtime="20190122 07:37:17.537"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:17.540" endtime="20190122 07:37:17.585"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:17.588" endtime="20190122 07:37:17.634"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:37:17.637" endtime="20190122 07:37:17.683"></status>
</kw>
<status status="PASS" starttime="20190122 07:37:15.157" endtime="20190122 07:37:17.686"></status>
</kw>
<kw name="Step_1">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:37:19.700">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:37:17.695" endtime="20190122 07:37:19.702"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:38:46.975">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:37:19.705" endtime="20190122 07:38:46.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:38:46.984">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:38:46.980" endtime="20190122 07:38:46.987"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:38:48.993">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:38:46.990" endtime="20190122 07:38:48.996"></status>
</kw>
<status status="PASS" starttime="20190122 07:37:17.690" endtime="20190122 07:38:48.998"></status>
</kw>
<kw name="Step_2">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:38:51.010">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:38:49.006" endtime="20190122 07:38:51.013"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:40:20.742">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:38:51.015" endtime="20190122 07:40:20.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:40:20.750">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:40:20.746" endtime="20190122 07:40:20.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:40:20.755" endtime="20190122 07:40:20.761"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:40:22.767">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:40:20.763" endtime="20190122 07:40:22.769"></status>
</kw>
<status status="PASS" starttime="20190122 07:38:49.000" endtime="20190122 07:40:22.771"></status>
</kw>
<kw name="Step_3">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:40:24.783">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:40:22.779" endtime="20190122 07:40:24.785"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH_PBL_CORRUPT}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:41:11.028">${RESULT} = Error transferring from pos: 122368</msg>
<status status="PASS" starttime="20190122 07:40:24.788" endtime="20190122 07:41:11.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:41:11.036">Error transferring from pos: 122368</msg>
<status status="PASS" starttime="20190122 07:41:11.032" endtime="20190122 07:41:11.039"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:41:11.042" endtime="20190122 07:41:11.049"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:41:13.073">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:41:11.052" endtime="20190122 07:41:13.075"></status>
</kw>
<status status="PASS" starttime="20190122 07:40:22.773" endtime="20190122 07:41:13.081"></status>
</kw>
<kw name="Step_4">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:41:15.145">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:41:13.114" endtime="20190122 07:41:15.147"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH_APPL_CORRUPT}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:42:35.556">${RESULT} = Error transferring from pos: 383744</msg>
<status status="PASS" starttime="20190122 07:41:15.170" endtime="20190122 07:42:35.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:42:35.565">Error transferring from pos: 383744</msg>
<status status="PASS" starttime="20190122 07:42:35.560" endtime="20190122 07:42:35.568"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:42:35.570" endtime="20190122 07:42:35.575"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:42:37.582">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:42:35.578" endtime="20190122 07:42:37.584"></status>
</kw>
<status status="PASS" starttime="20190122 07:41:13.083" endtime="20190122 07:42:37.586"></status>
</kw>
<kw name="Step_5">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:42:39.608">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:42:37.594" endtime="20190122 07:42:39.610"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:44:06.838">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:42:39.639" endtime="20190122 07:44:06.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:44:06.846">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:44:06.841" endtime="20190122 07:44:06.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:44:06.851" endtime="20190122 07:44:06.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:44:08.863">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:44:06.859" endtime="20190122 07:44:08.865"></status>
</kw>
<status status="PASS" starttime="20190122 07:42:37.588" endtime="20190122 07:44:08.867"></status>
</kw>
<kw name="Step_6">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:44:10.879">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:44:08.875" endtime="20190122 07:44:10.881"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:45:39.017">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:44:10.884" endtime="20190122 07:45:39.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:45:39.024">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:45:39.020" endtime="20190122 07:45:39.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:45:39.030" endtime="20190122 07:45:39.034"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:45:41.041">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:45:39.037" endtime="20190122 07:45:41.043"></status>
</kw>
<status status="PASS" starttime="20190122 07:44:08.869" endtime="20190122 07:45:41.046"></status>
</kw>
<kw name="Step_7">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:45:43.062">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:45:41.054" endtime="20190122 07:45:43.064"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:13.454">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:45:43.071" endtime="20190122 07:47:13.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:13.463">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:47:13.459" endtime="20190122 07:47:13.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>sucessfully</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:13.468" endtime="20190122 07:47:13.473"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:15.480">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:47:13.476" endtime="20190122 07:47:15.482"></status>
</kw>
<status status="PASS" starttime="20190122 07:45:41.048" endtime="20190122 07:47:15.484"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:15.494" endtime="20190122 07:47:15.541"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:15.544" endtime="20190122 07:47:15.590"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:15.593" endtime="20190122 07:47:15.641"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:15.644" endtime="20190122 07:47:15.691"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:15.695" endtime="20190122 07:47:15.741"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:15.488" endtime="20190122 07:47:15.743"></status>
</kw>
<doc>Implements Test Task SKTB-31396</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:37:15.129" endtime="20190122 07:47:15.744"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:47:17.260">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:47:17.287">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:47:15.782" endtime="20190122 07:47:17.323"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:15.760" endtime="20190122 07:47:17.352"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:15.754" endtime="20190122 07:47:17.354"></status>
</kw>
<doc>Serial flashing test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:37:12.459" endtime="20190122 07:47:17.355"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-31405.robot" name="SKTB-31405" id="s1-s4">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:18.027">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:47:18.008" endtime="20190122 07:47:18.035"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:18.051">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:47:18.053">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:47:20.546">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:47:18.038" endtime="20190122 07:47:20.548"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:17.989" endtime="20190122 07:47:20.550"></status>
</kw>
<test name="SKTB-31405 GpioAdc testroutine" id="s1-s4-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:20.626" endtime="20190122 07:47:20.742"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:20.745" endtime="20190122 07:47:20.852"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:20.854" endtime="20190122 07:47:20.938"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:22.969">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:47:20.947" endtime="20190122 07:47:22.971"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:22.974" endtime="20190122 07:47:23.021"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:24.029">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:23.024" endtime="20190122 07:47:24.031"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:24.033" endtime="20190122 07:47:24.088"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:26.096">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:47:24.091" endtime="20190122 07:47:26.098"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:26.102" endtime="20190122 07:47:26.145"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:26.149" endtime="20190122 07:47:26.194"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:26.197" endtime="20190122 07:47:26.241"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:26.245" endtime="20190122 07:47:26.290"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:20.607" endtime="20190122 07:47:26.293"></status>
</kw>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:26.362">${res_dict} = {'status': True, 'result': '4153', 'data': '', 'request': '41'}</msg>
<status status="PASS" starttime="20190122 07:47:26.302" endtime="20190122 07:47:26.363"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:26.390">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:26.367" endtime="20190122 07:47:26.391"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:26.394" endtime="20190122 07:47:26.399"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:27.407">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:26.402" endtime="20190122 07:47:27.409"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:26.296" endtime="20190122 07:47:27.411"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:27.478">${res_dict} = {'status': True, 'result': '4153', 'data': '', 'request': '41'}</msg>
<status status="PASS" starttime="20190122 07:47:27.419" endtime="20190122 07:47:27.479"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:27.505">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:27.482" endtime="20190122 07:47:27.506"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:27.509" endtime="20190122 07:47:27.513"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:28.520">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:27.516" endtime="20190122 07:47:28.522"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:27.413" endtime="20190122 07:47:28.524"></status>
</kw>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:28.555">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190122 07:47:28.579">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:47:28.595">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:47:28.598">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:47:28.549" endtime="20190122 07:47:28.598"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:28.608">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:47:28.603" endtime="20190122 07:47:28.609"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:28.617">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:47:28.619">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190122 07:47:28.612" endtime="20190122 07:47:28.620"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:28.628">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:47:28.623" endtime="20190122 07:47:28.628"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:28.631" endtime="20190122 07:47:28.636"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" html="yes" timestamp="20190122 07:47:28.644">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190122 07:47:28.639" endtime="20190122 07:47:28.645"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:47:28.649">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:47:28.531" endtime="20190122 07:47:28.650"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:28.803">${res_dict} = {'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': '0468781f'}</msg>
<status status="PASS" starttime="20190122 07:47:28.653" endtime="20190122 07:47:28.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:28.812">{'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': '0468781f'}</msg>
<status status="PASS" starttime="20190122 07:47:28.807" endtime="20190122 07:47:28.814"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:30.822">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:47:28.817" endtime="20190122 07:47:30.824"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:30.851">${value} = 5453</msg>
<status status="PASS" starttime="20190122 07:47:30.827" endtime="20190122 07:47:30.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:30.855" endtime="20190122 07:47:30.860"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:28.526" endtime="20190122 07:47:30.863"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:30.932">${res_dict} = {'status': True, 'result': '4953', 'data': '', 'request': '49'}</msg>
<status status="PASS" starttime="20190122 07:47:30.871" endtime="20190122 07:47:30.933"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:30.959">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:30.936" endtime="20190122 07:47:30.960"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:30.963" endtime="20190122 07:47:30.967"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:31.981">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:30.970" endtime="20190122 07:47:31.983"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:30.865" endtime="20190122 07:47:31.990"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:32.284">${res_dict} = {'status': True, 'result': '475653', 'data': '0201', 'request': '4756'}</msg>
<status status="PASS" starttime="20190122 07:47:32.051" endtime="20190122 07:47:32.285"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:33.329">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:32.320" endtime="20190122 07:47:33.331"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:31.992" endtime="20190122 07:47:33.334"></status>
</kw>
<kw name="Step_gpio_select">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:33.401">${res_dict} = {'status': True, 'result': '534653', 'data': '', 'request': '53460000006d'}</msg>
<status status="PASS" starttime="20190122 07:47:33.341" endtime="20190122 07:47:33.402"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:33.430">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:33.405" endtime="20190122 07:47:33.430"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:33.433" endtime="20190122 07:47:33.438"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:33.506">${res_dict} = {'status': True, 'result': '520153', 'data': '', 'request': '5201'}</msg>
<status status="PASS" starttime="20190122 07:47:33.440" endtime="20190122 07:47:33.507"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:33.674">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:33.531" endtime="20190122 07:47:33.674"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:33.707" endtime="20190122 07:47:33.711"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:34.753">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:33.739" endtime="20190122 07:47:34.755"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:33.335" endtime="20190122 07:47:34.757"></status>
</kw>
<kw name="Step_gpio_write">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:34.826">${res_dict} = {'status': True, 'result': '534653', 'data': '', 'request': '534600000001'}</msg>
<status status="PASS" starttime="20190122 07:47:34.765" endtime="20190122 07:47:34.827"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:34.853">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:34.830" endtime="20190122 07:47:34.854"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:34.857" endtime="20190122 07:47:34.861"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioWrite}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:34.925">${res_dict} = {'status': True, 'result': '520453', 'data': '', 'request': '5204'}</msg>
<status status="PASS" starttime="20190122 07:47:34.864" endtime="20190122 07:47:34.926"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:34.953">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:34.930" endtime="20190122 07:47:34.954"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:34.957" endtime="20190122 07:47:34.961"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:35.968">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:34.963" endtime="20190122 07:47:35.970"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:34.759" endtime="20190122 07:47:35.972"></status>
</kw>
<kw name="Step_adc_read_channel">
<kw name="check_analog_channel">
<arguments>
<arg>${CARBAT_V_SENSE}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:36.064">${res_dict} = {'status': False, 'result': '1efd54', 'data': '', 'request': '53460000004d'}</msg>
<status status="PASS" starttime="20190122 07:47:35.987" endtime="20190122 07:47:36.066"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:36.092">${value} = False</msg>
<status status="PASS" starttime="20190122 07:47:36.068" endtime="20190122 07:47:36.093"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:47:36.101">'False' should be true.</msg>
<status status="FAIL" starttime="20190122 07:47:36.095" endtime="20190122 07:47:36.102"></status>
</kw>
<status status="FAIL" starttime="20190122 07:47:35.980" endtime="20190122 07:47:36.105"></status>
</kw>
<status status="FAIL" starttime="20190122 07:47:35.975" endtime="20190122 07:47:36.108"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:36.119" endtime="20190122 07:47:36.166"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:36.169" endtime="20190122 07:47:36.214"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:36.219" endtime="20190122 07:47:36.278"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:38.294">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:47:36.286" endtime="20190122 07:47:38.297"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:38.300" endtime="20190122 07:47:38.345"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:36.113" endtime="20190122 07:47:38.347"></status>
</kw>
<doc>Implements Test Task SKTB-31405</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20190122 07:47:20.552" endtime="20190122 07:47:38.348">'False' should be true.</status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:47:39.838">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:47:39.912">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:47:38.390" endtime="20190122 07:47:39.949"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:38.365" endtime="20190122 07:47:39.950"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:38.359" endtime="20190122 07:47:39.961"></status>
</kw>
<doc>Chorus GpioAdc testing with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190122 07:47:17.525" endtime="20190122 07:47:39.978"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-33244.robot" name="SKTB-33244" id="s1-s5">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:40.672">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:47:40.667" endtime="20190122 07:47:40.683"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:40.692">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:47:40.705">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:47:43.031">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:47:40.686" endtime="20190122 07:47:43.033"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:40.647" endtime="20190122 07:47:43.035"></status>
</kw>
<test name="SKTB-33244 Test ADC channels" id="s1-s5-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:43.118" endtime="20190122 07:47:43.279"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:43.282" endtime="20190122 07:47:43.370"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:43.373" endtime="20190122 07:47:43.564"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:45.584">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:47:43.567" endtime="20190122 07:47:45.586"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:45.589" endtime="20190122 07:47:45.634"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:46.642">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:45.638" endtime="20190122 07:47:46.645"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:46.647" endtime="20190122 07:47:46.693"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:48.701">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:47:46.696" endtime="20190122 07:47:48.703"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:48.706" endtime="20190122 07:47:48.750"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:48.754" endtime="20190122 07:47:48.799"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:48.802" endtime="20190122 07:47:48.846"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:48.850" endtime="20190122 07:47:48.895"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:43.091" endtime="20190122 07:47:48.898"></status>
</kw>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:48.969">${res_dict} = {'status': True, 'result': '4153', 'data': '', 'request': '41'}</msg>
<status status="PASS" starttime="20190122 07:47:48.907" endtime="20190122 07:47:48.969"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:49.002">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:48.972" endtime="20190122 07:47:49.003"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:49.006" endtime="20190122 07:47:49.011"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:50.018">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:49.014" endtime="20190122 07:47:50.021"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:48.901" endtime="20190122 07:47:50.023"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:50.090">${res_dict} = {'status': True, 'result': '4153', 'data': '', 'request': '41'}</msg>
<status status="PASS" starttime="20190122 07:47:50.031" endtime="20190122 07:47:50.091"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:50.124">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:50.093" endtime="20190122 07:47:50.125"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:50.128" endtime="20190122 07:47:50.132"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:51.139">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:50.134" endtime="20190122 07:47:51.141"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:50.025" endtime="20190122 07:47:51.143"></status>
</kw>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${ADC_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:51.165">Starting process:
find /home/debian/chorus_version/TestRoutineGpioAdc_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190122 07:47:51.190">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:47:51.206">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:47:51.209">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:47:51.158" endtime="20190122 07:47:51.210"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:51.219">${stdout_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:47:51.213" endtime="20190122 07:47:51.219"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:51.226">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:47:51.228">${temp} = ['/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190122 07:47:51.222" endtime="20190122 07:47:51.229"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:51.239">${path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:47:51.232" endtime="20190122 07:47:51.240"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:51.243" endtime="20190122 07:47:51.249"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" html="yes" timestamp="20190122 07:47:51.257">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190122 07:47:51.252" endtime="20190122 07:47:51.258"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:47:51.262">${matched_path} = /home/debian/chorus_version/TestRoutineGpioAdc_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:47:51.150" endtime="20190122 07:47:51.263"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:51.478">${res_dict} = {'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': '0468781f'}</msg>
<status status="PASS" starttime="20190122 07:47:51.266" endtime="20190122 07:47:51.479"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:53.487">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:47:51.483" endtime="20190122 07:47:53.491"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:53.611">${value} = 5453</msg>
<status status="PASS" starttime="20190122 07:47:53.528" endtime="20190122 07:47:53.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:53.615" endtime="20190122 07:47:53.641"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:51.145" endtime="20190122 07:47:53.643"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:53.773">${res_dict} = {'status': True, 'result': '4953', 'data': '', 'request': '49'}</msg>
<status status="PASS" starttime="20190122 07:47:53.662" endtime="20190122 07:47:53.774"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:53.809">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:53.779" endtime="20190122 07:47:53.810"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:53.813" endtime="20190122 07:47:53.817"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:54.824">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:53.819" endtime="20190122 07:47:54.826"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:53.653" endtime="20190122 07:47:54.828"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:54.899">${res_dict} = {'status': True, 'result': '475653', 'data': '0201', 'request': '4756'}</msg>
<status status="PASS" starttime="20190122 07:47:54.836" endtime="20190122 07:47:54.899"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:55.907">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:54.903" endtime="20190122 07:47:55.909"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:54.830" endtime="20190122 07:47:55.911"></status>
</kw>
<kw name="Step_gpio_select">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${VCC3V3_SWITCH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:55.981">${res_dict} = {'status': True, 'result': '534653', 'data': '', 'request': '53460000006d'}</msg>
<status status="PASS" starttime="20190122 07:47:55.919" endtime="20190122 07:47:55.982"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:56.014">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:55.984" endtime="20190122 07:47:56.015"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:56.018" endtime="20190122 07:47:56.022"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioSelect}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:56.093">${res_dict} = {'status': True, 'result': '520153', 'data': '', 'request': '5201'}</msg>
<status status="PASS" starttime="20190122 07:47:56.026" endtime="20190122 07:47:56.094"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:56.128">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:56.097" endtime="20190122 07:47:56.129"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:56.132" endtime="20190122 07:47:56.136"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:57.143">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:56.139" endtime="20190122 07:47:57.145"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:55.913" endtime="20190122 07:47:57.147"></status>
</kw>
<kw name="Step_gpio_write">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${HIGH}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:57.217">${res_dict} = {'status': True, 'result': '534653', 'data': '', 'request': '534600000001'}</msg>
<status status="PASS" starttime="20190122 07:47:57.155" endtime="20190122 07:47:57.218"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:57.250">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:57.221" endtime="20190122 07:47:57.251"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:57.254" endtime="20190122 07:47:57.258"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${GpioWrite}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:57.321">${res_dict} = {'status': True, 'result': '520453', 'data': '', 'request': '5204'}</msg>
<status status="PASS" starttime="20190122 07:47:57.261" endtime="20190122 07:47:57.322"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:57.354">${value} = True</msg>
<status status="PASS" starttime="20190122 07:47:57.325" endtime="20190122 07:47:57.355"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:57.358" endtime="20190122 07:47:57.362"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:47:58.369">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:47:57.365" endtime="20190122 07:47:58.371"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:57.149" endtime="20190122 07:47:58.373"></status>
</kw>
<kw name="Step_adc_read_channel">
<kw name="check_analog_channel">
<arguments>
<arg>${CARBAT_V_SENSE}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${value_address}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:58.463">${res_dict} = {'status': False, 'result': '1efd54', 'data': '', 'request': '53460000004d'}</msg>
<status status="PASS" starttime="20190122 07:47:58.389" endtime="20190122 07:47:58.465"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:47:58.498">${value} = False</msg>
<status status="PASS" starttime="20190122 07:47:58.467" endtime="20190122 07:47:58.498"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:47:58.507">'False' should be true.</msg>
<status status="FAIL" starttime="20190122 07:47:58.501" endtime="20190122 07:47:58.508"></status>
</kw>
<status status="FAIL" starttime="20190122 07:47:58.381" endtime="20190122 07:47:58.511"></status>
</kw>
<status status="FAIL" starttime="20190122 07:47:58.376" endtime="20190122 07:47:58.513"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:58.524" endtime="20190122 07:47:58.570"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:58.574" endtime="20190122 07:47:58.620"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:47:58.623" endtime="20190122 07:47:58.687"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:00.702">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:47:58.694" endtime="20190122 07:48:00.704"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:00.707" endtime="20190122 07:48:00.752"></status>
</kw>
<status status="PASS" starttime="20190122 07:47:58.517" endtime="20190122 07:48:00.754"></status>
</kw>
<doc>Implements Test Task SKTB-33244</doc>
<tags>
<tag>GpioAdc testroutine</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20190122 07:47:43.037" endtime="20190122 07:48:00.756">'False' should be true.</status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:48:02.235">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:48:02.296">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:48:00.803" endtime="20190122 07:48:02.297"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:00.772" endtime="20190122 07:48:02.299"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:00.766" endtime="20190122 07:48:02.301"></status>
</kw>
<doc>Chorus GpioAdc's test with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190122 07:47:40.146" endtime="20190122 07:48:02.301"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-13351.robot" name="SKTB-13351" id="s1-s6">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:02.973">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:48:02.959" endtime="20190122 07:48:02.995"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:03.004">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:48:03.014">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:48:05.658">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:48:02.998" endtime="20190122 07:48:05.660"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:02.954" endtime="20190122 07:48:05.662"></status>
</kw>
<test name="SKTB-13351 FBUS test" id="s1-s6-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:05.716" endtime="20190122 07:48:05.799"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:05.802" endtime="20190122 07:48:05.885"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:05.888" endtime="20190122 07:48:05.939"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:07.997">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:48:05.942" endtime="20190122 07:48:07.999"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:08.001" endtime="20190122 07:48:08.048"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:08.051" endtime="20190122 07:48:08.098"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:08.101" endtime="20190122 07:48:08.148"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:08.151" endtime="20190122 07:48:08.198"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:08.201" endtime="20190122 07:48:08.248"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:08.251" endtime="20190122 07:48:08.339"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:10.357">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:48:08.345" endtime="20190122 07:48:10.359"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:05.698" endtime="20190122 07:48:10.361"></status>
</kw>
<kw name="Step_1">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${PN_POWER_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:10.570">${info} = 1E 14 54 8D 00 08 00 0C 01 01 00 00 01 43 4A DF</msg>
<status status="PASS" starttime="20190122 07:48:10.370" endtime="20190122 07:48:10.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:10.579">1E 14 54 8D 00 08 00 0C 01 01 00 00 01 43 4A DF</msg>
<status status="PASS" starttime="20190122 07:48:10.574" endtime="20190122 07:48:10.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_POWER_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:10.584" endtime="20190122 07:48:10.590"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:10.364" endtime="20190122 07:48:10.592"></status>
</kw>
<kw name="Step_2">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${PN_DIAG_APP}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:10.841">${info} = 1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 44 4A DE</msg>
<status status="PASS" starttime="20190122 07:48:10.600" endtime="20190122 07:48:10.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:10.863">1E 14 54 8F 00 0A 00 0A 01 01 00 00 00 00 01 44 4A DE</msg>
<status status="PASS" starttime="20190122 07:48:10.859" endtime="20190122 07:48:10.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${PN_DIAG_APP_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:10.878" endtime="20190122 07:48:10.883"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:10.594" endtime="20190122 07:48:10.888"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:10.898" endtime="20190122 07:48:10.927"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:10.931" endtime="20190122 07:48:10.958"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:10.961" endtime="20190122 07:48:10.987"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:12.995">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:48:10.991" endtime="20190122 07:48:12.997"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:13.000" endtime="20190122 07:48:13.096"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:13.103" endtime="20190122 07:48:13.152"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:10.891" endtime="20190122 07:48:13.155"></status>
</kw>
<doc>Implements Test Task SKTB-13351</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:48:05.664" endtime="20190122 07:48:13.156"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:48:14.693">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:48:14.802">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:48:13.195" endtime="20190122 07:48:14.804"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:13.171" endtime="20190122 07:48:14.810"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:13.165" endtime="20190122 07:48:14.812"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:48:02.473" endtime="20190122 07:48:14.831"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-34994.robot" name="SKTB-34994" id="s1-s7">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:15.462">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:48:15.447" endtime="20190122 07:48:15.474"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:15.495">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:48:15.497">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:48:17.745">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:48:15.477" endtime="20190122 07:48:17.747"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:15.442" endtime="20190122 07:48:17.753"></status>
</kw>
<test name="SKTB-34994 CAN 3 testing" id="s1-s7-t1">
<kw type="setup" name="Test_precondition">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:17.819">"Test_precondition"</msg>
<status status="PASS" starttime="20190122 07:48:17.815" endtime="20190122 07:48:17.830"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:17.833" endtime="20190122 07:48:17.940"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:17.943" endtime="20190122 07:48:18.058"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:20.065">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:48:18.061" endtime="20190122 07:48:20.067"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:20.070" endtime="20190122 07:48:20.117"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:21.127">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:48:20.121" endtime="20190122 07:48:21.129"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:21.132" endtime="20190122 07:48:21.167"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:24.179">Slept 3 seconds</msg>
<status status="PASS" starttime="20190122 07:48:21.170" endtime="20190122 07:48:24.181"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>ping ${HOST_IP}</arg>
<arg>shell=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:24.203">Starting process:
ping 192.168.1.101</msg>
<status status="PASS" starttime="20190122 07:48:24.184" endtime="20190122 07:48:24.235"></status>
</kw>
<kw name="WAIT_UNTIL_DEVICE_IS_READY">
<doc>Waiting for device to be ready, up to 90 seconds</doc>
<assign>
<var>${status}</var>
</assign>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Waiting for device to be ready, up to 90 seconds\n</arg>
<arg>console=true</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:24.265">Waiting for device to be ready, up to 90 seconds
</msg>
<status status="PASS" starttime="20190122 07:48:24.261" endtime="20190122 07:48:24.268"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait until keyword succeeds</arg>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:24.299">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:24.326">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:24.348">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:24.351">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:24.292" endtime="20190122 07:48:24.351"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:24.367">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:24.355" endtime="20190122 07:48:24.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:24.378">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:24.370" endtime="20190122 07:48:24.380"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:24.285" endtime="20190122 07:48:24.383"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:24.520">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:24.546">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:24.566">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:24.570">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:24.514" endtime="20190122 07:48:24.571"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:24.584">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:24.574" endtime="20190122 07:48:24.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:24.596">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:24.588" endtime="20190122 07:48:24.597"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:24.506" endtime="20190122 07:48:24.600"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:24.738">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:24.765">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:24.786">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:24.789">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:24.732" endtime="20190122 07:48:24.790"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:24.803">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:24.793" endtime="20190122 07:48:24.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:24.815">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:24.806" endtime="20190122 07:48:24.816"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:24.724" endtime="20190122 07:48:24.819"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:24.957">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:24.982">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:25.004">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:25.007">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:24.950" endtime="20190122 07:48:25.009"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:25.023">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:25.013" endtime="20190122 07:48:25.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:25.036">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:25.027" endtime="20190122 07:48:25.037"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:24.942" endtime="20190122 07:48:25.040"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:25.181">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:25.206">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:25.227">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:25.230">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:25.174" endtime="20190122 07:48:25.231"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:25.244">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:25.235" endtime="20190122 07:48:25.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:25.255">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:25.248" endtime="20190122 07:48:25.257"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:25.164" endtime="20190122 07:48:25.260"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:25.419">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:25.444">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:25.465">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:25.468">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:25.411" endtime="20190122 07:48:25.469"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:25.482">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:25.473" endtime="20190122 07:48:25.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:25.494">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:25.486" endtime="20190122 07:48:25.495"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:25.383" endtime="20190122 07:48:25.498"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:25.636">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:25.661">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:25.682">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:25.685">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:25.629" endtime="20190122 07:48:25.686"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:25.699">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:25.690" endtime="20190122 07:48:25.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:25.711">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:25.703" endtime="20190122 07:48:25.712"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:25.621" endtime="20190122 07:48:25.715"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:25.853">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:25.878">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:25.899">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:25.902">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:25.846" endtime="20190122 07:48:25.902"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:25.915">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:25.906" endtime="20190122 07:48:25.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:25.927">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:25.919" endtime="20190122 07:48:25.928"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:25.838" endtime="20190122 07:48:25.931"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:26.072">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:26.097">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:26.119">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:26.122">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:26.065" endtime="20190122 07:48:26.123"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:26.135">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:26.126" endtime="20190122 07:48:26.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:26.147">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:26.139" endtime="20190122 07:48:26.148"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:26.054" endtime="20190122 07:48:26.151"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:26.289">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:26.315">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:26.335">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:26.338">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:26.282" endtime="20190122 07:48:26.339"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:26.352">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:26.343" endtime="20190122 07:48:26.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:26.363">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:26.356" endtime="20190122 07:48:26.365"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:26.274" endtime="20190122 07:48:26.368"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:26.505">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:26.532">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:26.552">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:26.555">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:26.499" endtime="20190122 07:48:26.556"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:26.569">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:26.560" endtime="20190122 07:48:26.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:26.580">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:26.573" endtime="20190122 07:48:26.582"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:26.491" endtime="20190122 07:48:26.585"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:26.722">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:26.749">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:26.769">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:26.772">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:26.716" endtime="20190122 07:48:26.774"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:26.786">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:26.777" endtime="20190122 07:48:26.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:26.814">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:26.797" endtime="20190122 07:48:26.815"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:26.708" endtime="20190122 07:48:26.820"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:26.975">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:27.001">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:27.022">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:27.025">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:26.951" endtime="20190122 07:48:27.026"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:27.039">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:27.030" endtime="20190122 07:48:27.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:27.050">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:27.043" endtime="20190122 07:48:27.052"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:26.943" endtime="20190122 07:48:27.055"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:27.192">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:27.218">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:27.239">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:27.242">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:27.186" endtime="20190122 07:48:27.243"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:27.255">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:27.247" endtime="20190122 07:48:27.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:27.267">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:27.259" endtime="20190122 07:48:27.269"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:27.178" endtime="20190122 07:48:27.272"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:27.409">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:27.435">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:27.456">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:27.459">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:27.403" endtime="20190122 07:48:27.460"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:27.473">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:27.464" endtime="20190122 07:48:27.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:27.485">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:27.477" endtime="20190122 07:48:27.486"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:27.395" endtime="20190122 07:48:27.489"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:27.627">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:27.653">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:27.674">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:27.677">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:27.620" endtime="20190122 07:48:27.678"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:27.690">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:27.682" endtime="20190122 07:48:27.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:27.702">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:27.694" endtime="20190122 07:48:27.703"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:27.612" endtime="20190122 07:48:27.706"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:27.844">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:27.874">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:27.895">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:27.898">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:27.837" endtime="20190122 07:48:27.899"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:27.912">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:27.903" endtime="20190122 07:48:27.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:27.924">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:27.915" endtime="20190122 07:48:27.926"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:27.829" endtime="20190122 07:48:27.929"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:28.067">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:28.093">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:28.113">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:28.116">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:28.060" endtime="20190122 07:48:28.117"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:28.130">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:28.121" endtime="20190122 07:48:28.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:28.142">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:28.134" endtime="20190122 07:48:28.143"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:28.052" endtime="20190122 07:48:28.146"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:28.284">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:28.310">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:28.330">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:28.333">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:28.277" endtime="20190122 07:48:28.334"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:28.347">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:28.338" endtime="20190122 07:48:28.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:28.359">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:28.352" endtime="20190122 07:48:28.361"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:28.269" endtime="20190122 07:48:28.364"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:28.501">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:28.550">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:28.588">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:28.591">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:28.495" endtime="20190122 07:48:28.592"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:28.625">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:28.596" endtime="20190122 07:48:28.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:28.651">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:28.643" endtime="20190122 07:48:28.652"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:28.487" endtime="20190122 07:48:28.663"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:28.802">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:28.828">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:28.849">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:28.852">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:28.795" endtime="20190122 07:48:28.853"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:28.870">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:28.857" endtime="20190122 07:48:28.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:28.881">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:28.873" endtime="20190122 07:48:28.882"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:28.787" endtime="20190122 07:48:28.885"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:29.023">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:29.049">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:29.071">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:29.074">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:29.016" endtime="20190122 07:48:29.075"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:29.087">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:29.079" endtime="20190122 07:48:29.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:29.099">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:29.091" endtime="20190122 07:48:29.101"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:29.008" endtime="20190122 07:48:29.105"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:29.242">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:29.268">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:29.288">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:29.291">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:29.236" endtime="20190122 07:48:29.292"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:29.305">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:29.296" endtime="20190122 07:48:29.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:29.317">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:29.309" endtime="20190122 07:48:29.318"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:29.228" endtime="20190122 07:48:29.321"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:29.459">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:29.485">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:29.506">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:29.509">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:29.452" endtime="20190122 07:48:29.510"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:29.522">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:29.514" endtime="20190122 07:48:29.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:29.534">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:29.526" endtime="20190122 07:48:29.536"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:29.444" endtime="20190122 07:48:29.539"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:29.677">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:29.702">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:29.723">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:29.726">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:29.670" endtime="20190122 07:48:29.727"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:29.740">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:29.731" endtime="20190122 07:48:29.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:29.755">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:29.744" endtime="20190122 07:48:29.757"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:29.662" endtime="20190122 07:48:29.760"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:29.898">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:29.924">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:29.944">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:29.948">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:29.891" endtime="20190122 07:48:29.949"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:29.961">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:29.952" endtime="20190122 07:48:29.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:29.973">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:29.965" endtime="20190122 07:48:29.974"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:29.883" endtime="20190122 07:48:29.977"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:30.150">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:30.196">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:30.226">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:30.229">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:30.133" endtime="20190122 07:48:30.230"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:30.243">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:30.234" endtime="20190122 07:48:30.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:30.256">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:30.247" endtime="20190122 07:48:30.257"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:30.101" endtime="20190122 07:48:30.260"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:30.399">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:30.425">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:30.446">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:30.450">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:30.392" endtime="20190122 07:48:30.450"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:30.463">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:30.454" endtime="20190122 07:48:30.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:30.475">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:30.467" endtime="20190122 07:48:30.476"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:30.384" endtime="20190122 07:48:30.480"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:30.618">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:30.644">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:30.665">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:30.667">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:30.612" endtime="20190122 07:48:30.669"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:30.681">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:30.672" endtime="20190122 07:48:30.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:30.696">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:30.685" endtime="20190122 07:48:30.698"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:30.603" endtime="20190122 07:48:30.701"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:30.838">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:30.864">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:30.885">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:30.888">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:30.831" endtime="20190122 07:48:30.889"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:30.902">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:30.893" endtime="20190122 07:48:30.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:30.913">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:30.905" endtime="20190122 07:48:30.915"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:30.824" endtime="20190122 07:48:30.917"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:31.056">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:31.082">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:31.103">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:31.106">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:31.049" endtime="20190122 07:48:31.107"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:31.120">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:31.111" endtime="20190122 07:48:31.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:31.131">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:31.124" endtime="20190122 07:48:31.133"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:31.041" endtime="20190122 07:48:31.136"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:31.274">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:31.299">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:31.320">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:31.323">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:31.267" endtime="20190122 07:48:31.324"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:31.337">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:31.328" endtime="20190122 07:48:31.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:31.349">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:31.341" endtime="20190122 07:48:31.350"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:31.259" endtime="20190122 07:48:31.353"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:31.522">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:31.553">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:31.574">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:31.577">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:31.500" endtime="20190122 07:48:31.578"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:31.591">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:31.582" endtime="20190122 07:48:31.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:31.606">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:31.595" endtime="20190122 07:48:31.608"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:31.491" endtime="20190122 07:48:31.611"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:31.748">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:31.775">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:31.795">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:31.798">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:31.742" endtime="20190122 07:48:31.799"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:31.812">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:31.803" endtime="20190122 07:48:31.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:31.824">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:31.816" endtime="20190122 07:48:31.825"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:31.734" endtime="20190122 07:48:31.828"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:31.966">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:31.992">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:32.013">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:32.017">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:31.959" endtime="20190122 07:48:32.018"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:32.030">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:32.021" endtime="20190122 07:48:32.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:32.042">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:32.034" endtime="20190122 07:48:32.043"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:31.951" endtime="20190122 07:48:32.046"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:32.202">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:32.246">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:32.267">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:32.270">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:32.177" endtime="20190122 07:48:32.271"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:32.284">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:32.275" endtime="20190122 07:48:32.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:32.295">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:32.288" endtime="20190122 07:48:32.297"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:32.169" endtime="20190122 07:48:32.300"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:32.437">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:32.463">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:32.515">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:32.518">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:32.431" endtime="20190122 07:48:32.519"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:32.536">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:32.523" endtime="20190122 07:48:32.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:32.551">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:32.539" endtime="20190122 07:48:32.553"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:32.423" endtime="20190122 07:48:32.556"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:32.697">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:32.723">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:32.744">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:32.747">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:32.687" endtime="20190122 07:48:32.748"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:32.761">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:32.752" endtime="20190122 07:48:32.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:32.773">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:32.765" endtime="20190122 07:48:32.774"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:32.679" endtime="20190122 07:48:32.777"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:32.914">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:32.942">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:32.963">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:32.966">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:32.908" endtime="20190122 07:48:32.967"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:32.980">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:32.971" endtime="20190122 07:48:32.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:32.991">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:32.984" endtime="20190122 07:48:32.993"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:32.900" endtime="20190122 07:48:32.996"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:33.134">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:33.160">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:33.181">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:33.184">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:33.127" endtime="20190122 07:48:33.185"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:33.198">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:33.189" endtime="20190122 07:48:33.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:33.210">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:33.202" endtime="20190122 07:48:33.211"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:33.119" endtime="20190122 07:48:33.214"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:33.352">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:33.378">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:33.398">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:33.401">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:33.345" endtime="20190122 07:48:33.402"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:33.415">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:33.406" endtime="20190122 07:48:33.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:33.432">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:33.419" endtime="20190122 07:48:33.433"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:33.337" endtime="20190122 07:48:33.438"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:33.603">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:33.641">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:33.662">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:33.665">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:33.587" endtime="20190122 07:48:33.666"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:33.680">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:33.671" endtime="20190122 07:48:33.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:33.692">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:33.684" endtime="20190122 07:48:33.693"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:33.563" endtime="20190122 07:48:33.696"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:33.834">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:33.885">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:33.912">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:33.914">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:33.827" endtime="20190122 07:48:33.915"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:33.929">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:33.920" endtime="20190122 07:48:33.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:33.940">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:33.932" endtime="20190122 07:48:33.941"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:33.819" endtime="20190122 07:48:33.944"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:34.117">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:34.165">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:34.206">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:34.209">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:34.076" endtime="20190122 07:48:34.211"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:34.245">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:34.227" endtime="20190122 07:48:34.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:34.267">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:34.249" endtime="20190122 07:48:34.269"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:34.067" endtime="20190122 07:48:34.272"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:34.412">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:34.438">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:34.460">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:34.463">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:34.406" endtime="20190122 07:48:34.463"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:34.477">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:34.468" endtime="20190122 07:48:34.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:34.493">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:34.481" endtime="20190122 07:48:34.494"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:34.398" endtime="20190122 07:48:34.497"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:34.635">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:34.662">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:34.683">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:34.686">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:34.628" endtime="20190122 07:48:34.687"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:34.700">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:34.691" endtime="20190122 07:48:34.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:34.712">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:34.704" endtime="20190122 07:48:34.713"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:34.620" endtime="20190122 07:48:34.716"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:34.853">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:34.880">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:34.900">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:34.903">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:34.847" endtime="20190122 07:48:34.904"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:34.917">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:34.908" endtime="20190122 07:48:34.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:34.928">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:34.920" endtime="20190122 07:48:34.929"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:34.839" endtime="20190122 07:48:34.932"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:35.071">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:35.098">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:35.119">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:35.123">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:35.064" endtime="20190122 07:48:35.125"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:35.137">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:35.129" endtime="20190122 07:48:35.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:35.149">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:35.141" endtime="20190122 07:48:35.151"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:35.056" endtime="20190122 07:48:35.154"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:35.292">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:35.317">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:35.338">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:35.341">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:35.285" endtime="20190122 07:48:35.342"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:35.355">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:35.346" endtime="20190122 07:48:35.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:35.374">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:35.358" endtime="20190122 07:48:35.375"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:35.277" endtime="20190122 07:48:35.378"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:35.516">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:35.543">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:35.564">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:35.567">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:35.509" endtime="20190122 07:48:35.568"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:35.581">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:35.572" endtime="20190122 07:48:35.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:35.593">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:35.585" endtime="20190122 07:48:35.594"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:35.501" endtime="20190122 07:48:35.597"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:35.735">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:35.760">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:35.782">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:35.785">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:35.728" endtime="20190122 07:48:35.786"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:35.798">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:35.789" endtime="20190122 07:48:35.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:35.810">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:35.802" endtime="20190122 07:48:35.811"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:35.720" endtime="20190122 07:48:35.814"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:35.954">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:35.980">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:36.001">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:36.004">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:35.947" endtime="20190122 07:48:36.005"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:36.018">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:36.009" endtime="20190122 07:48:36.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:36.030">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:36.021" endtime="20190122 07:48:36.031"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:35.938" endtime="20190122 07:48:36.034"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:36.172">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:36.198">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:36.219">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:36.222">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:36.165" endtime="20190122 07:48:36.223"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:36.237">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:36.228" endtime="20190122 07:48:36.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:36.252">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:36.241" endtime="20190122 07:48:36.254"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:36.157" endtime="20190122 07:48:36.257"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:36.394">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:36.420">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:36.441">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:36.443">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:36.387" endtime="20190122 07:48:36.445"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:36.457">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:36.448" endtime="20190122 07:48:36.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:36.469">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:36.461" endtime="20190122 07:48:36.471"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:36.380" endtime="20190122 07:48:36.474"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:36.611">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:36.637">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:36.658">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:36.661">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:36.605" endtime="20190122 07:48:36.662"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:36.679">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:36.668" endtime="20190122 07:48:36.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:36.691">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:36.683" endtime="20190122 07:48:36.692"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:36.597" endtime="20190122 07:48:36.695"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:36.833">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:36.858">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:36.880">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:36.883">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:36.826" endtime="20190122 07:48:36.884"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:36.897">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:36.887" endtime="20190122 07:48:36.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:36.908">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:36.900" endtime="20190122 07:48:36.910"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:36.818" endtime="20190122 07:48:36.913"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:37.051">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:37.078">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:37.098">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:37.101">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:37.045" endtime="20190122 07:48:37.102"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:37.115">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:37.106" endtime="20190122 07:48:37.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:37.130">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:37.119" endtime="20190122 07:48:37.132"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:37.036" endtime="20190122 07:48:37.135"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:37.272">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:37.299">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:37.320">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:37.322">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:37.266" endtime="20190122 07:48:37.323"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:37.337">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:37.327" endtime="20190122 07:48:37.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:37.349">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:37.341" endtime="20190122 07:48:37.350"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:37.258" endtime="20190122 07:48:37.353"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:37.492">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:37.519">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:37.539">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:37.542">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:37.486" endtime="20190122 07:48:37.543"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:37.556">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:37.547" endtime="20190122 07:48:37.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:37.568">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:37.560" endtime="20190122 07:48:37.569"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:37.477" endtime="20190122 07:48:37.573"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:37.711">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:37.736">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:37.780">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:37.787">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:37.704" endtime="20190122 07:48:37.788"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:37.816">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:37.807" endtime="20190122 07:48:37.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:37.848">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:37.831" endtime="20190122 07:48:37.849"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:37.696" endtime="20190122 07:48:37.852"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:37.990">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:38.016">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:38.038">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:38.041">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:37.983" endtime="20190122 07:48:38.042"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:38.054">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:38.046" endtime="20190122 07:48:38.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:38.078">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:38.058" endtime="20190122 07:48:38.080"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:37.976" endtime="20190122 07:48:38.083"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:38.221">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:38.247">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:38.269">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:38.272">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:38.214" endtime="20190122 07:48:38.273"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:38.287">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:38.277" endtime="20190122 07:48:38.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:38.298">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:38.290" endtime="20190122 07:48:38.300"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:38.206" endtime="20190122 07:48:38.302"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:38.440">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:38.466">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:38.488">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:38.491">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:38.434" endtime="20190122 07:48:38.491"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:38.504">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:38.495" endtime="20190122 07:48:38.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:38.522">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:38.513" endtime="20190122 07:48:38.523"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:38.426" endtime="20190122 07:48:38.526"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:38.664">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:38.690">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:38.715">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:38.718">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:38.657" endtime="20190122 07:48:38.719"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:38.765">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:38.739" endtime="20190122 07:48:38.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:38.781">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:38.770" endtime="20190122 07:48:38.782"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:38.649" endtime="20190122 07:48:38.785"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:38.923">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:38.949">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:38.970">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:38.973">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:38.916" endtime="20190122 07:48:38.974"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:38.987">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:38.978" endtime="20190122 07:48:38.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:38.998">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:38.991" endtime="20190122 07:48:39.000"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:38.909" endtime="20190122 07:48:39.003"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:39.145">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:39.171">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:39.194">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:39.197">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:39.138" endtime="20190122 07:48:39.198"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:39.210">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:39.202" endtime="20190122 07:48:39.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:39.222">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:39.214" endtime="20190122 07:48:39.224"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:39.126" endtime="20190122 07:48:39.227"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:39.365">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:39.392">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:39.413">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:39.416">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:39.358" endtime="20190122 07:48:39.417"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:39.430">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:39.421" endtime="20190122 07:48:39.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:39.443">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:39.434" endtime="20190122 07:48:39.445"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:39.350" endtime="20190122 07:48:39.448"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:39.586">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:39.613">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:39.633">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:39.639">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:39.579" endtime="20190122 07:48:39.640"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:39.653">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:39.644" endtime="20190122 07:48:39.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:39.667">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:39.657" endtime="20190122 07:48:39.669"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:39.571" endtime="20190122 07:48:39.672"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:39.832">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:39.859">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:39.880">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:39.882">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:39.807" endtime="20190122 07:48:39.883"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:39.896">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:39.887" endtime="20190122 07:48:39.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:39.908">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:39.900" endtime="20190122 07:48:39.909"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:39.799" endtime="20190122 07:48:39.912"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:40.056">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:40.083">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:40.103">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:40.106">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:40.049" endtime="20190122 07:48:40.107"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:40.120">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:40.111" endtime="20190122 07:48:40.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:40.132">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:40.124" endtime="20190122 07:48:40.133"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:40.035" endtime="20190122 07:48:40.136"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:40.324">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:40.378">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:40.408">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:40.411">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:40.273" endtime="20190122 07:48:40.412"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:40.437">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:40.416" endtime="20190122 07:48:40.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:40.462">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:40.440" endtime="20190122 07:48:40.463"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:40.264" endtime="20190122 07:48:40.477"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:40.615">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:40.641">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:40.663">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:40.666">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:40.608" endtime="20190122 07:48:40.667"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:40.680">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:40.671" endtime="20190122 07:48:40.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:40.692">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:40.684" endtime="20190122 07:48:40.694"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:40.600" endtime="20190122 07:48:40.697"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:40.835">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:40.861">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:40.883">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:40.885">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:40.828" endtime="20190122 07:48:40.886"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:40.900">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:40.890" endtime="20190122 07:48:40.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:40.912">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:40.903" endtime="20190122 07:48:40.914"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:40.820" endtime="20190122 07:48:40.917"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:41.058">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:41.085">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:41.106">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:41.109">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:41.048" endtime="20190122 07:48:41.110"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:41.124">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:41.114" endtime="20190122 07:48:41.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:41.135">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:41.127" endtime="20190122 07:48:41.137"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:41.040" endtime="20190122 07:48:41.140"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:41.278">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:41.309">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:41.329">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:41.332">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:41.271" endtime="20190122 07:48:41.333"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:41.346">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:41.337" endtime="20190122 07:48:41.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:41.358">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:41.350" endtime="20190122 07:48:41.359"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:41.263" endtime="20190122 07:48:41.362"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:41.500">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:41.526">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:41.547">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:41.550">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:41.493" endtime="20190122 07:48:41.551"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:41.564">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:41.555" endtime="20190122 07:48:41.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:41.575">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:41.568" endtime="20190122 07:48:41.577"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:41.485" endtime="20190122 07:48:41.580"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:41.721">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:41.748">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:41.768">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:41.771">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:41.714" endtime="20190122 07:48:41.772"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:41.785">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:41.776" endtime="20190122 07:48:41.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:41.797">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:41.789" endtime="20190122 07:48:41.798"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:41.706" endtime="20190122 07:48:41.801"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:41.939">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:41.970">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:41.992">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:41.995">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:41.932" endtime="20190122 07:48:41.996"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:42.009">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:42.000" endtime="20190122 07:48:42.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:42.021">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:42.013" endtime="20190122 07:48:42.022"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:41.924" endtime="20190122 07:48:42.026"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:42.164">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:42.192">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:42.212">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:42.215">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:42.157" endtime="20190122 07:48:42.216"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:42.229">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:42.220" endtime="20190122 07:48:42.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:42.241">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:42.233" endtime="20190122 07:48:42.242"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:42.149" endtime="20190122 07:48:42.245"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:42.383">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:42.409">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:42.430">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:42.433">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:42.376" endtime="20190122 07:48:42.434"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:42.447">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:42.438" endtime="20190122 07:48:42.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:42.458">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:42.451" endtime="20190122 07:48:42.460"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:42.368" endtime="20190122 07:48:42.463"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:42.601">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:42.627">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:42.647">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:42.650">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:42.594" endtime="20190122 07:48:42.651"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:42.664">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:42.655" endtime="20190122 07:48:42.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:42.675">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:42.667" endtime="20190122 07:48:42.677"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:42.586" endtime="20190122 07:48:42.680"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:42.849">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:42.914">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:42.947">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:42.950">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:42.819" endtime="20190122 07:48:42.951"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:42.965">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:42.954" endtime="20190122 07:48:42.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:42.976">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:42.969" endtime="20190122 07:48:42.978"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:42.811" endtime="20190122 07:48:42.981"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:43.118">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:43.146">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:43.166">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:43.169">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:43.112" endtime="20190122 07:48:43.170"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:43.183">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:43.174" endtime="20190122 07:48:43.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:43.195">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:43.187" endtime="20190122 07:48:43.196"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:43.104" endtime="20190122 07:48:43.199"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:43.441">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:43.505">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:43.546">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:43.549">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:43.401" endtime="20190122 07:48:43.550"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:43.572">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:43.563" endtime="20190122 07:48:43.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:43.610">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:43.593" endtime="20190122 07:48:43.612"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:43.352" endtime="20190122 07:48:43.624"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:43.762">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:43.830">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:43.852">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:43.855">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:43.755" endtime="20190122 07:48:43.856"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:43.895">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:43.876" endtime="20190122 07:48:43.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:43.920">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:43.899" endtime="20190122 07:48:43.921"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:43.747" endtime="20190122 07:48:43.924"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:44.067">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:44.093">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:44.113">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:44.117">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:44.060" endtime="20190122 07:48:44.118"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:44.135">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:44.122" endtime="20190122 07:48:44.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:44.147">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:44.139" endtime="20190122 07:48:44.148"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:44.050" endtime="20190122 07:48:44.151"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:44.313">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:44.397">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:44.439">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:44.442">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:44.292" endtime="20190122 07:48:44.443"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:44.486">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:44.468" endtime="20190122 07:48:44.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:44.513">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:44.490" endtime="20190122 07:48:44.515"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:44.283" endtime="20190122 07:48:44.526"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:44.690">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:44.744">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:44.785">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:44.788">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:44.675" endtime="20190122 07:48:44.789"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:44.803">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:44.793" endtime="20190122 07:48:44.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:44.815">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:44.807" endtime="20190122 07:48:44.817"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:44.658" endtime="20190122 07:48:44.820"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:44.959">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:44.986">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:45.008">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:45.011">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:44.951" endtime="20190122 07:48:45.013"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:45.026">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:45.017" endtime="20190122 07:48:45.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:45.038">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:45.030" endtime="20190122 07:48:45.039"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:44.943" endtime="20190122 07:48:45.043"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:45.183">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:45.210">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:45.231">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:45.234">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:45.176" endtime="20190122 07:48:45.235"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:45.253">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:45.238" endtime="20190122 07:48:45.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:45.265">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:45.257" endtime="20190122 07:48:45.266"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:45.166" endtime="20190122 07:48:45.269"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:45.409">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:45.435">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:45.456">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:45.459">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:45.402" endtime="20190122 07:48:45.460"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:45.472">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:45.464" endtime="20190122 07:48:45.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:45.484">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:45.476" endtime="20190122 07:48:45.485"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:45.394" endtime="20190122 07:48:45.488"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:45.626">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:45.652">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:45.673">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:45.676">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:45.619" endtime="20190122 07:48:45.678"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:45.690">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:45.681" endtime="20190122 07:48:45.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:45.702">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:45.694" endtime="20190122 07:48:45.703"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:45.612" endtime="20190122 07:48:45.706"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:45.844">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:45.871">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:45.892">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:45.895">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:45.837" endtime="20190122 07:48:45.896"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:45.909">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:45.900" endtime="20190122 07:48:45.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:45.920">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:45.912" endtime="20190122 07:48:45.922"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:45.830" endtime="20190122 07:48:45.925"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:46.063">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:46.090">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:46.111">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:46.114">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:46.056" endtime="20190122 07:48:46.115"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:46.131">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:46.119" endtime="20190122 07:48:46.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:46.143">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:46.135" endtime="20190122 07:48:46.144"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:46.048" endtime="20190122 07:48:46.147"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:46.284">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:46.341">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:46.369">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:46.372">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:46.278" endtime="20190122 07:48:46.373"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:46.396">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:46.376" endtime="20190122 07:48:46.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:46.420">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:46.412" endtime="20190122 07:48:46.439"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:46.270" endtime="20190122 07:48:46.442"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:46.579">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:46.605">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:46.626">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:46.629">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:46.573" endtime="20190122 07:48:46.630"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:46.642">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:46.634" endtime="20190122 07:48:46.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:46.654">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:46.646" endtime="20190122 07:48:46.655"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:46.565" endtime="20190122 07:48:46.658"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:46.796">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:46.822">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:46.843">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:46.846">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:46.789" endtime="20190122 07:48:46.847"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:46.860">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:46.851" endtime="20190122 07:48:46.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:46.871">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:46.863" endtime="20190122 07:48:46.873"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:46.782" endtime="20190122 07:48:46.876"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:47.013">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:47.039">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:47.059">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:47.062">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:47.007" endtime="20190122 07:48:47.063"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:47.079">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:47.067" endtime="20190122 07:48:47.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:47.091">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:47.083" endtime="20190122 07:48:47.093"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:46.999" endtime="20190122 07:48:47.096"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:47.234">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:47.260">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:47.281">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:47.284">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:47.227" endtime="20190122 07:48:47.285"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:47.298">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:47.289" endtime="20190122 07:48:47.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:47.310">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:47.302" endtime="20190122 07:48:47.311"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:47.219" endtime="20190122 07:48:47.314"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:47.452">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:47.478">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:47.498">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:47.502">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:47.445" endtime="20190122 07:48:47.502"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:47.515">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:47.506" endtime="20190122 07:48:47.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:47.526">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:47.519" endtime="20190122 07:48:47.528"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:47.437" endtime="20190122 07:48:47.531"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:47.668">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:47.695">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:47.716">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:47.719">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:47.662" endtime="20190122 07:48:47.719"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:47.732">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:47.723" endtime="20190122 07:48:47.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:47.744">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:47.736" endtime="20190122 07:48:47.745"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:47.654" endtime="20190122 07:48:47.748"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:47.886">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:47.912">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:47.932">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:47.935">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:47.879" endtime="20190122 07:48:47.936"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:47.953">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:47.940" endtime="20190122 07:48:47.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:47.964">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:47.957" endtime="20190122 07:48:47.966"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:47.871" endtime="20190122 07:48:47.969"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:48.106">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:48.133">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:48.153">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:48.156">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:48.100" endtime="20190122 07:48:48.157"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:48.170">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:48.161" endtime="20190122 07:48:48.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:48.181">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:48.173" endtime="20190122 07:48:48.183"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:48.091" endtime="20190122 07:48:48.186"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:48.324">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:48.350">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:48.370">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:48.373">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:48.317" endtime="20190122 07:48:48.375"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:48.388">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:48.379" endtime="20190122 07:48:48.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:48.400">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:48.392" endtime="20190122 07:48:48.402"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:48.309" endtime="20190122 07:48:48.405"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:48.542">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:48.568">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:48.589">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:48.591">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:48.535" endtime="20190122 07:48:48.593"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:48.606">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:48.597" endtime="20190122 07:48:48.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:48.617">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:48.610" endtime="20190122 07:48:48.619"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:48.528" endtime="20190122 07:48:48.622"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:48.759">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:48.785">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:48.806">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:48.810">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:48.753" endtime="20190122 07:48:48.811"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:48.827">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:48.814" endtime="20190122 07:48:48.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:48.839">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:48.831" endtime="20190122 07:48:48.840"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:48.745" endtime="20190122 07:48:48.843"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:48.981">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:49.039">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:49.102">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:49.109">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:48:48.974" endtime="20190122 07:48:49.110"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:49.133">${resp} = </msg>
<status status="PASS" starttime="20190122 07:48:49.118" endtime="20190122 07:48:49.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:48:49.162">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 07:48:49.145" endtime="20190122 07:48:49.164"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 07:48:48.966" endtime="20190122 07:48:49.171"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:49.380">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 07:48:49.566">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:49.692">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:49.698">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:48:49.318" endtime="20190122 07:48:49.699"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:49.754">${resp} = 297: usb_max: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast state DOWN group default qlen 1000
    inet 192.168.1.100/24 brd 192.168.1.255 scope global usb_max</msg>
<status status="PASS" starttime="20190122 07:48:49.731" endtime="20190122 07:48:49.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:49.758" endtime="20190122 07:48:49.764"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190122 07:48:49.300" endtime="20190122 07:48:49.767"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:24.278" endtime="20190122 07:48:49.768"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:48:49.770">${STATUS} = True</msg>
<status status="PASS" starttime="20190122 07:48:24.271" endtime="20190122 07:48:49.771"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DUT ready status: ${STATUS}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:49.774" endtime="20190122 07:48:49.781"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3 seconds</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:52.794">Slept 3 seconds</msg>
<status status="PASS" starttime="20190122 07:48:49.784" endtime="20190122 07:48:52.797"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:48:52.801">${status} = True</msg>
<status status="PASS" starttime="20190122 07:48:24.243" endtime="20190122 07:48:52.802"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Device does not exist</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:52.804" endtime="20190122 07:48:52.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:52.831">"Setup ssh"</msg>
<status status="PASS" starttime="20190122 07:48:52.817" endtime="20190122 07:48:52.833"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw name="Open Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:52.852">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status status="PASS" starttime="20190122 07:48:52.845" endtime="20190122 07:48:55.007"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:52.837" endtime="20190122 07:48:55.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh done!"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:55.020">"Setup ssh done!"</msg>
<status status="PASS" starttime="20190122 07:48:55.013" endtime="20190122 07:48:55.023"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:17.790" endtime="20190122 07:48:55.025"></status>
</kw>
<kw name="cansend_500k">
<doc>Can 3 send message test with baudrate 500k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:55.054">Start test with can2 and bitrate: 500000</msg>
<status status="PASS" starttime="20190122 07:48:55.047" endtime="20190122 07:48:55.056"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:55.068" endtime="20190122 07:48:55.076"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:55.085">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:48:55.115">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:55.190">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:55.194">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:48:55.079" endtime="20190122 07:48:55.195"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:55.198" endtime="20190122 07:48:55.207"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:55.218">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190122 07:48:55.246">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:55.303">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:55.306">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:48:55.210" endtime="20190122 07:48:55.307"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:55.311" endtime="20190122 07:48:55.321"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:55.330">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:48:55.358">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:55.458">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:55.461">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:48:55.324" endtime="20190122 07:48:55.462"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:55.475" endtime="20190122 07:48:55.501"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:48:55.058" endtime="20190122 07:48:55.504"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:55.533" endtime="20190122 07:48:55.542"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:55.555">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:48:55.635">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:48:55.637">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:48:55.546" endtime="20190122 07:48:55.638"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:56.152">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:48:55.641" endtime="20190122 07:48:56.155"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:56.165">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190122 07:48:56.205">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:48:56.207">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:48:56.158" endtime="20190122 07:48:56.208"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:56.737">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:48:56.211" endtime="20190122 07:48:56.739"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:56.757">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:48:56.861">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:48:56.864">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:48:56.742" endtime="20190122 07:48:56.865"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:57.389">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:48:56.867" endtime="20190122 07:48:57.392"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190122 07:48:55.507" endtime="20190122 07:48:57.394"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:57.397" endtime="20190122 07:48:57.611"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:57.614" endtime="20190122 07:48:57.661"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:57.664" endtime="20190122 07:48:57.670"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:57.673" endtime="20190122 07:48:57.749"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:57.752" endtime="20190122 07:48:57.781"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:58.306">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:48:57.792" endtime="20190122 07:48:58.308"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:58.311" endtime="20190122 07:48:58.330"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:58.343">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:48:58.426">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:48:58.333" endtime="20190122 07:48:58.427"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:58.458">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:48:58.541">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:48:58.435" endtime="20190122 07:48:58.542"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:58.571">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:48:58.650">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:48:58.554" endtime="20190122 07:48:58.661"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:59.193">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:48:58.664" endtime="20190122 07:48:59.195"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.310">${res_list} = [{'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:48:58.429158', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:48:58.545192', 'id': '0x1a'}, {'payload': '11...</msg>
<status status="PASS" starttime="20190122 07:48:59.202" endtime="20190122 07:48:59.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:59.330">[{'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:48:58.429158', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:48:58.545192', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:48:58.657799', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190122 07:48:59.325" endtime="20190122 07:48:59.343"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.351">Length is 3</msg>
<msg level="INFO" timestamp="20190122 07:48:59.365">${MSG_LENGTH} = 3</msg>
<status status="PASS" starttime="20190122 07:48:59.346" endtime="20190122 07:48:59.366"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:59.390" endtime="20190122 07:48:59.397"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:59.370" endtime="20190122 07:48:59.398"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.457">Length is 3</msg>
<msg level="INFO" timestamp="20190122 07:48:59.459">${count} = 3</msg>
<status status="PASS" starttime="20190122 07:48:59.445" endtime="20190122 07:48:59.460"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:59.463" endtime="20190122 07:48:59.478"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.492">${msgcount} = 0</msg>
<status status="PASS" starttime="20190122 07:48:59.482" endtime="20190122 07:48:59.493"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:48:58.429158', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.509">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:48:59.503" endtime="20190122 07:48:59.510"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.521">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:48:59.514" endtime="20190122 07:48:59.522"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.533">${msgcount} = 1</msg>
<status status="PASS" starttime="20190122 07:48:59.525" endtime="20190122 07:48:59.534"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:59.500" endtime="20190122 07:48:59.535"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:48:58.545192', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.557">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:48:59.539" endtime="20190122 07:48:59.558"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.576">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:48:59.565" endtime="20190122 07:48:59.577"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.588">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:48:59.580" endtime="20190122 07:48:59.589"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:59.536" endtime="20190122 07:48:59.590"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:48:58.657799', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.600">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:48:59.594" endtime="20190122 07:48:59.601"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.612">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:48:59.604" endtime="20190122 07:48:59.612"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.624">${msgcount} = 3</msg>
<status status="PASS" starttime="20190122 07:48:59.615" endtime="20190122 07:48:59.625"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:59.591" endtime="20190122 07:48:59.626"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:59.494" endtime="20190122 07:48:59.626"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:59.629" endtime="20190122 07:48:59.636"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:59.639" endtime="20190122 07:48:59.646"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:59.421" endtime="20190122 07:48:59.650"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:59.401" endtime="20190122 07:48:59.651"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status status="PASS" starttime="20190122 07:48:55.037" endtime="20190122 07:48:59.653"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:55.031" endtime="20190122 07:48:59.656"></status>
</kw>
<kw name="can_loopback_500k">
<doc>Can 3 loopback test with baudrate 500k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${500000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:48:59.676">Can channel loopback: can2 with bitrate: 500000</msg>
<status status="PASS" starttime="20190122 07:48:59.671" endtime="20190122 07:48:59.679"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:59.691" endtime="20190122 07:48:59.698"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.707">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:48:59.736">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:59.811">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:59.814">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:48:59.701" endtime="20190122 07:48:59.815"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:59.819" endtime="20190122 07:48:59.828"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.840">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190122 07:48:59.869">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:48:59.930">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:48:59.933">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:48:59.831" endtime="20190122 07:48:59.934"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:48:59.938" endtime="20190122 07:48:59.947"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:48:59.957">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:48:59.989">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:00.144">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:00.147">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:48:59.951" endtime="20190122 07:49:00.148"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:00.152" endtime="20190122 07:49:00.174"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:48:59.681" endtime="20190122 07:49:00.177"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:00.193" endtime="20190122 07:49:00.199"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:00.208">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:49:00.250">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:00.253">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:00.202" endtime="20190122 07:49:00.253"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:00.768">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:00.256" endtime="20190122 07:49:00.770"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:00.779">Sending command to DUT ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190122 07:49:00.829">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:00.831">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:00.773" endtime="20190122 07:49:00.832"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:01.346">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:00.835" endtime="20190122 07:49:01.349"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:01.361">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:49:01.411">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:01.414">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:01.352" endtime="20190122 07:49:01.415"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:01.929">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:01.418" endtime="20190122 07:49:01.931"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:00.179" endtime="20190122 07:49:01.933"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:01.942">Starting process:
ip -details link show can2</msg>
<msg level="INFO" timestamp="20190122 07:49:01.970">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:01.983">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:01.986">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:01.937" endtime="20190122 07:49:01.987"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:01.991" endtime="20190122 07:49:01.999"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:02.008">Sending command to DUT ip -details link show can2</msg>
<msg level="INFO" timestamp="20190122 07:49:02.089">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 500000 sample-point 0.875  	  tq 125 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg level="INFO" timestamp="20190122 07:49:02.092">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 500000 sample-poi...</msg>
<status status="PASS" starttime="20190122 07:49:02.002" endtime="20190122 07:49:02.093"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:02.096" endtime="20190122 07:49:02.108"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:02.116">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190122 07:49:02.222">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:02.225">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:02.111" endtime="20190122 07:49:02.225"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:02.228" endtime="20190122 07:49:02.237"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:03.246">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:49:02.239" endtime="20190122 07:49:03.248"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:03.285">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg level="INFO" timestamp="20190122 07:49:03.361">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:03.363">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:03.251" endtime="20190122 07:49:03.364"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:03.369" endtime="20190122 07:49:03.398"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:03.905">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:03.401" endtime="20190122 07:49:03.907"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:03.914">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190122 07:49:03.982">Returning data (534 root      0:00 candump -t a -D -B can2 can2   535 root      0:00 sh -c ps aux | grep candump   537 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190122 07:49:03.985">${ret} = ('534 root      0:00 candump -t a -D -B can2 can2   535 root      0:00 sh -c ps aux | grep candump   537 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190122 07:49:03.910" endtime="20190122 07:49:03.986"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:03.989" endtime="20190122 07:49:04.002"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:04.005" endtime="20190122 07:49:04.249"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:04.256" endtime="20190122 07:49:04.424"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:04.431" endtime="20190122 07:49:04.563"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:05.095">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:04.578" endtime="20190122 07:49:05.097"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:05.133">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg level="INFO" timestamp="20190122 07:49:05.212">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:05.252">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:05.255">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:05.108" endtime="20190122 07:49:05.256"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:05.268" endtime="20190122 07:49:05.318"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:05.445">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:49:05.597">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:05.626">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:05.641">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:05.330" endtime="20190122 07:49:05.642"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:05.681" endtime="20190122 07:49:05.711"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:05.736">Sending command to DUT cat /root/candump.txt</msg>
<msg level="INFO" timestamp="20190122 07:49:05.829">Returning data ((1548081061.387537)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548081061.747101)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg level="INFO" timestamp="20190122 07:49:05.842">${ret} = ('(1548081061.387537)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548081061.747101)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status status="PASS" starttime="20190122 07:49:05.722" endtime="20190122 07:49:05.868"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:05.883" endtime="20190122 07:49:05.918"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:06.445">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:05.929" endtime="20190122 07:49:06.447"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.553">${res_list} = [{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:05.261370', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:05.275742', 'id': '0x18ef7777'}, {'p...</msg>
<status status="PASS" starttime="20190122 07:49:06.462" endtime="20190122 07:49:06.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:06.569">[{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:05.261370', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:05.275742', 'id': '0x18ef7777'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:05.617529', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:05.637270', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190122 07:49:06.561" endtime="20190122 07:49:06.577"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.593">Length is 4</msg>
<msg level="INFO" timestamp="20190122 07:49:06.595">${MSG_LENGTH} = 4</msg>
<status status="PASS" starttime="20190122 07:49:06.584" endtime="20190122 07:49:06.595"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:06.616" endtime="20190122 07:49:06.626"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:06.602" endtime="20190122 07:49:06.627"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.682">Length is 4</msg>
<msg level="INFO" timestamp="20190122 07:49:06.684">${count} = 4</msg>
<status status="PASS" starttime="20190122 07:49:06.677" endtime="20190122 07:49:06.685"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:06.696" endtime="20190122 07:49:06.706"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.721">${msgcount} = 0</msg>
<status status="PASS" starttime="20190122 07:49:06.712" endtime="20190122 07:49:06.722"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:05.261370', 'id': '0x18ef7777'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.753">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190122 07:49:06.738" endtime="20190122 07:49:06.754"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.771">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:06.761" endtime="20190122 07:49:06.771"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.806">${msgcount} = 1</msg>
<status status="PASS" starttime="20190122 07:49:06.782" endtime="20190122 07:49:06.807"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:06.731" endtime="20190122 07:49:06.808"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:05.275742', 'id': '0x18ef7777'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.838">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190122 07:49:06.828" endtime="20190122 07:49:06.839"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.853">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:06.843" endtime="20190122 07:49:06.858"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.882">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:06.861" endtime="20190122 07:49:06.883"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:06.817" endtime="20190122 07:49:06.883"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:05.617529', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.905">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:06.888" endtime="20190122 07:49:06.906"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.923">${count} = 0</msg>
<status status="PASS" starttime="20190122 07:49:06.913" endtime="20190122 07:49:06.923"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.933">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:06.926" endtime="20190122 07:49:06.933"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:06.885" endtime="20190122 07:49:06.935"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:05.637270', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.947">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:06.942" endtime="20190122 07:49:06.948"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.970">${count} = 0</msg>
<status status="PASS" starttime="20190122 07:49:06.951" endtime="20190122 07:49:06.972"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:06.994">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:06.979" endtime="20190122 07:49:06.995"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:06.938" endtime="20190122 07:49:07.000"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:06.723" endtime="20190122 07:49:07.002"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:07.009" endtime="20190122 07:49:07.018"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:07.026" endtime="20190122 07:49:07.035"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:06.653" endtime="20190122 07:49:07.039"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:06.634" endtime="20190122 07:49:07.040"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:07.047">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190122 07:49:07.138">Returning data (534 root      0:00 candump -t a -D -B can2 can2   548 root      0:00 sh -c ps aux | grep candump   550 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190122 07:49:07.145">${ret} = ('534 root      0:00 candump -t a -D -B can2 can2   548 root      0:00 sh -c ps aux | grep candump   550 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190122 07:49:07.043" endtime="20190122 07:49:07.146"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:07.149" endtime="20190122 07:49:07.179"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:07.187">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190122 07:49:07.279">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:07.281">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:07.182" endtime="20190122 07:49:07.282"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:08.289">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:49:07.285" endtime="20190122 07:49:08.291"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:59.663" endtime="20190122 07:49:08.298"></status>
</kw>
<status status="PASS" starttime="20190122 07:48:59.658" endtime="20190122 07:49:08.300"></status>
</kw>
<kw name="cansend_250k">
<doc>Can 3 send message test with baudrate 250k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:08.351">Start test with can2 and bitrate: 250000</msg>
<status status="PASS" starttime="20190122 07:49:08.337" endtime="20190122 07:49:08.357"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:08.381" endtime="20190122 07:49:08.397"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:08.415">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:49:08.463">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:08.569">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:08.572">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:08.404" endtime="20190122 07:49:08.573"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:08.577" endtime="20190122 07:49:08.602"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:08.622">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190122 07:49:08.709">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:08.822">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:08.825">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:08.606" endtime="20190122 07:49:08.826"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:08.834" endtime="20190122 07:49:08.852"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:08.874">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:49:08.925">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:09.013">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:09.017">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:08.855" endtime="20190122 07:49:09.018"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:09.022" endtime="20190122 07:49:09.031"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:08.359" endtime="20190122 07:49:09.033"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:09.058" endtime="20190122 07:49:09.064"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:09.074">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:49:09.117">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:09.119">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:09.067" endtime="20190122 07:49:09.121"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:09.635">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:09.123" endtime="20190122 07:49:09.637"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:09.658">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190122 07:49:09.728">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:09.730">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:09.640" endtime="20190122 07:49:09.731"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:10.256">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:09.735" endtime="20190122 07:49:10.259"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:10.268">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:49:10.329">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:10.331">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:10.262" endtime="20190122 07:49:10.332"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:10.863">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:10.337" endtime="20190122 07:49:10.865"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:09.036" endtime="20190122 07:49:10.867"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:10.871" endtime="20190122 07:49:11.180"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:11.183" endtime="20190122 07:49:11.305"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:11.308" endtime="20190122 07:49:11.314"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:11.317" endtime="20190122 07:49:11.368"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:11.372" endtime="20190122 07:49:11.386"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:11.899">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:11.393" endtime="20190122 07:49:11.900"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:11.903" endtime="20190122 07:49:11.925"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:11.939">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:49:11.996">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:49:11.928" endtime="20190122 07:49:11.998"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:12.037">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:49:12.097">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:49:12.010" endtime="20190122 07:49:12.099"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:12.136">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:49:12.208">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:49:12.114" endtime="20190122 07:49:12.215"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:12.745">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:12.231" endtime="20190122 07:49:12.747"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:12.838">${res_list} = [{'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:12.005427', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:12.106778', 'id': '0x1a'}, {'payload': '11...</msg>
<status status="PASS" starttime="20190122 07:49:12.753" endtime="20190122 07:49:12.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:12.848">[{'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:12.005427', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:12.106778', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:12.217433', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190122 07:49:12.843" endtime="20190122 07:49:12.851"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:12.859">Length is 3</msg>
<msg level="INFO" timestamp="20190122 07:49:12.862">${MSG_LENGTH} = 3</msg>
<status status="PASS" starttime="20190122 07:49:12.854" endtime="20190122 07:49:12.862"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:12.871" endtime="20190122 07:49:12.878"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:12.866" endtime="20190122 07:49:12.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:12.906">Length is 3</msg>
<msg level="INFO" timestamp="20190122 07:49:12.908">${count} = 3</msg>
<status status="PASS" starttime="20190122 07:49:12.901" endtime="20190122 07:49:12.911"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:12.914" endtime="20190122 07:49:12.921"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:12.933">${msgcount} = 0</msg>
<status status="PASS" starttime="20190122 07:49:12.924" endtime="20190122 07:49:12.934"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:12.005427', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:12.948">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:12.941" endtime="20190122 07:49:12.949"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:12.959">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:12.951" endtime="20190122 07:49:12.960"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:12.970">${msgcount} = 1</msg>
<status status="PASS" starttime="20190122 07:49:12.963" endtime="20190122 07:49:12.971"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:12.938" endtime="20190122 07:49:12.972"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:12.106778', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:12.983">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:12.976" endtime="20190122 07:49:12.983"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:12.994">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:12.987" endtime="20190122 07:49:12.995"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:13.006">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:12.998" endtime="20190122 07:49:13.006"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:12.973" endtime="20190122 07:49:13.007"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:12.217433', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:13.018">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:13.012" endtime="20190122 07:49:13.018"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:13.029">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:13.021" endtime="20190122 07:49:13.030"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:13.041">${msgcount} = 3</msg>
<status status="PASS" starttime="20190122 07:49:13.033" endtime="20190122 07:49:13.049"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:13.009" endtime="20190122 07:49:13.051"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:12.935" endtime="20190122 07:49:13.051"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:13.058" endtime="20190122 07:49:13.071"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:13.075" endtime="20190122 07:49:13.082"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:12.892" endtime="20190122 07:49:13.085"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:12.885" endtime="20190122 07:49:13.086"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:08.321" endtime="20190122 07:49:13.089"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:08.307" endtime="20190122 07:49:13.092"></status>
</kw>
<kw name="can_loopback_250k">
<doc>Can 3 loopback test with baudrate 250k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:13.113">Can channel loopback: can2 with bitrate: 250000</msg>
<status status="PASS" starttime="20190122 07:49:13.107" endtime="20190122 07:49:13.115"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:13.127" endtime="20190122 07:49:13.135"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:13.144">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:49:13.173">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:13.305">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:13.308">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:13.138" endtime="20190122 07:49:13.309"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:13.313" endtime="20190122 07:49:13.346"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:13.367">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190122 07:49:13.403">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:13.453">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:13.457">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:13.349" endtime="20190122 07:49:13.458"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:13.462" endtime="20190122 07:49:13.470"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:13.481">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:49:13.518">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:13.651">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:13.654">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:13.473" endtime="20190122 07:49:13.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:13.659" endtime="20190122 07:49:13.668"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:13.117" endtime="20190122 07:49:13.671"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:13.684" endtime="20190122 07:49:13.691"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:13.700">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:49:13.753">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:13.756">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:13.693" endtime="20190122 07:49:13.757"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:14.272">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:13.760" endtime="20190122 07:49:14.275"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:14.286">Sending command to DUT ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190122 07:49:14.337">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:14.341">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:14.279" endtime="20190122 07:49:14.342"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:14.855">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:14.350" endtime="20190122 07:49:14.857"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:14.866">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:49:14.921">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:14.924">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:14.860" endtime="20190122 07:49:14.925"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:15.439">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:14.928" endtime="20190122 07:49:15.442"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:13.674" endtime="20190122 07:49:15.444"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:15.453">Starting process:
ip -details link show can2</msg>
<msg level="INFO" timestamp="20190122 07:49:15.482">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:15.494">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:15.497">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:15.447" endtime="20190122 07:49:15.498"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:15.502" endtime="20190122 07:49:15.511"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:15.519">Sending command to DUT ip -details link show can2</msg>
<msg level="INFO" timestamp="20190122 07:49:15.571">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 250000 sample-point 0.875  	  tq 250 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg level="INFO" timestamp="20190122 07:49:15.574">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 250000 sample-poi...</msg>
<status status="PASS" starttime="20190122 07:49:15.514" endtime="20190122 07:49:15.575"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:15.578" endtime="20190122 07:49:15.592"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:15.598">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190122 07:49:15.704">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:15.706">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:15.595" endtime="20190122 07:49:15.707"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:15.710" endtime="20190122 07:49:15.734"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:16.742">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:49:15.737" endtime="20190122 07:49:16.744"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:16.753">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg level="INFO" timestamp="20190122 07:49:16.793">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:16.795">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:16.747" endtime="20190122 07:49:16.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:16.799" endtime="20190122 07:49:16.812"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:17.318">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:16.815" endtime="20190122 07:49:17.320"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:17.327">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190122 07:49:17.415">Returning data (580 root      0:00 candump -t a -D -B can2 can2   581 root      0:00 sh -c ps aux | grep candump   583 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190122 07:49:17.417">${ret} = ('580 root      0:00 candump -t a -D -B can2 can2   581 root      0:00 sh -c ps aux | grep candump   583 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190122 07:49:17.323" endtime="20190122 07:49:17.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:17.421" endtime="20190122 07:49:17.434"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:17.437" endtime="20190122 07:49:17.684"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:17.687" endtime="20190122 07:49:17.777"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:17.781" endtime="20190122 07:49:17.863"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:18.397">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:17.870" endtime="20190122 07:49:18.399"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:18.421">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg level="INFO" timestamp="20190122 07:49:18.475">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:18.491">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:18.494">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:18.406" endtime="20190122 07:49:18.495"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:18.509" endtime="20190122 07:49:18.535"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:18.553">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:49:18.601">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:18.628">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:18.631">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:18.538" endtime="20190122 07:49:18.632"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:18.640" endtime="20190122 07:49:18.661"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:18.677">Sending command to DUT cat /root/candump.txt</msg>
<msg level="INFO" timestamp="20190122 07:49:18.748">Returning data ((1548143358.472427)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548143358.602237)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg level="INFO" timestamp="20190122 07:49:18.751">${ret} = ('(1548143358.472427)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548143358.602237)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status status="PASS" starttime="20190122 07:49:18.668" endtime="20190122 07:49:18.757"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:18.764" endtime="20190122 07:49:18.822"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:19.377">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:18.828" endtime="20190122 07:49:19.379"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.515">${res_list} = [{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:18.500285', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:18.513107', 'id': '0x18ef7777'}, {'p...</msg>
<status status="PASS" starttime="20190122 07:49:19.386" endtime="20190122 07:49:19.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:19.527">[{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:18.500285', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:18.513107', 'id': '0x18ef7777'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:18.619654', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:18.633258', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190122 07:49:19.519" endtime="20190122 07:49:19.530"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.537">Length is 4</msg>
<msg level="INFO" timestamp="20190122 07:49:19.539">${MSG_LENGTH} = 4</msg>
<status status="PASS" starttime="20190122 07:49:19.533" endtime="20190122 07:49:19.540"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:19.550" endtime="20190122 07:49:19.556"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:19.545" endtime="20190122 07:49:19.557"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.584">Length is 4</msg>
<msg level="INFO" timestamp="20190122 07:49:19.586">${count} = 4</msg>
<status status="PASS" starttime="20190122 07:49:19.580" endtime="20190122 07:49:19.587"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:19.590" endtime="20190122 07:49:19.595"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.603">${msgcount} = 0</msg>
<status status="PASS" starttime="20190122 07:49:19.598" endtime="20190122 07:49:19.604"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:18.500285', 'id': '0x18ef7777'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.617">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190122 07:49:19.612" endtime="20190122 07:49:19.618"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.629">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:19.621" endtime="20190122 07:49:19.630"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.639">${msgcount} = 1</msg>
<status status="PASS" starttime="20190122 07:49:19.633" endtime="20190122 07:49:19.640"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:19.609" endtime="20190122 07:49:19.640"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:18.513107', 'id': '0x18ef7777'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.650">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190122 07:49:19.645" endtime="20190122 07:49:19.651"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.662">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:19.654" endtime="20190122 07:49:19.662"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.672">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:19.665" endtime="20190122 07:49:19.673"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:19.642" endtime="20190122 07:49:19.673"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:18.619654', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.683">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:19.678" endtime="20190122 07:49:19.684"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.694">${count} = 0</msg>
<status status="PASS" starttime="20190122 07:49:19.687" endtime="20190122 07:49:19.695"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.705">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:19.699" endtime="20190122 07:49:19.706"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:19.675" endtime="20190122 07:49:19.707"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:18.633258', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.716">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:19.711" endtime="20190122 07:49:19.717"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.727">${count} = 0</msg>
<status status="PASS" starttime="20190122 07:49:19.720" endtime="20190122 07:49:19.728"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.738">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:19.731" endtime="20190122 07:49:19.739"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:19.708" endtime="20190122 07:49:19.739"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:19.605" endtime="20190122 07:49:19.740"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:19.743" endtime="20190122 07:49:19.748"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:19.751" endtime="20190122 07:49:19.757"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:19.568" endtime="20190122 07:49:19.761"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:19.560" endtime="20190122 07:49:19.762"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.769">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190122 07:49:19.845">Returning data (580 root      0:00 candump -t a -D -B can2 can2   585 root      0:00 sh -c ps aux | grep candump   587 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190122 07:49:19.847">${ret} = ('580 root      0:00 candump -t a -D -B can2 can2   585 root      0:00 sh -c ps aux | grep candump   587 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190122 07:49:19.765" endtime="20190122 07:49:19.848"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:19.851" endtime="20190122 07:49:19.863"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:19.870">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190122 07:49:19.971">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:19.974">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:19.866" endtime="20190122 07:49:19.974"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:20.981">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:49:19.977" endtime="20190122 07:49:20.983"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:13.099" endtime="20190122 07:49:20.986"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:13.094" endtime="20190122 07:49:20.988"></status>
</kw>
<kw name="cansend_125k">
<doc>Can 3 send message test with baudrate 125k</doc>
<kw name="cansend_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test with ${CAN_CH} and bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:21.025">Start test with can2 and bitrate: 125000</msg>
<status status="PASS" starttime="20190122 07:49:21.019" endtime="20190122 07:49:21.037"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:21.086" endtime="20190122 07:49:21.104"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:21.133">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:49:21.183">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:21.308">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:21.311">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:21.107" endtime="20190122 07:49:21.312"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:21.316" endtime="20190122 07:49:21.329"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:21.339">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190122 07:49:21.378">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:21.430">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:21.433">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:21.332" endtime="20190122 07:49:21.434"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:21.438" endtime="20190122 07:49:21.447"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:21.457">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:49:21.487">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:21.597">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:21.600">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:21.450" endtime="20190122 07:49:21.601"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:21.604" endtime="20190122 07:49:21.613"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:21.039" endtime="20190122 07:49:21.616"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:21.629" endtime="20190122 07:49:21.635"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:21.644">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:49:21.697">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:21.699">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:21.638" endtime="20190122 07:49:21.700"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:22.229">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:21.703" endtime="20190122 07:49:22.232"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:22.252">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190122 07:49:22.313">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:22.316">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:22.235" endtime="20190122 07:49:22.317"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:22.839">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:22.319" endtime="20190122 07:49:22.841"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:22.850">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:49:22.903">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:22.906">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:22.844" endtime="20190122 07:49:22.907"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:23.424">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:22.910" endtime="20190122 07:49:23.430"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:21.618" endtime="20190122 07:49:23.432"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:23.435" endtime="20190122 07:49:23.615"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:23.618" endtime="20190122 07:49:23.713"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Create socket .. done</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:23.716" endtime="20190122 07:49:23.739"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:23.742" endtime="20190122 07:49:23.825"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>start sniffing</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:23.828" endtime="20190122 07:49:23.859"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:24.375">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:23.862" endtime="20190122 07:49:24.377"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message: ${CAN_FULLMSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:24.380" endtime="20190122 07:49:24.401"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:24.415">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:49:24.468">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:49:24.405" endtime="20190122 07:49:24.474"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:24.508">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:49:24.571">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:49:24.494" endtime="20190122 07:49:24.579"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:24.607">Sending command to DUT cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:49:24.706">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:49:24.597" endtime="20190122 07:49:24.708"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:25.260">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:24.711" endtime="20190122 07:49:25.263"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.326">${res_list} = [{'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:24.480727', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:24.583590', 'id': '0x1a'}, {'payload': '11...</msg>
<status status="PASS" starttime="20190122 07:49:25.270" endtime="20190122 07:49:25.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:25.337">[{'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:24.480727', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:24.583590', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:24.700393', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190122 07:49:25.331" endtime="20190122 07:49:25.341"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.349">Length is 3</msg>
<msg level="INFO" timestamp="20190122 07:49:25.351">${MSG_LENGTH} = 3</msg>
<status status="PASS" starttime="20190122 07:49:25.344" endtime="20190122 07:49:25.352"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:25.361" endtime="20190122 07:49:25.367"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:25.355" endtime="20190122 07:49:25.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: Expected CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_1}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.394">Length is 3</msg>
<msg level="INFO" timestamp="20190122 07:49:25.397">${count} = 3</msg>
<status status="PASS" starttime="20190122 07:49:25.389" endtime="20190122 07:49:25.398"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:25.400" endtime="20190122 07:49:25.410"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.419">${msgcount} = 0</msg>
<status status="PASS" starttime="20190122 07:49:25.413" endtime="20190122 07:49:25.420"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:24.480727', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.434">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:25.427" endtime="20190122 07:49:25.434"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.445">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:25.437" endtime="20190122 07:49:25.446"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.456">${msgcount} = 1</msg>
<status status="PASS" starttime="20190122 07:49:25.449" endtime="20190122 07:49:25.457"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:25.424" endtime="20190122 07:49:25.457"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:24.583590', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.468">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:25.462" endtime="20190122 07:49:25.469"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.479">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:25.472" endtime="20190122 07:49:25.480"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.491">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:25.483" endtime="20190122 07:49:25.492"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:25.459" endtime="20190122 07:49:25.492"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:24.700393', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.503">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:25.497" endtime="20190122 07:49:25.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.515">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:25.507" endtime="20190122 07:49:25.515"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.526">${msgcount} = 3</msg>
<status status="PASS" starttime="20190122 07:49:25.518" endtime="20190122 07:49:25.526"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:25.494" endtime="20190122 07:49:25.527"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:25.421" endtime="20190122 07:49:25.528"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:25.530" endtime="20190122 07:49:25.537"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:25.540" endtime="20190122 07:49:25.559"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:25.379" endtime="20190122 07:49:25.563"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:25.372" endtime="20190122 07:49:25.571"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:20.996" endtime="20190122 07:49:25.574"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:20.990" endtime="20190122 07:49:25.577"></status>
</kw>
<kw name="can_loopback_125k">
<doc>Can 3 loopback test with baudrate 125k</doc>
<kw name="can_loopback_test">
<arguments>
<arg>${CAN_2}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Can channel loopback: ${CAN_CH} with bitrate: ${BITRATE}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:25.598">Can channel loopback: can2 with bitrate: 125000</msg>
<status status="PASS" starttime="20190122 07:49:25.593" endtime="20190122 07:49:25.601"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:25.614" endtime="20190122 07:49:25.621"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.630">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:49:25.659">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:25.735">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:25.738">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:25.624" endtime="20190122 07:49:25.739"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:25.743" endtime="20190122 07:49:25.751"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.761">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190122 07:49:25.790">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:25.848">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:25.851">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:25.754" endtime="20190122 07:49:25.852"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:25.856" endtime="20190122 07:49:25.864"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:25.874">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:49:25.904">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:26.000">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:26.004">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:25.867" endtime="20190122 07:49:26.005"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:26.015" endtime="20190122 07:49:26.026"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:25.603" endtime="20190122 07:49:26.029"></status>
</kw>
<kw name="set_can_channel_device">
<doc>Set can channel bitrate on NAD</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set can channel bitrate on NAD</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:26.042" endtime="20190122 07:49:26.048"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} down</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:26.057">Sending command to DUT ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:49:26.118">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:26.121">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:26.051" endtime="20190122 07:49:26.122"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:26.636">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:26.125" endtime="20190122 07:49:26.638"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} type can bitrate ${bitrate}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:26.648">Sending command to DUT ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190122 07:49:26.700">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:26.703">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:26.641" endtime="20190122 07:49:26.704"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:27.218">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:26.707" endtime="20190122 07:49:27.221"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip link set ${CAN_CH} up</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:27.229">Sending command to DUT ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:49:27.285">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:27.288">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:27.223" endtime="20190122 07:49:27.289"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:27.801">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:27.292" endtime="20190122 07:49:27.803"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190122 07:49:26.031" endtime="20190122 07:49:27.806"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:27.815">Starting process:
ip -details link show can2</msg>
<msg level="INFO" timestamp="20190122 07:49:27.845">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:27.858">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:27.861">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:27.809" endtime="20190122 07:49:27.862"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>TNTBOX Setting: \n${ret.stdout}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:27.866" endtime="20190122 07:49:27.874"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ip -details link show ${CAN_CH}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:27.883">Sending command to DUT ip -details link show can2</msg>
<msg level="INFO" timestamp="20190122 07:49:27.935">Returning data (5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  	  bitrate 125000 sample-point 0.875  	  tq 500 prop-seg 6 phase-seg1 7 phase-seg2 2 sjw 1 	  can-phonet: tseg1 4..16 tseg2 2..8 sjw 1..4 brp 1..256 brp-inc 1 	  clock 64000000numtxqueues 1 numrxqueues 1, )</msg>
<msg level="INFO" timestamp="20190122 07:49:27.937">${ret} = ('5: can2: &lt;NOARP,UP,LOWER_UP,ECHO&gt; mtu 4113 qdisc pfifo_fast state UP mode DEFAULT group default qlen 10     link/can  promiscuity 0      can state STOPPED restart-ms 0  \t  bitrate 125000 sample-poi...</msg>
<status status="PASS" starttime="20190122 07:49:27.878" endtime="20190122 07:49:27.938"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DEVICE Setting: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:27.941" endtime="20190122 07:49:27.954"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:27.961">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190122 07:49:28.066">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:28.069">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:27.958" endtime="20190122 07:49:28.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Cancel candump before start it again</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:28.073" endtime="20190122 07:49:28.080"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:29.087">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:49:28.083" endtime="20190122 07:49:29.089"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>nohup candump -t a -D -B ${CAN_CH} ${CAN_CH} &gt; ${CANDUMP_FILE} &amp;</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:29.099">Sending command to DUT nohup candump -t a -D -B can2 can2 &gt; /root/candump.txt &amp;</msg>
<msg level="INFO" timestamp="20190122 07:49:29.141">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:29.144">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:29.093" endtime="20190122 07:49:29.145"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start candump on the NAD: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:29.148" endtime="20190122 07:49:29.158"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:29.665">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:29.161" endtime="20190122 07:49:29.666"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:29.673">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190122 07:49:29.761">Returning data (601 root      0:00 candump -t a -D -B can2 can2   602 root      0:00 sh -c ps aux | grep candump   604 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190122 07:49:29.763">${ret} = ('601 root      0:00 candump -t a -D -B can2 can2   602 root      0:00 sh -c ps aux | grep candump   604 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190122 07:49:29.669" endtime="20190122 07:49:29.764"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:29.767" endtime="20190122 07:49:29.780"></status>
</kw>
<kw name="Can Create Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:29.783" endtime="20190122 07:49:29.948"></status>
</kw>
<kw name="Can Clear Socket" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:29.952" endtime="20190122 07:49:29.997"></status>
</kw>
<kw name="Can Start Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:30.000" endtime="20190122 07:49:30.047"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:30.559">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:30.055" endtime="20190122 07:49:30.561"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG_EXT}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:30.579">Starting process:
cansend can2 18EF7777#FFEEEEDDFFAA1122</msg>
<msg level="INFO" timestamp="20190122 07:49:30.633">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:30.655">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:30.658">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:30.568" endtime="20190122 07:49:30.659"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:30.672" endtime="20190122 07:49:30.694"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>cansend ${CAN_CH} ${CAN_FULLMSG}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:30.715">Starting process:
cansend can2 01A#11223344556677BB</msg>
<msg level="INFO" timestamp="20190122 07:49:30.768">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:30.792">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:30.795">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:30.701" endtime="20190122 07:49:30.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret.stdout} ${ret.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:30.812" endtime="20190122 07:49:30.830"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>cat ${CANDUMP_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:30.847">Sending command to DUT cat /root/candump.txt</msg>
<msg level="INFO" timestamp="20190122 07:49:30.912">Returning data ((1548143370.612285)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548143370.747632)  can2       01A   [8]  11 22 33 44 55 66 77 BB, )</msg>
<msg level="INFO" timestamp="20190122 07:49:30.921">${ret} = ('(1548143370.612285)  can2  18EF7777   [8]  FF EE EE DD FF AA 11 22  (1548143370.747632)  can2       01A   [8]  11 22 33 44 55 66 77 BB', '')</msg>
<status status="PASS" starttime="20190122 07:49:30.833" endtime="20190122 07:49:30.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get CANmsg list: \n${ret}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:30.944" endtime="20190122 07:49:30.955"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.5</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:31.477">Slept 500 milliseconds</msg>
<status status="PASS" starttime="20190122 07:49:30.958" endtime="20190122 07:49:31.479"></status>
</kw>
<kw name="Can Stop Sniffing Asynchronously" library="robot_framework_tnt.Client">
<arguments>
<arg>${CAN_CH}</arg>
</arguments>
<assign>
<var>${res_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.536">${res_list} = [{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:30.663819', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:30.677106', 'id': '0x18ef7777'}, {'p...</msg>
<status status="PASS" starttime="20190122 07:49:31.482" endtime="20190122 07:49:31.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_list}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:31.545">[{'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:30.663819', 'id': '0x18ef7777'}, {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:30.677106', 'id': '0x18ef7777'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:30.797588', 'id': '0x1a'}, {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:30.808043', 'id': '0x1a'}]</msg>
<status status="PASS" starttime="20190122 07:49:31.540" endtime="20190122 07:49:31.548"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${res_list}</arg>
</arguments>
<assign>
<var>${MSG_LENGTH}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.555">Length is 4</msg>
<msg level="INFO" timestamp="20190122 07:49:31.557">${MSG_LENGTH} = 4</msg>
<status status="PASS" starttime="20190122 07:49:31.551" endtime="20190122 07:49:31.558"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should_Be_True</arg>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:31.567" endtime="20190122 07:49:31.573"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:31.561" endtime="20190122 07:49:31.574"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${MSG_LENGTH} &gt; 0</arg>
<arg>Check_CAN_Messages</arg>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
<arg>ELSE</arg>
<arg>Log_to_console</arg>
<arg>"Error: CAN messages doesn't exist"</arg>
</arguments>
<kw name="Check_CAN_Messages">
<doc>This keyword Check CAN_Messages number of found messages</doc>
<arguments>
<arg>${res_list}</arg>
<arg>${CAN_MSG_2}</arg>
</arguments>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.601">Length is 4</msg>
<msg level="INFO" timestamp="20190122 07:49:31.603">${count} = 4</msg>
<status status="PASS" starttime="20190122 07:49:31.597" endtime="20190122 07:49:31.604"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:31.607" endtime="20190122 07:49:31.612"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.620">${msgcount} = 0</msg>
<status status="PASS" starttime="20190122 07:49:31.615" endtime="20190122 07:49:31.621"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:30.663819', 'id': '0x18ef7777'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.634">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190122 07:49:31.629" endtime="20190122 07:49:31.634"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.645">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:31.638" endtime="20190122 07:49:31.646"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.655">${msgcount} = 1</msg>
<status status="PASS" starttime="20190122 07:49:31.649" endtime="20190122 07:49:31.656"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:31.625" endtime="20190122 07:49:31.657"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': 'FFEEEEDDFFAA1122', 'timestamp': '22-01-2019 - 07:49:30.677106', 'id': '0x18ef7777'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.666">${payload} = FFEEEEDDFFAA1122</msg>
<status status="PASS" starttime="20190122 07:49:31.661" endtime="20190122 07:49:31.667"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.678">${count} = 1</msg>
<status status="PASS" starttime="20190122 07:49:31.670" endtime="20190122 07:49:31.679"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.689">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:31.681" endtime="20190122 07:49:31.689"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:31.658" endtime="20190122 07:49:31.690"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:30.797588', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.700">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:31.694" endtime="20190122 07:49:31.700"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.711">${count} = 0</msg>
<status status="PASS" starttime="20190122 07:49:31.703" endtime="20190122 07:49:31.712"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.721">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:31.714" endtime="20190122 07:49:31.722"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:31.692" endtime="20190122 07:49:31.722"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': '11223344556677BB', 'timestamp': '22-01-2019 - 07:49:30.808043', 'id': '0x1a'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.732">${payload} = 11223344556677BB</msg>
<status status="PASS" starttime="20190122 07:49:31.727" endtime="20190122 07:49:31.733"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.743">${count} = 0</msg>
<status status="PASS" starttime="20190122 07:49:31.736" endtime="20190122 07:49:31.744"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${msgcount} + ${count}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.753">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:49:31.747" endtime="20190122 07:49:31.754"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:31.724" endtime="20190122 07:49:31.755"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:31.622" endtime="20190122 07:49:31.755"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${msgcount} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:31.758" endtime="20190122 07:49:31.763"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can messages count: ${msgcount}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:31.766" endtime="20190122 07:49:31.772"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:31.585" endtime="20190122 07:49:31.776"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:31.577" endtime="20190122 07:49:31.777"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ps aux | grep candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.784">Sending command to DUT ps aux | grep candump</msg>
<msg level="INFO" timestamp="20190122 07:49:31.858">Returning data (601 root      0:00 candump -t a -D -B can2 can2   606 root      0:00 sh -c ps aux | grep candump   608 root      0:00 grep candump, )</msg>
<msg level="INFO" timestamp="20190122 07:49:31.860">${ret} = ('601 root      0:00 candump -t a -D -B can2 can2   606 root      0:00 sh -c ps aux | grep candump   608 root      0:00 grep candump', '')</msg>
<status status="PASS" starttime="20190122 07:49:31.780" endtime="20190122 07:49:31.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nWatch candump prozess: ${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:31.864" endtime="20190122 07:49:31.877"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>pkill candump</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:31.883">Sending command to DUT pkill candump</msg>
<msg level="INFO" timestamp="20190122 07:49:31.976">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:31.978">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:31.879" endtime="20190122 07:49:31.979"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:32.992">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:49:31.982" endtime="20190122 07:49:32.994"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:25.584" endtime="20190122 07:49:32.997"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:25.579" endtime="20190122 07:49:32.999"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill ping</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:33.014">Starting process:
pkill ping</msg>
<msg level="INFO" timestamp="20190122 07:49:33.043">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:49:33.112">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:49:33.115">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:49:33.010" endtime="20190122 07:49:33.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_Teardown_Action"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:33.127">"Test_Teardown_Action"</msg>
<status status="PASS" starttime="20190122 07:49:33.120" endtime="20190122 07:49:33.133"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>systemctl poweroff</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:33.149">Sending command to DUT systemctl poweroff</msg>
<msg level="INFO" timestamp="20190122 07:49:33.253">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:49:33.256">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:49:33.140" endtime="20190122 07:49:33.257"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHUTDOWN_TIME}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:48.272">Slept 15 seconds</msg>
<status status="PASS" starttime="20190122 07:49:33.260" endtime="20190122 07:49:48.274"></status>
</kw>
<kw name="Close Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Disconnect the ssh connection</doc>
<msg level="INFO" timestamp="20190122 07:49:48.280">Closing SSH connection to 192.168.1.101</msg>
<status status="PASS" starttime="20190122 07:49:48.277" endtime="20190122 07:49:48.282"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:48.285" endtime="20190122 07:49:48.333"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:48.336" endtime="20190122 07:49:48.383"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:33.003" endtime="20190122 07:49:48.387"></status>
</kw>
<doc>Implements Test Task SKTB-34994</doc>
<tags>
<tag>CAN 3 test</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:48:17.755" endtime="20190122 07:49:48.388"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:49:49.900">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:49:49.981">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:49:48.431" endtime="20190122 07:49:50.012"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:48.405" endtime="20190122 07:49:50.014"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:48.399" endtime="20190122 07:49:50.020"></status>
</kw>
<doc>CAN 3 test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:48:14.968" endtime="20190122 07:49:50.021"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-40097.robot" name="SKTB-40097" id="s1-s8">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:50.660">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:49:50.656" endtime="20190122 07:49:50.671"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:50.699">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:49:50.701">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:49:52.950">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:49:50.674" endtime="20190122 07:49:52.952"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:50.640" endtime="20190122 07:49:52.955"></status>
</kw>
<test name="SKTB-40097 Read Write OTP Values" id="s1-s8-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:53.022" endtime="20190122 07:49:53.109"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:53.141" endtime="20190122 07:49:53.229"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:55.248">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:49:53.232" endtime="20190122 07:49:55.250"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:55.253" endtime="20190122 07:49:55.299"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:56.307">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:49:55.302" endtime="20190122 07:49:56.309"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:56.311" endtime="20190122 07:49:56.358"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:58.366">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:49:56.361" endtime="20190122 07:49:58.368"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:58.371" endtime="20190122 07:49:58.415"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:58.418" endtime="20190122 07:49:58.463"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:58.467" endtime="20190122 07:49:58.513"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:58.516" endtime="20190122 07:49:58.561"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:53.001" endtime="20190122 07:49:58.563"></status>
</kw>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:58.633">${res_dict} = {'status': True, 'result': '4153', 'data': '', 'request': '41'}</msg>
<status status="PASS" starttime="20190122 07:49:58.574" endtime="20190122 07:49:58.634"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:58.663">${value} = True</msg>
<status status="PASS" starttime="20190122 07:49:58.638" endtime="20190122 07:49:58.663"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:58.667" endtime="20190122 07:49:58.672"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:49:59.679">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:49:58.675" endtime="20190122 07:49:59.682"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:58.567" endtime="20190122 07:49:59.684"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:59.759">${res_dict} = {'status': True, 'result': '4153', 'data': '', 'request': '41'}</msg>
<status status="PASS" starttime="20190122 07:49:59.692" endtime="20190122 07:49:59.761"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:49:59.789">${value} = True</msg>
<status status="PASS" starttime="20190122 07:49:59.764" endtime="20190122 07:49:59.790"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:49:59.793" endtime="20190122 07:49:59.797"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:00.804">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:49:59.800" endtime="20190122 07:50:00.806"></status>
</kw>
<status status="PASS" starttime="20190122 07:49:59.686" endtime="20190122 07:50:00.808"></status>
</kw>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${MEM_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:00.829">Starting process:
find /home/debian/chorus_version/TestRoutineMemory_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190122 07:50:00.864">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:00.901">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:00.904">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:00.823" endtime="20190122 07:50:00.905"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:00.914">${stdout_path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:50:00.909" endtime="20190122 07:50:00.915"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:00.922">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:50:00.924">${temp} = ['/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190122 07:50:00.918" endtime="20190122 07:50:00.925"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:00.933">${path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:50:00.927" endtime="20190122 07:50:00.934"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:00.936" endtime="20190122 07:50:00.945"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" html="yes" timestamp="20190122 07:50:00.971">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190122 07:50:00.955" endtime="20190122 07:50:00.973"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:00.977">${matched_path} = /home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:50:00.815" endtime="20190122 07:50:00.978"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:01.308">${res_dict} = {'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': 'dc15f69d'}</msg>
<status status="PASS" starttime="20190122 07:50:00.981" endtime="20190122 07:50:01.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${matched_path}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:01.323">/home/debian/chorus_version/TestRoutineMemory_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:50:01.312" endtime="20190122 07:50:01.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:01.347">{'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': 'dc15f69d'}</msg>
<status status="PASS" starttime="20190122 07:50:01.336" endtime="20190122 07:50:01.349"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:03.357">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:50:01.352" endtime="20190122 07:50:03.359"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:03.389">${value} = 5453</msg>
<status status="PASS" starttime="20190122 07:50:03.362" endtime="20190122 07:50:03.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:03.393" endtime="20190122 07:50:03.399"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:00.810" endtime="20190122 07:50:03.401"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:03.516">${res_dict} = {'status': True, 'result': '4953', 'data': '', 'request': '49'}</msg>
<status status="PASS" starttime="20190122 07:50:03.409" endtime="20190122 07:50:03.521"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:03.564">${value} = True</msg>
<status status="PASS" starttime="20190122 07:50:03.533" endtime="20190122 07:50:03.565"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:03.567" endtime="20190122 07:50:03.572"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:04.584">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:50:03.578" endtime="20190122 07:50:04.586"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:03.403" endtime="20190122 07:50:04.588"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:04.659">${res_dict} = {'status': True, 'result': '475653', 'data': '0202', 'request': '4756'}</msg>
<status status="PASS" starttime="20190122 07:50:04.596" endtime="20190122 07:50:04.660"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:05.668">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:50:04.663" endtime="20190122 07:50:05.670"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:04.590" endtime="20190122 07:50:05.672"></status>
</kw>
<kw name="WRITE_OTP_CARIF_PSN_DEFAULT">
<doc>Write carif psn default value</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write carif psn default value</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:05.681" endtime="20190122 07:50:05.685"></status>
</kw>
<kw name="WRITE_OTP_VALUE">
<arguments>
<arg>${OTP_CARIF_PSN_ID}</arg>
<arg>${OTP_CARIF_PSN_DEFAULT}</arg>
</arguments>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setparam</arg>
<arg>${OTP_ID}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:05.757">${res_dict} = {'status': True, 'result': '534653', 'data': '', 'request': '53460000fffe'}</msg>
<status status="PASS" starttime="20190122 07:50:05.696" endtime="20190122 07:50:05.758"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:05.786">${value} = True</msg>
<status status="PASS" starttime="20190122 07:50:05.761" endtime="20190122 07:50:05.787"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:05.851">${res_dict} = {'status': True, 'result': '534253', 'data': '', 'request': '534200104c616972642050534e20787878787878'}</msg>
<status status="PASS" starttime="20190122 07:50:05.790" endtime="20190122 07:50:05.851"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:05.880">${value} = True</msg>
<status status="PASS" starttime="20190122 07:50:05.855" endtime="20190122 07:50:05.881"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${Memory_WriteOtpIdent}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:05.957">${res_dict} = {'status': False, 'result': '520146', 'data': '', 'request': '5201'}</msg>
<status status="PASS" starttime="20190122 07:50:05.884" endtime="20190122 07:50:05.958"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:05.986">${value} = False</msg>
<status status="PASS" starttime="20190122 07:50:05.961" endtime="20190122 07:50:05.987"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${value}\n</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:05.990" endtime="20190122 07:50:05.996"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:50:06.005">'False' should be true.</msg>
<status status="FAIL" starttime="20190122 07:50:05.999" endtime="20190122 07:50:06.006"></status>
</kw>
<status status="FAIL" starttime="20190122 07:50:05.687" endtime="20190122 07:50:06.009"></status>
</kw>
<status status="FAIL" starttime="20190122 07:50:05.674" endtime="20190122 07:50:06.011"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:06.022" endtime="20190122 07:50:06.101"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:06.104" endtime="20190122 07:50:06.170"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:07.178">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:50:06.174" endtime="20190122 07:50:07.181"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:07.184" endtime="20190122 07:50:07.229"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:06.015" endtime="20190122 07:50:07.231"></status>
</kw>
<doc>Implements Test Task SKTB-40097 read and Write otp value with testroutine</doc>
<tags>
<tag>Eeprom OTP Value</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20190122 07:49:52.957" endtime="20190122 07:50:07.233">'False' should be true.</status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:50:08.733">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:50:08.795">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:50:07.276" endtime="20190122 07:50:08.797"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:07.249" endtime="20190122 07:50:08.828"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:07.244" endtime="20190122 07:50:08.830"></status>
</kw>
<doc>Eeprom OTP Value write read test with testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190122 07:49:50.167" endtime="20190122 07:50:08.831"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41635.robot" name="SKTB-41635" id="s1-s9">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:09.451">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:50:09.438" endtime="20190122 07:50:09.453"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:09.471">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:50:09.472">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:50:11.736">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:50:09.456" endtime="20190122 07:50:11.758"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:09.415" endtime="20190122 07:50:11.761"></status>
</kw>
<test name="can_diag_test" id="s1-s9-t1">
<kw type="setup" name="Test_precondition">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:11.856">"Test_precondition"</msg>
<status status="PASS" starttime="20190122 07:50:11.827" endtime="20190122 07:50:11.866"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:11.869" endtime="20190122 07:50:11.960"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:11.963" endtime="20190122 07:50:12.052"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:13.081">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:50:12.059" endtime="20190122 07:50:13.083"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:13.094" endtime="20190122 07:50:13.221"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>0.1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:13.342">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20190122 07:50:13.224" endtime="20190122 07:50:13.344"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:13.347" endtime="20190122 07:50:13.453"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:15.469">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:50:13.457" endtime="20190122 07:50:15.471"></status>
</kw>
<kw name="set_can_channels">
<doc>set bitrate for channels</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:15.490">Starting process:
sudo ip link set can0 down</msg>
<msg level="INFO" timestamp="20190122 07:50:15.518">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:15.591">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:15.594">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:15.483" endtime="20190122 07:50:15.595"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:15.607">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190122 07:50:15.635">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:15.691">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:15.694">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:15.598" endtime="20190122 07:50:15.695"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:15.706">Starting process:
sudo ip link set can0 up</msg>
<msg level="INFO" timestamp="20190122 07:50:15.734">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:15.812">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:15.815">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:15.698" endtime="20190122 07:50:15.820"></status>
</kw>
<timeout value="10 seconds"></timeout>
<status status="PASS" starttime="20190122 07:50:15.474" endtime="20190122 07:50:15.823"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:11.805" endtime="20190122 07:50:15.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Start test</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:15.846">Start test</msg>
<status status="PASS" starttime="20190122 07:50:15.840" endtime="20190122 07:50:15.849"></status>
</kw>
<kw name="Req_1003">
<doc>Extended session</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Extended session</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:15.858" endtime="20190122 07:50:15.863"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:15.875">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190122 07:50:15.914">${candump_ID} = 147</msg>
<status status="PASS" starttime="20190122 07:50:15.867" endtime="20190122 07:50:15.915"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>10 03</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:15.942">Starting process:
echo 10 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190122 07:50:15.971">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:15.987">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:15.990">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:15.933" endtime="20190122 07:50:15.990"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:15.925" endtime="20190122 07:50:15.994"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:16.010">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:17.022">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:50:17.024">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:50:17.038">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:17.040">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:50:16.004" endtime="20190122 07:50:17.042"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:17.063">2 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:50:17.065">${temp} = [' (1548143415.984281)  can0  7F8   [8]  02 10 03 00 00 00 00 00', ' (1548143415.992096)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA']</msg>
<status status="PASS" starttime="20190122 07:50:17.045" endtime="20190122 07:50:17.066"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:17.087">(1548143415.984281)  can0  7F8   [8]  02 10 03 00 00 00 00 00
 (1548143415.992096)  can0  7F7   [8]  06 50 03 00 14 00 C8 AA</msg>
<msg level="INFO" timestamp="20190122 07:50:17.089">${ret_list} = [{'payload': '0210030000000000', 'channel': 'can0', 'timestamp': '1548143415.984281', 'id': '7F8'}, {'payload': '065003001400C8AA', 'channel': 'can0', 'timestamp': '1548143415.992096', 'id': '7F7'}]</msg>
<status status="PASS" starttime="20190122 07:50:17.069" endtime="20190122 07:50:17.090"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:17.093" endtime="20190122 07:50:17.100"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:17.112">${data} = True</msg>
<status status="PASS" starttime="20190122 07:50:17.103" endtime="20190122 07:50:17.113"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:17.116">${res} = True</msg>
<status status="PASS" starttime="20190122 07:50:15.996" endtime="20190122 07:50:17.117"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:17.120" endtime="20190122 07:50:17.128"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:15.851" endtime="20190122 07:50:17.131"></status>
</kw>
<kw name="Req_F100">
<doc>Active_DiagnosticInformation</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Active_DiagnosticInformation</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:17.139" endtime="20190122 07:50:17.145"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:17.158">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190122 07:50:17.192">${candump_ID} = 149</msg>
<status status="PASS" starttime="20190122 07:50:17.149" endtime="20190122 07:50:17.193"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 00</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:17.218">Starting process:
echo 22 F1 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190122 07:50:17.247">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:17.260">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:17.263">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:17.210" endtime="20190122 07:50:17.264"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:17.200" endtime="20190122 07:50:17.267"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:17.283">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:18.289">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:50:18.291">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:50:18.307">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:18.309">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:50:17.278" endtime="20190122 07:50:18.310"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:18.321">3 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:50:18.323">${temp} = [' (1548143417.257945)  can0  7F8   [8]  03 22 F1 00 00 00 00 00', ' (1548143417.276899)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548143417.286914)  can0  7F7   [8]  07 62 F1 00 00 01 01 03']</msg>
<status status="PASS" starttime="20190122 07:50:18.313" endtime="20190122 07:50:18.324"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:18.333">(1548143417.257945)  can0  7F8   [8]  03 22 F1 00 00 00 00 00
 (1548143417.276899)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548143417.286914)  can0  7F7   [8]  07 62 F1 00 00 01 01 03</msg>
<msg level="INFO" timestamp="20190122 07:50:18.335">${ret_list} = [{'payload': '0322F10000000000', 'channel': 'can0', 'timestamp': '1548143417.257945', 'id': '7F8'}, {'payload': '037F2278AAAAAAAA', 'channel': 'can0', 'timestamp': '1548143417.276899', 'id': '7F7'}, {...</msg>
<status status="PASS" starttime="20190122 07:50:18.327" endtime="20190122 07:50:18.336"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:18.339" endtime="20190122 07:50:18.346"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:18.356">None</msg>
<msg level="INFO" timestamp="20190122 07:50:18.359">${data} = True</msg>
<status status="PASS" starttime="20190122 07:50:18.349" endtime="20190122 07:50:18.360"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:18.364">${res} = True</msg>
<status status="PASS" starttime="20190122 07:50:17.270" endtime="20190122 07:50:18.365"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:18.368" endtime="20190122 07:50:18.374"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:17.133" endtime="20190122 07:50:18.376"></status>
</kw>
<kw name="Req_F10D">
<doc>DDS Package Release</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DDS Package Release</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:18.385" endtime="20190122 07:50:18.392"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:18.404">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190122 07:50:18.434">${candump_ID} = 151</msg>
<status status="PASS" starttime="20190122 07:50:18.395" endtime="20190122 07:50:18.435"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 0D</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:18.501">Starting process:
echo 22 F1 0D | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190122 07:50:18.601">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:18.626">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:18.631">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:18.456" endtime="20190122 07:50:18.632"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:18.444" endtime="20190122 07:50:18.635"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:18.654">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:19.659">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:50:19.661">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:50:19.665">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:19.667">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:50:18.645" endtime="20190122 07:50:19.668"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:19.678">3 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:50:19.680">${temp} = [' (1548143418.619471)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00', ' (1548143418.636951)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548143418.646954)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA']</msg>
<status status="PASS" starttime="20190122 07:50:19.671" endtime="20190122 07:50:19.681"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:19.690">(1548143418.619471)  can0  7F8   [8]  03 22 F1 0D 00 00 00 00
 (1548143418.636951)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548143418.646954)  can0  7F7   [8]  03 7F 22 22 AA AA AA AA</msg>
<msg level="INFO" timestamp="20190122 07:50:19.692">${ret_list} = [{'payload': '0322F10D00000000', 'channel': 'can0', 'timestamp': '1548143418.619471', 'id': '7F8'}, {'payload': '037F2278AAAAAAAA', 'channel': 'can0', 'timestamp': '1548143418.636951', 'id': '7F7'}, {...</msg>
<status status="PASS" starttime="20190122 07:50:19.684" endtime="20190122 07:50:19.693"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:19.696" endtime="20190122 07:50:19.703"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:19.717">${data} = True</msg>
<status status="PASS" starttime="20190122 07:50:19.707" endtime="20190122 07:50:19.718"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:19.722">${res} = True</msg>
<status status="PASS" starttime="20190122 07:50:18.638" endtime="20190122 07:50:19.722"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:19.725" endtime="20190122 07:50:19.731"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:18.378" endtime="20190122 07:50:19.733"></status>
</kw>
<kw name="Req_F103">
<doc>Vedoc Relevant Information</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Vedoc Relevant Information</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:19.742" endtime="20190122 07:50:19.751"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:19.763">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190122 07:50:19.794">${candump_ID} = 153</msg>
<status status="PASS" starttime="20190122 07:50:19.754" endtime="20190122 07:50:19.795"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:19.816">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190122 07:50:19.847">${isotprecv_ID} = 154</msg>
<status status="PASS" starttime="20190122 07:50:19.807" endtime="20190122 07:50:19.848"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 03</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:19.876">Starting process:
echo 22 F1 03 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190122 07:50:19.905">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:19.919">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:19.922">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:19.867" endtime="20190122 07:50:19.923"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:19.855" endtime="20190122 07:50:19.926"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:19.946">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:20.951">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:50:20.954">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:50:20.959">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:20.961">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:50:19.939" endtime="20190122 07:50:20.962"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:20.972">3 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:50:20.974">${temp} = [' (1548143419.916451)  can0  7F8   [8]  03 22 F1 03 00 00 00 00', ' (1548143419.927007)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA', ' (1548143419.937002)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69']</msg>
<status status="PASS" starttime="20190122 07:50:20.965" endtime="20190122 07:50:20.975"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:20.984">(1548143419.916451)  can0  7F8   [8]  03 22 F1 03 00 00 00 00
 (1548143419.927007)  can0  7F7   [8]  03 7F 22 78 AA AA AA AA
 (1548143419.937002)  can0  7F7   [8]  10 1C 62 F1 03 4C 61 69</msg>
<msg level="INFO" timestamp="20190122 07:50:20.986">${ret_list} = [{'payload': '0322F10300000000', 'channel': 'can0', 'timestamp': '1548143419.916451', 'id': '7F8'}, {'payload': '037F2278AAAAAAAA', 'channel': 'can0', 'timestamp': '1548143419.927007', 'id': '7F7'}, {...</msg>
<status status="PASS" starttime="20190122 07:50:20.978" endtime="20190122 07:50:20.987"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:20.990" endtime="20190122 07:50:20.997"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:21.008">${data} = True</msg>
<status status="PASS" starttime="20190122 07:50:21.000" endtime="20190122 07:50:21.009"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:21.013">${res} = True</msg>
<status status="PASS" starttime="20190122 07:50:19.931" endtime="20190122 07:50:21.014"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:21.017" endtime="20190122 07:50:21.022"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:19.735" endtime="20190122 07:50:21.025"></status>
</kw>
<kw name="Req_F1A0">
<doc>VIN Current</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:21.033" endtime="20190122 07:50:21.039"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:21.050">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190122 07:50:21.081">${candump_ID} = 156</msg>
<status status="PASS" starttime="20190122 07:50:21.042" endtime="20190122 07:50:21.082"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>isotprecv -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${isotprecv_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:21.102">Starting process:
isotprecv -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190122 07:50:21.133">${isotprecv_ID} = 157</msg>
<status status="PASS" starttime="20190122 07:50:21.094" endtime="20190122 07:50:21.135"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>22 F1 A0</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:21.161">Starting process:
echo 22 F1 A0 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190122 07:50:21.190">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:21.204">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:21.207">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:21.153" endtime="20190122 07:50:21.208"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:21.145" endtime="20190122 07:50:21.210"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:21.226">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:22.231">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:50:22.233">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:50:22.237">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:22.240">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:50:21.221" endtime="20190122 07:50:22.241"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:22.250">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:50:22.252">${temp} = [' (1548143421.201511)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00']</msg>
<status status="PASS" starttime="20190122 07:50:22.244" endtime="20190122 07:50:22.253"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:22.262">(1548143421.201511)  can0  7F8   [8]  03 22 F1 A0 00 00 00 00</msg>
<msg level="INFO" timestamp="20190122 07:50:22.264">${ret_list} = [{'payload': '0322F1A000000000', 'channel': 'can0', 'timestamp': '1548143421.201511', 'id': '7F8'}]</msg>
<status status="PASS" starttime="20190122 07:50:22.256" endtime="20190122 07:50:22.265"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:22.267" endtime="20190122 07:50:22.274"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:22.285">${data} = True</msg>
<status status="PASS" starttime="20190122 07:50:22.277" endtime="20190122 07:50:22.286"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:22.290">${res} = True</msg>
<status status="PASS" starttime="20190122 07:50:21.213" endtime="20190122 07:50:22.298"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:22.301" endtime="20190122 07:50:22.311"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:21.027" endtime="20190122 07:50:22.313"></status>
</kw>
<kw name="Req_F1A0_WRITE">
<doc>VIN Current</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>VIN Current write</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:22.322" endtime="20190122 07:50:22.328"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${RES_ID}:${MASK},${REQ_ID}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:22.339">Starting process:
candump -t a can0,7F7:7FF,7F8:7FF</msg>
<msg level="INFO" timestamp="20190122 07:50:22.370">${candump_ID} = 159</msg>
<status status="PASS" starttime="20190122 07:50:22.331" endtime="20190122 07:50:22.371"></status>
</kw>
<kw name="send_isotp_message">
<doc>MSG must be in form aa bb cc dd</doc>
<arguments>
<arg>2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>echo ${MSG} | isotpsend -s ${REQ_ID} -d ${RES_ID} -p 00 ${CAN_0}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${candsend_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:22.399">Starting process:
echo 2E F1 A0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 | isotpsend -s 7F8 -d 7F7 -p 00 can0</msg>
<msg level="INFO" timestamp="20190122 07:50:22.429">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:22.464">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:22.467">${candsend_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:22.391" endtime="20190122 07:50:22.471"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:22.382" endtime="20190122 07:50:22.474"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:23.484">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:50:22.477" endtime="20190122 07:50:23.486"></status>
</kw>
<kw name="Check_test_result">
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:23.506">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:24.525">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:50:24.526">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:50:24.530">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:24.533">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:50:23.500" endtime="20190122 07:50:24.534"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:24.545">5 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:50:24.547">${temp} = [' (1548143422.440915)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00', ' (1548143422.441867)  can0  7F7   [8]  30 08 0A AA AA AA AA AA', ' (1548143422.452401)  can0  7F8   [8]  21 00 00 00 00 00 00 00', '...</msg>
<status status="PASS" starttime="20190122 07:50:24.538" endtime="20190122 07:50:24.548"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:24.557">(1548143422.440915)  can0  7F8   [8]  10 14 2E F1 A0 00 00 00
 (1548143422.441867)  can0  7F7   [8]  30 08 0A AA AA AA AA AA
 (1548143422.452401)  can0  7F8   [8]  21 00 00 00 00 00 00 00
 (1548143422.462421)  can0  7F8   [8]  22 00 00 00 00 00 00 00
 (1548143422.468092)  can0  7F7   [8]  03 7F 2E 33 AA AA AA AA</msg>
<msg level="INFO" timestamp="20190122 07:50:24.560">${ret_list} = [{'payload': '10142EF1A0000000', 'channel': 'can0', 'timestamp': '1548143422.440915', 'id': '7F8'}, {'payload': '30080AAAAAAAAAAA', 'channel': 'can0', 'timestamp': '1548143422.441867', 'id': '7F7'}, {...</msg>
<status status="PASS" starttime="20190122 07:50:24.551" endtime="20190122 07:50:24.561"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:24.563" endtime="20190122 07:50:24.571"></status>
</kw>
<kw name="Check If Response Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>check_if_response_exist for isotp uds</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${REQ_ID}</arg>
<arg>${RES_ID}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:24.581">None</msg>
<msg level="INFO" timestamp="20190122 07:50:24.583">${data} = False</msg>
<status status="PASS" starttime="20190122 07:50:24.574" endtime="20190122 07:50:24.584"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:24.588">${res} = False</msg>
<status status="PASS" starttime="20190122 07:50:23.490" endtime="20190122 07:50:24.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:24.597">False</msg>
<status status="PASS" starttime="20190122 07:50:24.592" endtime="20190122 07:50:24.600"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:24.603" endtime="20190122 07:50:24.609"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:22.316" endtime="20190122 07:50:24.611"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:24.626">Starting process:
pkill candump</msg>
<msg level="INFO" timestamp="20190122 07:50:24.660">${rm_res} = 161</msg>
<status status="PASS" starttime="20190122 07:50:24.622" endtime="20190122 07:50:24.665"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:24.673" endtime="20190122 07:50:24.750"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:24.758" endtime="20190122 07:50:24.806"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:24.615" endtime="20190122 07:50:24.809"></status>
</kw>
<doc>Can diagnose test</doc>
<tags>
<tag>CAN 1 diagnose test</tag>
</tags>
<timeout value="50 seconds"></timeout>
<status status="PASS" critical="yes" starttime="20190122 07:50:11.763" endtime="20190122 07:50:24.811"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:50:26.310">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:50:26.341">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:50:24.855" endtime="20190122 07:50:26.369"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:24.828" endtime="20190122 07:50:26.370"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:24.822" endtime="20190122 07:50:26.373"></status>
</kw>
<doc>CAN 1 diagnose test</doc>
<status status="PASS" starttime="20190122 07:50:09.003" endtime="20190122 07:50:26.373"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-46886.robot" name="SKTB-46886" id="s1-s10">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:27.064">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:50:27.059" endtime="20190122 07:50:27.074"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:27.094">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:50:27.096">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:50:29.339">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:50:27.077" endtime="20190122 07:50:29.341"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:27.048" endtime="20190122 07:50:29.343"></status>
</kw>
<test name="SKTB-GPIO FBUS test" id="s1-s10-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:29.391" endtime="20190122 07:50:29.477"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:29.480" endtime="20190122 07:50:29.584"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:29.587" endtime="20190122 07:50:29.693"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:31.712">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:50:29.696" endtime="20190122 07:50:31.714"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:31.717" endtime="20190122 07:50:31.763"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:31.766" endtime="20190122 07:50:31.813"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:31.816" endtime="20190122 07:50:31.861"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:31.864" endtime="20190122 07:50:31.910"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:31.913" endtime="20190122 07:50:31.959"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:31.963" endtime="20190122 07:50:32.033"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:34.048">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:50:32.036" endtime="20190122 07:50:34.050"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:29.385" endtime="20190122 07:50:34.052"></status>
</kw>
<kw name="Test_GPIO_00">
<doc>Test HI SIDE SWITCH 01</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 01</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:34.061" endtime="20190122 07:50:34.068"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:34.275">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 43 3D F5</msg>
<status status="PASS" starttime="20190122 07:50:34.071" endtime="20190122 07:50:34.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:34.284">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 43 3D F5</msg>
<status status="PASS" starttime="20190122 07:50:34.279" endtime="20190122 07:50:34.286"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:34.608">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 44 3D FE</msg>
<status status="PASS" starttime="20190122 07:50:34.290" endtime="20190122 07:50:34.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:34.651">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 01 01 44 3D FE</msg>
<status status="PASS" starttime="20190122 07:50:34.638" endtime="20190122 07:50:34.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:34.693" endtime="20190122 07:50:34.729"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_1}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:35.158">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 00 01 47 3D F1</msg>
<status status="PASS" starttime="20190122 07:50:34.770" endtime="20190122 07:50:35.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:35.186">1E 14 54 8E 00 08 01 0D 77 29 00 00 01 47 3D F1</msg>
<status status="PASS" starttime="20190122 07:50:35.169" endtime="20190122 07:50:35.189"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_1}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:35.497">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 00 01 40 3D FB</msg>
<status status="PASS" starttime="20190122 07:50:35.192" endtime="20190122 07:50:35.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:35.520">1E 14 54 8E 00 0A 01 0D 77 26 00 00 00 00 01 40 3D FB</msg>
<status status="PASS" starttime="20190122 07:50:35.516" endtime="20190122 07:50:35.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_1} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:35.550" endtime="20190122 07:50:35.565"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:34.055" endtime="20190122 07:50:35.568"></status>
</kw>
<kw name="Test_GPIO_01">
<doc>Test HI SIDE SWITCH 02</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 02</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:35.597" endtime="20190122 07:50:35.626"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_2}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:35.901">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 01 01 41 3D F6</msg>
<status status="PASS" starttime="20190122 07:50:35.629" endtime="20190122 07:50:35.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:35.910">1E 14 54 8E 00 08 01 0D 77 29 00 01 01 41 3D F6</msg>
<status status="PASS" starttime="20190122 07:50:35.905" endtime="20190122 07:50:35.912"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_2}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:36.150">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 01 01 44 3D FF</msg>
<status status="PASS" starttime="20190122 07:50:35.915" endtime="20190122 07:50:36.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:36.158">1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 01 01 44 3D FF</msg>
<status status="PASS" starttime="20190122 07:50:36.154" endtime="20190122 07:50:36.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_2} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:36.163" endtime="20190122 07:50:36.171"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_2}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:36.438">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 01 01 45 3D F2</msg>
<status status="PASS" starttime="20190122 07:50:36.174" endtime="20190122 07:50:36.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:36.446">1E 14 54 8E 00 08 01 0D 77 29 00 01 01 45 3D F2</msg>
<status status="PASS" starttime="20190122 07:50:36.442" endtime="20190122 07:50:36.449"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_2}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:36.686">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 00 01 46 3D FC</msg>
<status status="PASS" starttime="20190122 07:50:36.452" endtime="20190122 07:50:36.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:36.695">1E 14 54 8E 00 0A 01 0D 77 26 00 01 00 00 01 46 3D FC</msg>
<status status="PASS" starttime="20190122 07:50:36.690" endtime="20190122 07:50:36.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_2} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:36.700" endtime="20190122 07:50:36.708"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:35.590" endtime="20190122 07:50:36.710"></status>
</kw>
<kw name="Test_GPIO_02">
<doc>Test HI SIDE SWITCH 03</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 03</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:36.719" endtime="20190122 07:50:36.726"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_3}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:36.972">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 02 01 47 3D F3</msg>
<status status="PASS" starttime="20190122 07:50:36.729" endtime="20190122 07:50:36.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:37.002">1E 14 54 8E 00 08 01 0D 77 29 00 02 01 47 3D F3</msg>
<status status="PASS" starttime="20190122 07:50:36.994" endtime="20190122 07:50:37.025"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_3}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:37.336">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 01 01 40 3D F8</msg>
<status status="PASS" starttime="20190122 07:50:37.032" endtime="20190122 07:50:37.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:37.345">1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 01 01 40 3D F8</msg>
<status status="PASS" starttime="20190122 07:50:37.340" endtime="20190122 07:50:37.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_3} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:37.350" endtime="20190122 07:50:37.358"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_3}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:37.597">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 02 01 41 3D F5</msg>
<status status="PASS" starttime="20190122 07:50:37.361" endtime="20190122 07:50:37.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:37.607">1E 14 54 8E 00 08 01 0D 77 29 00 02 01 41 3D F5</msg>
<status status="PASS" starttime="20190122 07:50:37.601" endtime="20190122 07:50:37.609"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_3}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:37.856">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 00 01 42 3D FB</msg>
<status status="PASS" starttime="20190122 07:50:37.612" endtime="20190122 07:50:37.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:37.867">1E 14 54 8E 00 0A 01 0D 77 26 00 02 00 00 01 42 3D FB</msg>
<status status="PASS" starttime="20190122 07:50:37.860" endtime="20190122 07:50:37.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_3} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:37.872" endtime="20190122 07:50:37.880"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:36.712" endtime="20190122 07:50:37.883"></status>
</kw>
<kw name="Test_GPIO_03">
<doc>Test HI SIDE SWITCH 03</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test hi side switch 03</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:37.891" endtime="20190122 07:50:37.896"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_4}${ENABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:38.222">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 03 01 43 3D F6</msg>
<status status="PASS" starttime="20190122 07:50:37.899" endtime="20190122 07:50:38.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:38.240">1E 14 54 8E 00 08 01 0D 77 29 00 03 01 43 3D F6</msg>
<status status="PASS" starttime="20190122 07:50:38.235" endtime="20190122 07:50:38.249"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_4}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:38.480">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 01 01 44 3D FD</msg>
<status status="PASS" starttime="20190122 07:50:38.258" endtime="20190122 07:50:38.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:38.500">1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 01 01 44 3D FD</msg>
<status status="PASS" starttime="20190122 07:50:38.489" endtime="20190122 07:50:38.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_4} ${MODE_STATIC} ${ENABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:38.508" endtime="20190122 07:50:38.530"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_SET_REQ}${HI_SIDE_SW_4}${DISABLE}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:38.783">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 03 01 45 3D F0</msg>
<status status="PASS" starttime="20190122 07:50:38.539" endtime="20190122 07:50:38.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:38.795">1E 14 54 8E 00 08 01 0D 77 29 00 03 01 45 3D F0</msg>
<status status="PASS" starttime="20190122 07:50:38.791" endtime="20190122 07:50:38.798"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_DIGITAL_IO_GET_REQ}${HI_SIDE_SW_4}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:39.059">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 00 01 44 3D FC</msg>
<status status="PASS" starttime="20190122 07:50:38.801" endtime="20190122 07:50:39.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:39.073">1E 14 54 8E 00 0A 01 0D 77 26 00 03 00 00 01 44 3D FC</msg>
<status status="PASS" starttime="20190122 07:50:39.064" endtime="20190122 07:50:39.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${GET_RESP} ${SCA_RESULT_OK} ${HI_SIDE_SW_4} ${MODE_STATIC} ${DISABLE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:39.087" endtime="20190122 07:50:39.095"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:37.885" endtime="20190122 07:50:39.097"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:39.108" endtime="20190122 07:50:39.157"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:39.161" endtime="20190122 07:50:39.269"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:39.296" endtime="20190122 07:50:39.368"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:41.376">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:50:39.371" endtime="20190122 07:50:41.378"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:41.381" endtime="20190122 07:50:41.427"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:41.430" endtime="20190122 07:50:41.474"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:39.102" endtime="20190122 07:50:41.477"></status>
</kw>
<doc>Implements Test Task SKTB-46886</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:50:29.345" endtime="20190122 07:50:41.478"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:50:42.999">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:50:43.068">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:50:41.524" endtime="20190122 07:50:43.103"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:41.494" endtime="20190122 07:50:43.104"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:41.488" endtime="20190122 07:50:43.107"></status>
</kw>
<doc>Chorus Fbus GPIO Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:50:26.562" endtime="20190122 07:50:43.107"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-47669.robot" name="SKTB-47669" id="s1-s11">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:43.881">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:50:43.877" endtime="20190122 07:50:43.894"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:43.920">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:50:43.922">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:50:46.261">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:50:43.897" endtime="20190122 07:50:46.263"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:43.856" endtime="20190122 07:50:46.265"></status>
</kw>
<test name="SKTB-47669" id="s1-s11-t1">
<kw type="setup" name="Test_precondition">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:46.320" endtime="20190122 07:50:46.334"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:46.337" endtime="20190122 07:50:46.414"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:46.421" endtime="20190122 07:50:46.521"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:46.524" endtime="20190122 07:50:46.639"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:46.650" endtime="20190122 07:50:46.860"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:46.867" endtime="20190122 07:50:47.087"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:47.114" endtime="20190122 07:50:47.196"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:49.209">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:50:47.199" endtime="20190122 07:50:49.211"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:49.214" endtime="20190122 07:50:49.259"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:49.262" endtime="20190122 07:50:49.309"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${4}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:53.316">Slept 4 seconds</msg>
<status status="PASS" starttime="20190122 07:50:49.312" endtime="20190122 07:50:53.318"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:46.301" endtime="20190122 07:50:53.321"></status>
</kw>
<kw name="cansend_500k">
<doc>Trigger to send can message on can with bitrate 500000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 500000</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:53.330" endtime="20190122 07:50:53.334"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:53.391" endtime="20190122 07:50:53.399"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:53.408">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:50:53.438">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:53.578">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:53.585">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:53.402" endtime="20190122 07:50:53.586"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:53.614" endtime="20190122 07:50:53.673"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:53.691">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190122 07:50:53.745">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:53.848">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:53.851">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:53.677" endtime="20190122 07:50:53.852"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:53.855" endtime="20190122 07:50:53.882"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:53.895">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:50:53.925">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:54.018">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:54.022">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:53.885" endtime="20190122 07:50:54.023"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:54.026" endtime="20190122 07:50:54.038"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:50:53.375" endtime="20190122 07:50:54.041"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:54.051">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg level="INFO" timestamp="20190122 07:50:54.083">${candump_ID} = 165</msg>
<status status="PASS" starttime="20190122 07:50:54.044" endtime="20190122 07:50:54.087"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:54.116" endtime="20190122 07:50:54.121"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:54.130">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status status="PASS" starttime="20190122 07:50:54.123" endtime="20190122 07:50:54.131"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:54.134" endtime="20190122 07:50:54.140"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:54.363">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status status="PASS" starttime="20190122 07:50:54.143" endtime="20190122 07:50:54.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:54.372">1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status status="PASS" starttime="20190122 07:50:54.368" endtime="20190122 07:50:54.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:54.378" endtime="20190122 07:50:54.385"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:54.090" endtime="20190122 07:50:54.388"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:54.399" endtime="20190122 07:50:54.403"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:54.413">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190122 07:50:54.406" endtime="20190122 07:50:54.414"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:54.417" endtime="20190122 07:50:54.423"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:54.654">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status status="PASS" starttime="20190122 07:50:54.427" endtime="20190122 07:50:54.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:54.666">1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status status="PASS" starttime="20190122 07:50:54.662" endtime="20190122 07:50:54.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:54.672" endtime="20190122 07:50:54.680"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:54.390" endtime="20190122 07:50:54.682"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:54.685" endtime="20190122 07:50:54.690"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:54.710">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:50:54.702" endtime="20190122 07:50:54.711"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:54.728" endtime="20190122 07:50:54.747"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:55.061">${info} = </msg>
<status status="PASS" starttime="20190122 07:50:54.751" endtime="20190122 07:50:55.062"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:54.693" endtime="20190122 07:50:55.064"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:55.079">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:56.085">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:50:56.086">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:50:56.091">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:56.093">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:50:55.074" endtime="20190122 07:50:56.094"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:56.103">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:50:56.105">${temp} = [' (1548143454.921452)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190122 07:50:56.097" endtime="20190122 07:50:56.106"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:56.113">(1548143454.921452)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190122 07:50:56.115">${ret_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143454.921452', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190122 07:50:56.108" endtime="20190122 07:50:56.116"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.119" endtime="20190122 07:50:56.124"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:56.128">${resp_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143454.921452', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190122 07:50:55.066" endtime="20190122 07:50:56.129"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:56.139">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190122 07:50:56.132" endtime="20190122 07:50:56.139"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.142" endtime="20190122 07:50:56.148"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:56.183">${value} = True</msg>
<status status="PASS" starttime="20190122 07:50:56.151" endtime="20190122 07:50:56.184"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.187" endtime="20190122 07:50:56.191"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:56.195">${resp} = True</msg>
<status status="PASS" starttime="20190122 07:50:53.346" endtime="20190122 07:50:56.196"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.199" endtime="20190122 07:50:56.203"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:53.324" endtime="20190122 07:50:56.206"></status>
</kw>
<kw name="cansend_500k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 500000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 500000</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.214" endtime="20190122 07:50:56.219"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${500000}</arg>
<arg>${500_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.245" endtime="20190122 07:50:56.252"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:56.262">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:50:56.291">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:56.363">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:56.366">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:56.255" endtime="20190122 07:50:56.367"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.371" endtime="20190122 07:50:56.379"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:56.390">Starting process:
sudo ip link set can2 type can bitrate 500000</msg>
<msg level="INFO" timestamp="20190122 07:50:56.419">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:56.476">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:56.479">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:56.382" endtime="20190122 07:50:56.481"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.485" endtime="20190122 07:50:56.500"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:56.525">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:50:56.585">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:56.682">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:56.686">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:56.503" endtime="20190122 07:50:56.687"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.691" endtime="20190122 07:50:56.700"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:50:56.235" endtime="20190122 07:50:56.703"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:56.714">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg level="INFO" timestamp="20190122 07:50:56.745">${candump_ID} = 169</msg>
<status status="PASS" starttime="20190122 07:50:56.707" endtime="20190122 07:50:56.747"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.774" endtime="20190122 07:50:56.779"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:56.789">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 02</msg>
<status status="PASS" starttime="20190122 07:50:56.782" endtime="20190122 07:50:56.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:56.792" endtime="20190122 07:50:56.798"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:57.026">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status status="PASS" starttime="20190122 07:50:56.801" endtime="20190122 07:50:57.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:57.040">1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status status="PASS" starttime="20190122 07:50:57.029" endtime="20190122 07:50:57.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:57.067" endtime="20190122 07:50:57.084"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:56.757" endtime="20190122 07:50:57.086"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:57.118" endtime="20190122 07:50:57.136"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:57.169">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190122 07:50:57.141" endtime="20190122 07:50:57.170"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:57.173" endtime="20190122 07:50:57.209"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:57.577">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status status="PASS" starttime="20190122 07:50:57.214" endtime="20190122 07:50:57.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:50:57.606">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status status="PASS" starttime="20190122 07:50:57.601" endtime="20190122 07:50:57.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:57.619" endtime="20190122 07:50:57.646"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:57.089" endtime="20190122 07:50:57.649"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:57.651" endtime="20190122 07:50:57.684"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:57.730">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:50:57.719" endtime="20190122 07:50:57.731"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:57.734" endtime="20190122 07:50:57.739"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:57.943">${info} = </msg>
<status status="PASS" starttime="20190122 07:50:57.742" endtime="20190122 07:50:57.943"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:57.686" endtime="20190122 07:50:57.946"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:57.959">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:59.005">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:50:59.007">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:50:59.011">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:59.014">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:50:57.955" endtime="20190122 07:50:59.015"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:59.024">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:50:59.026">${temp} = [' (1548143457.804431)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190122 07:50:59.018" endtime="20190122 07:50:59.027"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:59.034">(1548143457.804431)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190122 07:50:59.036">${ret_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143457.804431', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190122 07:50:59.030" endtime="20190122 07:50:59.037"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.040" endtime="20190122 07:50:59.046"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:59.050">${resp_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143457.804431', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190122 07:50:57.949" endtime="20190122 07:50:59.050"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:59.060">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190122 07:50:59.053" endtime="20190122 07:50:59.061"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.065" endtime="20190122 07:50:59.070"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:59.105">${value} = True</msg>
<status status="PASS" starttime="20190122 07:50:59.073" endtime="20190122 07:50:59.106"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.109" endtime="20190122 07:50:59.113"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:50:59.117">${resp} = True</msg>
<status status="PASS" starttime="20190122 07:50:56.221" endtime="20190122 07:50:59.118"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.121" endtime="20190122 07:50:59.125"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:56.208" endtime="20190122 07:50:59.128"></status>
</kw>
<kw name="cansend_250k">
<doc>Trigger to send can message on can with bitrate 250000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 250000</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.136" endtime="20190122 07:50:59.141"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.163" endtime="20190122 07:50:59.171"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:59.180">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:50:59.210">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:59.287">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:59.290">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:59.174" endtime="20190122 07:50:59.291"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.295" endtime="20190122 07:50:59.304"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:59.314">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190122 07:50:59.407">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:59.494">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:59.497">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:59.307" endtime="20190122 07:50:59.498"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.512" endtime="20190122 07:50:59.523"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:59.533">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:50:59.577">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:50:59.662">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:50:59.665">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:50:59.526" endtime="20190122 07:50:59.666"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.670" endtime="20190122 07:50:59.678"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:50:59.153" endtime="20190122 07:50:59.681"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:59.691">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg level="INFO" timestamp="20190122 07:50:59.724">${candump_ID} = 173</msg>
<status status="PASS" starttime="20190122 07:50:59.684" endtime="20190122 07:50:59.729"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.754" endtime="20190122 07:50:59.763"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:50:59.774">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status status="PASS" starttime="20190122 07:50:59.767" endtime="20190122 07:50:59.775"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:50:59.778" endtime="20190122 07:50:59.784"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:00.011">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status status="PASS" starttime="20190122 07:50:59.787" endtime="20190122 07:51:00.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:00.020">1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status status="PASS" starttime="20190122 07:51:00.015" endtime="20190122 07:51:00.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:00.025" endtime="20190122 07:51:00.033"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:59.731" endtime="20190122 07:51:00.035"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:00.046" endtime="20190122 07:51:00.050"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:00.060">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190122 07:51:00.053" endtime="20190122 07:51:00.061"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:00.065" endtime="20190122 07:51:00.071"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:00.299">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status status="PASS" starttime="20190122 07:51:00.074" endtime="20190122 07:51:00.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:00.308">1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status status="PASS" starttime="20190122 07:51:00.303" endtime="20190122 07:51:00.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:00.313" endtime="20190122 07:51:00.321"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:00.037" endtime="20190122 07:51:00.323"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:00.326" endtime="20190122 07:51:00.332"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:00.352">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:00.343" endtime="20190122 07:51:00.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:00.355" endtime="20190122 07:51:00.361"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:00.577">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:00.364" endtime="20190122 07:51:00.578"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:00.334" endtime="20190122 07:51:00.585"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:00.603">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:01.608">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:51:01.610">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:51:01.614">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:01.617">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:51:00.598" endtime="20190122 07:51:01.618"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:01.626">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:51:01.628">${temp} = [' (1548143460.413993)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190122 07:51:01.621" endtime="20190122 07:51:01.629"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:01.637">(1548143460.413993)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190122 07:51:01.646">${ret_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143460.413993', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190122 07:51:01.632" endtime="20190122 07:51:01.647"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:01.650" endtime="20190122 07:51:01.656"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:01.660">${resp_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143460.413993', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190122 07:51:00.587" endtime="20190122 07:51:01.661"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:01.670">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190122 07:51:01.664" endtime="20190122 07:51:01.671"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:01.674" endtime="20190122 07:51:01.680"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:01.715">${value} = True</msg>
<status status="PASS" starttime="20190122 07:51:01.683" endtime="20190122 07:51:01.716"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:01.718" endtime="20190122 07:51:01.723"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:01.727">${resp} = True</msg>
<status status="PASS" starttime="20190122 07:50:59.143" endtime="20190122 07:51:01.728"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:01.731" endtime="20190122 07:51:01.735"></status>
</kw>
<status status="PASS" starttime="20190122 07:50:59.130" endtime="20190122 07:51:01.737"></status>
</kw>
<kw name="cansend_250k_ex">
<doc>Trigger to send can message on can with 29 bit ID and bitrate 250000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 bit ID and bitrate 250000</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:01.746" endtime="20190122 07:51:01.751"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${250000}</arg>
<arg>${250_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:01.777" endtime="20190122 07:51:01.784"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:01.794">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:51:01.823">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:01.895">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:01.898">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:01.787" endtime="20190122 07:51:01.899"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:01.903" endtime="20190122 07:51:01.912"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:01.923">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190122 07:51:01.952">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:02.010">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:02.014">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:01.915" endtime="20190122 07:51:02.015"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:02.018" endtime="20190122 07:51:02.027"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:02.037">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:51:02.067">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:02.166">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:02.169">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:02.030" endtime="20190122 07:51:02.170"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:02.178" endtime="20190122 07:51:02.189"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:51:01.767" endtime="20190122 07:51:02.191"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:02.202">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg level="INFO" timestamp="20190122 07:51:02.239">${candump_ID} = 177</msg>
<status status="PASS" starttime="20190122 07:51:02.195" endtime="20190122 07:51:02.244"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:02.262" endtime="20190122 07:51:02.267"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:02.277">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 01</msg>
<status status="PASS" starttime="20190122 07:51:02.270" endtime="20190122 07:51:02.278"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:02.282" endtime="20190122 07:51:02.288"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:02.510">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status status="PASS" starttime="20190122 07:51:02.291" endtime="20190122 07:51:02.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:02.518">1E 10 54 93 00 08 00 0E AA 03 00 00 01 47 E1 C1</msg>
<status status="PASS" starttime="20190122 07:51:02.513" endtime="20190122 07:51:02.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:02.524" endtime="20190122 07:51:02.531"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:02.247" endtime="20190122 07:51:02.533"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:02.544" endtime="20190122 07:51:02.549"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:02.558">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190122 07:51:02.552" endtime="20190122 07:51:02.559"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:02.562" endtime="20190122 07:51:02.568"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:02.797">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status status="PASS" starttime="20190122 07:51:02.571" endtime="20190122 07:51:02.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:02.807">1E 10 54 93 00 08 00 0E AA 05 02 00 01 40 E3 C0</msg>
<status status="PASS" starttime="20190122 07:51:02.803" endtime="20190122 07:51:02.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:02.813" endtime="20190122 07:51:02.821"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:02.535" endtime="20190122 07:51:02.823"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:02.826" endtime="20190122 07:51:02.832"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:02.855">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:02.843" endtime="20190122 07:51:02.856"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:02.859" endtime="20190122 07:51:02.866"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:03.078">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:02.869" endtime="20190122 07:51:03.079"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:02.834" endtime="20190122 07:51:03.086"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:03.103">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:04.109">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:51:04.111">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:51:04.115">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:04.118">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:51:03.099" endtime="20190122 07:51:04.118"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:04.127">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:51:04.129">${temp} = [' (1548143462.920599)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190122 07:51:04.122" endtime="20190122 07:51:04.130"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:04.137">(1548143462.920599)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190122 07:51:04.139">${ret_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143462.920599', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190122 07:51:04.133" endtime="20190122 07:51:04.140"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.143" endtime="20190122 07:51:04.149"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:04.153">${resp_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143462.920599', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190122 07:51:03.088" endtime="20190122 07:51:04.154"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:04.164">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190122 07:51:04.158" endtime="20190122 07:51:04.165"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.168" endtime="20190122 07:51:04.173"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:04.210">${value} = True</msg>
<status status="PASS" starttime="20190122 07:51:04.176" endtime="20190122 07:51:04.211"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.214" endtime="20190122 07:51:04.219"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:04.223">${resp} = True</msg>
<status status="PASS" starttime="20190122 07:51:01.753" endtime="20190122 07:51:04.225"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.228" endtime="20190122 07:51:04.233"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:01.740" endtime="20190122 07:51:04.235"></status>
</kw>
<kw name="cansend_125k">
<doc>Trigger to send can message on can with bitrate 125000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with bitrate 125000</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.244" endtime="20190122 07:51:04.249"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID}</arg>
<arg>${MSG_ID_ISI}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.270" endtime="20190122 07:51:04.278"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:04.287">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:51:04.316">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:04.389">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:04.392">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:04.281" endtime="20190122 07:51:04.393"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.397" endtime="20190122 07:51:04.406"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:04.416">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190122 07:51:04.447">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:04.505">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:04.508">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:04.409" endtime="20190122 07:51:04.509"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.513" endtime="20190122 07:51:04.522"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:04.532">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:51:04.561">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:04.658">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:04.661">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:04.525" endtime="20190122 07:51:04.662"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.671" endtime="20190122 07:51:04.685"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:51:04.261" endtime="20190122 07:51:04.687"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:04.698">Starting process:
candump -t a can2,1FF:1FF</msg>
<msg level="INFO" timestamp="20190122 07:51:04.739">${candump_ID} = 181</msg>
<status status="PASS" starttime="20190122 07:51:04.691" endtime="20190122 07:51:04.741"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.759" endtime="20190122 07:51:04.765"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:04.779">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status status="PASS" starttime="20190122 07:51:04.768" endtime="20190122 07:51:04.780"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:04.783" endtime="20190122 07:51:04.789"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:05.014">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status status="PASS" starttime="20190122 07:51:04.792" endtime="20190122 07:51:05.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:05.023">1E 10 54 93 00 08 00 0E AA 03 00 00 01 41 E1 C7</msg>
<status status="PASS" starttime="20190122 07:51:05.019" endtime="20190122 07:51:05.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:05.029" endtime="20190122 07:51:05.036"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:04.744" endtime="20190122 07:51:05.039"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:05.049" endtime="20190122 07:51:05.054"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:05.064">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190122 07:51:05.057" endtime="20190122 07:51:05.065"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:05.068" endtime="20190122 07:51:05.073"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:05.302">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status status="PASS" starttime="20190122 07:51:05.076" endtime="20190122 07:51:05.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:05.312">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status status="PASS" starttime="20190122 07:51:05.307" endtime="20190122 07:51:05.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:05.317" endtime="20190122 07:51:05.325"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:05.041" endtime="20190122 07:51:05.327"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:05.330" endtime="20190122 07:51:05.336"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:05.355">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 00 00 01 FF 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:05.347" endtime="20190122 07:51:05.356"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:05.359" endtime="20190122 07:51:05.365"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:05.577">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:05.368" endtime="20190122 07:51:05.578"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:05.338" endtime="20190122 07:51:05.584"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:05.599">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:06.605">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:51:06.606">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:51:06.611">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:06.613">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:51:05.595" endtime="20190122 07:51:06.614"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:06.622">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:51:06.624">${temp} = [' (1548143465.417653)  can2  1FF   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190122 07:51:06.617" endtime="20190122 07:51:06.625"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:06.633">(1548143465.417653)  can2  1FF   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190122 07:51:06.635">${ret_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143465.417653', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190122 07:51:06.628" endtime="20190122 07:51:06.636"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:06.639" endtime="20190122 07:51:06.644"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:06.648">${resp_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143465.417653', 'id': '1FF'}]</msg>
<status status="PASS" starttime="20190122 07:51:05.586" endtime="20190122 07:51:06.649"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:06.659">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190122 07:51:06.652" endtime="20190122 07:51:06.660"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:06.662" endtime="20190122 07:51:07.251"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:07.297">${value} = True</msg>
<status status="PASS" starttime="20190122 07:51:07.254" endtime="20190122 07:51:07.298"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:07.304" endtime="20190122 07:51:07.312"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:07.317">${resp} = True</msg>
<status status="PASS" starttime="20190122 07:51:04.251" endtime="20190122 07:51:07.317"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:07.320" endtime="20190122 07:51:07.325"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:04.237" endtime="20190122 07:51:07.327"></status>
</kw>
<kw name="cansend_125k_ex">
<doc>Trigger to send can message on can with 29 ID and bitrate 125000</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send can message on can with 29 ID and bitrate 125000</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:07.337" endtime="20190122 07:51:07.341"></status>
</kw>
<kw name="send_message">
<doc>Trigger to send a Can message with Can ID</doc>
<arguments>
<arg>${125000}</arg>
<arg>${125_KBAUD}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${BITRATE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:07.372" endtime="20190122 07:51:07.381"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:07.390">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:51:07.420">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:07.493">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:07.496">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:07.384" endtime="20190122 07:51:07.497"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:07.501" endtime="20190122 07:51:07.510"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:07.521">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190122 07:51:07.551">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:07.609">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:07.612">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:07.513" endtime="20190122 07:51:07.613"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:07.617" endtime="20190122 07:51:07.626"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:07.636">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:51:07.666">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:07.793">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:07.796">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:07.629" endtime="20190122 07:51:07.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:07.801" endtime="20190122 07:51:07.834"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:51:07.356" endtime="20190122 07:51:07.836"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${CAN_MSG_ID}:${CAN_MSG_ID}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:07.857">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg level="INFO" timestamp="20190122 07:51:07.889">${candump_ID} = 185</msg>
<status status="PASS" starttime="20190122 07:51:07.840" endtime="20190122 07:51:07.890"></status>
</kw>
<kw name="can_setup_bitrate">
<doc>Can setup channel and bitrate</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${BITRATE_ISIMSGVAL}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:07.911" endtime="20190122 07:51:07.916"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:07.926">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 00</msg>
<status status="PASS" starttime="20190122 07:51:07.919" endtime="20190122 07:51:07.926"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:07.929" endtime="20190122 07:51:07.935"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:08.147">${info} = 1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status status="PASS" starttime="20190122 07:51:07.938" endtime="20190122 07:51:08.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:08.157">1E 10 54 93 00 08 00 0E AA 03 00 00 01 43 E1 C5</msg>
<status status="PASS" starttime="20190122 07:51:08.152" endtime="20190122 07:51:08.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:08.163" endtime="20190122 07:51:08.170"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:07.900" endtime="20190122 07:51:08.173"></status>
</kw>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_ON}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:08.184" endtime="20190122 07:51:08.189"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:08.200">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 01</msg>
<status status="PASS" starttime="20190122 07:51:08.193" endtime="20190122 07:51:08.201"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:08.203" endtime="20190122 07:51:08.209"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:08.439">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status status="PASS" starttime="20190122 07:51:08.213" endtime="20190122 07:51:08.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:08.448">1E 10 54 93 00 08 00 0E AA 05 02 00 01 44 E3 C4</msg>
<status status="PASS" starttime="20190122 07:51:08.443" endtime="20190122 07:51:08.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:08.453" endtime="20190122 07:51:08.461"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:08.176" endtime="20190122 07:51:08.463"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send can message with ID: ${CAN_MSG_ID}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:08.466" endtime="20190122 07:51:08.472"></status>
</kw>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CAN_MSG_ID_ISI}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:08.495">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:08.483" endtime="20190122 07:51:08.496"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:08.499" endtime="20190122 07:51:08.505"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:08.723">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:08.508" endtime="20190122 07:51:08.724"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:08.474" endtime="20190122 07:51:08.727"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:08.739">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:09.745">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:51:09.746">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:51:09.751">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:09.753">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:51:08.735" endtime="20190122 07:51:09.754"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:09.762">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:51:09.764">${temp} = [' (1548143468.584514)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88']</msg>
<status status="PASS" starttime="20190122 07:51:09.757" endtime="20190122 07:51:09.765"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:09.773">(1548143468.584514)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190122 07:51:09.775">${ret_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143468.584514', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190122 07:51:09.768" endtime="20190122 07:51:09.776"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:09.779" endtime="20190122 07:51:09.785"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:09.789">${resp_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143468.584514', 'id': '18EF1B05'}]</msg>
<status status="PASS" starttime="20190122 07:51:08.729" endtime="20190122 07:51:09.790"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${CAN_MSG_ID}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:09.799">${res_dict} = {'status': True, 'count': 1}</msg>
<status status="PASS" starttime="20190122 07:51:09.792" endtime="20190122 07:51:09.800"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:09.803" endtime="20190122 07:51:09.808"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:09.843">${value} = True</msg>
<status status="PASS" starttime="20190122 07:51:09.811" endtime="20190122 07:51:09.844"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:09.847" endtime="20190122 07:51:09.851"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:09.856">${resp} = True</msg>
<status status="PASS" starttime="20190122 07:51:07.344" endtime="20190122 07:51:09.857"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:09.860" endtime="20190122 07:51:09.864"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:07.329" endtime="20190122 07:51:09.867"></status>
</kw>
<kw name="can_setup_bitrate_1000k_negativtest">
<doc>Can setup channel and not supported bitrate 1000k negativtest</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and not supported bitrate 1000k negativtest</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:09.875" endtime="20190122 07:51:09.880"></status>
</kw>
<kw name="can_setup_bitrate_negativtest">
<doc>Can setup channel and bitrate negativtest</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${1000_KBAUD}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Can setup channel and bitrate negativtest</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:09.891" endtime="20190122 07:51:09.896"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SETUP_REQ} ${CAN_BUS} ${BITRATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:09.905">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 02 02 03</msg>
<status status="PASS" starttime="20190122 07:51:09.898" endtime="20190122 07:51:09.906"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set bitrate: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:09.909" endtime="20190122 07:51:09.914"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:10.149">${info} = 1E 10 54 93 00 08 00 0E AA 03 04 00 01 45 E5 C3</msg>
<status status="PASS" starttime="20190122 07:51:09.918" endtime="20190122 07:51:10.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:10.157">1E 10 54 93 00 08 00 0E AA 03 04 00 01 45 E5 C3</msg>
<status status="PASS" starttime="20190122 07:51:10.153" endtime="20190122 07:51:10.160"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SETUP_RESP} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:10.163" endtime="20190122 07:51:10.171"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:09.882" endtime="20190122 07:51:10.173"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:09.869" endtime="20190122 07:51:10.175"></status>
</kw>
<kw name="trigger_can_message_125k">
<doc>Trigger to send 5 can messages on specified can channel without change any settings</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Trigger to send 5 can messages on specified can channel without change any settings</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:10.184" endtime="20190122 07:51:10.188"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:10.201" endtime="20190122 07:51:10.208"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:10.218">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:51:10.247">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:10.348">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:10.351">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:10.211" endtime="20190122 07:51:10.352"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:10.360" endtime="20190122 07:51:10.369"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:10.379">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190122 07:51:10.409">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:10.466">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:10.469">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:10.372" endtime="20190122 07:51:10.470"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:10.474" endtime="20190122 07:51:10.483"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:10.497">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:51:10.527">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:10.624">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:10.627">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:10.486" endtime="20190122 07:51:10.628"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:10.632" endtime="20190122 07:51:10.640"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:51:10.191" endtime="20190122 07:51:10.643"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:10.654">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg level="INFO" timestamp="20190122 07:51:10.686">${candump_ID} = 189</msg>
<status status="PASS" starttime="20190122 07:51:10.647" endtime="20190122 07:51:10.687"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:10.711">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:10.732">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:10.723" endtime="20190122 07:51:10.733"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:10.736" endtime="20190122 07:51:10.741"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:10.958">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:10.744" endtime="20190122 07:51:10.959"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:10.714" endtime="20190122 07:51:10.966"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:10.967">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:10.988">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:10.979" endtime="20190122 07:51:10.988"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:10.991" endtime="20190122 07:51:10.997"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:11.213">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:11.000" endtime="20190122 07:51:11.214"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:10.970" endtime="20190122 07:51:11.218"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:11.219">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:11.238">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:11.230" endtime="20190122 07:51:11.239"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:11.242" endtime="20190122 07:51:11.248"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:11.457">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:11.251" endtime="20190122 07:51:11.458"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:11.221" endtime="20190122 07:51:11.465"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:11.466">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:11.487">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:11.479" endtime="20190122 07:51:11.488"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:11.491" endtime="20190122 07:51:11.497"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:11.706">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:11.499" endtime="20190122 07:51:11.707"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:11.470" endtime="20190122 07:51:11.714"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:11.715">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:11.739">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:11.730" endtime="20190122 07:51:11.739"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:11.742" endtime="20190122 07:51:11.748"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:11.949">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:11.751" endtime="20190122 07:51:11.950"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:11.721" endtime="20190122 07:51:11.957"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:10.698" endtime="20190122 07:51:11.958"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:11.987">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:12.993">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:51:12.994">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:51:13.001">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:13.003">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:51:11.978" endtime="20190122 07:51:13.004"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:13.013">5 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:51:13.015">${temp} = [' (1548143470.796357)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1548143471.050738)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88', ' (1548143471.301177)  can2  18EF1B05   [8]  11 22 33 44 ...</msg>
<status status="PASS" starttime="20190122 07:51:13.007" endtime="20190122 07:51:13.016"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:13.024">(1548143470.796357)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548143471.050738)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548143471.301177)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548143471.549716)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88
 (1548143471.801952)  can2  18EF1B05   [8]  11 22 33 44 55 66 77 88</msg>
<msg level="INFO" timestamp="20190122 07:51:13.026">${ret_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143470.796357', 'id': '18EF1B05'}, {'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143471.050738', 'id': '18E...</msg>
<status status="PASS" starttime="20190122 07:51:13.018" endtime="20190122 07:51:13.027"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.030" endtime="20190122 07:51:13.066"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:13.074">${resp_list} = [{'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143470.796357', 'id': '18EF1B05'}, {'payload': '1122334455667788', 'channel': 'can2', 'timestamp': '1548143471.050738', 'id': '18E...</msg>
<status status="PASS" starttime="20190122 07:51:11.969" endtime="20190122 07:51:13.075"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:13.105">${res_dict} = {'status': True, 'count': 5}</msg>
<status status="PASS" starttime="20190122 07:51:13.090" endtime="20190122 07:51:13.106"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.109" endtime="20190122 07:51:13.117"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:13.150">${value} = True</msg>
<status status="PASS" starttime="20190122 07:51:13.120" endtime="20190122 07:51:13.151"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.154" endtime="20190122 07:51:13.158"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:13.191">${count} = 5</msg>
<status status="PASS" starttime="20190122 07:51:13.161" endtime="20190122 07:51:13.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${5}</arg>
<arg>${count}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.195" endtime="20190122 07:51:13.201"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:10.177" endtime="20190122 07:51:13.203"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.219" endtime="20190122 07:51:13.224"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:13.234">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status status="PASS" starttime="20190122 07:51:13.227" endtime="20190122 07:51:13.235"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.239" endtime="20190122 07:51:13.245"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:13.446">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 46 E3 C6</msg>
<status status="PASS" starttime="20190122 07:51:13.248" endtime="20190122 07:51:13.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:13.454">1E 10 54 93 00 08 00 0E AA 05 02 00 01 46 E3 C6</msg>
<status status="PASS" starttime="20190122 07:51:13.450" endtime="20190122 07:51:13.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.466" endtime="20190122 07:51:13.549"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:13.211" endtime="20190122 07:51:13.551"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:13.206" endtime="20190122 07:51:13.566"></status>
</kw>
<kw name="channel_off_trigger_can_message_125k_negativtest">
<doc>Set the channel off and trigger to send 5 can messages on specified can channel</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the channel off and trigger to send 5 can messages on specified can channel</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.635" endtime="20190122 07:51:13.650"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_CH}</arg>
<arg>${125000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.682" endtime="20190122 07:51:13.701"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:13.717">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:51:13.775">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:13.873">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:13.876">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:13.704" endtime="20190122 07:51:13.877"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.881" endtime="20190122 07:51:13.889"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:13.900">Starting process:
sudo ip link set can2 type can bitrate 125000</msg>
<msg level="INFO" timestamp="20190122 07:51:13.929">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:13.989">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:13.993">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:13.893" endtime="20190122 07:51:13.994"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:13.998" endtime="20190122 07:51:14.008"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:14.017">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:51:14.049">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:14.205">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:14.209">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:51:14.011" endtime="20190122 07:51:14.210"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:14.226" endtime="20190122 07:51:14.243"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:51:13.653" endtime="20190122 07:51:14.246"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_CH},${MSG_ID_EX}:${MSG_ID_EX}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:14.279">Starting process:
candump -t a can2,18EF1B05:18EF1B05</msg>
<msg level="INFO" timestamp="20190122 07:51:14.312">${candump_ID} = 193</msg>
<status status="PASS" starttime="20190122 07:51:14.258" endtime="20190122 07:51:14.317"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>5 times</arg>
<arg>trigger_to_send_can_msg</arg>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:14.331">Repeating keyword, round 1/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:14.363">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:14.355" endtime="20190122 07:51:14.364"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:14.367" endtime="20190122 07:51:14.373"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:14.578">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:14.376" endtime="20190122 07:51:14.579"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:14.333" endtime="20190122 07:51:14.582"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:14.583">Repeating keyword, round 2/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:14.603">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:14.594" endtime="20190122 07:51:14.604"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:14.607" endtime="20190122 07:51:14.613"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:14.829">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:14.616" endtime="20190122 07:51:14.830"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:14.586" endtime="20190122 07:51:14.833"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:14.834">Repeating keyword, round 3/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:14.853">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:14.845" endtime="20190122 07:51:14.854"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:14.857" endtime="20190122 07:51:14.864"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:15.073">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:14.867" endtime="20190122 07:51:15.074"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:14.836" endtime="20190122 07:51:15.077"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:15.077">Repeating keyword, round 4/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:15.097">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:15.088" endtime="20190122 07:51:15.098"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:15.101" endtime="20190122 07:51:15.107"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:15.310">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:15.111" endtime="20190122 07:51:15.311"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:15.080" endtime="20190122 07:51:15.314"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:15.315">Repeating keyword, round 5/5.</msg>
<kw name="trigger_to_send_can_msg">
<doc>Trigger to send a Can message on specified can channel with specified Can ID</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${MSG_ID_ISI_EXT}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_TX_REQ} ${CAN_BUS} ${PADDING} ${CAN_MSG_ID_ISI} ${DLC_TS_FILL} ${MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:15.334">${ISI_MSG} = 1E 54 10 93 00 16 00 00 AA 00 02 FF 98EF1B05 080000FF 1122334455667788</msg>
<status status="PASS" starttime="20190122 07:51:15.326" endtime="20190122 07:51:15.335"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Isi msg trigger to send a can msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:15.338" endtime="20190122 07:51:15.344"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${1}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:15.554">${info} = </msg>
<status status="PASS" starttime="20190122 07:51:15.347" endtime="20190122 07:51:15.555"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:15.318" endtime="20190122 07:51:15.562"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:14.326" endtime="20190122 07:51:15.563"></status>
</kw>
<kw name="get_candump_result">
<doc>Kill candump process, get stdout and convert result into dictionary</doc>
<assign>
<var>${resp_list}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=1 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:15.580">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:51:16.585">Process did not complete in 1 second.</msg>
<msg level="INFO" timestamp="20190122 07:51:16.587">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:51:16.594">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:51:16.596">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:51:15.575" endtime="20190122 07:51:16.605"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:16.618">0 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:51:16.620">${temp} = []</msg>
<status status="PASS" starttime="20190122 07:51:16.608" endtime="20190122 07:51:16.625"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:16.642">${ret_list} = []</msg>
<status status="PASS" starttime="20190122 07:51:16.628" endtime="20190122 07:51:16.642"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:16.654" endtime="20190122 07:51:16.661"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:16.674">${resp_list} = []</msg>
<status status="PASS" starttime="20190122 07:51:15.567" endtime="20190122 07:51:16.674"></status>
</kw>
<kw name="Check If Id With Msg Exist" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>This function check if can id with this message exist</doc>
<arguments>
<arg>${resp_list}</arg>
<arg>${MSG_ID_EX}</arg>
<arg>${MSG}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:16.692">${res_dict} = {'status': False, 'count': 0}</msg>
<status status="PASS" starttime="20190122 07:51:16.678" endtime="20190122 07:51:16.706"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:16.714" endtime="20190122 07:51:16.734"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:16.856">${value} = False</msg>
<status status="PASS" starttime="20190122 07:51:16.752" endtime="20190122 07:51:16.861"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:16.868" endtime="20190122 07:51:16.899"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("count")</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:17.083">${count} = 0</msg>
<status status="PASS" starttime="20190122 07:51:16.919" endtime="20190122 07:51:17.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${0}</arg>
<arg>${count}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:17.092" endtime="20190122 07:51:17.098"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:13.611" endtime="20190122 07:51:17.102"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:17.113" endtime="20190122 07:51:17.117"></status>
</kw>
<kw name="set_controller_off">
<doc>Test controller switching off</doc>
<kw name="set_controller_onoff">
<doc>Test controller switching on and off</doc>
<arguments>
<arg>${SOCKET_CAN_BUS}</arg>
<arg>${CONTROLLER_OFF}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test controller switching on and off</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:17.134" endtime="20190122 07:51:17.139"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${PHONET_AUTOSAR_BRIDGE_CAN_SET_STATE_REQ} ${CAN_BUS} ${CONTROLLER_STATE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:17.149">${ISI_MSG} = 1E 54 10 93 00 06 00 00 AA 04 02 00</msg>
<status status="PASS" starttime="20190122 07:51:17.142" endtime="20190122 07:51:17.150"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>ISI msg, set controller state: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:17.152" endtime="20190122 07:51:17.165"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${15}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:17.448">${info} = 1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status status="PASS" starttime="20190122 07:51:17.169" endtime="20190122 07:51:17.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:17.476">1E 10 54 93 00 08 00 0E AA 05 02 00 01 42 E3 C2</msg>
<status status="PASS" starttime="20190122 07:51:17.471" endtime="20190122 07:51:17.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${CAN_SET_STATE_RESP} ${CAN_BUS} ${RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:17.508" endtime="20190122 07:51:17.529"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:17.125" endtime="20190122 07:51:17.531"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:17.119" endtime="20190122 07:51:17.533"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:17.545" endtime="20190122 07:51:17.658"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:17.662" endtime="20190122 07:51:17.764"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:17.767" endtime="20190122 07:51:17.841"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:17.105" endtime="20190122 07:51:17.843"></status>
</kw>
<doc>Implements Test Task SKTB-47669 for can3 channel</doc>
<tags>
<tag>CAN 3 test TX</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:50:46.267" endtime="20190122 07:51:17.844"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:51:19.499">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:51:19.564">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:51:18.032" endtime="20190122 07:51:19.566"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:17.879" endtime="20190122 07:51:19.601"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:17.861" endtime="20190122 07:51:19.608"></status>
</kw>
<doc>CAN 3 test TX with FBUS</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:50:43.242" endtime="20190122 07:51:19.609"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-48413.robot" name="SKTB-48413" id="s1-s12">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:20.410">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:51:20.405" endtime="20190122 07:51:20.419"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:20.445">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:51:20.446">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:51:22.625">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:51:20.422" endtime="20190122 07:51:22.647"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:20.384" endtime="20190122 07:51:22.649"></status>
</kw>
<test name="SKTB-48413 FBUS test" id="s1-s12-t1">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:22.716" endtime="20190122 07:51:22.826"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:22.848" endtime="20190122 07:51:22.934"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:22.939" endtime="20190122 07:51:23.006"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:25.014">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:51:23.009" endtime="20190122 07:51:25.017"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:25.019" endtime="20190122 07:51:25.067"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:25.072" endtime="20190122 07:51:25.120"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:25.123" endtime="20190122 07:51:25.168"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:25.171" endtime="20190122 07:51:25.218"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:25.222" endtime="20190122 07:51:25.267"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:25.271" endtime="20190122 07:51:25.346"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:25.349" endtime="20190122 07:51:25.425"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:27.435">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:51:25.430" endtime="20190122 07:51:27.437"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:22.700" endtime="20190122 07:51:27.439"></status>
</kw>
<kw name="digit_out_led1_freq">
<doc>Toggle digital output led 1 with the supported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle digital output led 1 with the supported frequency</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:27.449" endtime="20190122 07:51:27.454"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:27.475">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 01</msg>
<status status="PASS" starttime="20190122 07:51:27.468" endtime="20190122 07:51:27.476"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:27.479" endtime="20190122 07:51:27.484"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:27.694">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 04 01 43 3D F5</msg>
<status status="PASS" starttime="20190122 07:51:27.487" endtime="20190122 07:51:27.695"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:27.699" endtime="20190122 07:51:27.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:27.707" endtime="20190122 07:51:27.715"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:27.456" endtime="20190122 07:51:27.717"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:27.720" endtime="20190122 07:51:27.725"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:27.742">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status status="PASS" starttime="20190122 07:51:27.736" endtime="20190122 07:51:27.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:27.746" endtime="20190122 07:51:27.752"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:28.015">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 44 3E FB</msg>
<status status="PASS" starttime="20190122 07:51:27.755" endtime="20190122 07:51:28.015"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.019" endtime="20190122 07:51:28.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.028" endtime="20190122 07:51:28.036"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:28.052">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '44', '3E', 'FB']</msg>
<status status="PASS" starttime="20190122 07:51:28.039" endtime="20190122 07:51:28.057"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:28.074">${value} = 00</msg>
<status status="PASS" starttime="20190122 07:51:28.060" endtime="20190122 07:51:28.075"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:27.727" endtime="20190122 07:51:28.083"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:27.443" endtime="20190122 07:51:28.090"></status>
</kw>
<kw name="digit_out_led1_freq_negativtest">
<doc>Toggle the digital output led 1 with the notsupported frequency negativ test</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 1 with the notsupported frequency negativtest</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.098" endtime="20190122 07:51:28.103"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:28.124">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 04 01 0B</msg>
<status status="PASS" starttime="20190122 07:51:28.117" endtime="20190122 07:51:28.125"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.128" endtime="20190122 07:51:28.135"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:28.338">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 04 01 47 3C F1</msg>
<status status="PASS" starttime="20190122 07:51:28.138" endtime="20190122 07:51:28.338"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.341" endtime="20190122 07:51:28.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.350" endtime="20190122 07:51:28.357"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:28.105" endtime="20190122 07:51:28.359"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.362" endtime="20190122 07:51:28.367"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:28.384">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status status="PASS" starttime="20190122 07:51:28.379" endtime="20190122 07:51:28.385"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.388" endtime="20190122 07:51:28.394"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:28.629">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 04 02 00 01 40 3E FF</msg>
<status status="PASS" starttime="20190122 07:51:28.397" endtime="20190122 07:51:28.630"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.633" endtime="20190122 07:51:28.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.641" endtime="20190122 07:51:28.649"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:28.657">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '04', '02', '00', '01', '40', '3E', 'FF']</msg>
<status status="PASS" starttime="20190122 07:51:28.652" endtime="20190122 07:51:28.658"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:28.666">${value} = 00</msg>
<status status="PASS" starttime="20190122 07:51:28.661" endtime="20190122 07:51:28.667"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:28.369" endtime="20190122 07:51:28.670"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:28.092" endtime="20190122 07:51:28.673"></status>
</kw>
<kw name="digit_out_led1_high">
<doc>Set the digital output led 1 high and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 high and test it</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.681" endtime="20190122 07:51:28.686"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:28.705">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 01</msg>
<status status="PASS" starttime="20190122 07:51:28.698" endtime="20190122 07:51:28.706"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:28.708" endtime="20190122 07:51:28.714"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:29.073">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 41 3D F3</msg>
<status status="PASS" starttime="20190122 07:51:28.717" endtime="20190122 07:51:29.073"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.076" endtime="20190122 07:51:29.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.094" endtime="20190122 07:51:29.124"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:28.688" endtime="20190122 07:51:29.126"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:29.157">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status status="PASS" starttime="20190122 07:51:29.150" endtime="20190122 07:51:29.173"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.175" endtime="20190122 07:51:29.195"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:29.492">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 01 01 44 3D FA</msg>
<status status="PASS" starttime="20190122 07:51:29.198" endtime="20190122 07:51:29.493"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.506" endtime="20190122 07:51:29.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.525" endtime="20190122 07:51:29.549"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:29.581">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '01', '01', '44', '3D', 'FA']</msg>
<status status="PASS" starttime="20190122 07:51:29.557" endtime="20190122 07:51:29.582"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:29.597">${value} = 01</msg>
<status status="PASS" starttime="20190122 07:51:29.591" endtime="20190122 07:51:29.598"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:29.601">${res} = 01</msg>
<status status="PASS" starttime="20190122 07:51:29.128" endtime="20190122 07:51:29.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.605" endtime="20190122 07:51:29.610"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:28.675" endtime="20190122 07:51:29.612"></status>
</kw>
<kw name="digit_out_led1_low">
<doc>Set the digital output led 1 low and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 1 low and test it</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.621" endtime="20190122 07:51:29.625"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:29.644">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 04 00</msg>
<status status="PASS" starttime="20190122 07:51:29.638" endtime="20190122 07:51:29.645"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.648" endtime="20190122 07:51:29.653"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:29.859">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 04 01 45 3D F7</msg>
<status status="PASS" starttime="20190122 07:51:29.657" endtime="20190122 07:51:29.861"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.864" endtime="20190122 07:51:29.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.872" endtime="20190122 07:51:29.880"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:29.627" endtime="20190122 07:51:29.882"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:29.901">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 04</msg>
<status status="PASS" starttime="20190122 07:51:29.894" endtime="20190122 07:51:29.901"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:29.904" endtime="20190122 07:51:29.910"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:30.141">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 04 00 00 01 46 3D F9</msg>
<status status="PASS" starttime="20190122 07:51:29.913" endtime="20190122 07:51:30.142"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.145" endtime="20190122 07:51:30.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.153" endtime="20190122 07:51:30.161"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:30.169">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '04', '00', '00', '01', '46', '3D', 'F9']</msg>
<status status="PASS" starttime="20190122 07:51:30.164" endtime="20190122 07:51:30.170"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:30.179">${value} = 00</msg>
<status status="PASS" starttime="20190122 07:51:30.173" endtime="20190122 07:51:30.179"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:30.183">${res} = 00</msg>
<status status="PASS" starttime="20190122 07:51:29.884" endtime="20190122 07:51:30.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.187" endtime="20190122 07:51:30.191"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:29.614" endtime="20190122 07:51:30.194"></status>
</kw>
<kw name="digit_out_led2_freq">
<doc>Toggle the digital output led 2 with the supported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2</arg>
<arg>with the supported frequency</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.203" endtime="20190122 07:51:30.208"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:30.227">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 01</msg>
<status status="PASS" starttime="20190122 07:51:30.220" endtime="20190122 07:51:30.227"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.230" endtime="20190122 07:51:30.236"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:30.469">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 05 01 47 3D F0</msg>
<status status="PASS" starttime="20190122 07:51:30.239" endtime="20190122 07:51:30.470"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.473" endtime="20190122 07:51:30.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.481" endtime="20190122 07:51:30.489"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:30.210" endtime="20190122 07:51:30.491"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.494" endtime="20190122 07:51:30.499"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:30.517">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status status="PASS" starttime="20190122 07:51:30.511" endtime="20190122 07:51:30.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.522" endtime="20190122 07:51:30.527"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:30.757">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 40 3E FE</msg>
<status status="PASS" starttime="20190122 07:51:30.530" endtime="20190122 07:51:30.758"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.762" endtime="20190122 07:51:30.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.770" endtime="20190122 07:51:30.778"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:30.786">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '40', '3E', 'FE']</msg>
<status status="PASS" starttime="20190122 07:51:30.781" endtime="20190122 07:51:30.787"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:30.811">${value} = 00</msg>
<status status="PASS" starttime="20190122 07:51:30.790" endtime="20190122 07:51:30.820"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:30.501" endtime="20190122 07:51:30.824"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:30.196" endtime="20190122 07:51:30.829"></status>
</kw>
<kw name="digit_out_led2_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.839" endtime="20190122 07:51:30.844"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:30.863">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 05 01 0B</msg>
<status status="PASS" starttime="20190122 07:51:30.856" endtime="20190122 07:51:30.864"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:30.867" endtime="20190122 07:51:30.873"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:31.074">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 05 01 41 3C F6</msg>
<status status="PASS" starttime="20190122 07:51:30.876" endtime="20190122 07:51:31.075"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.078" endtime="20190122 07:51:31.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.087" endtime="20190122 07:51:31.094"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:30.846" endtime="20190122 07:51:31.097"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.100" endtime="20190122 07:51:31.105"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:31.128">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status status="PASS" starttime="20190122 07:51:31.120" endtime="20190122 07:51:31.129"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.132" endtime="20190122 07:51:31.138"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:31.367">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 05 02 00 01 42 3E FC</msg>
<status status="PASS" starttime="20190122 07:51:31.141" endtime="20190122 07:51:31.369"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.372" endtime="20190122 07:51:31.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.380" endtime="20190122 07:51:31.388"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:31.396">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '05', '02', '00', '01', '42', '3E', 'FC']</msg>
<status status="PASS" starttime="20190122 07:51:31.391" endtime="20190122 07:51:31.397"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:31.406">${value} = 00</msg>
<status status="PASS" starttime="20190122 07:51:31.400" endtime="20190122 07:51:31.407"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:31.108" endtime="20190122 07:51:31.410"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:30.831" endtime="20190122 07:51:31.412"></status>
</kw>
<kw name="digit_out_led2_high">
<doc>Set the digital output led 2 high and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 high and test it</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.421" endtime="20190122 07:51:31.425"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:31.444">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 01</msg>
<status status="PASS" starttime="20190122 07:51:31.438" endtime="20190122 07:51:31.445"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.448" endtime="20190122 07:51:31.453"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:31.682">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 43 3D F0</msg>
<status status="PASS" starttime="20190122 07:51:31.457" endtime="20190122 07:51:31.683"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.686" endtime="20190122 07:51:31.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.694" endtime="20190122 07:51:31.702"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:31.427" endtime="20190122 07:51:31.704"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:31.726">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status status="PASS" starttime="20190122 07:51:31.720" endtime="20190122 07:51:31.727"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.729" endtime="20190122 07:51:31.735"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:31.964">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 01 01 44 3D FB</msg>
<status status="PASS" starttime="20190122 07:51:31.738" endtime="20190122 07:51:31.965"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.968" endtime="20190122 07:51:31.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:31.977" endtime="20190122 07:51:31.985"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:31.993">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '01', '01', '44', '3D', 'FB']</msg>
<status status="PASS" starttime="20190122 07:51:31.988" endtime="20190122 07:51:31.994"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:32.003">${value} = 01</msg>
<status status="PASS" starttime="20190122 07:51:31.997" endtime="20190122 07:51:32.004"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:32.008">${res} = 01</msg>
<status status="PASS" starttime="20190122 07:51:31.706" endtime="20190122 07:51:32.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.012" endtime="20190122 07:51:32.017"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:31.414" endtime="20190122 07:51:32.019"></status>
</kw>
<kw name="digit_out_led2_low">
<doc>Set the digital output led 2 low and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output led 2 low and test it</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.027" endtime="20190122 07:51:32.033"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:32.073">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 05 00</msg>
<status status="PASS" starttime="20190122 07:51:32.058" endtime="20190122 07:51:32.074"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.085" endtime="20190122 07:51:32.094"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:32.298">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 05 01 43 3D F0</msg>
<status status="PASS" starttime="20190122 07:51:32.097" endtime="20190122 07:51:32.299"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.303" endtime="20190122 07:51:32.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.311" endtime="20190122 07:51:32.319"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:32.035" endtime="20190122 07:51:32.321"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:32.339">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 05</msg>
<status status="PASS" starttime="20190122 07:51:32.333" endtime="20190122 07:51:32.340"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.343" endtime="20190122 07:51:32.348"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:32.581">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 05 00 00 01 44 3D FA</msg>
<status status="PASS" starttime="20190122 07:51:32.351" endtime="20190122 07:51:32.582"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.586" endtime="20190122 07:51:32.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.594" endtime="20190122 07:51:32.603"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:32.611">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '05', '00', '00', '01', '44', '3D', 'FA']</msg>
<status status="PASS" starttime="20190122 07:51:32.606" endtime="20190122 07:51:32.611"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:32.620">${value} = 00</msg>
<status status="PASS" starttime="20190122 07:51:32.615" endtime="20190122 07:51:32.621"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:32.625">${res} = 00</msg>
<status status="PASS" starttime="20190122 07:51:32.323" endtime="20190122 07:51:32.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.628" endtime="20190122 07:51:32.633"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:32.021" endtime="20190122 07:51:32.636"></status>
</kw>
<kw name="digit_out_crm_freq">
<doc>Toggle the digital output CRM with the supported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output CRM with the supported frequency</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.644" endtime="20190122 07:51:32.649"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_SUPPORTED}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:32.672">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 01</msg>
<status status="PASS" starttime="20190122 07:51:32.665" endtime="20190122 07:51:32.673"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.676" endtime="20190122 07:51:32.681"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:32.935">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 00 06 01 45 3D F1</msg>
<status status="PASS" starttime="20190122 07:51:32.684" endtime="20190122 07:51:32.937"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.940" endtime="20190122 07:51:32.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.948" endtime="20190122 07:51:32.956"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:32.651" endtime="20190122 07:51:32.958"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.961" endtime="20190122 07:51:32.966"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:32.983">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status status="PASS" starttime="20190122 07:51:32.977" endtime="20190122 07:51:32.984"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:32.987" endtime="20190122 07:51:32.993"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:33.250">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 46 3E FB</msg>
<status status="PASS" starttime="20190122 07:51:32.996" endtime="20190122 07:51:33.251"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.255" endtime="20190122 07:51:33.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.273" endtime="20190122 07:51:33.290"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:33.326">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '46', '3E', 'FB']</msg>
<status status="PASS" starttime="20190122 07:51:33.307" endtime="20190122 07:51:33.327"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:33.354">${value} = 00</msg>
<status status="PASS" starttime="20190122 07:51:33.338" endtime="20190122 07:51:33.355"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:32.968" endtime="20190122 07:51:33.358"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:32.638" endtime="20190122 07:51:33.361"></status>
</kw>
<kw name="digit_out_crm_freq_negativtest">
<doc>Toggle the digital output led 2 with the notsupported frequency</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Toggle the digital output led 2 with the notsupported frequency</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.369" endtime="20190122 07:51:33.374"></status>
</kw>
<kw name="SCA_DIGITAL_IO_BLINK_REQ">
<doc>Request message to set blinking for given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${FREQ_NOT_SUPPORTED}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_BLINK_REQ} ${DIG_IO} ${SCA_ENABLED} ${FREQ}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:33.392">${ISI_MSG} = 1E 54 14 8E 00 07 00 01 77 2C 06 01 0B</msg>
<status status="PASS" starttime="20190122 07:51:33.385" endtime="20190122 07:51:33.393"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.396" endtime="20190122 07:51:33.401"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:33.602">${info} = 1E 14 54 8E 00 08 01 0D 77 2D 01 06 01 47 3C F3</msg>
<status status="PASS" starttime="20190122 07:51:33.404" endtime="20190122 07:51:33.603"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.607" endtime="20190122 07:51:33.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${BLINK_RESP} ${EXPECTED_RESULT} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.615" endtime="20190122 07:51:33.625"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:33.376" endtime="20190122 07:51:33.627"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get request, not supported in blink mode, negativtest</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.630" endtime="20190122 07:51:33.634"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_BLINK}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:33.652">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status status="PASS" starttime="20190122 07:51:33.646" endtime="20190122 07:51:33.653"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.656" endtime="20190122 07:51:33.662"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:33.895">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 01 06 02 00 01 40 3E FD</msg>
<status status="PASS" starttime="20190122 07:51:33.665" endtime="20190122 07:51:33.897"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.900" endtime="20190122 07:51:33.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.909" endtime="20190122 07:51:33.917"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:33.925">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '01', '06', '02', '00', '01', '40', '3E', 'FD']</msg>
<status status="PASS" starttime="20190122 07:51:33.920" endtime="20190122 07:51:33.926"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:33.934">${value} = 00</msg>
<status status="PASS" starttime="20190122 07:51:33.928" endtime="20190122 07:51:33.935"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:33.637" endtime="20190122 07:51:33.938"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:33.363" endtime="20190122 07:51:33.940"></status>
</kw>
<kw name="digit_out_crm_high">
<doc>Set the digital output crm high and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm high and test it</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.949" endtime="20190122 07:51:33.953"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_HIGH}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:33.972">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 01</msg>
<status status="PASS" starttime="20190122 07:51:33.966" endtime="20190122 07:51:33.973"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:33.976" endtime="20190122 07:51:33.981"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:34.212">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 41 3D F1</msg>
<status status="PASS" starttime="20190122 07:51:33.984" endtime="20190122 07:51:34.213"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.216" endtime="20190122 07:51:34.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.225" endtime="20190122 07:51:34.234"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:33.955" endtime="20190122 07:51:34.236"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:34.255">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status status="PASS" starttime="20190122 07:51:34.249" endtime="20190122 07:51:34.256"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.259" endtime="20190122 07:51:34.265"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:34.495">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 01 01 42 3D FE</msg>
<status status="PASS" starttime="20190122 07:51:34.269" endtime="20190122 07:51:34.497"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.499" endtime="20190122 07:51:34.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.508" endtime="20190122 07:51:34.516"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:34.524">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '01', '01', '42', '3D', 'FE']</msg>
<status status="PASS" starttime="20190122 07:51:34.519" endtime="20190122 07:51:34.525"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:34.534">${value} = 01</msg>
<status status="PASS" starttime="20190122 07:51:34.528" endtime="20190122 07:51:34.534"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:34.538">${res} = 01</msg>
<status status="PASS" starttime="20190122 07:51:34.238" endtime="20190122 07:51:34.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.549" endtime="20190122 07:51:34.559"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:33.942" endtime="20190122 07:51:34.566"></status>
</kw>
<kw name="digit_out_crm_low">
<doc>Set the digital output crm low and test it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set the digital output crm low and test it</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.582" endtime="20190122 07:51:34.590"></status>
</kw>
<kw name="SCA_DIGITAL_IO_SET_REQ">
<doc>Request message to set given state for given digital IO and test it</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${IO_LOW}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_SET_REQ} ${DIG_IO} ${IO_LEVEL}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:34.611">${ISI_MSG} = 1E 54 14 8E 00 06 00 01 77 28 06 00</msg>
<status status="PASS" starttime="20190122 07:51:34.605" endtime="20190122 07:51:34.612"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.615" endtime="20190122 07:51:34.621"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:34.827">${info} = 1E 14 54 8E 00 08 01 0D 77 29 00 06 01 43 3D F3</msg>
<status status="PASS" starttime="20190122 07:51:34.623" endtime="20190122 07:51:34.828"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.831" endtime="20190122 07:51:34.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${SET_RESP} ${SCA_RESULT_OK} ${DIG_IO}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.840" endtime="20190122 07:51:34.847"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:34.592" endtime="20190122 07:51:34.849"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:34.867">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 06</msg>
<status status="PASS" starttime="20190122 07:51:34.861" endtime="20190122 07:51:34.868"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:34.871" endtime="20190122 07:51:34.877"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:35.110">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 06 00 00 01 44 3D F9</msg>
<status status="PASS" starttime="20190122 07:51:34.879" endtime="20190122 07:51:35.111"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:35.114" endtime="20190122 07:51:35.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:35.123" endtime="20190122 07:51:35.131"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:35.139">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '06', '00', '00', '01', '44', '3D', 'F9']</msg>
<status status="PASS" starttime="20190122 07:51:35.134" endtime="20190122 07:51:35.140"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:35.149">${value} = 00</msg>
<status status="PASS" starttime="20190122 07:51:35.143" endtime="20190122 07:51:35.150"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:35.153">${res} = 00</msg>
<status status="PASS" starttime="20190122 07:51:34.852" endtime="20190122 07:51:35.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:35.157" endtime="20190122 07:51:35.162"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:34.568" endtime="20190122 07:51:35.164"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:35.175" endtime="20190122 07:51:35.245"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:35.248" endtime="20190122 07:51:35.296"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:35.299" endtime="20190122 07:51:35.345"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:37.353">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:51:35.348" endtime="20190122 07:51:37.355"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:37.358" endtime="20190122 07:51:37.406"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:37.409" endtime="20190122 07:51:37.453"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:35.168" endtime="20190122 07:51:37.455"></status>
</kw>
<doc>Implements Test Task SKTB-48413 toggle Digital Output Leds</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:51:22.651" endtime="20190122 07:51:37.457"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:51:38.946">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:51:39.007">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:51:37.507" endtime="20190122 07:51:39.013"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:37.473" endtime="20190122 07:51:39.014"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:37.467" endtime="20190122 07:51:39.040"></status>
</kw>
<doc>Chorus GPIO LED1, LED2, CRM test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:51:19.768" endtime="20190122 07:51:39.041"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49038.robot" name="SKTB-49038" id="s1-s13">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:39.757">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:51:39.753" endtime="20190122 07:51:39.767"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:39.793">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:51:39.795">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:51:42.059">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:51:39.770" endtime="20190122 07:51:42.082"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:39.736" endtime="20190122 07:51:42.088"></status>
</kw>
<test name="SKTB-GPIO FBUS test" id="s1-s13-t1">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:42.142" endtime="20190122 07:51:42.230"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:42.233" endtime="20190122 07:51:42.331"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:42.334" endtime="20190122 07:51:42.405"></status>
</kw>
<kw name="Bidir Wake Up" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:42.407" endtime="20190122 07:51:42.974"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:44.982">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:51:42.977" endtime="20190122 07:51:44.984"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:44.987" endtime="20190122 07:51:45.038"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:45.041" endtime="20190122 07:51:45.119"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:45.122" endtime="20190122 07:51:45.192"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:45.195" endtime="20190122 07:51:45.241"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:45.245" endtime="20190122 07:51:45.313"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:45.316" endtime="20190122 07:51:45.386"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:47.394">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:51:45.390" endtime="20190122 07:51:47.397"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:42.120" endtime="20190122 07:51:47.399"></status>
</kw>
<kw name="digit_input_1">
<doc>Get digital input 1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 1</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:47.408" endtime="20190122 07:51:47.412"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_1_BUTTON_1}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:47.433">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0A</msg>
<status status="PASS" starttime="20190122 07:51:47.427" endtime="20190122 07:51:47.434"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:47.437" endtime="20190122 07:51:47.442"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:47.646">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0A 00 01 01 43 3D F3</msg>
<status status="PASS" starttime="20190122 07:51:47.446" endtime="20190122 07:51:47.647"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:47.650" endtime="20190122 07:51:47.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:47.659" endtime="20190122 07:51:47.667"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:47.674">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0A', '00', '01', '01', '43', '3D', 'F3']</msg>
<status status="PASS" starttime="20190122 07:51:47.670" endtime="20190122 07:51:47.675"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:47.684">${value} = 01</msg>
<status status="PASS" starttime="20190122 07:51:47.678" endtime="20190122 07:51:47.685"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:47.688">${res} = 01</msg>
<status status="PASS" starttime="20190122 07:51:47.415" endtime="20190122 07:51:47.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:47.692" endtime="20190122 07:51:47.697"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:47.402" endtime="20190122 07:51:47.699"></status>
</kw>
<kw name="digit_input_2">
<doc>Get digital input 2</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 2</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:47.707" endtime="20190122 07:51:47.713"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_2_BUTTON_2}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:47.731">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0B</msg>
<status status="PASS" starttime="20190122 07:51:47.725" endtime="20190122 07:51:47.732"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:47.735" endtime="20190122 07:51:47.740"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:47.974">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0B 00 01 01 44 3D F5</msg>
<status status="PASS" starttime="20190122 07:51:47.743" endtime="20190122 07:51:47.974"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:47.977" endtime="20190122 07:51:47.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:47.986" endtime="20190122 07:51:47.994"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:48.002">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0B', '00', '01', '01', '44', '3D', 'F5']</msg>
<status status="PASS" starttime="20190122 07:51:47.997" endtime="20190122 07:51:48.003"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:48.012">${value} = 01</msg>
<status status="PASS" starttime="20190122 07:51:48.006" endtime="20190122 07:51:48.012"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:48.016">${res} = 01</msg>
<status status="PASS" starttime="20190122 07:51:47.715" endtime="20190122 07:51:48.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.020" endtime="20190122 07:51:48.025"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:47.701" endtime="20190122 07:51:48.027"></status>
</kw>
<kw name="digit_input_3">
<doc>Get digital input 3</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input 3</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.036" endtime="20190122 07:51:48.040"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${MCU_DIGIN_3_AIRB_PWM}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:48.082">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0C</msg>
<status status="PASS" starttime="20190122 07:51:48.072" endtime="20190122 07:51:48.083"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.088" endtime="20190122 07:51:48.094"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:48.295">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0C 00 01 01 47 3D F1</msg>
<status status="PASS" starttime="20190122 07:51:48.097" endtime="20190122 07:51:48.297"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.300" endtime="20190122 07:51:48.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.308" endtime="20190122 07:51:48.316"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:48.324">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0C', '00', '01', '01', '47', '3D', 'F1']</msg>
<status status="PASS" starttime="20190122 07:51:48.319" endtime="20190122 07:51:48.325"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:48.337">${value} = 01</msg>
<status status="PASS" starttime="20190122 07:51:48.328" endtime="20190122 07:51:48.338"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:48.341">${res} = 01</msg>
<status status="PASS" starttime="20190122 07:51:48.050" endtime="20190122 07:51:48.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_HIGH}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.345" endtime="20190122 07:51:48.350"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:48.029" endtime="20190122 07:51:48.353"></status>
</kw>
<kw name="digit_input_bid">
<doc>Get digital input BIDR WUL</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Get digital input BIDR WUL</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.361" endtime="20190122 07:51:48.366"></status>
</kw>
<kw name="SCA_DIGITAL_IO_GET_REQ">
<doc>Request message requesting current state of given digital IO</doc>
<arguments>
<arg>${BIDIR_WUL_IN}</arg>
<arg>${MODE_STATIC}</arg>
<arg>${SCA_RESULT_OK}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_GET_REQ} ${DIG_IO}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:48.383">${ISI_MSG} = 1E 54 14 8E 00 05 00 01 77 25 0E</msg>
<status status="PASS" starttime="20190122 07:51:48.377" endtime="20190122 07:51:48.385"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg (GET_ REQ): ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.388" endtime="20190122 07:51:48.394"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:48.623">${info} = 1E 14 54 8E 00 0A 01 0D 77 26 00 0E 00 01 01 40 3D F4</msg>
<status status="PASS" starttime="20190122 07:51:48.397" endtime="20190122 07:51:48.623"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.627" endtime="20190122 07:51:48.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${TRANSACTION_ID} ${GET_RESP} ${EXPECTED_RESULT} ${DIG_IO} ${MODE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.635" endtime="20190122 07:51:48.643"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${info}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:48.651">${list} = ['1E', '14', '54', '8E', '00', '0A', '01', '0D', '77', '26', '00', '0E', '00', '01', '01', '40', '3D', 'F4']</msg>
<status status="PASS" starttime="20190122 07:51:48.646" endtime="20190122 07:51:48.652"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${13}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:48.661">${value} = 01</msg>
<status status="PASS" starttime="20190122 07:51:48.655" endtime="20190122 07:51:48.662"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:48.665">${res} = 01</msg>
<status status="PASS" starttime="20190122 07:51:48.368" endtime="20190122 07:51:48.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${res}</arg>
<arg>${IO_LOW}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:51:48.676">'01' does not contain '00'</msg>
<status status="FAIL" starttime="20190122 07:51:48.669" endtime="20190122 07:51:48.677"></status>
</kw>
<status status="FAIL" starttime="20190122 07:51:48.355" endtime="20190122 07:51:48.680"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.691" endtime="20190122 07:51:48.761"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.764" endtime="20190122 07:51:48.814"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:48.817" endtime="20190122 07:51:48.863"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:50.871">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:51:48.866" endtime="20190122 07:51:50.873"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:50.876" endtime="20190122 07:51:50.922"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:50.925" endtime="20190122 07:51:50.969"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:48.684" endtime="20190122 07:51:50.972"></status>
</kw>
<doc>Implements Test Task SKTB-49038</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20190122 07:51:42.090" endtime="20190122 07:51:50.973">'01' does not contain '00'</status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:51:52.483">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:51:52.550">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:51:51.023" endtime="20190122 07:51:52.554"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:50.989" endtime="20190122 07:51:52.555"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:50.984" endtime="20190122 07:51:52.590"></status>
</kw>
<doc>Chorus GPIO input 1,2,3 BID_wul test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190122 07:51:39.224" endtime="20190122 07:51:52.591"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-49357.robot" name="SKTB-49357" id="s1-s14">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:53.348">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:51:53.343" endtime="20190122 07:51:53.372"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:53.380">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:51:53.389">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:51:55.477">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:51:53.374" endtime="20190122 07:51:55.490"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:53.316" endtime="20190122 07:51:55.496"></status>
</kw>
<test name="SKTB-49357 Gpio pwm test" id="s1-s14-t1">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off and on after defined time</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:55.537" endtime="20190122 07:51:55.677"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:55.693" endtime="20190122 07:51:55.791"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:55.799" endtime="20190122 07:51:55.959"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:57.978">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:51:55.973" endtime="20190122 07:51:57.980"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:57.988" endtime="20190122 07:51:58.057"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:58.060" endtime="20190122 07:51:58.109"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:58.112" endtime="20190122 07:51:58.157"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:58.160" endtime="20190122 07:51:58.205"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:58.210" endtime="20190122 07:51:58.269"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:58.272" endtime="20190122 07:51:58.342"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${15000}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:58.350" endtime="20190122 07:51:58.414"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:51:59.422">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:51:58.418" endtime="20190122 07:51:59.425"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:55.530" endtime="20190122 07:51:59.427"></status>
</kw>
<kw name="digit_out_hs_1">
<doc>Set pwm for the digital output hs 1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 1</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:59.436" endtime="20190122 07:51:59.440"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_1}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:59.450" endtime="20190122 07:51:59.455"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:59.475">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 20</msg>
<status status="PASS" starttime="20190122 07:51:59.468" endtime="20190122 07:51:59.476"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:59.479" endtime="20190122 07:51:59.485"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:59.687">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 43 3D F7</msg>
<status status="PASS" starttime="20190122 07:51:59.487" endtime="20190122 07:51:59.689"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:59.692" endtime="20190122 07:51:59.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:59.700" endtime="20190122 07:51:59.706"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:59.714">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '43', '3D', 'F7']</msg>
<status status="PASS" starttime="20190122 07:51:59.709" endtime="20190122 07:51:59.715"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:59.723">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190122 07:51:59.718" endtime="20190122 07:51:59.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:59.727" endtime="20190122 07:51:59.733"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:59.741">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:51:59.735" endtime="20190122 07:51:59.742"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:51:59.745">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:51:59.457" endtime="20190122 07:51:59.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:59.749" endtime="20190122 07:51:59.755"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:59.759" endtime="20190122 07:51:59.765"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:51:59.791">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0064 64</msg>
<status status="PASS" starttime="20190122 07:51:59.780" endtime="20190122 07:51:59.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:51:59.804" endtime="20190122 07:51:59.817"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.033">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 44 3D F0</msg>
<status status="PASS" starttime="20190122 07:51:59.828" endtime="20190122 07:52:00.034"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.037" endtime="20190122 07:52:00.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.046" endtime="20190122 07:52:00.051"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.059">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '44', '3D', 'F0']</msg>
<status status="PASS" starttime="20190122 07:52:00.054" endtime="20190122 07:52:00.060"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.069">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190122 07:52:00.063" endtime="20190122 07:52:00.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.072" endtime="20190122 07:52:00.078"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.087">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:00.081" endtime="20190122 07:52:00.087"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:00.091">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:51:59.768" endtime="20190122 07:52:00.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.095" endtime="20190122 07:52:00.101"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.103" endtime="20190122 07:52:00.108"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.128">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0001 01</msg>
<status status="PASS" starttime="20190122 07:52:00.121" endtime="20190122 07:52:00.129"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.132" endtime="20190122 07:52:00.137"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.369">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 00 01 45 3D F1</msg>
<status status="PASS" starttime="20190122 07:52:00.140" endtime="20190122 07:52:00.370"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.373" endtime="20190122 07:52:00.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.381" endtime="20190122 07:52:00.387"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.395">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '00', '01', '45', '3D', 'F1']</msg>
<status status="PASS" starttime="20190122 07:52:00.390" endtime="20190122 07:52:00.396"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.405">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190122 07:52:00.399" endtime="20190122 07:52:00.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.408" endtime="20190122 07:52:00.414"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.423">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:00.417" endtime="20190122 07:52:00.423"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:00.427">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:00.110" endtime="20190122 07:52:00.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.431" endtime="20190122 07:52:00.436"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.439" endtime="20190122 07:52:00.444"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.464">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0065 65</msg>
<status status="PASS" starttime="20190122 07:52:00.457" endtime="20190122 07:52:00.466"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.469" endtime="20190122 07:52:00.475"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.705">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 46 3C F2</msg>
<status status="PASS" starttime="20190122 07:52:00.477" endtime="20190122 07:52:00.706"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.709" endtime="20190122 07:52:00.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.717" endtime="20190122 07:52:00.726"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.733">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '46', '3C', 'F2']</msg>
<status status="PASS" starttime="20190122 07:52:00.729" endtime="20190122 07:52:00.734"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.743">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190122 07:52:00.737" endtime="20190122 07:52:00.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.747" endtime="20190122 07:52:00.752"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.761">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:00.755" endtime="20190122 07:52:00.761"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:00.765">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:00.446" endtime="20190122 07:52:00.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.769" endtime="20190122 07:52:00.774"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.777" endtime="20190122 07:52:00.782"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:00.825">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 65</msg>
<status status="PASS" starttime="20190122 07:52:00.805" endtime="20190122 07:52:00.826"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:00.832" endtime="20190122 07:52:00.841"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.042">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 47 3C F3</msg>
<status status="PASS" starttime="20190122 07:52:00.843" endtime="20190122 07:52:01.043"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.047" endtime="20190122 07:52:01.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.055" endtime="20190122 07:52:01.061"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.069">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '47', '3C', 'F3']</msg>
<status status="PASS" starttime="20190122 07:52:01.064" endtime="20190122 07:52:01.069"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.078">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190122 07:52:01.072" endtime="20190122 07:52:01.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.082" endtime="20190122 07:52:01.087"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.096">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:01.090" endtime="20190122 07:52:01.097"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:01.100">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:00.784" endtime="20190122 07:52:01.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.104" endtime="20190122 07:52:01.109"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.112" endtime="20190122 07:52:01.117"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.138">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0065 20</msg>
<status status="PASS" starttime="20190122 07:52:01.131" endtime="20190122 07:52:01.139"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.142" endtime="20190122 07:52:01.148"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.387">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 42 3C F6</msg>
<status status="PASS" starttime="20190122 07:52:01.151" endtime="20190122 07:52:01.389"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.392" endtime="20190122 07:52:01.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.400" endtime="20190122 07:52:01.406"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.414">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '42', '3C', 'F6']</msg>
<status status="PASS" starttime="20190122 07:52:01.409" endtime="20190122 07:52:01.415"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.423">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190122 07:52:01.417" endtime="20190122 07:52:01.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.427" endtime="20190122 07:52:01.433"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.444">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:01.436" endtime="20190122 07:52:01.445"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:01.449">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:01.119" endtime="20190122 07:52:01.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.452" endtime="20190122 07:52:01.458"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.461" endtime="20190122 07:52:01.465"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.486">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0020 00</msg>
<status status="PASS" starttime="20190122 07:52:01.478" endtime="20190122 07:52:01.486"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.489" endtime="20190122 07:52:01.495"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.723">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 43 3C F7</msg>
<status status="PASS" starttime="20190122 07:52:01.498" endtime="20190122 07:52:01.725"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.728" endtime="20190122 07:52:01.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.736" endtime="20190122 07:52:01.742"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.750">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '43', '3C', 'F7']</msg>
<status status="PASS" starttime="20190122 07:52:01.745" endtime="20190122 07:52:01.751"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.759">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190122 07:52:01.754" endtime="20190122 07:52:01.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.763" endtime="20190122 07:52:01.769"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.778">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:01.771" endtime="20190122 07:52:01.778"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:01.782">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:01.468" endtime="20190122 07:52:01.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.786" endtime="20190122 07:52:01.800"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.808" endtime="20190122 07:52:01.825"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:01.852">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0000 20</msg>
<status status="PASS" starttime="20190122 07:52:01.845" endtime="20190122 07:52:01.853"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:01.856" endtime="20190122 07:52:01.862"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.066">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 44 3C F0</msg>
<status status="PASS" starttime="20190122 07:52:01.865" endtime="20190122 07:52:02.067"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.070" endtime="20190122 07:52:02.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.079" endtime="20190122 07:52:02.085"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.093">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '44', '3C', 'F0']</msg>
<status status="PASS" starttime="20190122 07:52:02.088" endtime="20190122 07:52:02.094"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.102">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190122 07:52:02.097" endtime="20190122 07:52:02.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.106" endtime="20190122 07:52:02.112"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.120">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:02.115" endtime="20190122 07:52:02.121"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:02.125">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:01.827" endtime="20190122 07:52:02.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.128" endtime="20190122 07:52:02.134"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.137" endtime="20190122 07:52:02.142"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.165">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 00 01 0000 00</msg>
<status status="PASS" starttime="20190122 07:52:02.154" endtime="20190122 07:52:02.166"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.169" endtime="20190122 07:52:02.175"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.433">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 00 01 47 3C F3</msg>
<status status="PASS" starttime="20190122 07:52:02.178" endtime="20190122 07:52:02.434"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.437" endtime="20190122 07:52:02.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.446" endtime="20190122 07:52:02.451"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.459">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '00', '01', '47', '3C', 'F3']</msg>
<status status="PASS" starttime="20190122 07:52:02.454" endtime="20190122 07:52:02.460"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.469">${gpio_id} = 00</msg>
<status status="PASS" starttime="20190122 07:52:02.463" endtime="20190122 07:52:02.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.472" endtime="20190122 07:52:02.478"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.487">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:02.481" endtime="20190122 07:52:02.488"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:02.492">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:02.144" endtime="20190122 07:52:02.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.496" endtime="20190122 07:52:02.502"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:59.443" endtime="20190122 07:52:02.504"></status>
</kw>
<status status="PASS" starttime="20190122 07:51:59.430" endtime="20190122 07:52:02.506"></status>
</kw>
<kw name="digit_out_hs_2">
<doc>Set pwm for the digital output hs 2</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 2</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.514" endtime="20190122 07:52:02.519"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_2}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.529" endtime="20190122 07:52:02.533"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.574">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 20</msg>
<status status="PASS" starttime="20190122 07:52:02.558" endtime="20190122 07:52:02.575"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.586" endtime="20190122 07:52:02.597"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.798">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 40 3D F5</msg>
<status status="PASS" starttime="20190122 07:52:02.600" endtime="20190122 07:52:02.799"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.802" endtime="20190122 07:52:02.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.811" endtime="20190122 07:52:02.817"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.824">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '40', '3D', 'F5']</msg>
<status status="PASS" starttime="20190122 07:52:02.819" endtime="20190122 07:52:02.825"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.834">${gpio_id} = 01</msg>
<status status="PASS" starttime="20190122 07:52:02.828" endtime="20190122 07:52:02.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.837" endtime="20190122 07:52:02.843"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.852">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:02.846" endtime="20190122 07:52:02.853"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:02.856">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:02.535" endtime="20190122 07:52:02.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.860" endtime="20190122 07:52:02.867"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.870" endtime="20190122 07:52:02.874"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:02.897">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0064 64</msg>
<status status="PASS" starttime="20190122 07:52:02.887" endtime="20190122 07:52:02.898"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:02.901" endtime="20190122 07:52:02.910"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:03.141">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 41 3D F4</msg>
<status status="PASS" starttime="20190122 07:52:02.913" endtime="20190122 07:52:03.142"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.145" endtime="20190122 07:52:03.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.153" endtime="20190122 07:52:03.159"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:03.168">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '41', '3D', 'F4']</msg>
<status status="PASS" starttime="20190122 07:52:03.162" endtime="20190122 07:52:03.169"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:03.177">${gpio_id} = 01</msg>
<status status="PASS" starttime="20190122 07:52:03.172" endtime="20190122 07:52:03.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.181" endtime="20190122 07:52:03.187"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:03.195">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:03.190" endtime="20190122 07:52:03.196"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:03.200">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:02.877" endtime="20190122 07:52:03.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.204" endtime="20190122 07:52:03.211"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.225" endtime="20190122 07:52:03.254"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:03.309">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0001 01</msg>
<status status="PASS" starttime="20190122 07:52:03.280" endtime="20190122 07:52:03.310"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.318" endtime="20190122 07:52:03.328"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:03.564">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 01 01 42 3D F7</msg>
<status status="PASS" starttime="20190122 07:52:03.331" endtime="20190122 07:52:03.565"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.568" endtime="20190122 07:52:03.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.598" endtime="20190122 07:52:03.615"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:03.632">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '01', '01', '42', '3D', 'F7']</msg>
<status status="PASS" starttime="20190122 07:52:03.618" endtime="20190122 07:52:03.633"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:03.679">${gpio_id} = 01</msg>
<status status="PASS" starttime="20190122 07:52:03.636" endtime="20190122 07:52:03.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.694" endtime="20190122 07:52:03.701"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:03.721">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:03.715" endtime="20190122 07:52:03.722"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:03.733">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:03.256" endtime="20190122 07:52:03.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.737" endtime="20190122 07:52:03.749"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.752" endtime="20190122 07:52:03.757"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:03.777">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0065 65</msg>
<status status="PASS" starttime="20190122 07:52:03.770" endtime="20190122 07:52:03.778"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:03.781" endtime="20190122 07:52:03.786"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.028">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 43 3C F6</msg>
<status status="PASS" starttime="20190122 07:52:03.790" endtime="20190122 07:52:04.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.032" endtime="20190122 07:52:04.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.042" endtime="20190122 07:52:04.047"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.069">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '43', '3C', 'F6']</msg>
<status status="PASS" starttime="20190122 07:52:04.050" endtime="20190122 07:52:04.070"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.079">${gpio_id} = 01</msg>
<status status="PASS" starttime="20190122 07:52:04.073" endtime="20190122 07:52:04.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.082" endtime="20190122 07:52:04.088"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.097">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:04.091" endtime="20190122 07:52:04.097"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:04.101">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:03.759" endtime="20190122 07:52:04.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.105" endtime="20190122 07:52:04.111"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.114" endtime="20190122 07:52:04.118"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.139">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 65</msg>
<status status="PASS" starttime="20190122 07:52:04.132" endtime="20190122 07:52:04.140"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.143" endtime="20190122 07:52:04.149"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.394">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 44 3C F1</msg>
<status status="PASS" starttime="20190122 07:52:04.152" endtime="20190122 07:52:04.395"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.398" endtime="20190122 07:52:04.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.407" endtime="20190122 07:52:04.413"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.421">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '44', '3C', 'F1']</msg>
<status status="PASS" starttime="20190122 07:52:04.416" endtime="20190122 07:52:04.422"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.430">${gpio_id} = 01</msg>
<status status="PASS" starttime="20190122 07:52:04.425" endtime="20190122 07:52:04.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.434" endtime="20190122 07:52:04.440"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.449">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:04.443" endtime="20190122 07:52:04.450"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:04.453">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:04.121" endtime="20190122 07:52:04.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.457" endtime="20190122 07:52:04.462"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.465" endtime="20190122 07:52:04.470"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.490">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0065 20</msg>
<status status="PASS" starttime="20190122 07:52:04.483" endtime="20190122 07:52:04.491"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.494" endtime="20190122 07:52:04.500"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.731">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 45 3C F0</msg>
<status status="PASS" starttime="20190122 07:52:04.504" endtime="20190122 07:52:04.731"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.735" endtime="20190122 07:52:04.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.743" endtime="20190122 07:52:04.749"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.757">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '45', '3C', 'F0']</msg>
<status status="PASS" starttime="20190122 07:52:04.752" endtime="20190122 07:52:04.758"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.767">${gpio_id} = 01</msg>
<status status="PASS" starttime="20190122 07:52:04.761" endtime="20190122 07:52:04.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.770" endtime="20190122 07:52:04.776"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.785">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:04.779" endtime="20190122 07:52:04.785"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:04.789">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:04.472" endtime="20190122 07:52:04.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.802" endtime="20190122 07:52:04.812"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.819" endtime="20190122 07:52:04.832"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:04.857">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0020 00</msg>
<status status="PASS" starttime="20190122 07:52:04.850" endtime="20190122 07:52:04.858"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:04.861" endtime="20190122 07:52:04.867"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.070">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 44 3C F1</msg>
<status status="PASS" starttime="20190122 07:52:04.870" endtime="20190122 07:52:05.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.074" endtime="20190122 07:52:05.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.083" endtime="20190122 07:52:05.089"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.097">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '44', '3C', 'F1']</msg>
<status status="PASS" starttime="20190122 07:52:05.092" endtime="20190122 07:52:05.098"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.107">${gpio_id} = 01</msg>
<status status="PASS" starttime="20190122 07:52:05.101" endtime="20190122 07:52:05.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.111" endtime="20190122 07:52:05.117"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.126">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:05.120" endtime="20190122 07:52:05.127"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:05.131">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:04.834" endtime="20190122 07:52:05.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.135" endtime="20190122 07:52:05.140"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.143" endtime="20190122 07:52:05.148"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.169">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0000 20</msg>
<status status="PASS" starttime="20190122 07:52:05.161" endtime="20190122 07:52:05.170"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.174" endtime="20190122 07:52:05.180"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.411">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 45 3C F0</msg>
<status status="PASS" starttime="20190122 07:52:05.182" endtime="20190122 07:52:05.412"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.415" endtime="20190122 07:52:05.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.424" endtime="20190122 07:52:05.430"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.437">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '45', '3C', 'F0']</msg>
<status status="PASS" starttime="20190122 07:52:05.433" endtime="20190122 07:52:05.438"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.447">${gpio_id} = 01</msg>
<status status="PASS" starttime="20190122 07:52:05.441" endtime="20190122 07:52:05.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.451" endtime="20190122 07:52:05.456"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.465">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:05.459" endtime="20190122 07:52:05.466"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:05.469">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:05.150" endtime="20190122 07:52:05.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.473" endtime="20190122 07:52:05.479"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.482" endtime="20190122 07:52:05.487"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.508">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 01 01 0000 00</msg>
<status status="PASS" starttime="20190122 07:52:05.500" endtime="20190122 07:52:05.509"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.511" endtime="20190122 07:52:05.517"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.749">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 01 01 46 3C F3</msg>
<status status="PASS" starttime="20190122 07:52:05.520" endtime="20190122 07:52:05.750"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.754" endtime="20190122 07:52:05.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.763" endtime="20190122 07:52:05.768"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.776">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '01', '01', '46', '3C', 'F3']</msg>
<status status="PASS" starttime="20190122 07:52:05.771" endtime="20190122 07:52:05.777"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.786">${gpio_id} = 01</msg>
<status status="PASS" starttime="20190122 07:52:05.780" endtime="20190122 07:52:05.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.789" endtime="20190122 07:52:05.809"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.826">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:05.812" endtime="20190122 07:52:05.827"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:05.834">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:05.489" endtime="20190122 07:52:05.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.839" endtime="20190122 07:52:05.845"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:02.521" endtime="20190122 07:52:05.847"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:02.508" endtime="20190122 07:52:05.850"></status>
</kw>
<kw name="digit_out_hs_3">
<doc>Set pwm for the digital output hs 3</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output hs 3</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.859" endtime="20190122 07:52:05.864"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_3}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.874" endtime="20190122 07:52:05.879"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:05.900">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 20</msg>
<status status="PASS" starttime="20190122 07:52:05.892" endtime="20190122 07:52:05.901"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:05.904" endtime="20190122 07:52:05.910"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.113">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 47 3D F1</msg>
<status status="PASS" starttime="20190122 07:52:05.913" endtime="20190122 07:52:06.114"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.117" endtime="20190122 07:52:06.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.126" endtime="20190122 07:52:06.131"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.139">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '47', '3D', 'F1']</msg>
<status status="PASS" starttime="20190122 07:52:06.134" endtime="20190122 07:52:06.140"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.149">${gpio_id} = 02</msg>
<status status="PASS" starttime="20190122 07:52:06.143" endtime="20190122 07:52:06.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.152" endtime="20190122 07:52:06.158"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.167">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:06.161" endtime="20190122 07:52:06.167"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:06.171">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:05.882" endtime="20190122 07:52:06.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.175" endtime="20190122 07:52:06.180"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.183" endtime="20190122 07:52:06.188"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.208">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0064 64</msg>
<status status="PASS" starttime="20190122 07:52:06.200" endtime="20190122 07:52:06.209"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.212" endtime="20190122 07:52:06.218"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.447">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 40 3D F6</msg>
<status status="PASS" starttime="20190122 07:52:06.221" endtime="20190122 07:52:06.448"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.451" endtime="20190122 07:52:06.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.460" endtime="20190122 07:52:06.469"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.477">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '40', '3D', 'F6']</msg>
<status status="PASS" starttime="20190122 07:52:06.472" endtime="20190122 07:52:06.478"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.487">${gpio_id} = 02</msg>
<status status="PASS" starttime="20190122 07:52:06.481" endtime="20190122 07:52:06.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.490" endtime="20190122 07:52:06.497"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.506">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:06.500" endtime="20190122 07:52:06.507"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:06.510">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:06.190" endtime="20190122 07:52:06.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.514" endtime="20190122 07:52:06.520"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.522" endtime="20190122 07:52:06.527"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.560">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0001 01</msg>
<status status="PASS" starttime="20190122 07:52:06.540" endtime="20190122 07:52:06.565"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.568" endtime="20190122 07:52:06.584"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.832">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 02 01 41 3D F7</msg>
<status status="PASS" starttime="20190122 07:52:06.587" endtime="20190122 07:52:06.833"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.836" endtime="20190122 07:52:06.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.857" endtime="20190122 07:52:06.863"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.871">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '02', '01', '41', '3D', 'F7']</msg>
<status status="PASS" starttime="20190122 07:52:06.866" endtime="20190122 07:52:06.872"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.882">${gpio_id} = 02</msg>
<status status="PASS" starttime="20190122 07:52:06.875" endtime="20190122 07:52:06.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.886" endtime="20190122 07:52:06.892"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.900">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:06.895" endtime="20190122 07:52:06.901"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:06.905">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:06.529" endtime="20190122 07:52:06.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.909" endtime="20190122 07:52:06.914"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.917" endtime="20190122 07:52:06.922"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:06.942">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0065 65</msg>
<status status="PASS" starttime="20190122 07:52:06.935" endtime="20190122 07:52:06.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:06.946" endtime="20190122 07:52:06.952"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.186">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 42 3C F4</msg>
<status status="PASS" starttime="20190122 07:52:06.955" endtime="20190122 07:52:07.187"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.189" endtime="20190122 07:52:07.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.198" endtime="20190122 07:52:07.203"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.212">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '42', '3C', 'F4']</msg>
<status status="PASS" starttime="20190122 07:52:07.207" endtime="20190122 07:52:07.212"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.222">${gpio_id} = 02</msg>
<status status="PASS" starttime="20190122 07:52:07.215" endtime="20190122 07:52:07.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.226" endtime="20190122 07:52:07.231"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.240">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:07.234" endtime="20190122 07:52:07.241"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:07.245">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:06.924" endtime="20190122 07:52:07.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.248" endtime="20190122 07:52:07.257"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.260" endtime="20190122 07:52:07.265"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.286">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 65</msg>
<status status="PASS" starttime="20190122 07:52:07.279" endtime="20190122 07:52:07.287"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.290" endtime="20190122 07:52:07.307"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.530">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 43 3C F5</msg>
<status status="PASS" starttime="20190122 07:52:07.310" endtime="20190122 07:52:07.531"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.535" endtime="20190122 07:52:07.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.543" endtime="20190122 07:52:07.549"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.557">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '43', '3C', 'F5']</msg>
<status status="PASS" starttime="20190122 07:52:07.552" endtime="20190122 07:52:07.558"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.566">${gpio_id} = 02</msg>
<status status="PASS" starttime="20190122 07:52:07.561" endtime="20190122 07:52:07.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.570" endtime="20190122 07:52:07.575"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.584">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:07.578" endtime="20190122 07:52:07.585"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:07.589">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:07.267" endtime="20190122 07:52:07.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.592" endtime="20190122 07:52:07.598"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.601" endtime="20190122 07:52:07.606"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.626">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0065 20</msg>
<status status="PASS" starttime="20190122 07:52:07.619" endtime="20190122 07:52:07.627"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.630" endtime="20190122 07:52:07.636"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.865">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 44 3C F2</msg>
<status status="PASS" starttime="20190122 07:52:07.639" endtime="20190122 07:52:07.866"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.870" endtime="20190122 07:52:07.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.878" endtime="20190122 07:52:07.885"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.894">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '44', '3C', 'F2']</msg>
<status status="PASS" starttime="20190122 07:52:07.889" endtime="20190122 07:52:07.895"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.903">${gpio_id} = 02</msg>
<status status="PASS" starttime="20190122 07:52:07.898" endtime="20190122 07:52:07.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.907" endtime="20190122 07:52:07.913"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.922">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:07.916" endtime="20190122 07:52:07.923"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:07.926">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:07.608" endtime="20190122 07:52:07.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.930" endtime="20190122 07:52:07.936"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.938" endtime="20190122 07:52:07.943"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:07.967">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0020 00</msg>
<status status="PASS" starttime="20190122 07:52:07.956" endtime="20190122 07:52:07.968"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:07.971" endtime="20190122 07:52:07.977"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.211">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 45 3C F3</msg>
<status status="PASS" starttime="20190122 07:52:07.980" endtime="20190122 07:52:08.212"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.215" endtime="20190122 07:52:08.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.223" endtime="20190122 07:52:08.229"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.237">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '45', '3C', 'F3']</msg>
<status status="PASS" starttime="20190122 07:52:08.232" endtime="20190122 07:52:08.238"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.246">${gpio_id} = 02</msg>
<status status="PASS" starttime="20190122 07:52:08.241" endtime="20190122 07:52:08.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.250" endtime="20190122 07:52:08.256"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.264">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:08.258" endtime="20190122 07:52:08.265"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:08.269">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:07.945" endtime="20190122 07:52:08.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.272" endtime="20190122 07:52:08.278"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.281" endtime="20190122 07:52:08.286"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.328">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0000 20</msg>
<status status="PASS" starttime="20190122 07:52:08.312" endtime="20190122 07:52:08.333"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.338" endtime="20190122 07:52:08.344"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.547">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 46 3C F0</msg>
<status status="PASS" starttime="20190122 07:52:08.347" endtime="20190122 07:52:08.548"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.552" endtime="20190122 07:52:08.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.561" endtime="20190122 07:52:08.566"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.574">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '46', '3C', 'F0']</msg>
<status status="PASS" starttime="20190122 07:52:08.569" endtime="20190122 07:52:08.575"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.584">${gpio_id} = 02</msg>
<status status="PASS" starttime="20190122 07:52:08.578" endtime="20190122 07:52:08.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.587" endtime="20190122 07:52:08.593"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.602">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:08.596" endtime="20190122 07:52:08.603"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:08.606">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:08.288" endtime="20190122 07:52:08.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.610" endtime="20190122 07:52:08.616"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.619" endtime="20190122 07:52:08.623"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.644">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 02 01 0000 00</msg>
<status status="PASS" starttime="20190122 07:52:08.637" endtime="20190122 07:52:08.645"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.648" endtime="20190122 07:52:08.653"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.883">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 02 01 47 3C F1</msg>
<status status="PASS" starttime="20190122 07:52:08.656" endtime="20190122 07:52:08.884"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.887" endtime="20190122 07:52:08.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.895" endtime="20190122 07:52:08.901"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.913">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '02', '01', '47', '3C', 'F1']</msg>
<status status="PASS" starttime="20190122 07:52:08.904" endtime="20190122 07:52:08.914"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.923">${gpio_id} = 02</msg>
<status status="PASS" starttime="20190122 07:52:08.917" endtime="20190122 07:52:08.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.927" endtime="20190122 07:52:08.933"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:08.941">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:08.936" endtime="20190122 07:52:08.942"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:08.946">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:08.626" endtime="20190122 07:52:08.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.950" endtime="20190122 07:52:08.955"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:05.866" endtime="20190122 07:52:08.958"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:05.853" endtime="20190122 07:52:08.960"></status>
</kw>
<kw name="digit_out_hs_4">
<doc>Set for the digital output hs 4</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set for the digital output hs 4</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.969" endtime="20190122 07:52:08.974"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${HI_SIDE_SW_4}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:08.983" endtime="20190122 07:52:08.989"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.010">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 20</msg>
<status status="PASS" starttime="20190122 07:52:09.002" endtime="20190122 07:52:09.011"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.014" endtime="20190122 07:52:09.020"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.250">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 42 3D F5</msg>
<status status="PASS" starttime="20190122 07:52:09.023" endtime="20190122 07:52:09.251"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.255" endtime="20190122 07:52:09.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.263" endtime="20190122 07:52:09.269"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.277">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '42', '3D', 'F5']</msg>
<status status="PASS" starttime="20190122 07:52:09.272" endtime="20190122 07:52:09.278"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.286">${gpio_id} = 03</msg>
<status status="PASS" starttime="20190122 07:52:09.281" endtime="20190122 07:52:09.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.290" endtime="20190122 07:52:09.309"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.326">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:09.312" endtime="20190122 07:52:09.327"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:09.334">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:08.991" endtime="20190122 07:52:09.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.338" endtime="20190122 07:52:09.343"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.346" endtime="20190122 07:52:09.351"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.371">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0064 64</msg>
<status status="PASS" starttime="20190122 07:52:09.364" endtime="20190122 07:52:09.372"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.375" endtime="20190122 07:52:09.381"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.582">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 43 3D F4</msg>
<status status="PASS" starttime="20190122 07:52:09.385" endtime="20190122 07:52:09.583"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.587" endtime="20190122 07:52:09.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.595" endtime="20190122 07:52:09.601"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.609">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '43', '3D', 'F4']</msg>
<status status="PASS" starttime="20190122 07:52:09.604" endtime="20190122 07:52:09.610"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.619">${gpio_id} = 03</msg>
<status status="PASS" starttime="20190122 07:52:09.613" endtime="20190122 07:52:09.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.622" endtime="20190122 07:52:09.632"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.641">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:09.635" endtime="20190122 07:52:09.642"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:09.645">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:09.353" endtime="20190122 07:52:09.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.649" endtime="20190122 07:52:09.654"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.658" endtime="20190122 07:52:09.667"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.689">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0001 01</msg>
<status status="PASS" starttime="20190122 07:52:09.681" endtime="20190122 07:52:09.690"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.692" endtime="20190122 07:52:09.698"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.927">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 03 01 44 3D F3</msg>
<status status="PASS" starttime="20190122 07:52:09.701" endtime="20190122 07:52:09.929"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.932" endtime="20190122 07:52:09.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.940" endtime="20190122 07:52:09.946"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.954">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '03', '01', '44', '3D', 'F3']</msg>
<status status="PASS" starttime="20190122 07:52:09.949" endtime="20190122 07:52:09.955"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.963">${gpio_id} = 03</msg>
<status status="PASS" starttime="20190122 07:52:09.958" endtime="20190122 07:52:09.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.967" endtime="20190122 07:52:09.972"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:09.981">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:09.975" endtime="20190122 07:52:09.982"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:09.985">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:09.670" endtime="20190122 07:52:09.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.989" endtime="20190122 07:52:09.995"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:09.997" endtime="20190122 07:52:10.003"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.024">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0065 65</msg>
<status status="PASS" starttime="20190122 07:52:10.016" endtime="20190122 07:52:10.025"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.028" endtime="20190122 07:52:10.033"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.265">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 45 3C F2</msg>
<status status="PASS" starttime="20190122 07:52:10.036" endtime="20190122 07:52:10.266"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.270" endtime="20190122 07:52:10.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.278" endtime="20190122 07:52:10.284"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.292">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '45', '3C', 'F2']</msg>
<status status="PASS" starttime="20190122 07:52:10.287" endtime="20190122 07:52:10.293"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.301">${gpio_id} = 03</msg>
<status status="PASS" starttime="20190122 07:52:10.296" endtime="20190122 07:52:10.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.305" endtime="20190122 07:52:10.311"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.319">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:10.314" endtime="20190122 07:52:10.320"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:10.325">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:10.005" endtime="20190122 07:52:10.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.329" endtime="20190122 07:52:10.334"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.337" endtime="20190122 07:52:10.342"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.366">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 65</msg>
<status status="PASS" starttime="20190122 07:52:10.355" endtime="20190122 07:52:10.367"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.370" endtime="20190122 07:52:10.378"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.609">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 46 3C F1</msg>
<status status="PASS" starttime="20190122 07:52:10.382" endtime="20190122 07:52:10.610"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.614" endtime="20190122 07:52:10.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.623" endtime="20190122 07:52:10.628"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.636">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '46', '3C', 'F1']</msg>
<status status="PASS" starttime="20190122 07:52:10.631" endtime="20190122 07:52:10.637"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.646">${gpio_id} = 03</msg>
<status status="PASS" starttime="20190122 07:52:10.640" endtime="20190122 07:52:10.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.649" endtime="20190122 07:52:10.655"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.663">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:10.658" endtime="20190122 07:52:10.664"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:10.668">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:10.344" endtime="20190122 07:52:10.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.672" endtime="20190122 07:52:10.677"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.680" endtime="20190122 07:52:10.685"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.705">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0065 20</msg>
<status status="PASS" starttime="20190122 07:52:10.698" endtime="20190122 07:52:10.706"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.709" endtime="20190122 07:52:10.714"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.943">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 47 3C F0</msg>
<status status="PASS" starttime="20190122 07:52:10.717" endtime="20190122 07:52:10.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.947" endtime="20190122 07:52:10.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.955" endtime="20190122 07:52:10.961"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.969">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '47', '3C', 'F0']</msg>
<status status="PASS" starttime="20190122 07:52:10.964" endtime="20190122 07:52:10.970"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.978">${gpio_id} = 03</msg>
<status status="PASS" starttime="20190122 07:52:10.973" endtime="20190122 07:52:10.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:10.982" endtime="20190122 07:52:10.989"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:10.997">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:10.992" endtime="20190122 07:52:10.998"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:11.002">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:10.687" endtime="20190122 07:52:11.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.006" endtime="20190122 07:52:11.011"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.014" endtime="20190122 07:52:11.019"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.040">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0020 00</msg>
<status status="PASS" starttime="20190122 07:52:11.032" endtime="20190122 07:52:11.041"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.051" endtime="20190122 07:52:11.065"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.285">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 40 3C F7</msg>
<status status="PASS" starttime="20190122 07:52:11.072" endtime="20190122 07:52:11.286"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.290" endtime="20190122 07:52:11.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.298" endtime="20190122 07:52:11.307"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.315">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '40', '3C', 'F7']</msg>
<status status="PASS" starttime="20190122 07:52:11.310" endtime="20190122 07:52:11.316"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.325">${gpio_id} = 03</msg>
<status status="PASS" starttime="20190122 07:52:11.319" endtime="20190122 07:52:11.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.329" endtime="20190122 07:52:11.334"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.343">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:11.337" endtime="20190122 07:52:11.344"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:11.347">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:11.021" endtime="20190122 07:52:11.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.352" endtime="20190122 07:52:11.358"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.360" endtime="20190122 07:52:11.365"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.385">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0000 20</msg>
<status status="PASS" starttime="20190122 07:52:11.378" endtime="20190122 07:52:11.386"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.390" endtime="20190122 07:52:11.396"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.624">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 41 3C F6</msg>
<status status="PASS" starttime="20190122 07:52:11.399" endtime="20190122 07:52:11.625"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.629" endtime="20190122 07:52:11.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.637" endtime="20190122 07:52:11.643"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.651">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '41', '3C', 'F6']</msg>
<status status="PASS" starttime="20190122 07:52:11.646" endtime="20190122 07:52:11.652"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.662">${gpio_id} = 03</msg>
<status status="PASS" starttime="20190122 07:52:11.656" endtime="20190122 07:52:11.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.666" endtime="20190122 07:52:11.671"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.680">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:11.674" endtime="20190122 07:52:11.681"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:11.685">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:11.367" endtime="20190122 07:52:11.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.688" endtime="20190122 07:52:11.694"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.697" endtime="20190122 07:52:11.702"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.722">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 03 01 0000 00</msg>
<status status="PASS" starttime="20190122 07:52:11.715" endtime="20190122 07:52:11.723"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.727" endtime="20190122 07:52:11.732"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.962">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 03 01 42 3C F5</msg>
<status status="PASS" starttime="20190122 07:52:11.735" endtime="20190122 07:52:11.962"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.966" endtime="20190122 07:52:11.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:11.974" endtime="20190122 07:52:11.980"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.988">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '03', '01', '42', '3C', 'F5']</msg>
<status status="PASS" starttime="20190122 07:52:11.983" endtime="20190122 07:52:11.989"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:11.997">${gpio_id} = 03</msg>
<status status="PASS" starttime="20190122 07:52:11.992" endtime="20190122 07:52:11.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.001" endtime="20190122 07:52:12.007"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:12.031">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:12.010" endtime="20190122 07:52:12.031"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:12.080">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:11.704" endtime="20190122 07:52:12.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.091" endtime="20190122 07:52:12.133"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:08.976" endtime="20190122 07:52:12.135"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:08.962" endtime="20190122 07:52:12.151"></status>
</kw>
<kw name="digit_out_led1">
<doc>Set pwm for the digital output led1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output led1</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.205" endtime="20190122 07:52:12.234"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_1_LED1}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.289" endtime="20190122 07:52:12.315"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:12.388">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 20</msg>
<status status="PASS" starttime="20190122 07:52:12.371" endtime="20190122 07:52:12.389"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.399" endtime="20190122 07:52:12.415"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:12.690">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 43 3D F3</msg>
<status status="PASS" starttime="20190122 07:52:12.418" endtime="20190122 07:52:12.706"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.713" endtime="20190122 07:52:12.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.746" endtime="20190122 07:52:12.762"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:12.786">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '43', '3D', 'F3']</msg>
<status status="PASS" starttime="20190122 07:52:12.767" endtime="20190122 07:52:12.787"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:12.843">${gpio_id} = 04</msg>
<status status="PASS" starttime="20190122 07:52:12.831" endtime="20190122 07:52:12.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.858" endtime="20190122 07:52:12.864"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:12.885">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:12.879" endtime="20190122 07:52:12.886"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:12.902">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:12.320" endtime="20190122 07:52:12.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.906" endtime="20190122 07:52:12.912"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.923" endtime="20190122 07:52:12.946"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:12.986">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0064 64</msg>
<status status="PASS" starttime="20190122 07:52:12.966" endtime="20190122 07:52:12.986"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:12.989" endtime="20190122 07:52:13.027"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:13.299">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 44 3D F4</msg>
<status status="PASS" starttime="20190122 07:52:13.030" endtime="20190122 07:52:13.300"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.303" endtime="20190122 07:52:13.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.311" endtime="20190122 07:52:13.317"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:13.325">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '44', '3D', 'F4']</msg>
<status status="PASS" starttime="20190122 07:52:13.320" endtime="20190122 07:52:13.325"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:13.334">${gpio_id} = 04</msg>
<status status="PASS" starttime="20190122 07:52:13.329" endtime="20190122 07:52:13.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.338" endtime="20190122 07:52:13.347"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:13.356">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:13.350" endtime="20190122 07:52:13.357"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:13.361">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:12.949" endtime="20190122 07:52:13.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.364" endtime="20190122 07:52:13.370"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.373" endtime="20190122 07:52:13.377"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:13.401">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0001 01</msg>
<status status="PASS" starttime="20190122 07:52:13.393" endtime="20190122 07:52:13.402"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.407" endtime="20190122 07:52:13.414"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:13.651">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 04 01 45 3D F5</msg>
<status status="PASS" starttime="20190122 07:52:13.417" endtime="20190122 07:52:13.652"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.655" endtime="20190122 07:52:13.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.664" endtime="20190122 07:52:13.669"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:13.677">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '04', '01', '45', '3D', 'F5']</msg>
<status status="PASS" starttime="20190122 07:52:13.672" endtime="20190122 07:52:13.678"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:13.688">${gpio_id} = 04</msg>
<status status="PASS" starttime="20190122 07:52:13.681" endtime="20190122 07:52:13.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.691" endtime="20190122 07:52:13.697"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:13.707">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:13.701" endtime="20190122 07:52:13.708"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:13.712">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:13.380" endtime="20190122 07:52:13.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.715" endtime="20190122 07:52:13.721"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.724" endtime="20190122 07:52:13.729"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:13.749">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0065 65</msg>
<status status="PASS" starttime="20190122 07:52:13.742" endtime="20190122 07:52:13.750"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:13.753" endtime="20190122 07:52:13.758"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.018">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 46 3C F6</msg>
<status status="PASS" starttime="20190122 07:52:13.762" endtime="20190122 07:52:14.019"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.025" endtime="20190122 07:52:14.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.033" endtime="20190122 07:52:14.039"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.065">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '46', '3C', 'F6']</msg>
<status status="PASS" starttime="20190122 07:52:14.050" endtime="20190122 07:52:14.066"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.082">${gpio_id} = 04</msg>
<status status="PASS" starttime="20190122 07:52:14.072" endtime="20190122 07:52:14.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.093" endtime="20190122 07:52:14.100"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.109">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:14.103" endtime="20190122 07:52:14.110"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:14.113">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:13.731" endtime="20190122 07:52:14.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.117" endtime="20190122 07:52:14.122"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.125" endtime="20190122 07:52:14.130"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.159">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 65</msg>
<status status="PASS" starttime="20190122 07:52:14.144" endtime="20190122 07:52:14.160"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.163" endtime="20190122 07:52:14.169"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.373">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 47 3C F7</msg>
<status status="PASS" starttime="20190122 07:52:14.172" endtime="20190122 07:52:14.374"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.377" endtime="20190122 07:52:14.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.386" endtime="20190122 07:52:14.391"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.413">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '47', '3C', 'F7']</msg>
<status status="PASS" starttime="20190122 07:52:14.401" endtime="20190122 07:52:14.413"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.433">${gpio_id} = 04</msg>
<status status="PASS" starttime="20190122 07:52:14.417" endtime="20190122 07:52:14.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.437" endtime="20190122 07:52:14.446"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.455">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:14.449" endtime="20190122 07:52:14.456"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:14.459">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:14.132" endtime="20190122 07:52:14.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.463" endtime="20190122 07:52:14.468"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.481" endtime="20190122 07:52:14.505"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.596">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0065 20</msg>
<status status="PASS" starttime="20190122 07:52:14.551" endtime="20190122 07:52:14.614"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.617" endtime="20190122 07:52:14.635"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.873">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 40 3C F0</msg>
<status status="PASS" starttime="20190122 07:52:14.638" endtime="20190122 07:52:14.874"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.878" endtime="20190122 07:52:14.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.886" endtime="20190122 07:52:14.892"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.900">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '40', '3C', 'F0']</msg>
<status status="PASS" starttime="20190122 07:52:14.895" endtime="20190122 07:52:14.901"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.910">${gpio_id} = 04</msg>
<status status="PASS" starttime="20190122 07:52:14.904" endtime="20190122 07:52:14.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.913" endtime="20190122 07:52:14.919"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.927">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:14.922" endtime="20190122 07:52:14.928"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:14.932">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:14.507" endtime="20190122 07:52:14.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.936" endtime="20190122 07:52:14.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.946" endtime="20190122 07:52:14.950"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:14.970">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0020 00</msg>
<status status="PASS" starttime="20190122 07:52:14.963" endtime="20190122 07:52:14.971"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:14.974" endtime="20190122 07:52:14.982"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.218">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 41 3C F1</msg>
<status status="PASS" starttime="20190122 07:52:14.985" endtime="20190122 07:52:15.219"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.222" endtime="20190122 07:52:15.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.231" endtime="20190122 07:52:15.241"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.248">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '41', '3C', 'F1']</msg>
<status status="PASS" starttime="20190122 07:52:15.243" endtime="20190122 07:52:15.249"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.258">${gpio_id} = 04</msg>
<status status="PASS" starttime="20190122 07:52:15.252" endtime="20190122 07:52:15.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.262" endtime="20190122 07:52:15.267"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.276">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:15.270" endtime="20190122 07:52:15.277"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:15.281">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:14.952" endtime="20190122 07:52:15.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.284" endtime="20190122 07:52:15.290"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.302" endtime="20190122 07:52:15.311"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.346">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0000 20</msg>
<status status="PASS" starttime="20190122 07:52:15.339" endtime="20190122 07:52:15.347"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.350" endtime="20190122 07:52:15.356"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.622">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 42 3C F2</msg>
<status status="PASS" starttime="20190122 07:52:15.359" endtime="20190122 07:52:15.623"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.626" endtime="20190122 07:52:15.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.647" endtime="20190122 07:52:15.653"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.663">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '42', '3C', 'F2']</msg>
<status status="PASS" starttime="20190122 07:52:15.658" endtime="20190122 07:52:15.665"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.673">${gpio_id} = 04</msg>
<status status="PASS" starttime="20190122 07:52:15.667" endtime="20190122 07:52:15.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.677" endtime="20190122 07:52:15.682"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.692">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:15.685" endtime="20190122 07:52:15.693"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:15.696">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:15.313" endtime="20190122 07:52:15.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.700" endtime="20190122 07:52:15.706"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.709" endtime="20190122 07:52:15.713"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.734">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 04 01 0000 00</msg>
<status status="PASS" starttime="20190122 07:52:15.727" endtime="20190122 07:52:15.735"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.738" endtime="20190122 07:52:15.744"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:15.973">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 04 01 43 3C F3</msg>
<status status="PASS" starttime="20190122 07:52:15.747" endtime="20190122 07:52:15.974"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.979" endtime="20190122 07:52:15.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:15.987" endtime="20190122 07:52:15.993"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.002">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '04', '01', '43', '3C', 'F3']</msg>
<status status="PASS" starttime="20190122 07:52:15.996" endtime="20190122 07:52:16.003"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.013">${gpio_id} = 04</msg>
<status status="PASS" starttime="20190122 07:52:16.007" endtime="20190122 07:52:16.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.016" endtime="20190122 07:52:16.022"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.036">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:16.025" endtime="20190122 07:52:16.037"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:16.049">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:15.716" endtime="20190122 07:52:16.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.061" endtime="20190122 07:52:16.067"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:12.240" endtime="20190122 07:52:16.077"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:12.158" endtime="20190122 07:52:16.079"></status>
</kw>
<kw name="digit_out_led2">
<doc>Set pwm for the digital output led2</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output led2</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.092" endtime="20190122 07:52:16.097"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_2_LED2}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.108" endtime="20190122 07:52:16.113"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.133">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 20</msg>
<status status="PASS" starttime="20190122 07:52:16.126" endtime="20190122 07:52:16.134"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.137" endtime="20190122 07:52:16.143"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.346">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 44 3D F5</msg>
<status status="PASS" starttime="20190122 07:52:16.146" endtime="20190122 07:52:16.346"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.350" endtime="20190122 07:52:16.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.358" endtime="20190122 07:52:16.364"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.373">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '44', '3D', 'F5']</msg>
<status status="PASS" starttime="20190122 07:52:16.367" endtime="20190122 07:52:16.374"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.382">${gpio_id} = 05</msg>
<status status="PASS" starttime="20190122 07:52:16.377" endtime="20190122 07:52:16.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.386" endtime="20190122 07:52:16.391"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.400">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:16.394" endtime="20190122 07:52:16.401"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:16.405">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:16.115" endtime="20190122 07:52:16.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.411" endtime="20190122 07:52:16.417"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.420" endtime="20190122 07:52:16.425"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.447">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0064 64</msg>
<status status="PASS" starttime="20190122 07:52:16.440" endtime="20190122 07:52:16.448"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.451" endtime="20190122 07:52:16.457"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.735">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 45 3D F4</msg>
<status status="PASS" starttime="20190122 07:52:16.459" endtime="20190122 07:52:16.736"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.739" endtime="20190122 07:52:16.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.751" endtime="20190122 07:52:16.758"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.766">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '45', '3D', 'F4']</msg>
<status status="PASS" starttime="20190122 07:52:16.761" endtime="20190122 07:52:16.767"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.775">${gpio_id} = 05</msg>
<status status="PASS" starttime="20190122 07:52:16.770" endtime="20190122 07:52:16.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.779" endtime="20190122 07:52:16.785"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.811">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:16.788" endtime="20190122 07:52:16.812"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:16.820">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:16.427" endtime="20190122 07:52:16.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.828" endtime="20190122 07:52:16.837"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.839" endtime="20190122 07:52:16.844"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:16.865">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0001 01</msg>
<status status="PASS" starttime="20190122 07:52:16.857" endtime="20190122 07:52:16.866"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:16.868" endtime="20190122 07:52:16.874"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.079">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 05 01 46 3D F7</msg>
<status status="PASS" starttime="20190122 07:52:16.877" endtime="20190122 07:52:17.080"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.083" endtime="20190122 07:52:17.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.093" endtime="20190122 07:52:17.099"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.107">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '05', '01', '46', '3D', 'F7']</msg>
<status status="PASS" starttime="20190122 07:52:17.102" endtime="20190122 07:52:17.108"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.116">${gpio_id} = 05</msg>
<status status="PASS" starttime="20190122 07:52:17.111" endtime="20190122 07:52:17.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.120" endtime="20190122 07:52:17.126"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.134">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:17.129" endtime="20190122 07:52:17.135"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:17.139">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:16.847" endtime="20190122 07:52:17.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.143" endtime="20190122 07:52:17.148"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.151" endtime="20190122 07:52:17.156"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.177">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0065 65</msg>
<status status="PASS" starttime="20190122 07:52:17.169" endtime="20190122 07:52:17.178"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.182" endtime="20190122 07:52:17.187"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.417">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 47 3C F6</msg>
<status status="PASS" starttime="20190122 07:52:17.190" endtime="20190122 07:52:17.418"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.421" endtime="20190122 07:52:17.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.430" endtime="20190122 07:52:17.435"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.443">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '47', '3C', 'F6']</msg>
<status status="PASS" starttime="20190122 07:52:17.438" endtime="20190122 07:52:17.444"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.453">${gpio_id} = 05</msg>
<status status="PASS" starttime="20190122 07:52:17.447" endtime="20190122 07:52:17.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.456" endtime="20190122 07:52:17.462"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.470">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:17.465" endtime="20190122 07:52:17.471"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:17.475">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:17.158" endtime="20190122 07:52:17.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.478" endtime="20190122 07:52:17.484"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.487" endtime="20190122 07:52:17.492"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.517">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 65</msg>
<status status="PASS" starttime="20190122 07:52:17.506" endtime="20190122 07:52:17.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.521" endtime="20190122 07:52:17.526"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.761">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 40 3C F1</msg>
<status status="PASS" starttime="20190122 07:52:17.530" endtime="20190122 07:52:17.762"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.765" endtime="20190122 07:52:17.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.773" endtime="20190122 07:52:17.779"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.787">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '40', '3C', 'F1']</msg>
<status status="PASS" starttime="20190122 07:52:17.782" endtime="20190122 07:52:17.788"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.810">${gpio_id} = 05</msg>
<status status="PASS" starttime="20190122 07:52:17.791" endtime="20190122 07:52:17.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.818" endtime="20190122 07:52:17.828"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.841">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:17.833" endtime="20190122 07:52:17.842"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:17.846">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:17.494" endtime="20190122 07:52:17.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.849" endtime="20190122 07:52:17.855"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.858" endtime="20190122 07:52:17.863"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:17.883">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0065 20</msg>
<status status="PASS" starttime="20190122 07:52:17.876" endtime="20190122 07:52:17.884"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:17.887" endtime="20190122 07:52:17.893"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.098">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 41 3C F0</msg>
<status status="PASS" starttime="20190122 07:52:17.895" endtime="20190122 07:52:18.099"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.102" endtime="20190122 07:52:18.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.111" endtime="20190122 07:52:18.116"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.124">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '41', '3C', 'F0']</msg>
<status status="PASS" starttime="20190122 07:52:18.119" endtime="20190122 07:52:18.125"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.134">${gpio_id} = 05</msg>
<status status="PASS" starttime="20190122 07:52:18.128" endtime="20190122 07:52:18.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.137" endtime="20190122 07:52:18.143"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.152">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:18.146" endtime="20190122 07:52:18.152"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:18.156">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:17.865" endtime="20190122 07:52:18.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.160" endtime="20190122 07:52:18.165"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.168" endtime="20190122 07:52:18.173"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.194">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0020 00</msg>
<status status="PASS" starttime="20190122 07:52:18.186" endtime="20190122 07:52:18.195"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.198" endtime="20190122 07:52:18.204"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.438">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 42 3C F3</msg>
<status status="PASS" starttime="20190122 07:52:18.207" endtime="20190122 07:52:18.438"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.442" endtime="20190122 07:52:18.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.451" endtime="20190122 07:52:18.460"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.469">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '42', '3C', 'F3']</msg>
<status status="PASS" starttime="20190122 07:52:18.463" endtime="20190122 07:52:18.470"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.478">${gpio_id} = 05</msg>
<status status="PASS" starttime="20190122 07:52:18.472" endtime="20190122 07:52:18.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.482" endtime="20190122 07:52:18.487"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.496">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:18.490" endtime="20190122 07:52:18.497"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:18.500">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:18.175" endtime="20190122 07:52:18.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.505" endtime="20190122 07:52:18.511"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.514" endtime="20190122 07:52:18.518"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.538">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0000 20</msg>
<status status="PASS" starttime="20190122 07:52:18.531" endtime="20190122 07:52:18.539"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.550" endtime="20190122 07:52:18.565"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.778">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 43 3C F2</msg>
<status status="PASS" starttime="20190122 07:52:18.573" endtime="20190122 07:52:18.779"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.782" endtime="20190122 07:52:18.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.791" endtime="20190122 07:52:18.797"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.804">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '43', '3C', 'F2']</msg>
<status status="PASS" starttime="20190122 07:52:18.799" endtime="20190122 07:52:18.805"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.814">${gpio_id} = 05</msg>
<status status="PASS" starttime="20190122 07:52:18.808" endtime="20190122 07:52:18.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.818" endtime="20190122 07:52:18.824"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.832">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:18.827" endtime="20190122 07:52:18.833"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:18.837">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:18.521" endtime="20190122 07:52:18.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.840" endtime="20190122 07:52:18.846"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.849" endtime="20190122 07:52:18.854"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:18.875">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 05 01 0000 00</msg>
<status status="PASS" starttime="20190122 07:52:18.868" endtime="20190122 07:52:18.876"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:18.879" endtime="20190122 07:52:18.885"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.115">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 05 01 44 3C F5</msg>
<status status="PASS" starttime="20190122 07:52:18.887" endtime="20190122 07:52:19.116"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.119" endtime="20190122 07:52:19.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.128" endtime="20190122 07:52:19.133"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.141">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '05', '01', '44', '3C', 'F5']</msg>
<status status="PASS" starttime="20190122 07:52:19.136" endtime="20190122 07:52:19.142"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.151">${gpio_id} = 05</msg>
<status status="PASS" starttime="20190122 07:52:19.145" endtime="20190122 07:52:19.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.154" endtime="20190122 07:52:19.160"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.169">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:19.163" endtime="20190122 07:52:19.170"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:19.173">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:18.857" endtime="20190122 07:52:19.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.177" endtime="20190122 07:52:19.186"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:16.101" endtime="20190122 07:52:19.189"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:16.085" endtime="20190122 07:52:19.191"></status>
</kw>
<kw name="digit_out_crm">
<doc>Set pwm for the digital output crm</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set pwm for the digital output crm</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.199" endtime="20190122 07:52:19.204"></status>
</kw>
<kw name="test_digitout_pwm">
<doc>Set pwm for the digital output</doc>
<arguments>
<arg>${DIG_O_3_CRM}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 32 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.214" endtime="20190122 07:52:19.219"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.239">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 20</msg>
<status status="PASS" starttime="20190122 07:52:19.232" endtime="20190122 07:52:19.240"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.243" endtime="20190122 07:52:19.249"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.482">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 45 3D F7</msg>
<status status="PASS" starttime="20190122 07:52:19.252" endtime="20190122 07:52:19.483"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.486" endtime="20190122 07:52:19.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.495" endtime="20190122 07:52:19.500"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.509">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '45', '3D', 'F7']</msg>
<status status="PASS" starttime="20190122 07:52:19.503" endtime="20190122 07:52:19.510"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.519">${gpio_id} = 06</msg>
<status status="PASS" starttime="20190122 07:52:19.513" endtime="20190122 07:52:19.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.522" endtime="20190122 07:52:19.528"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.538">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:19.532" endtime="20190122 07:52:19.538"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:19.550">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:19.221" endtime="20190122 07:52:19.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.558" endtime="20190122 07:52:19.572"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 100 HZ and duty cycle 100 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.575" endtime="20190122 07:52:19.588"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MAX_PWM_FREQUENCY}</arg>
<arg>${MAX_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.609">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0064 64</msg>
<status status="PASS" starttime="20190122 07:52:19.602" endtime="20190122 07:52:19.610"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.613" endtime="20190122 07:52:19.618"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.821">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 46 3D F4</msg>
<status status="PASS" starttime="20190122 07:52:19.621" endtime="20190122 07:52:19.822"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.825" endtime="20190122 07:52:19.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.833" endtime="20190122 07:52:19.839"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.847">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '46', '3D', 'F4']</msg>
<status status="PASS" starttime="20190122 07:52:19.842" endtime="20190122 07:52:19.848"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.857">${gpio_id} = 06</msg>
<status status="PASS" starttime="20190122 07:52:19.851" endtime="20190122 07:52:19.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.861" endtime="20190122 07:52:19.866"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.878">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:19.869" endtime="20190122 07:52:19.879"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:19.883">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:19.591" endtime="20190122 07:52:19.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.886" endtime="20190122 07:52:19.892"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 1 HZ and duty cycle 1 expected OK</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.895" endtime="20190122 07:52:19.899"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${MIN_PWM_FREQUENCY}</arg>
<arg>${MIN_PWM_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:19.920">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0001 01</msg>
<status status="PASS" starttime="20190122 07:52:19.912" endtime="20190122 07:52:19.921"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:19.923" endtime="20190122 07:52:19.929"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.161">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 00 06 01 47 3D F5</msg>
<status status="PASS" starttime="20190122 07:52:19.932" endtime="20190122 07:52:20.162"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.165" endtime="20190122 07:52:20.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.174" endtime="20190122 07:52:20.180"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.188">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '00', '06', '01', '47', '3D', 'F5']</msg>
<status status="PASS" starttime="20190122 07:52:20.183" endtime="20190122 07:52:20.189"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.198">${gpio_id} = 06</msg>
<status status="PASS" starttime="20190122 07:52:20.192" endtime="20190122 07:52:20.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.202" endtime="20190122 07:52:20.208"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.216">${ret_val} = 00</msg>
<status status="PASS" starttime="20190122 07:52:20.211" endtime="20190122 07:52:20.217"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:20.221">${resp} = 00</msg>
<status status="PASS" starttime="20190122 07:52:19.902" endtime="20190122 07:52:20.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_OK}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.224" endtime="20190122 07:52:20.230"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.233" endtime="20190122 07:52:20.238"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.259">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0065 65</msg>
<status status="PASS" starttime="20190122 07:52:20.251" endtime="20190122 07:52:20.260"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.262" endtime="20190122 07:52:20.268"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.497">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 40 3C F2</msg>
<status status="PASS" starttime="20190122 07:52:20.271" endtime="20190122 07:52:20.498"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.502" endtime="20190122 07:52:20.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.510" endtime="20190122 07:52:20.516"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.525">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '40', '3C', 'F2']</msg>
<status status="PASS" starttime="20190122 07:52:20.519" endtime="20190122 07:52:20.526"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.534">${gpio_id} = 06</msg>
<status status="PASS" starttime="20190122 07:52:20.529" endtime="20190122 07:52:20.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.538" endtime="20190122 07:52:20.551"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.573">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:20.559" endtime="20190122 07:52:20.574"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:20.585">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:20.240" endtime="20190122 07:52:20.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.589" endtime="20190122 07:52:20.595"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 101 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.597" endtime="20190122 07:52:20.602"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${FIRST_NOT_SUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.626">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 65</msg>
<status status="PASS" starttime="20190122 07:52:20.615" endtime="20190122 07:52:20.627"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.630" endtime="20190122 07:52:20.636"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.838">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 41 3C F3</msg>
<status status="PASS" starttime="20190122 07:52:20.639" endtime="20190122 07:52:20.839"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.842" endtime="20190122 07:52:20.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.851" endtime="20190122 07:52:20.857"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.866">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '41', '3C', 'F3']</msg>
<status status="PASS" starttime="20190122 07:52:20.860" endtime="20190122 07:52:20.867"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.875">${gpio_id} = 06</msg>
<status status="PASS" starttime="20190122 07:52:20.869" endtime="20190122 07:52:20.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.879" endtime="20190122 07:52:20.884"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.893">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:20.887" endtime="20190122 07:52:20.894"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:20.898">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:20.605" endtime="20190122 07:52:20.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.901" endtime="20190122 07:52:20.907"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 101 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.910" endtime="20190122 07:52:20.914"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${FIRST_NOT_SUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:20.934">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0065 20</msg>
<status status="PASS" starttime="20190122 07:52:20.927" endtime="20190122 07:52:20.935"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:20.938" endtime="20190122 07:52:20.944"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.178">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 42 3C F0</msg>
<status status="PASS" starttime="20190122 07:52:20.947" endtime="20190122 07:52:21.179"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.182" endtime="20190122 07:52:21.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.190" endtime="20190122 07:52:21.196"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.204">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '42', '3C', 'F0']</msg>
<status status="PASS" starttime="20190122 07:52:21.199" endtime="20190122 07:52:21.205"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.213">${gpio_id} = 06</msg>
<status status="PASS" starttime="20190122 07:52:21.208" endtime="20190122 07:52:21.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.217" endtime="20190122 07:52:21.223"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.231">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:21.226" endtime="20190122 07:52:21.232"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:21.236">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:20.917" endtime="20190122 07:52:21.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.239" endtime="20190122 07:52:21.245"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 32 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.248" endtime="20190122 07:52:21.253"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${DEF_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.274">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0020 00</msg>
<status status="PASS" starttime="20190122 07:52:21.266" endtime="20190122 07:52:21.274"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.277" endtime="20190122 07:52:21.283"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.515">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 43 3C F1</msg>
<status status="PASS" starttime="20190122 07:52:21.286" endtime="20190122 07:52:21.516"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.519" endtime="20190122 07:52:21.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.529" endtime="20190122 07:52:21.539"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.547">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '43', '3C', 'F1']</msg>
<status status="PASS" starttime="20190122 07:52:21.542" endtime="20190122 07:52:21.548"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.557">${gpio_id} = 06</msg>
<status status="PASS" starttime="20190122 07:52:21.551" endtime="20190122 07:52:21.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.561" endtime="20190122 07:52:21.567"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.575">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:21.569" endtime="20190122 07:52:21.576"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:21.579">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:21.255" endtime="20190122 07:52:21.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.583" endtime="20190122 07:52:21.589"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 32 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.592" endtime="20190122 07:52:21.601"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${DEF_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.621">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0000 20</msg>
<status status="PASS" starttime="20190122 07:52:21.614" endtime="20190122 07:52:21.622"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.625" endtime="20190122 07:52:21.631"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.858">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 44 3C F6</msg>
<status status="PASS" starttime="20190122 07:52:21.634" endtime="20190122 07:52:21.859"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.863" endtime="20190122 07:52:21.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.871" endtime="20190122 07:52:21.877"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.885">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '44', '3C', 'F6']</msg>
<status status="PASS" starttime="20190122 07:52:21.880" endtime="20190122 07:52:21.886"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.894">${gpio_id} = 06</msg>
<status status="PASS" starttime="20190122 07:52:21.889" endtime="20190122 07:52:21.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.898" endtime="20190122 07:52:21.903"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.912">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:21.906" endtime="20190122 07:52:21.913"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:21.916">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:21.603" endtime="20190122 07:52:21.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.920" endtime="20190122 07:52:21.926"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>set pwm with frequency 0 HZ and duty cycle 0 expected Error</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.929" endtime="20190122 07:52:21.933"></status>
</kw>
<kw name="SCA_DIGITAL_IO_PWM_REQ">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${SCA_ENABLED}</arg>
<arg>${SMALL_NOTSUPPORTED_FREQUENCY}</arg>
<arg>${SMALL_NOTSUPPORTED_DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${DIGITAL_IO_PWM_REQ} ${DIG_IO} ${STATE} ${FREQ} ${DUTY_CYCLE}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:21.954">${ISI_MSG} = 1E 54 14 8E 00 09 00 01 77 2A 06 01 0000 00</msg>
<status status="PASS" starttime="20190122 07:52:21.946" endtime="20190122 07:52:21.955"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:21.958" endtime="20190122 07:52:21.965"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:22.194">${resp} = 1E 14 54 8E 00 08 01 0D 77 2B 01 06 01 45 3C F7</msg>
<status status="PASS" starttime="20190122 07:52:21.967" endtime="20190122 07:52:22.194"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:22.198" endtime="20190122 07:52:22.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DIGITAL_IO_PWM_RESP}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:22.207" endtime="20190122 07:52:22.212"></status>
</kw>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:22.220">${list} = ['1E', '14', '54', '8E', '00', '08', '01', '0D', '77', '2B', '01', '06', '01', '45', '3C', 'F7']</msg>
<status status="PASS" starttime="20190122 07:52:22.215" endtime="20190122 07:52:22.221"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${gpio_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:22.229">${gpio_id} = 06</msg>
<status status="PASS" starttime="20190122 07:52:22.224" endtime="20190122 07:52:22.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${DIG_IO}</arg>
<arg>${gpio_id}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:22.233" endtime="20190122 07:52:22.239"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${10}</arg>
</arguments>
<assign>
<var>${ret_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:22.247">${ret_val} = 01</msg>
<status status="PASS" starttime="20190122 07:52:22.242" endtime="20190122 07:52:22.248"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:22.252">${resp} = 01</msg>
<status status="PASS" starttime="20190122 07:52:21.935" endtime="20190122 07:52:22.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:22.255" endtime="20190122 07:52:22.265"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:19.206" endtime="20190122 07:52:22.267"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:19.193" endtime="20190122 07:52:22.269"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:22.279" endtime="20190122 07:52:22.349"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:22.352" endtime="20190122 07:52:22.400"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:22.403" endtime="20190122 07:52:22.446"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:22.449" endtime="20190122 07:52:22.489"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:22.273" endtime="20190122 07:52:22.491"></status>
</kw>
<doc>Implements Test Task SKTB-49357 set pwm on Digital Outputs</doc>
<tags>
<tag>GPIO Test</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:51:55.507" endtime="20190122 07:52:22.493"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:52:24.047">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:52:24.114">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:52:22.557" endtime="20190122 07:52:24.116"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:22.509" endtime="20190122 07:52:24.122"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:22.503" endtime="20190122 07:52:24.148"></status>
</kw>
<doc>Chorus GPIO outputs set pwm</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:51:52.757" endtime="20190122 07:52:24.149"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-41553.robot" name="SKTB-41553" id="s1-s15">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:52:25.011">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:52:25.005" endtime="20190122 07:52:25.022"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:52:25.052">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:52:25.054">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:52:27.209">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:52:25.025" endtime="20190122 07:52:27.211"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:24.980" endtime="20190122 07:52:27.222"></status>
</kw>
<test name="SKTB-41553" id="s1-s15-t1">
<kw type="setup" name="Test_precondition">
<doc>Precondition, Switch power on and set Serial configuration</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Precondition, Switch power on and set Serial configuration</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:27.310" endtime="20190122 07:52:27.327"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:27.330" endtime="20190122 07:52:27.405"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:27.408" endtime="20190122 07:52:27.511"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:27.514" endtime="20190122 07:52:27.588"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${912600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:27.592" endtime="20190122 07:52:27.677"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:27.680" endtime="20190122 07:52:27.792"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:27.811" endtime="20190122 07:52:27.913"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:52:29.921">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:52:27.916" endtime="20190122 07:52:29.923"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:29.925" endtime="20190122 07:52:29.961"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:29.965" endtime="20190122 07:52:30.002"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:27.265" endtime="20190122 07:52:30.005"></status>
</kw>
<kw name="TEST_OTP_CARIF_PSN">
<doc>Test PSN value, write default value and read it, then write new value and read it</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test PSN value, write and read default value</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.014" endtime="20190122 07:52:30.018"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read default otp value</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.022" endtime="20190122 07:52:30.026"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_PSN}</arg>
<arg>${PSN_LEN}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.044">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FE 00 10</msg>
<status status="PASS" starttime="20190122 07:52:30.037" endtime="20190122 07:52:30.045"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.048" endtime="20190122 07:52:30.054"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.231">${resp} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 30 31 32 33 34 35 01 45 00 69 16</msg>
<status status="PASS" starttime="20190122 07:52:30.057" endtime="20190122 07:52:30.233"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.236" endtime="20190122 07:52:30.242"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.261">${temp1} = 1E105494001B000BEE04FFFE0010004C616972642050534E203031323334350145006916</msg>
<status status="PASS" starttime="20190122 07:52:30.255" endtime="20190122 07:52:30.262"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.273">${temp2} = EE04FFFE001000</msg>
<status status="PASS" starttime="20190122 07:52:30.264" endtime="20190122 07:52:30.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.277" endtime="20190122 07:52:30.283"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:30.244" endtime="20190122 07:52:30.285"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:30.289">${res} = 1E 10 54 94 00 1B 00 0B EE 04 FF FE 00 10 00 4C 61 69 72 64 20 50 53 4E 20 30 31 32 33 34 35 01 45 00 69 16</msg>
<status status="PASS" starttime="20190122 07:52:30.028" endtime="20190122 07:52:30.290"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:30.008" endtime="20190122 07:52:30.292"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_PART_NO">
<doc>READ_OTP_CARIF_HW_PART_NO</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Read otp_carif_hw_part_no</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.300" endtime="20190122 07:52:30.305"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_PART_NO}</arg>
<arg>${HW_PART_NO_LEN}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.322">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FD 00 0A</msg>
<status status="PASS" starttime="20190122 07:52:30.315" endtime="20190122 07:52:30.323"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.326" endtime="20190122 07:52:30.331"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.544">${resp} = 1E 10 54 94 00 15 00 0B EE 04 FF FD 00 0A 00 4C 61 69 72 64 20 30 31 32 33 01 44 00 2E 2B</msg>
<status status="PASS" starttime="20190122 07:52:30.334" endtime="20190122 07:52:30.545"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.548" endtime="20190122 07:52:30.557"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.576">${temp1} = 1E1054940015000BEE04FFFD000A004C6169726420303132330144002E2B</msg>
<status status="PASS" starttime="20190122 07:52:30.570" endtime="20190122 07:52:30.577"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.587">${temp2} = EE04FFFD000A00</msg>
<status status="PASS" starttime="20190122 07:52:30.581" endtime="20190122 07:52:30.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.591" endtime="20190122 07:52:30.596"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:30.559" endtime="20190122 07:52:30.599"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:30.307" endtime="20190122 07:52:30.602"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:30.294" endtime="20190122 07:52:30.604"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_VERSION_INFO">
<doc>READ_OTP_CARIF_HW_VERSION_INFO</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_VERSION_INFO</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.613" endtime="20190122 07:52:30.618"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_VERSION_INFO}</arg>
<arg>${HW_VERSION_INFO_LEN}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.635">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FC 00 04</msg>
<status status="PASS" starttime="20190122 07:52:30.629" endtime="20190122 07:52:30.636"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.639" endtime="20190122 07:52:30.645"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.821">${resp} = 1E 10 54 94 00 0F 00 0B EE 04 FF FC 00 04 00 03 01 06 00 01 45 00 1F 78</msg>
<status status="PASS" starttime="20190122 07:52:30.648" endtime="20190122 07:52:30.822"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.826" endtime="20190122 07:52:30.831"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.853">${temp1} = 1E105494000F000BEE04FFFC000400030106000145001F78</msg>
<status status="PASS" starttime="20190122 07:52:30.847" endtime="20190122 07:52:30.854"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.863">${temp2} = EE04FFFC000400</msg>
<status status="PASS" starttime="20190122 07:52:30.857" endtime="20190122 07:52:30.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.866" endtime="20190122 07:52:30.872"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:30.834" endtime="20190122 07:52:30.874"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:30.620" endtime="20190122 07:52:30.877"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:30.606" endtime="20190122 07:52:30.880"></status>
</kw>
<kw name="TEST_OTP_CARIF_HW_SUPPLIER_INFO">
<doc>READ_OTP_CARIF_HW_SUPPLIER_INFO</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>READ_OTP_CARIF_HW_SUPPLIER_INFO</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.888" endtime="20190122 07:52:30.893"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${OTP_CARIF_HW_SUPPLIER_INFO}</arg>
<arg>${HW_SUPPLIER_INFO_LEN}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:30.915">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FB 00 02</msg>
<status status="PASS" starttime="20190122 07:52:30.904" endtime="20190122 07:52:30.915"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:30.918" endtime="20190122 07:52:30.924"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.146">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF FB 00 02 00 30 31 01 46 00 2C 4E</msg>
<status status="PASS" starttime="20190122 07:52:30.927" endtime="20190122 07:52:31.147"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.150" endtime="20190122 07:52:31.155"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.174">${temp1} = 1E105494000D000BEE04FFFB00020030310146002C4E</msg>
<status status="PASS" starttime="20190122 07:52:31.168" endtime="20190122 07:52:31.175"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.184">${temp2} = EE04FFFB000200</msg>
<status status="PASS" starttime="20190122 07:52:31.178" endtime="20190122 07:52:31.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.187" endtime="20190122 07:52:31.193"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:31.157" endtime="20190122 07:52:31.195"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:30.895" endtime="20190122 07:52:31.198"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:30.882" endtime="20190122 07:52:31.202"></status>
</kw>
<kw name="TEST_EEPROM_SW_SPARE_PART_NUMBER">
<doc>Write and read the EEPROM_SW_SPARE_PART_NUMBER</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_SW_SPARE_PART_NUMBER</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.210" endtime="20190122 07:52:31.215"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write eeprom sw spare part number with default value</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.218" endtime="20190122 07:52:31.222"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.242">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 4e</msg>
<status status="PASS" starttime="20190122 07:52:31.235" endtime="20190122 07:52:31.242"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.257">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', '4e']</msg>
<status status="PASS" starttime="20190122 07:52:31.252" endtime="20190122 07:52:31.258"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.265">Length is 26</msg>
<msg level="INFO" timestamp="20190122 07:52:31.267">${length} = 26</msg>
<status status="PASS" starttime="20190122 07:52:31.261" endtime="20190122 07:52:31.268"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.271" endtime="20190122 07:52:31.276"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.285">${value} = 20</msg>
<status status="PASS" starttime="20190122 07:52:31.279" endtime="20190122 07:52:31.286"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.294">${res} = 14</msg>
<status status="PASS" starttime="20190122 07:52:31.289" endtime="20190122 07:52:31.295"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.298" endtime="20190122 07:52:31.303"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.313">${res} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status status="PASS" starttime="20190122 07:52:31.306" endtime="20190122 07:52:31.314"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:31.317">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C53706172652050617274204e</msg>
<status status="PASS" starttime="20190122 07:52:31.245" endtime="20190122 07:52:31.318"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.321" endtime="20190122 07:52:31.327"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.821">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 47 5A 3E</msg>
<status status="PASS" starttime="20190122 07:52:31.330" endtime="20190122 07:52:31.822"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.825" endtime="20190122 07:52:31.830"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.849">${temp1} = 1E105494000A000BEE06FFFA000001475A3E</msg>
<status status="PASS" starttime="20190122 07:52:31.843" endtime="20190122 07:52:31.850"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.858">${temp2} = EE06FFFA00</msg>
<status status="PASS" starttime="20190122 07:52:31.852" endtime="20190122 07:52:31.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.862" endtime="20190122 07:52:31.867"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:31.833" endtime="20190122 07:52:31.870"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:31.224" endtime="20190122 07:52:31.872"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write eeprom sw spare part number with Different value</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.874" endtime="20190122 07:52:31.879"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.903">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF FA 00 0C 53 70 61 72 65 20 50 61 72 74 20 AA</msg>
<status status="PASS" starttime="20190122 07:52:31.896" endtime="20190122 07:52:31.904"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.920">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'FA', '00', '0C', '53', '70', '61', '72', '65', '20', '50', '61', '72', '74', '20', 'AA']</msg>
<status status="PASS" starttime="20190122 07:52:31.915" endtime="20190122 07:52:31.921"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.928">Length is 26</msg>
<msg level="INFO" timestamp="20190122 07:52:31.930">${length} = 26</msg>
<status status="PASS" starttime="20190122 07:52:31.924" endtime="20190122 07:52:31.930"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.933" endtime="20190122 07:52:31.939"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.947">${value} = 20</msg>
<status status="PASS" starttime="20190122 07:52:31.941" endtime="20190122 07:52:31.948"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.957">${res} = 14</msg>
<status status="PASS" starttime="20190122 07:52:31.951" endtime="20190122 07:52:31.957"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.960" endtime="20190122 07:52:31.965"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:31.974">${res} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status status="PASS" starttime="20190122 07:52:31.968" endtime="20190122 07:52:31.975"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:31.979">${ISI_MSG_NORM} = 1E54109400140000EE05FFFA000C5370617265205061727420AA</msg>
<status status="PASS" starttime="20190122 07:52:31.907" endtime="20190122 07:52:31.980"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:31.983" endtime="20190122 07:52:31.989"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:32.494">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF FA 00 00 01 40 5A 39</msg>
<status status="PASS" starttime="20190122 07:52:31.992" endtime="20190122 07:52:32.495"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:32.499" endtime="20190122 07:52:32.504"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:32.522">${temp1} = 1E105494000A000BEE06FFFA000001405A39</msg>
<status status="PASS" starttime="20190122 07:52:32.517" endtime="20190122 07:52:32.523"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:32.532">${temp2} = EE06FFFA00</msg>
<status status="PASS" starttime="20190122 07:52:32.526" endtime="20190122 07:52:32.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:32.535" endtime="20190122 07:52:32.541"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:32.506" endtime="20190122 07:52:32.544"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:31.881" endtime="20190122 07:52:32.546"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:32.554" endtime="20190122 07:52:32.601"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:32.604" endtime="20190122 07:52:32.651"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:52:34.659">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:52:32.655" endtime="20190122 07:52:34.662"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:34.664" endtime="20190122 07:52:34.711"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:34.714" endtime="20190122 07:52:34.762"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:32.548" endtime="20190122 07:52:34.765"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_SW_SPARE_PART_NUMBER}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:34.789">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF FA 00 0C</msg>
<status status="PASS" starttime="20190122 07:52:34.776" endtime="20190122 07:52:34.790"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:34.809" endtime="20190122 07:52:34.831"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.326">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 43 00 85 3E</msg>
<status status="PASS" starttime="20190122 07:52:34.834" endtime="20190122 07:52:35.328"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:35.332" endtime="20190122 07:52:35.342"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.365">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014300853E</msg>
<status status="PASS" starttime="20190122 07:52:35.355" endtime="20190122 07:52:35.374"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.412">${temp2} = EE04FFFA000C00</msg>
<status status="PASS" starttime="20190122 07:52:35.377" endtime="20190122 07:52:35.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:35.443" endtime="20190122 07:52:35.451"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:35.344" endtime="20190122 07:52:35.453"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:35.473">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF FA 00 0C 00 53 70 61 72 65 20 50 61 72 74 20 AA 01 43 00 85 3E</msg>
<status status="PASS" starttime="20190122 07:52:34.767" endtime="20190122 07:52:35.474"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_SW_SPARE_PART_NUMBER_LEN} ${EEPROM_APP_OK} ${EEPROM_SW_SPARE_PART_NUMBER_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.521">${temp1} = 1E1054940017000BEE04FFFA000C005370617265205061727420AA014300853E</msg>
<status status="PASS" starttime="20190122 07:52:35.494" endtime="20190122 07:52:35.522"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.599">${temp2} = 000C005370617265205061727420AA</msg>
<status status="PASS" starttime="20190122 07:52:35.525" endtime="20190122 07:52:35.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:35.606" endtime="20190122 07:52:35.649"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:35.476" endtime="20190122 07:52:35.651"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:31.204" endtime="20190122 07:52:35.671"></status>
</kw>
<kw name="TEST_PRODUCT_NAME">
<doc>Write and read the EEPROM_PRODUCT_NAME</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_PRODUCT_NAME</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:35.699" endtime="20190122 07:52:35.715"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>write default value</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:35.718" endtime="20190122 07:52:35.735"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.756">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 69</msg>
<status status="PASS" starttime="20190122 07:52:35.749" endtime="20190122 07:52:35.757"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.773">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', '69']</msg>
<status status="PASS" starttime="20190122 07:52:35.767" endtime="20190122 07:52:35.773"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.780">Length is 26</msg>
<msg level="INFO" timestamp="20190122 07:52:35.782">${length} = 26</msg>
<status status="PASS" starttime="20190122 07:52:35.776" endtime="20190122 07:52:35.783"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:35.786" endtime="20190122 07:52:35.792"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.801">${value} = 20</msg>
<status status="PASS" starttime="20190122 07:52:35.795" endtime="20190122 07:52:35.801"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.810">${res} = 14</msg>
<status status="PASS" starttime="20190122 07:52:35.804" endtime="20190122 07:52:35.811"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:35.814" endtime="20190122 07:52:35.819"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:35.829">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status status="PASS" starttime="20190122 07:52:35.822" endtime="20190122 07:52:35.829"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:35.833">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e65637469</msg>
<status status="PASS" starttime="20190122 07:52:35.759" endtime="20190122 07:52:35.835"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:35.838" endtime="20190122 07:52:35.844"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:36.995">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 44 5A 3E</msg>
<status status="PASS" starttime="20190122 07:52:35.847" endtime="20190122 07:52:36.995"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:36.999" endtime="20190122 07:52:37.017"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.073">${temp1} = 1E105494000A000BEE06FFF9000001445A3E</msg>
<status status="PASS" starttime="20190122 07:52:37.049" endtime="20190122 07:52:37.073"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.088">${temp2} = EE06FFF900</msg>
<status status="PASS" starttime="20190122 07:52:37.076" endtime="20190122 07:52:37.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:37.092" endtime="20190122 07:52:37.098"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:37.019" endtime="20190122 07:52:37.100"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:35.737" endtime="20190122 07:52:37.103"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
<arg>${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.122">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F9 00 0C 4f 4c 55 20 43 6f 6e 6e 65 63 74 BB</msg>
<status status="PASS" starttime="20190122 07:52:37.115" endtime="20190122 07:52:37.123"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.142">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F9', '00', '0C', '4f', '4c', '55', '20', '43', '6f', '6e', '6e', '65', '63', '74', 'BB']</msg>
<status status="PASS" starttime="20190122 07:52:37.136" endtime="20190122 07:52:37.142"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.149">Length is 26</msg>
<msg level="INFO" timestamp="20190122 07:52:37.151">${length} = 26</msg>
<status status="PASS" starttime="20190122 07:52:37.145" endtime="20190122 07:52:37.152"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:37.155" endtime="20190122 07:52:37.160"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.168">${value} = 20</msg>
<status status="PASS" starttime="20190122 07:52:37.163" endtime="20190122 07:52:37.169"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.178">${res} = 14</msg>
<status status="PASS" starttime="20190122 07:52:37.172" endtime="20190122 07:52:37.179"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:37.182" endtime="20190122 07:52:37.187"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.197">${res} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status status="PASS" starttime="20190122 07:52:37.190" endtime="20190122 07:52:37.198"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:37.201">${ISI_MSG_NORM} = 1E54109400140000EE05FFF9000C4f4c5520436f6e6e656374BB</msg>
<status status="PASS" starttime="20190122 07:52:37.125" endtime="20190122 07:52:37.202"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:37.205" endtime="20190122 07:52:37.211"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.638">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F9 00 00 01 45 5A 3F</msg>
<status status="PASS" starttime="20190122 07:52:37.214" endtime="20190122 07:52:37.638"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:37.641" endtime="20190122 07:52:37.647"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.665">${temp1} = 1E105494000A000BEE06FFF9000001455A3F</msg>
<status status="PASS" starttime="20190122 07:52:37.660" endtime="20190122 07:52:37.666"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:37.676">${temp2} = EE06FFF900</msg>
<status status="PASS" starttime="20190122 07:52:37.669" endtime="20190122 07:52:37.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:37.680" endtime="20190122 07:52:37.685"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:37.649" endtime="20190122 07:52:37.687"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:37.105" endtime="20190122 07:52:37.690"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:37.698" endtime="20190122 07:52:37.757"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:37.760" endtime="20190122 07:52:37.820"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:52:39.828">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:52:37.823" endtime="20190122 07:52:39.830"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:39.833" endtime="20190122 07:52:39.879"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:39.883" endtime="20190122 07:52:39.929"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:37.692" endtime="20190122 07:52:39.931"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_PRODUCT_NAME}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:39.949">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F9 00 0C</msg>
<status status="PASS" starttime="20190122 07:52:39.943" endtime="20190122 07:52:39.950"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:39.953" endtime="20190122 07:52:39.958"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.401">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 43 00 AD 4E</msg>
<status status="PASS" starttime="20190122 07:52:39.961" endtime="20190122 07:52:40.402"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:40.409" endtime="20190122 07:52:40.415"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.434">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014300AD4E</msg>
<status status="PASS" starttime="20190122 07:52:40.428" endtime="20190122 07:52:40.435"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.443">${temp2} = EE04FFF9000C00</msg>
<status status="PASS" starttime="20190122 07:52:40.438" endtime="20190122 07:52:40.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:40.447" endtime="20190122 07:52:40.457"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:40.417" endtime="20190122 07:52:40.459"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:40.463">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F9 00 0C 00 4F 4C 55 20 43 6F 6E 6E 65 63 74 BB 01 43 00 AD 4E</msg>
<status status="PASS" starttime="20190122 07:52:39.934" endtime="20190122 07:52:40.464"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_PRODUCT_NAME_LEN} ${EEPROM_APP_OK} ${EEPROM_PRODUCT_NAME_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.482">${temp1} = 1E1054940017000BEE04FFF9000C004F4C5520436F6E6E656374BB014300AD4E</msg>
<status status="PASS" starttime="20190122 07:52:40.476" endtime="20190122 07:52:40.483"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.491">${temp2} = 000C004f4c5520436f6e6e656374BB</msg>
<status status="PASS" starttime="20190122 07:52:40.486" endtime="20190122 07:52:40.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:40.495" endtime="20190122 07:52:40.501"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:40.466" endtime="20190122 07:52:40.503"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:35.673" endtime="20190122 07:52:40.506"></status>
</kw>
<kw name="TEST_LAST_POWER_STATE">
<doc>Write and read the EEPROM_LAST_POWER_STATE</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_LAST_POWER_STATE</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:40.514" endtime="20190122 07:52:40.519"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.539">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 FF</msg>
<status status="PASS" starttime="20190122 07:52:40.531" endtime="20190122 07:52:40.540"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.556">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'FF']</msg>
<status status="PASS" starttime="20190122 07:52:40.551" endtime="20190122 07:52:40.557"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.563">Length is 15</msg>
<msg level="INFO" timestamp="20190122 07:52:40.566">${length} = 15</msg>
<status status="PASS" starttime="20190122 07:52:40.560" endtime="20190122 07:52:40.566"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:40.569" endtime="20190122 07:52:40.574"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.585">${value} = 9</msg>
<status status="PASS" starttime="20190122 07:52:40.579" endtime="20190122 07:52:40.586"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.595">${res} = 09</msg>
<status status="PASS" starttime="20190122 07:52:40.589" endtime="20190122 07:52:40.598"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:40.602" endtime="20190122 07:52:40.607"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:40.616">${res} = 1E54109400090000EE05FFF80001FF</msg>
<status status="PASS" starttime="20190122 07:52:40.610" endtime="20190122 07:52:40.617"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:40.621">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001FF</msg>
<status status="PASS" starttime="20190122 07:52:40.543" endtime="20190122 07:52:40.621"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:40.624" endtime="20190122 07:52:40.630"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:41.930">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 44 5A 3F</msg>
<status status="PASS" starttime="20190122 07:52:40.633" endtime="20190122 07:52:41.931"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:41.934" endtime="20190122 07:52:41.940"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:41.958">${temp1} = 1E105494000A000BEE06FFF8000001445A3F</msg>
<status status="PASS" starttime="20190122 07:52:41.952" endtime="20190122 07:52:41.959"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:41.968">${temp2} = EE06FFF800</msg>
<status status="PASS" starttime="20190122 07:52:41.962" endtime="20190122 07:52:41.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:41.971" endtime="20190122 07:52:41.977"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:41.942" endtime="20190122 07:52:41.979"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:40.521" endtime="20190122 07:52:41.981"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
<arg>${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:42.000">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F8 00 01 AA</msg>
<status status="PASS" starttime="20190122 07:52:41.993" endtime="20190122 07:52:42.002"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:42.021">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F8', '00', '01', 'AA']</msg>
<status status="PASS" starttime="20190122 07:52:42.016" endtime="20190122 07:52:42.022"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:42.029">Length is 15</msg>
<msg level="INFO" timestamp="20190122 07:52:42.031">${length} = 15</msg>
<status status="PASS" starttime="20190122 07:52:42.025" endtime="20190122 07:52:42.031"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:42.034" endtime="20190122 07:52:42.040"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:42.048">${value} = 9</msg>
<status status="PASS" starttime="20190122 07:52:42.043" endtime="20190122 07:52:42.049"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:42.059">${res} = 09</msg>
<status status="PASS" starttime="20190122 07:52:42.052" endtime="20190122 07:52:42.060"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:42.062" endtime="20190122 07:52:42.067"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:42.076">${res} = 1E54109400090000EE05FFF80001AA</msg>
<status status="PASS" starttime="20190122 07:52:42.070" endtime="20190122 07:52:42.077"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:42.081">${ISI_MSG_NORM} = 1E54109400090000EE05FFF80001AA</msg>
<status status="PASS" starttime="20190122 07:52:42.004" endtime="20190122 07:52:42.082"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:42.084" endtime="20190122 07:52:42.090"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:42.532">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F8 00 00 01 45 5A 3E</msg>
<status status="PASS" starttime="20190122 07:52:42.093" endtime="20190122 07:52:42.533"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:42.536" endtime="20190122 07:52:42.542"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:42.560">${temp1} = 1E105494000A000BEE06FFF8000001455A3E</msg>
<status status="PASS" starttime="20190122 07:52:42.554" endtime="20190122 07:52:42.561"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:42.569">${temp2} = EE06FFF800</msg>
<status status="PASS" starttime="20190122 07:52:42.563" endtime="20190122 07:52:42.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:42.573" endtime="20190122 07:52:42.578"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:42.544" endtime="20190122 07:52:42.581"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:41.983" endtime="20190122 07:52:42.583"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:42.591" endtime="20190122 07:52:42.638"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:42.642" endtime="20190122 07:52:42.690"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:52:44.697">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:52:42.693" endtime="20190122 07:52:44.700"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:44.702" endtime="20190122 07:52:44.749"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:44.753" endtime="20190122 07:52:44.799"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:42.585" endtime="20190122 07:52:44.802"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_LAST_POWER_STATE}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:44.820">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F8 00 01</msg>
<status status="PASS" starttime="20190122 07:52:44.814" endtime="20190122 07:52:44.821"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:44.824" endtime="20190122 07:52:44.829"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.166">${resp} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 43 5A 97</msg>
<status status="PASS" starttime="20190122 07:52:44.832" endtime="20190122 07:52:45.167"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:45.169" endtime="20190122 07:52:45.175"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.194">${temp1} = 1E105494000C000BEE04FFF8000100AA01435A97</msg>
<status status="PASS" starttime="20190122 07:52:45.188" endtime="20190122 07:52:45.195"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.203">${temp2} = EE04FFF8000100</msg>
<status status="PASS" starttime="20190122 07:52:45.198" endtime="20190122 07:52:45.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:45.207" endtime="20190122 07:52:45.213"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:45.177" endtime="20190122 07:52:45.215"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:45.218">${RESP} = 1E 10 54 94 00 0C 00 0B EE 04 FF F8 00 01 00 AA 01 43 5A 97</msg>
<status status="PASS" starttime="20190122 07:52:44.804" endtime="20190122 07:52:45.219"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_LAST_POWER_STATE_LEN} ${EEPROM_APP_OK} ${EEPROM_LAST_POWER_STATE_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.244">${temp1} = 1E105494000C000BEE04FFF8000100AA01435A97</msg>
<status status="PASS" starttime="20190122 07:52:45.237" endtime="20190122 07:52:45.245"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.253">${temp2} = 000100AA</msg>
<status status="PASS" starttime="20190122 07:52:45.247" endtime="20190122 07:52:45.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:45.257" endtime="20190122 07:52:45.262"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:45.222" endtime="20190122 07:52:45.265"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:40.508" endtime="20190122 07:52:45.267"></status>
</kw>
<kw name="TEST_WAKE_BARRIERS">
<doc>Write and read the EEPROM_WAKE_BARRIERS</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_WAKE_BARRIERS</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:45.275" endtime="20190122 07:52:45.280"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.315">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 FF FF</msg>
<status status="PASS" starttime="20190122 07:52:45.301" endtime="20190122 07:52:45.316"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.334">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'FF', 'FF']</msg>
<status status="PASS" starttime="20190122 07:52:45.329" endtime="20190122 07:52:45.335"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.342">Length is 16</msg>
<msg level="INFO" timestamp="20190122 07:52:45.344">${length} = 16</msg>
<status status="PASS" starttime="20190122 07:52:45.338" endtime="20190122 07:52:45.345"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:45.347" endtime="20190122 07:52:45.353"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.361">${value} = 10</msg>
<status status="PASS" starttime="20190122 07:52:45.356" endtime="20190122 07:52:45.362"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.371">${res} = 0A</msg>
<status status="PASS" starttime="20190122 07:52:45.365" endtime="20190122 07:52:45.371"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:45.374" endtime="20190122 07:52:45.379"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:45.388">${res} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status status="PASS" starttime="20190122 07:52:45.382" endtime="20190122 07:52:45.389"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:45.393">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002FFFF</msg>
<status status="PASS" starttime="20190122 07:52:45.321" endtime="20190122 07:52:45.394"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:45.396" endtime="20190122 07:52:45.402"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:46.587">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 44 5A 30</msg>
<status status="PASS" starttime="20190122 07:52:45.405" endtime="20190122 07:52:46.588"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:46.591" endtime="20190122 07:52:46.597"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:46.615">${temp1} = 1E105494000A000BEE06FFF7000001445A30</msg>
<status status="PASS" starttime="20190122 07:52:46.609" endtime="20190122 07:52:46.616"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:46.625">${temp2} = EE06FFF700</msg>
<status status="PASS" starttime="20190122 07:52:46.619" endtime="20190122 07:52:46.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:46.632" endtime="20190122 07:52:46.638"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:46.599" endtime="20190122 07:52:46.640"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:45.282" endtime="20190122 07:52:46.642"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
<arg>${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:46.664">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F7 00 02 AA BB</msg>
<status status="PASS" starttime="20190122 07:52:46.657" endtime="20190122 07:52:46.665"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:46.681">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F7', '00', '02', 'AA', 'BB']</msg>
<status status="PASS" starttime="20190122 07:52:46.675" endtime="20190122 07:52:46.682"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:46.688">Length is 16</msg>
<msg level="INFO" timestamp="20190122 07:52:46.690">${length} = 16</msg>
<status status="PASS" starttime="20190122 07:52:46.685" endtime="20190122 07:52:46.691"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:46.694" endtime="20190122 07:52:46.703"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:46.712">${value} = 10</msg>
<status status="PASS" starttime="20190122 07:52:46.706" endtime="20190122 07:52:46.713"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:46.722">${res} = 0A</msg>
<status status="PASS" starttime="20190122 07:52:46.715" endtime="20190122 07:52:46.722"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:46.725" endtime="20190122 07:52:46.730"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:46.740">${res} = 1E541094000A0000EE05FFF70002AABB</msg>
<status status="PASS" starttime="20190122 07:52:46.734" endtime="20190122 07:52:46.741"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:46.744">${ISI_MSG_NORM} = 1E541094000A0000EE05FFF70002AABB</msg>
<status status="PASS" starttime="20190122 07:52:46.667" endtime="20190122 07:52:46.745"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:46.748" endtime="20190122 07:52:46.754"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:47.102">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F7 00 00 01 45 5A 31</msg>
<status status="PASS" starttime="20190122 07:52:46.757" endtime="20190122 07:52:47.103"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:47.107" endtime="20190122 07:52:47.112"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:47.130">${temp1} = 1E105494000A000BEE06FFF7000001455A31</msg>
<status status="PASS" starttime="20190122 07:52:47.125" endtime="20190122 07:52:47.131"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:47.140">${temp2} = EE06FFF700</msg>
<status status="PASS" starttime="20190122 07:52:47.134" endtime="20190122 07:52:47.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:47.143" endtime="20190122 07:52:47.149"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:47.114" endtime="20190122 07:52:47.152"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:46.645" endtime="20190122 07:52:47.154"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:47.162" endtime="20190122 07:52:47.211"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:47.214" endtime="20190122 07:52:47.261"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:52:49.269">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:52:47.265" endtime="20190122 07:52:49.271"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:49.274" endtime="20190122 07:52:49.322"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:49.325" endtime="20190122 07:52:49.372"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:47.156" endtime="20190122 07:52:49.375"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_WAKE_BARRIERS}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:49.421">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F7 00 02</msg>
<status status="PASS" starttime="20190122 07:52:49.388" endtime="20190122 07:52:49.422"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:49.431" endtime="20190122 07:52:49.438"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:49.766">${resp} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 43 00 A3 D8</msg>
<status status="PASS" starttime="20190122 07:52:49.441" endtime="20190122 07:52:49.767"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:49.794" endtime="20190122 07:52:49.819"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:49.866">${temp1} = 1E105494000D000BEE04FFF7000200AABB014300A3D8</msg>
<status status="PASS" starttime="20190122 07:52:49.851" endtime="20190122 07:52:49.867"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:49.876">${temp2} = EE04FFF7000200</msg>
<status status="PASS" starttime="20190122 07:52:49.870" endtime="20190122 07:52:49.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:49.895" endtime="20190122 07:52:49.901"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:49.822" endtime="20190122 07:52:49.927"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:49.932">${RESP} = 1E 10 54 94 00 0D 00 0B EE 04 FF F7 00 02 00 AA BB 01 43 00 A3 D8</msg>
<status status="PASS" starttime="20190122 07:52:49.377" endtime="20190122 07:52:49.933"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_WAKE_BARRIERS_LEN} ${EEPROM_APP_OK} ${EEPROM_WAKE_BARRIERS_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:49.981">${temp1} = 1E105494000D000BEE04FFF7000200AABB014300A3D8</msg>
<status status="PASS" starttime="20190122 07:52:49.962" endtime="20190122 07:52:49.982"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:50.007">${temp2} = 000200AABB</msg>
<status status="PASS" starttime="20190122 07:52:49.985" endtime="20190122 07:52:50.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:50.011" endtime="20190122 07:52:50.029"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:49.946" endtime="20190122 07:52:50.031"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:45.269" endtime="20190122 07:52:50.033"></status>
</kw>
<kw name="TEST_DIAG_CODING">
<doc>Write and read the EEPROM_DIAG_CODING</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_DIAG_CODING</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:50.096" endtime="20190122 07:52:50.110"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:50.169">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 00</msg>
<status status="PASS" starttime="20190122 07:52:50.135" endtime="20190122 07:52:50.170"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:50.253">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', '00']</msg>
<status status="PASS" starttime="20190122 07:52:50.208" endtime="20190122 07:52:50.254"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:50.267">Length is 26</msg>
<msg level="INFO" timestamp="20190122 07:52:50.269">${length} = 26</msg>
<status status="PASS" starttime="20190122 07:52:50.257" endtime="20190122 07:52:50.271"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:50.274" endtime="20190122 07:52:50.279"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:50.287">${value} = 20</msg>
<status status="PASS" starttime="20190122 07:52:50.282" endtime="20190122 07:52:50.288"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:50.297">${res} = 14</msg>
<status status="PASS" starttime="20190122 07:52:50.291" endtime="20190122 07:52:50.298"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:50.300" endtime="20190122 07:52:50.305"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:50.315">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status status="PASS" starttime="20190122 07:52:50.308" endtime="20190122 07:52:50.316"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:50.320">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF0000</msg>
<status status="PASS" starttime="20190122 07:52:50.172" endtime="20190122 07:52:50.321"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:50.324" endtime="20190122 07:52:50.330"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.290">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 44 5A 31</msg>
<status status="PASS" starttime="20190122 07:52:50.333" endtime="20190122 07:52:51.291"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:51.298" endtime="20190122 07:52:51.309"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.328">${temp1} = 1E105494000A000BEE06FFF6000001445A31</msg>
<status status="PASS" starttime="20190122 07:52:51.321" endtime="20190122 07:52:51.328"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.337">${temp2} = EE06FFF600</msg>
<status status="PASS" starttime="20190122 07:52:51.331" endtime="20190122 07:52:51.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:51.341" endtime="20190122 07:52:51.347"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:51.311" endtime="20190122 07:52:51.349"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:50.112" endtime="20190122 07:52:51.351"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
<arg>${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.373">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F6 00 0C 11 15 05 15 01 FF 00 01 7C FF 00 CC</msg>
<status status="PASS" starttime="20190122 07:52:51.365" endtime="20190122 07:52:51.373"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.388">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F6', '00', '0C', '11', '15', '05', '15', '01', 'FF', '00', '01', '7C', 'FF', '00', 'CC']</msg>
<status status="PASS" starttime="20190122 07:52:51.383" endtime="20190122 07:52:51.389"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.396">Length is 26</msg>
<msg level="INFO" timestamp="20190122 07:52:51.398">${length} = 26</msg>
<status status="PASS" starttime="20190122 07:52:51.392" endtime="20190122 07:52:51.399"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:51.402" endtime="20190122 07:52:51.411"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.420">${value} = 20</msg>
<status status="PASS" starttime="20190122 07:52:51.414" endtime="20190122 07:52:51.421"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.430">${res} = 14</msg>
<status status="PASS" starttime="20190122 07:52:51.424" endtime="20190122 07:52:51.431"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:51.433" endtime="20190122 07:52:51.439"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.448">${res} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status status="PASS" starttime="20190122 07:52:51.442" endtime="20190122 07:52:51.449"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:51.452">${ISI_MSG_NORM} = 1E54109400140000EE05FFF6000C1115051501FF00017CFF00CC</msg>
<status status="PASS" starttime="20190122 07:52:51.375" endtime="20190122 07:52:51.453"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:51.456" endtime="20190122 07:52:51.462"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.889">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F6 00 00 01 45 5A 30</msg>
<status status="PASS" starttime="20190122 07:52:51.465" endtime="20190122 07:52:51.890"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:51.897" endtime="20190122 07:52:51.907"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.928">${temp1} = 1E105494000A000BEE06FFF6000001455A30</msg>
<status status="PASS" starttime="20190122 07:52:51.922" endtime="20190122 07:52:51.930"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:51.939">${temp2} = EE06FFF600</msg>
<status status="PASS" starttime="20190122 07:52:51.933" endtime="20190122 07:52:51.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:51.942" endtime="20190122 07:52:51.948"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:51.909" endtime="20190122 07:52:51.950"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:51.353" endtime="20190122 07:52:51.952"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:51.960" endtime="20190122 07:52:52.008"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:52.011" endtime="20190122 07:52:52.059"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:52:54.066">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:52:52.062" endtime="20190122 07:52:54.069"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:54.071" endtime="20190122 07:52:54.118"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:54.121" endtime="20190122 07:52:54.201"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:51.954" endtime="20190122 07:52:54.205"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_DIAG_CODING}</arg>
<arg>${EEPROM_DIAG_CODING_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.225">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F6 00 0C</msg>
<status status="PASS" starttime="20190122 07:52:54.218" endtime="20190122 07:52:54.226"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:54.230" endtime="20190122 07:52:54.235"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.562">${resp} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 43 00 D5 0E</msg>
<status status="PASS" starttime="20190122 07:52:54.239" endtime="20190122 07:52:54.563"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:54.566" endtime="20190122 07:52:54.572"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.591">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014300D50E</msg>
<status status="PASS" starttime="20190122 07:52:54.585" endtime="20190122 07:52:54.592"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.601">${temp2} = EE04FFF6000C00</msg>
<status status="PASS" starttime="20190122 07:52:54.595" endtime="20190122 07:52:54.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:54.604" endtime="20190122 07:52:54.610"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:54.574" endtime="20190122 07:52:54.612"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:54.615">${RESP} = 1E 10 54 94 00 17 00 0B EE 04 FF F6 00 0C 00 11 15 05 15 01 FF 00 01 7C FF 00 CC 01 43 00 D5 0E</msg>
<status status="PASS" starttime="20190122 07:52:54.208" endtime="20190122 07:52:54.616"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_DIAG_CODING_LEN} ${EEPROM_APP_OK} ${EEPROM_DIAG_CODING_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.636">${temp1} = 1E1054940017000BEE04FFF6000C001115051501FF00017CFF00CC014300D50E</msg>
<status status="PASS" starttime="20190122 07:52:54.630" endtime="20190122 07:52:54.636"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.645">${temp2} = 000C001115051501FF00017CFF00CC</msg>
<status status="PASS" starttime="20190122 07:52:54.639" endtime="20190122 07:52:54.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:54.649" endtime="20190122 07:52:54.665"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:54.618" endtime="20190122 07:52:54.671"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:50.059" endtime="20190122 07:52:54.673"></status>
</kw>
<kw name="TEST_RESET_BUFFER">
<doc>Write and read the EEPROM_RESET_BUFFER</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Write and read the EEPROM_RESET_BUFFER</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:54.682" endtime="20190122 07:52:54.687"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DEFDATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.707">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 00000000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190122 07:52:54.699" endtime="20190122 07:52:54.708"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.723">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', '00000000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status status="PASS" starttime="20190122 07:52:54.718" endtime="20190122 07:52:54.724"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.731">Length is 18</msg>
<msg level="INFO" timestamp="20190122 07:52:54.733">${length} = 18</msg>
<status status="PASS" starttime="20190122 07:52:54.727" endtime="20190122 07:52:54.734"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:54.737" endtime="20190122 07:52:54.743"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.751">${value} = 12</msg>
<status status="PASS" starttime="20190122 07:52:54.746" endtime="20190122 07:52:54.752"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.761">${res} = 0C</msg>
<status status="PASS" starttime="20190122 07:52:54.755" endtime="20190122 07:52:54.762"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:54.765" endtime="20190122 07:52:54.770"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:54.780">${res} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190122 07:52:54.773" endtime="20190122 07:52:54.781"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:54.785">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042000000000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190122 07:52:54.710" endtime="20190122 07:52:54.785"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:54.788" endtime="20190122 07:52:54.803"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:55.987">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 44 5A 32</msg>
<status status="PASS" starttime="20190122 07:52:54.806" endtime="20190122 07:52:55.988"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:55.992" endtime="20190122 07:52:55.997"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.015">${temp1} = 1E105494000A000BEE06FFF5000001445A32</msg>
<status status="PASS" starttime="20190122 07:52:56.010" endtime="20190122 07:52:56.016"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.025">${temp2} = EE06FFF500</msg>
<status status="PASS" starttime="20190122 07:52:56.019" endtime="20190122 07:52:56.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:56.029" endtime="20190122 07:52:56.035"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:55.999" endtime="20190122 07:52:56.037"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:54.689" endtime="20190122 07:52:56.039"></status>
</kw>
<kw name="WRITE_EEPROM_VALUE">
<doc>WRITE EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
<arg>${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_WRITE_REQ} ${OTP_ENTRY} ${ENTRY_LEN} ${DATA}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.079">${ISI_MSG} = 1E 54 10 94 00 16 00 00 EE 05 FF F5 00 42 AABB0000 00000000 00000000 000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190122 07:52:56.067" endtime="20190122 07:52:56.079"></status>
</kw>
<kw name="NORMALIZE_LENGTH_FIELD">
<doc>Normalize length field in the isi message for max length of 255 bytes</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${ISI_MSG_NORM}</var>
</assign>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${ISI_MSG}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.095">${list} = ['1E', '54', '10', '94', '00', '16', '00', '00', 'EE', '05', 'FF', 'F5', '00', '42', 'AABB0000', '00000000', '00000000', '000000000000000000000000060000000000000600000000000006000000000000060000000000...</msg>
<status status="PASS" starttime="20190122 07:52:56.090" endtime="20190122 07:52:56.096"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${list}</arg>
</arguments>
<assign>
<var>${length}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.102">Length is 18</msg>
<msg level="INFO" timestamp="20190122 07:52:56.105">${length} = 18</msg>
<status status="PASS" starttime="20190122 07:52:56.099" endtime="20190122 07:52:56.106"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${length} &gt; 7</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:56.109" endtime="20190122 07:52:56.118"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${length} - 6</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.127">${value} = 12</msg>
<status status="PASS" starttime="20190122 07:52:56.121" endtime="20190122 07:52:56.127"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>("%02X" % ${value})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.136">${res} = 0C</msg>
<status status="PASS" starttime="20190122 07:52:56.130" endtime="20190122 07:52:56.137"></status>
</kw>
<kw name="Set List Value" library="Collections">
<doc>Sets the value of ``list`` specified by ``index`` to the given ``value``.</doc>
<arguments>
<arg>${list}</arg>
<arg>5</arg>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:56.140" endtime="20190122 07:52:56.145"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"".join(${list})</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.154">${res} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190122 07:52:56.147" endtime="20190122 07:52:56.155"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:52:56.159">${ISI_MSG_NORM} = 1E541094000C0000EE05FFF50042AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190122 07:52:56.082" endtime="20190122 07:52:56.159"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG_NORM}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:56.162" endtime="20190122 07:52:56.168"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG_NORM}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.559">${resp} = 1E 10 54 94 00 0A 00 0B EE 06 FF F5 00 00 01 45 5A 33</msg>
<status status="PASS" starttime="20190122 07:52:56.171" endtime="20190122 07:52:56.560"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:56.563" endtime="20190122 07:52:56.591"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${WRITE_RESP} ${OTP_ENTRY} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.611">${temp1} = 1E105494000A000BEE06FFF5000001455A33</msg>
<status status="PASS" starttime="20190122 07:52:56.606" endtime="20190122 07:52:56.612"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:56.621">${temp2} = EE06FFF500</msg>
<status status="PASS" starttime="20190122 07:52:56.615" endtime="20190122 07:52:56.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:56.625" endtime="20190122 07:52:56.630"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:56.593" endtime="20190122 07:52:56.633"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:56.049" endtime="20190122 07:52:56.635"></status>
</kw>
<kw name="power_cycle">
<doc>Switch power off and on</doc>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:56.643" endtime="20190122 07:52:56.690"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:56.693" endtime="20190122 07:52:56.754"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:52:58.775">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:52:56.765" endtime="20190122 07:52:58.777"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:58.779" endtime="20190122 07:52:58.863"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:58.866" endtime="20190122 07:52:58.939"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:56.637" endtime="20190122 07:52:58.941"></status>
</kw>
<kw name="READ_EEPROM_VALUE">
<doc>READ EEPROM VALUES and check response</doc>
<arguments>
<arg>${EEPROM_RESET_BUFFER}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN}</arg>
</arguments>
<assign>
<var>${RESP}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EEPROM_APP_READ_REQ} ${OTP_ENTRY} ${EXPECTED_LEN}</arg>
</arguments>
<assign>
<var>${ISI_MSG}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:52:58.988">${ISI_MSG} = 1E 54 10 94 00 08 00 00 EE 03 FF F5 00 42</msg>
<status status="PASS" starttime="20190122 07:52:58.972" endtime="20190122 07:52:58.989"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Send ISI msg: ${ISI_MSG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:52:58.992" endtime="20190122 07:52:59.018"></status>
</kw>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${ISI_MSG}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:00.742">${resp} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status status="PASS" starttime="20190122 07:52:59.021" endtime="20190122 07:53:00.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:00.758" endtime="20190122 07:53:00.775"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${resp}</arg>
<arg>${TRANSACTION_ID} ${READ_RESP} ${OTP_ENTRY} ${EXPECTED_LEN} ${EEPROM_APP_OK}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:00.815">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014300A5DC</msg>
<status status="PASS" starttime="20190122 07:53:00.799" endtime="20190122 07:53:00.816"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:00.840">${temp2} = EE04FFF5004200</msg>
<status status="PASS" starttime="20190122 07:53:00.834" endtime="20190122 07:53:00.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:00.856" endtime="20190122 07:53:00.862"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:00.777" endtime="20190122 07:53:00.874"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:53:00.877">${RESP} = 1E 10 54 94 00 4D 00 0B EE 04 FF F5 00 42 00 AA BB 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00 06 00 00 00 00 00 00...</msg>
<status status="PASS" starttime="20190122 07:52:58.943" endtime="20190122 07:53:00.878"></status>
</kw>
<kw name="SHOULD_CONTAIN_SUBSTRING">
<doc>should contain substring without paying attention to empty spaces</doc>
<arguments>
<arg>${RESP}</arg>
<arg>${EEPROM_RESET_BUFFER_LEN} ${EEPROM_APP_OK} ${EEPROM_RESET_BUFFER_DATA}</arg>
</arguments>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${value}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp1}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:00.951">${temp1} = 1E105494004D000BEE04FFF5004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000014300A5DC</msg>
<status status="PASS" starttime="20190122 07:53:00.928" endtime="20190122 07:53:00.952"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>"${muster}".replace(" ","")</arg>
</arguments>
<assign>
<var>${temp2}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:00.961">${temp2} = 004200AABB00000000000000000000000000000000000000000000060000000000000600000000000006000000000000060000000000000600000000000006000000000000</msg>
<status status="PASS" starttime="20190122 07:53:00.955" endtime="20190122 07:53:00.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${temp1}</arg>
<arg>${temp2}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:00.977" endtime="20190122 07:53:00.983"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:00.880" endtime="20190122 07:53:00.985"></status>
</kw>
<status status="PASS" starttime="20190122 07:52:54.675" endtime="20190122 07:53:00.998"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<doc>Teardown, Switch power off and close the Serial port, Switch off the CanController</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Teardown call</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:01.036" endtime="20190122 07:53:01.067"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:01.073" endtime="20190122 07:53:01.155"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:01.158" endtime="20190122 07:53:01.254"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:01.257" endtime="20190122 07:53:01.330"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:01.002" endtime="20190122 07:53:01.332"></status>
</kw>
<doc>Implements Test Task SKTB-41553</doc>
<tags>
<tag>EEPROM</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:52:27.224" endtime="20190122 07:53:01.333"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:53:02.903">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:53:02.965">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:53:01.461" endtime="20190122 07:53:02.966"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:01.414" endtime="20190122 07:53:02.967"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:01.394" endtime="20190122 07:53:02.998"></status>
</kw>
<doc>EEPROM write read test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:52:24.322" endtime="20190122 07:53:02.999"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56663.robot" name="SKTB-56663" id="s1-s16">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:03.771">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:53:03.764" endtime="20190122 07:53:03.786"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:03.795">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:53:03.809">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:53:06.089">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:53:03.789" endtime="20190122 07:53:06.091"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:03.735" endtime="20190122 07:53:06.115"></status>
</kw>
<test name="SKTB-56663" id="s1-s16-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:06.165" endtime="20190122 07:53:06.254"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:06.257" endtime="20190122 07:53:06.334"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:06.337" endtime="20190122 07:53:06.443"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:08.459">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:53:06.446" endtime="20190122 07:53:08.462"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:08.465" endtime="20190122 07:53:08.510"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:08.514" endtime="20190122 07:53:08.560"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:08.563" endtime="20190122 07:53:08.609"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:08.612" endtime="20190122 07:53:08.658"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:08.662" endtime="20190122 07:53:08.708"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${10000}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:08.712" endtime="20190122 07:53:08.794"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:10.810">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:53:08.797" endtime="20190122 07:53:10.812"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:06.159" endtime="20190122 07:53:10.815"></status>
</kw>
<kw name="Step_1">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:11.027">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F DE 01 43 65 03</msg>
<status status="PASS" starttime="20190122 07:53:10.824" endtime="20190122 07:53:11.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:11.035">1E 14 54 8E 00 0A 00 0D 01 02 00 01 2F DE 01 43 65 03</msg>
<status status="PASS" starttime="20190122 07:53:11.031" endtime="20190122 07:53:11.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:11.041" endtime="20190122 07:53:11.048"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:10.817" endtime="20190122 07:53:11.051"></status>
</kw>
<kw name="Step_2">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_GET_REQ} 00</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:11.277">${resp} = 1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 44 B4 24</msg>
<status status="PASS" starttime="20190122 07:53:11.059" endtime="20190122 07:53:11.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${resp}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:11.286">1E 14 54 8E 00 0A 00 0D 01 02 01 00 FF FF 01 44 B4 24</msg>
<status status="PASS" starttime="20190122 07:53:11.281" endtime="20190122 07:53:11.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${SCA_VOLTAGE_GET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:11.291" endtime="20190122 07:53:11.298"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:11.053" endtime="20190122 07:53:11.300"></status>
</kw>
<kw name="Step_3">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:11.529">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 45 4A DF</msg>
<status status="PASS" starttime="20190122 07:53:11.308" endtime="20190122 07:53:11.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:11.538">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 45 4A DF</msg>
<status status="PASS" starttime="20190122 07:53:11.534" endtime="20190122 07:53:11.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:11.544" endtime="20190122 07:53:11.551"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:11.302" endtime="20190122 07:53:11.553"></status>
</kw>
<kw name="Step_4">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_EXCEED} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:11.785">${info} = 1E 14 54 8E 00 08 00 0D 01 04 00 01 01 40 4A DA</msg>
<status status="PASS" starttime="20190122 07:53:11.561" endtime="20190122 07:53:11.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:11.797">1E 14 54 8E 00 08 00 0D 01 04 00 01 01 40 4A DA</msg>
<status status="PASS" starttime="20190122 07:53:11.790" endtime="20190122 07:53:11.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_OK} ${SCA_VOLTAGE_CARBAT}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:11.803" endtime="20190122 07:53:11.810"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:11.555" endtime="20190122 07:53:11.812"></status>
</kw>
<kw name="Step_5">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} ${SCA_VOLTAGE_CARBAT} ${SCA_THRESHOLD_INVALID} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:12.046">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 01 01 41 4B DB</msg>
<status status="PASS" starttime="20190122 07:53:11.820" endtime="20190122 07:53:12.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:12.055">1E 14 54 8E 00 08 00 0D 01 04 01 01 01 41 4B DB</msg>
<status status="PASS" starttime="20190122 07:53:12.051" endtime="20190122 07:53:12.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:12.060" endtime="20190122 07:53:12.068"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:11.814" endtime="20190122 07:53:12.070"></status>
</kw>
<kw name="Step_6">
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_REQ} 00 ${SCA_THRESHOLD_FALL_BELOW} ${THRESHOLD} ${HYSTERESIS}</arg>
<arg>${ACK}</arg>
</arguments>
<assign>
<var>${info}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:12.312">${info} = 1E 14 54 8E 00 08 00 0D 01 04 01 00 01 42 4B D9</msg>
<status status="PASS" starttime="20190122 07:53:12.078" endtime="20190122 07:53:12.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${info}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:12.320">1E 14 54 8E 00 08 00 0D 01 04 01 00 01 42 4B D9</msg>
<status status="PASS" starttime="20190122 07:53:12.316" endtime="20190122 07:53:12.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${info}</arg>
<arg>${SCA_VOLTAGE_THRESHOLD_SET_RESP} ${SCA_RESULT_FAIL}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:12.326" endtime="20190122 07:53:12.333"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:12.072" endtime="20190122 07:53:12.335"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:12.344" endtime="20190122 07:53:12.413"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:12.416" endtime="20190122 07:53:12.475"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:12.479" endtime="20190122 07:53:12.525"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:14.532">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:53:12.528" endtime="20190122 07:53:14.534"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:14.537" endtime="20190122 07:53:14.583"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:14.587" endtime="20190122 07:53:14.633"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:12.338" endtime="20190122 07:53:14.635"></status>
</kw>
<doc>Implements SW Test Case SKTB-56663</doc>
<tags>
<tag>FBUS</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:53:06.117" endtime="20190122 07:53:14.636"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:53:16.131">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:53:16.186">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:53:14.679" endtime="20190122 07:53:16.187"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:14.653" endtime="20190122 07:53:16.189"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:14.646" endtime="20190122 07:53:16.213"></status>
</kw>
<doc>Chorus Fbus Testing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:53:03.171" endtime="20190122 07:53:16.214"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56067.robot" name="SKTB-56067" id="s1-s17">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:16.869">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:53:16.855" endtime="20190122 07:53:16.898"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:16.915">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:53:16.916">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:53:19.212">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:53:16.901" endtime="20190122 07:53:19.215"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:16.849" endtime="20190122 07:53:19.217"></status>
</kw>
<test name="SKTB-SKTB-56067" id="s1-s17-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:19.301" endtime="20190122 07:53:19.397"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:19.399" endtime="20190122 07:53:19.521"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:19.523" endtime="20190122 07:53:19.635"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:21.667">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:53:19.643" endtime="20190122 07:53:21.669"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:21.672" endtime="20190122 07:53:21.721"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:22.729">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:53:21.723" endtime="20190122 07:53:22.731"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:22.734" endtime="20190122 07:53:22.783"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:24.791">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:53:22.786" endtime="20190122 07:53:24.794"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:24.796" endtime="20190122 07:53:24.841"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:24.844" endtime="20190122 07:53:24.891"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:24.894" endtime="20190122 07:53:24.942"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:24.946" endtime="20190122 07:53:24.992"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:19.267" endtime="20190122 07:53:24.995"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate</doc>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:25.094">${res_dict} = {'status': True, 'result': '4153', 'data': '', 'request': '41'}</msg>
<status status="PASS" starttime="20190122 07:53:25.009" endtime="20190122 07:53:25.095"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:25.149">${value} = True</msg>
<status status="PASS" starttime="20190122 07:53:25.099" endtime="20190122 07:53:25.150"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:25.157" endtime="20190122 07:53:25.166"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:26.174">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:53:25.169" endtime="20190122 07:53:26.176"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:25.003" endtime="20190122 07:53:26.179"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:26.250">${res_dict} = {'status': True, 'result': '4153', 'data': '', 'request': '41'}</msg>
<status status="PASS" starttime="20190122 07:53:26.187" endtime="20190122 07:53:26.250"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:26.275">${value} = True</msg>
<status status="PASS" starttime="20190122 07:53:26.254" endtime="20190122 07:53:26.276"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:26.279" endtime="20190122 07:53:26.283"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:27.290">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:53:26.286" endtime="20190122 07:53:27.299"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:26.181" endtime="20190122 07:53:27.301"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:24.997" endtime="20190122 07:53:27.303"></status>
</kw>
<kw name="POWER_ON_NAD">
<doc>Test the POWER_ON_NAD functionality</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the POWER_ON_NAD</arg>
<arg>functionality</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:27.311" endtime="20190122 07:53:27.316"></status>
</kw>
<kw name="POWERCYCLE">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:27.324" endtime="20190122 07:53:27.370"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:27.374" endtime="20190122 07:53:27.420"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:27.423" endtime="20190122 07:53:27.469"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:29.476">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:53:27.471" endtime="20190122 07:53:29.479"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:29.481" endtime="20190122 07:53:29.528"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:30.536">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:53:29.531" endtime="20190122 07:53:30.538"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:30.540" endtime="20190122 07:53:30.587"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:27.318" endtime="20190122 07:53:30.590"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:30.616">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190122 07:53:30.644">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:53:30.659">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:53:30.662">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:53:30.611" endtime="20190122 07:53:30.663"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:30.672">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:53:30.667" endtime="20190122 07:53:30.673"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:30.680">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:53:30.682">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190122 07:53:30.676" endtime="20190122 07:53:30.683"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:30.691">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:53:30.686" endtime="20190122 07:53:30.693"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:30.696" endtime="20190122 07:53:30.701"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" html="yes" timestamp="20190122 07:53:30.709">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190122 07:53:30.704" endtime="20190122 07:53:30.710"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:53:30.714">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:53:30.603" endtime="20190122 07:53:30.715"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:30.890">${res_dict} = {'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190122 07:53:30.718" endtime="20190122 07:53:30.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:30.908">{'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190122 07:53:30.899" endtime="20190122 07:53:30.914"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:32.922">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:53:30.917" endtime="20190122 07:53:32.924"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:32.949">${value} = 5453</msg>
<status status="PASS" starttime="20190122 07:53:32.927" endtime="20190122 07:53:32.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:32.953" endtime="20190122 07:53:32.961"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:30.598" endtime="20190122 07:53:32.963"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:33.033">${res_dict} = {'status': True, 'result': '4953', 'data': '', 'request': '49'}</msg>
<status status="PASS" starttime="20190122 07:53:32.972" endtime="20190122 07:53:33.034"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:33.058">${value} = True</msg>
<status status="PASS" starttime="20190122 07:53:33.037" endtime="20190122 07:53:33.059"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:33.062" endtime="20190122 07:53:33.066"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:34.074">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:53:33.069" endtime="20190122 07:53:34.076"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:32.966" endtime="20190122 07:53:34.078"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:34.154">${res_dict} = {'status': True, 'result': '475653', 'data': '0100', 'request': '4756'}</msg>
<status status="PASS" starttime="20190122 07:53:34.089" endtime="20190122 07:53:34.155"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:34.158" endtime="20190122 07:53:34.168"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:35.185">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:53:34.172" endtime="20190122 07:53:35.187"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:34.082" endtime="20190122 07:53:35.189"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:30.593" endtime="20190122 07:53:35.192"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_POWERONNAD}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:35.269">${res_dict} = {'status': True, 'result': '520153', 'data': '', 'request': '5201'}</msg>
<status status="PASS" starttime="20190122 07:53:35.203" endtime="20190122 07:53:35.270"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:35.274" endtime="20190122 07:53:35.279"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:35.304">${value} = True</msg>
<status status="PASS" starttime="20190122 07:53:35.282" endtime="20190122 07:53:35.305"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:53:35.308">${value} = True</msg>
<status status="PASS" starttime="20190122 07:53:35.195" endtime="20190122 07:53:35.309"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:35.312" endtime="20190122 07:53:35.316"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:45.323">Slept 10 seconds</msg>
<status status="PASS" starttime="20190122 07:53:35.319" endtime="20190122 07:53:45.325"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:45.398">${KLEMME30} = [[12225, 128], [0, 0]]</msg>
<status status="PASS" starttime="20190122 07:53:45.333" endtime="20190122 07:53:45.398"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:45.426">${CURR_VCARBAT} = 128</msg>
<status status="PASS" starttime="20190122 07:53:45.402" endtime="20190122 07:53:45.426"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:45.451">${CURR_KL30} = 0</msg>
<status status="PASS" starttime="20190122 07:53:45.429" endtime="20190122 07:53:45.452"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:45.460">${TIMENOW} = 1548143625</msg>
<status status="PASS" starttime="20190122 07:53:45.455" endtime="20190122 07:53:45.461"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:45.463" endtime="20190122 07:53:45.470"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:53:45.475">${TIMENOW} = 1548143625</msg>
<msg level="INFO" timestamp="20190122 07:53:45.477">${CURR_VCARBAT} = 128</msg>
<msg level="INFO" timestamp="20190122 07:53:45.478">${CURR_KL30} = 0</msg>
<status status="PASS" starttime="20190122 07:53:45.327" endtime="20190122 07:53:45.478"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &gt; 50</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:45.487" endtime="20190122 07:53:45.492"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:53:45.494">${fbus_resp} = None</msg>
<status status="PASS" starttime="20190122 07:53:45.482" endtime="20190122 07:53:45.495"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:27.305" endtime="20190122 07:53:45.497"></status>
</kw>
<kw name="SHUTDOWNSYSTEM">
<doc>Test the shutdownsystem functionality</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the shutdownsystem functionality</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:45.505" endtime="20190122 07:53:45.510"></status>
</kw>
<kw name="POWERCYCLE">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:45.517" endtime="20190122 07:53:45.564"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:45.567" endtime="20190122 07:53:45.633"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:45.636" endtime="20190122 07:53:45.689"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:47.697">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:53:45.691" endtime="20190122 07:53:47.699"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:47.701" endtime="20190122 07:53:47.750"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:48.758">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:53:47.754" endtime="20190122 07:53:48.760"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:48.763" endtime="20190122 07:53:48.809"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:45.512" endtime="20190122 07:53:48.812"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:48.872">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190122 07:53:48.906">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:53:48.922">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:53:48.925">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:53:48.854" endtime="20190122 07:53:48.926"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:48.935">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:53:48.930" endtime="20190122 07:53:48.936"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:48.943">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:53:48.945">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190122 07:53:48.939" endtime="20190122 07:53:48.946"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:48.954">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:53:48.949" endtime="20190122 07:53:48.954"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:48.957" endtime="20190122 07:53:48.963"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" html="yes" timestamp="20190122 07:53:48.971">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190122 07:53:48.966" endtime="20190122 07:53:48.973"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:53:48.977">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:53:48.846" endtime="20190122 07:53:48.978"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:49.456">${res_dict} = {'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190122 07:53:48.981" endtime="20190122 07:53:49.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:49.490">{'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190122 07:53:49.481" endtime="20190122 07:53:49.522"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:51.574">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:53:49.527" endtime="20190122 07:53:51.582"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:51.636">${value} = 5453</msg>
<status status="PASS" starttime="20190122 07:53:51.587" endtime="20190122 07:53:51.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:51.652" endtime="20190122 07:53:51.658"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:48.827" endtime="20190122 07:53:51.660"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:51.782">${res_dict} = {'status': True, 'result': '4953', 'data': '', 'request': '49'}</msg>
<status status="PASS" starttime="20190122 07:53:51.681" endtime="20190122 07:53:51.783"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:51.830">${value} = True</msg>
<status status="PASS" starttime="20190122 07:53:51.786" endtime="20190122 07:53:51.831"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:51.840" endtime="20190122 07:53:51.844"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:52.862">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:53:51.857" endtime="20190122 07:53:52.864"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:51.674" endtime="20190122 07:53:52.867"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:52.939">${res_dict} = {'status': True, 'result': '475653', 'data': '0100', 'request': '4756'}</msg>
<status status="PASS" starttime="20190122 07:53:52.875" endtime="20190122 07:53:52.941"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:52.944" endtime="20190122 07:53:52.950"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:53.957">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:53:52.952" endtime="20190122 07:53:53.959"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:52.869" endtime="20190122 07:53:53.961"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:48.815" endtime="20190122 07:53:53.963"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_SHUTDOWNSYSTEM}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:54.049">${res_dict} = {'status': False, 'result': '520246', 'data': '', 'request': '5202'}</msg>
<status status="PASS" starttime="20190122 07:53:53.973" endtime="20190122 07:53:54.050"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:54.054" endtime="20190122 07:53:54.059"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:54.084">${value} = False</msg>
<status status="PASS" starttime="20190122 07:53:54.062" endtime="20190122 07:53:54.085"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:53:54.088">${value} = False</msg>
<status status="PASS" starttime="20190122 07:53:53.965" endtime="20190122 07:53:54.089"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:54.092" endtime="20190122 07:53:54.096"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:53:59.103">Slept 5 seconds</msg>
<status status="PASS" starttime="20190122 07:53:54.099" endtime="20190122 07:53:59.105"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:59.167">${KLEMME30} = [[12225, 141], [12300, 150]]</msg>
<status status="PASS" starttime="20190122 07:53:59.117" endtime="20190122 07:53:59.167"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:59.193">${CURR_VCARBAT} = 141</msg>
<status status="PASS" starttime="20190122 07:53:59.171" endtime="20190122 07:53:59.194"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:59.219">${CURR_KL30} = 150</msg>
<status status="PASS" starttime="20190122 07:53:59.196" endtime="20190122 07:53:59.220"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:53:59.227">${TIMENOW} = 1548143639</msg>
<status status="PASS" starttime="20190122 07:53:59.223" endtime="20190122 07:53:59.228"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:59.231" endtime="20190122 07:53:59.239"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:53:59.244">${TIMENOW} = 1548143639</msg>
<msg level="INFO" timestamp="20190122 07:53:59.245">${CURR_VCARBAT} = 141</msg>
<msg level="INFO" timestamp="20190122 07:53:59.246">${CURR_KL30} = 150</msg>
<status status="PASS" starttime="20190122 07:53:59.107" endtime="20190122 07:53:59.247"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:53:59.262">'141 &lt; 5' should be true.</msg>
<status status="FAIL" starttime="20190122 07:53:59.256" endtime="20190122 07:53:59.264"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:53:59.265">${fbus_resp} = None</msg>
<status status="FAIL" starttime="20190122 07:53:59.250" endtime="20190122 07:53:59.266"></status>
</kw>
<status status="FAIL" starttime="20190122 07:53:45.499" endtime="20190122 07:53:59.270"></status>
</kw>
<kw name="MCUSTANDBY">
<doc>Test the mcu stanby functionality</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test the mcu stanby functionality</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:59.278" endtime="20190122 07:53:59.282"></status>
</kw>
<kw name="POWERCYCLE">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:59.290" endtime="20190122 07:53:59.337"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:59.339" endtime="20190122 07:53:59.401"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:53:59.404" endtime="20190122 07:53:59.463"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:01.476">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:53:59.466" endtime="20190122 07:54:01.478"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:01.481" endtime="20190122 07:54:01.553"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:02.560">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:01.555" endtime="20190122 07:54:02.562"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:02.565" endtime="20190122 07:54:02.612"></status>
</kw>
<status status="PASS" starttime="20190122 07:53:59.284" endtime="20190122 07:54:02.615"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the powertestroutine and init it</doc>
<kw name="Step_load">
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${POWER_TR_PATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:02.641">Starting process:
find /home/debian/chorus_version/TestRoutinePower_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190122 07:54:02.669">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:02.684">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:02.687">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:54:02.635" endtime="20190122 07:54:02.690"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:02.699">${stdout_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:54:02.694" endtime="20190122 07:54:02.700"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:02.707">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:54:02.709">${temp} = ['/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190122 07:54:02.703" endtime="20190122 07:54:02.710"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:02.717">${path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:54:02.713" endtime="20190122 07:54:02.718"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:02.721" endtime="20190122 07:54:02.726"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" html="yes" timestamp="20190122 07:54:02.747">File '&lt;a href="file:///home/debian/chorus_version/TestRoutinePower_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutinePower_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190122 07:54:02.729" endtime="20190122 07:54:02.749"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:02.752">${matched_path} = /home/debian/chorus_version/TestRoutinePower_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:54:02.628" endtime="20190122 07:54:02.753"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:02.923">${res_dict} = {'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190122 07:54:02.756" endtime="20190122 07:54:02.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:02.944">{'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': '2002e7cf'}</msg>
<status status="PASS" starttime="20190122 07:54:02.935" endtime="20190122 07:54:02.947"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:04.954">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:54:02.950" endtime="20190122 07:54:04.957"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:04.982">${value} = 5453</msg>
<status status="PASS" starttime="20190122 07:54:04.960" endtime="20190122 07:54:04.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:04.986" endtime="20190122 07:54:04.991"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:02.622" endtime="20190122 07:54:04.996"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:05.069">${res_dict} = {'status': True, 'result': '4953', 'data': '', 'request': '49'}</msg>
<status status="PASS" starttime="20190122 07:54:05.005" endtime="20190122 07:54:05.070"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:05.098">${value} = True</msg>
<status status="PASS" starttime="20190122 07:54:05.073" endtime="20190122 07:54:05.101"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:05.104" endtime="20190122 07:54:05.108"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:06.117">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:05.111" endtime="20190122 07:54:06.119"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:04.998" endtime="20190122 07:54:06.121"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:06.251">${res_dict} = {'status': True, 'result': '475653', 'data': '0100', 'request': '4756'}</msg>
<status status="PASS" starttime="20190122 07:54:06.138" endtime="20190122 07:54:06.252"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:06.255" endtime="20190122 07:54:06.273"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:07.280">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:06.276" endtime="20190122 07:54:07.282"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:06.123" endtime="20190122 07:54:07.285"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:02.617" endtime="20190122 07:54:07.287"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${PWR_MCUSTANDBY}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:07.369">${res_dict} = {'status': False, 'result': '520346', 'data': '', 'request': '5203'}</msg>
<status status="PASS" starttime="20190122 07:54:07.296" endtime="20190122 07:54:07.370"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:07.373" endtime="20190122 07:54:07.378"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:07.403">${value} = False</msg>
<status status="PASS" starttime="20190122 07:54:07.381" endtime="20190122 07:54:07.403"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:07.407">${value} = False</msg>
<status status="PASS" starttime="20190122 07:54:07.289" endtime="20190122 07:54:07.408"></status>
</kw>
<kw name="Should Not Be True" library="BuiltIn">
<doc>Fails if the given condition is true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:07.411" endtime="20190122 07:54:07.415"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:12.425">Slept 5 seconds</msg>
<status status="PASS" starttime="20190122 07:54:07.418" endtime="20190122 07:54:12.427"></status>
</kw>
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:12.565">${KLEMME30} = [[12250, 81], [12300, 89]]</msg>
<status status="PASS" starttime="20190122 07:54:12.465" endtime="20190122 07:54:12.566"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:12.628">${CURR_VCARBAT} = 81</msg>
<status status="PASS" starttime="20190122 07:54:12.577" endtime="20190122 07:54:12.629"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:12.678">${CURR_KL30} = 89</msg>
<status status="PASS" starttime="20190122 07:54:12.632" endtime="20190122 07:54:12.679"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:12.706">${TIMENOW} = 1548143652</msg>
<status status="PASS" starttime="20190122 07:54:12.701" endtime="20190122 07:54:12.706"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:12.720" endtime="20190122 07:54:12.787"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:12.827">${TIMENOW} = 1548143652</msg>
<msg level="INFO" timestamp="20190122 07:54:12.828">${CURR_VCARBAT} = 81</msg>
<msg level="INFO" timestamp="20190122 07:54:12.831">${CURR_KL30} = 89</msg>
<status status="PASS" starttime="20190122 07:54:12.433" endtime="20190122 07:54:12.832"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should be true</arg>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${CURR_VCARBAT} &lt; 5</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:54:12.900">'81 &lt; 5' should be true.</msg>
<status status="FAIL" starttime="20190122 07:54:12.880" endtime="20190122 07:54:12.901"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:12.903">${fbus_resp} = None</msg>
<status status="FAIL" starttime="20190122 07:54:12.835" endtime="20190122 07:54:12.904"></status>
</kw>
<status status="FAIL" starttime="20190122 07:53:59.272" endtime="20190122 07:54:12.914"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:12.946" endtime="20190122 07:54:13.034"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:13.037" endtime="20190122 07:54:13.106"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:13.109" endtime="20190122 07:54:13.156"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:14.163">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:13.159" endtime="20190122 07:54:14.166"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:14.171" endtime="20190122 07:54:14.258"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:12.919" endtime="20190122 07:54:14.266"></status>
</kw>
<doc>Implements Test Task SKTB-SKTB-56067 Power testroutine</doc>
<tags>
<tag>Power testroutine</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20190122 07:53:19.219" endtime="20190122 07:54:14.267">Several failures occurred:

1) '141 &lt; 5' should be true.

2) '81 &lt; 5' should be true.</status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:54:15.859">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:54:15.898">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:54:14.395" endtime="20190122 07:54:15.899"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:14.356" endtime="20190122 07:54:15.922"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:14.338" endtime="20190122 07:54:15.929"></status>
</kw>
<doc>Power testroutine testcase</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190122 07:53:16.405" endtime="20190122 07:54:15.929"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-56094.robot" name="SKTB-56094" id="s1-s18">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:16.563">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:54:16.548" endtime="20190122 07:54:16.569"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:16.598">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:54:16.600">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:54:18.847">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:54:16.572" endtime="20190122 07:54:18.848"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:16.543" endtime="20190122 07:54:18.851"></status>
</kw>
<test name="SKTB-SKTB-56094" id="s1-s18-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:18.927" endtime="20190122 07:54:19.037"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:19.040" endtime="20190122 07:54:19.117"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:19.120" endtime="20190122 07:54:19.248"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:21.273">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:54:19.255" endtime="20190122 07:54:21.276"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:21.279" endtime="20190122 07:54:21.328"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:22.337">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:21.332" endtime="20190122 07:54:22.339"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:22.342" endtime="20190122 07:54:22.401"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:24.408">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:54:22.404" endtime="20190122 07:54:24.410"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:24.413" endtime="20190122 07:54:24.458"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:24.461" endtime="20190122 07:54:24.507"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:24.511" endtime="20190122 07:54:24.557"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:24.560" endtime="20190122 07:54:24.610"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:18.912" endtime="20190122 07:54:24.612"></status>
</kw>
<kw name="TEST_SERIAL_COMMUNICATION">
<doc>Test serial communication and change baudrate if necessary</doc>
<kw name="Step_alive">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:24.705">${res_dict} = {'status': True, 'result': '4153', 'data': '', 'request': '41'}</msg>
<status status="PASS" starttime="20190122 07:54:24.627" endtime="20190122 07:54:24.706"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:24.770">${value} = True</msg>
<status status="PASS" starttime="20190122 07:54:24.713" endtime="20190122 07:54:24.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${value}== ${FALSE}</arg>
<arg>change_baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:24.778" endtime="20190122 07:54:24.787"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:25.794">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:24.790" endtime="20190122 07:54:25.796"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:24.621" endtime="20190122 07:54:25.798"></status>
</kw>
<kw name="Step_alive_retry">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>alive</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:25.866">${res_dict} = {'status': True, 'result': '4153', 'data': '', 'request': '41'}</msg>
<status status="PASS" starttime="20190122 07:54:25.806" endtime="20190122 07:54:25.867"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:25.895">${value} = True</msg>
<status status="PASS" starttime="20190122 07:54:25.870" endtime="20190122 07:54:25.895"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:25.898" endtime="20190122 07:54:25.902"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:26.910">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:25.905" endtime="20190122 07:54:26.912"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:25.800" endtime="20190122 07:54:26.914"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:24.615" endtime="20190122 07:54:26.916"></status>
</kw>
<kw name="LOAD_AND_INIT_THE_TESTROUTINE">
<doc>Load the rtestroutine and init it</doc>
<kw name="Step_load">
<arguments>
<arg>${VEHICLE_TR_PATH}</arg>
</arguments>
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${TESTROUTINE_FILEPATH}</arg>
</arguments>
<assign>
<var>${matched_path}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:26.946">Starting process:
find /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_*.bin</msg>
<msg level="INFO" timestamp="20190122 07:54:26.974">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:26.989">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:26.993">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:54:26.940" endtime="20190122 07:54:26.994"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:27.003">${stdout_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:54:26.997" endtime="20190122 07:54:27.004"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:27.011">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:54:27.013">${temp} = ['/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin']</msg>
<status status="PASS" starttime="20190122 07:54:27.007" endtime="20190122 07:54:27.014"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:27.022">${path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:54:27.017" endtime="20190122 07:54:27.023"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:27.026" endtime="20190122 07:54:27.031"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" html="yes" timestamp="20190122 07:54:27.039">File '&lt;a href="file:///home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin"&gt;/home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190122 07:54:27.034" endtime="20190122 07:54:27.040"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:27.044">${matched_path} = /home/debian/chorus_version/TestRoutineVehicleBuses_OLU_C2.bin</msg>
<status status="PASS" starttime="20190122 07:54:26.930" endtime="20190122 07:54:27.045"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>load</arg>
<arg>${matched_path}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:27.807">${res_dict} = {'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': 'd8dd0dd1'}</msg>
<status status="PASS" starttime="20190122 07:54:27.048" endtime="20190122 07:54:27.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${res_dict}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:27.831">{'status': True, 'flowctrl': '', 'request': '', 'response': 'TS', 'result': '5453', 'data': 'd8dd0dd1'}</msg>
<status status="PASS" starttime="20190122 07:54:27.820" endtime="20190122 07:54:27.846"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:29.872">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:54:27.857" endtime="20190122 07:54:29.874"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("result")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:29.902">${value} = 5453</msg>
<status status="PASS" starttime="20190122 07:54:29.877" endtime="20190122 07:54:29.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${value}</arg>
<arg>${TRANSFER_SUCCESSFULLY}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:29.905" endtime="20190122 07:54:29.911"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:26.923" endtime="20190122 07:54:29.913"></status>
</kw>
<kw name="Step_init">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>init</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:29.983">${res_dict} = {'status': True, 'result': '4953', 'data': '', 'request': '49'}</msg>
<status status="PASS" starttime="20190122 07:54:29.923" endtime="20190122 07:54:29.985"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:30.012">${value} = True</msg>
<status status="PASS" starttime="20190122 07:54:29.988" endtime="20190122 07:54:30.013"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:30.016" endtime="20190122 07:54:30.020"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:31.027">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:30.023" endtime="20190122 07:54:31.029"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:29.916" endtime="20190122 07:54:31.031"></status>
</kw>
<kw name="Step_getversion">
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>version</arg>
<arg>Noparam</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:31.102">${res_dict} = {'status': True, 'result': '475653', 'data': '0101', 'request': '4756'}</msg>
<status status="PASS" starttime="20190122 07:54:31.039" endtime="20190122 07:54:31.103"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nVersion: ${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:31.107" endtime="20190122 07:54:31.113"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:32.120">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:31.115" endtime="20190122 07:54:32.122"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:31.033" endtime="20190122 07:54:32.124"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:26.918" endtime="20190122 07:54:32.126"></status>
</kw>
<kw name="CAN_SENDDATA_CAN1_TEST">
<doc>Test can send and receive data can 1</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 1</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:32.135" endtime="20190122 07:54:32.158"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_0}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:32.190" endtime="20190122 07:54:32.234"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:32.274">Starting process:
sudo ip link set can0 down</msg>
<msg level="INFO" timestamp="20190122 07:54:32.334">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:32.412">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:32.415">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:54:32.240" endtime="20190122 07:54:32.415"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:32.419" endtime="20190122 07:54:32.428"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:32.437">Starting process:
sudo ip link set can0 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190122 07:54:32.467">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:32.518">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:32.521">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:54:32.431" endtime="20190122 07:54:32.522"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:32.526" endtime="20190122 07:54:32.542"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:32.551">Starting process:
sudo ip link set can0 up</msg>
<msg level="INFO" timestamp="20190122 07:54:32.580">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:32.664">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:32.667">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:54:32.545" endtime="20190122 07:54:32.672"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:32.678" endtime="20190122 07:54:32.706"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:54:32.165" endtime="20190122 07:54:32.709"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_0},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:32.720">Starting process:
candump -t a can0,767:7FF,768:7FF</msg>
<msg level="INFO" timestamp="20190122 07:54:32.750">${candump_ID} = 201</msg>
<status status="PASS" starttime="20190122 07:54:32.712" endtime="20190122 07:54:32.751"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_0}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:32.780">Starting process:
cangen can0 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg level="INFO" timestamp="20190122 07:54:32.810">${cangen_ID} = 202</msg>
<status status="PASS" starttime="20190122 07:54:32.758" endtime="20190122 07:54:32.812"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN1}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:32.971">${res_dict} = {'status': True, 'result': '534253', 'data': '', 'request': '53420008aabbccdd11223344'}</msg>
<status status="PASS" starttime="20190122 07:54:32.834" endtime="20190122 07:54:32.982"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:32.985" endtime="20190122 07:54:33.005"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:33.035">${value} = True</msg>
<status status="PASS" starttime="20190122 07:54:33.007" endtime="20190122 07:54:33.036"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:33.039" endtime="20190122 07:54:33.044"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:33.255">${res_dict} = {'status': True, 'result': '520153', 'data': '', 'request': '5201'}</msg>
<status status="PASS" starttime="20190122 07:54:33.047" endtime="20190122 07:54:33.256"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:33.259" endtime="20190122 07:54:33.277"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:33.346">${value} = True</msg>
<status status="PASS" starttime="20190122 07:54:33.280" endtime="20190122 07:54:33.347"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:33.350" endtime="20190122 07:54:33.372"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:33.437">${res_dict} = {'status': True, 'result': '474253', 'data': 'aabbccdd11223344', 'request': '4742'}</msg>
<status status="PASS" starttime="20190122 07:54:33.375" endtime="20190122 07:54:33.439"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:33.442" endtime="20190122 07:54:33.448"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:33.477">${status} = True</msg>
<status status="PASS" starttime="20190122 07:54:33.451" endtime="20190122 07:54:33.477"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:33.482" endtime="20190122 07:54:33.491"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:33.524">${data} = aabbccdd11223344</msg>
<status status="PASS" starttime="20190122 07:54:33.495" endtime="20190122 07:54:33.524"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:33.532">${status} = True</msg>
<msg level="INFO" timestamp="20190122 07:54:33.534">${data} = aabbccdd11223344</msg>
<status status="PASS" starttime="20190122 07:54:32.818" endtime="20190122 07:54:33.534"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:33.537" endtime="20190122 07:54:33.550"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:33.558" endtime="20190122 07:54:33.576"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:33.605">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:34.109">Process did not complete in 500 milliseconds.</msg>
<msg level="INFO" timestamp="20190122 07:54:34.110">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:54:34.115">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:34.117">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:54:33.595" endtime="20190122 07:54:34.118"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.126">4 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:54:34.128">${temp} = [' (1548143672.827688)  can0  768   [8]  AA BB CC DD 11 22 33 44', ' (1548143673.112060)  can0  767   [8]  AA BB CC DD 11 22 33 44', ' (1548143673.327848)  can0  768   [8]  AA BB CC DD 11 22 33 44', '...</msg>
<status status="PASS" starttime="20190122 07:54:34.121" endtime="20190122 07:54:34.129"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.136">${FILTER} = ['withoutfilter']</msg>
<status status="PASS" starttime="20190122 07:54:34.132" endtime="20190122 07:54:34.137"></status>
</kw>
<kw name="Set Canid Status And Filter" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:34.140" endtime="20190122 07:54:34.144"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.152">(1548143672.827688)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1548143673.112060)  can0  767   [8]  AA BB CC DD 11 22 33 44
 (1548143673.327848)  can0  768   [8]  AA BB CC DD 11 22 33 44
 (1548143673.827992)  can0  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg level="INFO" timestamp="20190122 07:54:34.154">${ret_list} = [{'payload': 'AABBCCDD11223344', 'channel': 'can0', 'timestamp': '1548143672.827688', 'id': '768'}, {'payload': 'AABBCCDD11223344', 'channel': 'can0', 'timestamp': '1548143673.112060', 'id': '767'}, {...</msg>
<status status="PASS" starttime="20190122 07:54:34.147" endtime="20190122 07:54:34.155"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.172">${RESULT} = False</msg>
<status status="PASS" starttime="20190122 07:54:34.167" endtime="20190122 07:54:34.173"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.183">Length is 4</msg>
<msg level="INFO" timestamp="20190122 07:54:34.185">${count} = 4</msg>
<status status="PASS" starttime="20190122 07:54:34.176" endtime="20190122 07:54:34.186"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:34.188" endtime="20190122 07:54:34.194"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.201">${msgcount} = 0</msg>
<status status="PASS" starttime="20190122 07:54:34.197" endtime="20190122 07:54:34.202"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'payload': 'AABBCCDD11223344', 'channel': 'can0', 'timestamp': '1548143672.827688', 'id': '768'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.215">${payload} = AABBCCDD11223344</msg>
<status status="PASS" starttime="20190122 07:54:34.209" endtime="20190122 07:54:34.215"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.223">${can_id} = 768</msg>
<status status="PASS" starttime="20190122 07:54:34.218" endtime="20190122 07:54:34.224"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.235">${count_msg} = 1</msg>
<status status="PASS" starttime="20190122 07:54:34.227" endtime="20190122 07:54:34.236"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.247">${count_id} = 0</msg>
<status status="PASS" starttime="20190122 07:54:34.239" endtime="20190122 07:54:34.248"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.257">${msgcount} = 1</msg>
<status status="PASS" starttime="20190122 07:54:34.251" endtime="20190122 07:54:34.258"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.270">${RESULT} = False</msg>
<status status="PASS" starttime="20190122 07:54:34.262" endtime="20190122 07:54:34.271"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:34.274" endtime="20190122 07:54:34.282"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:34.206" endtime="20190122 07:54:34.283"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': 'AABBCCDD11223344', 'channel': 'can0', 'timestamp': '1548143673.112060', 'id': '767'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.293">${payload} = AABBCCDD11223344</msg>
<status status="PASS" starttime="20190122 07:54:34.288" endtime="20190122 07:54:34.294"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.303">${can_id} = 767</msg>
<status status="PASS" starttime="20190122 07:54:34.297" endtime="20190122 07:54:34.304"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.314">${count_msg} = 1</msg>
<status status="PASS" starttime="20190122 07:54:34.307" endtime="20190122 07:54:34.315"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.325">${count_id} = 1</msg>
<status status="PASS" starttime="20190122 07:54:34.318" endtime="20190122 07:54:34.326"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.337">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:54:34.330" endtime="20190122 07:54:34.337"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:34.348">${RESULT} = True</msg>
<status status="PASS" starttime="20190122 07:54:34.341" endtime="20190122 07:54:34.349"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:34.357">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190122 07:54:34.351" endtime="20190122 07:54:34.366"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:34.285" endtime="20190122 07:54:34.367"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:34.203" endtime="20190122 07:54:34.368"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:34.387">${res} = True</msg>
<status status="PASS" starttime="20190122 07:54:34.157" endtime="20190122 07:54:34.388"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:34.392" endtime="20190122 07:54:34.441"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:34.449">${res} = True</msg>
<status status="PASS" starttime="20190122 07:54:33.578" endtime="20190122 07:54:34.450"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:34.488" endtime="20190122 07:54:34.493"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:32.129" endtime="20190122 07:54:34.495"></status>
</kw>
<kw name="CAN_SENDDATA_CAN3_TEST">
<doc>Test can send and receive data can 2</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Test can send and receive data can 2</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:34.527" endtime="20190122 07:54:34.557"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2 seconds</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:36.565">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:54:34.560" endtime="20190122 07:54:36.567"></status>
</kw>
<kw name="set_can_channel" library="chorus_resource">
<doc>Set bitrate for specified can channel</doc>
<arguments>
<arg>${CAN_2}</arg>
<arg>${250000}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Set bitrate for CAN: ${CAN}, bitrate: ${bitrate}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:36.579" endtime="20190122 07:54:36.586"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} down</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:36.595">Starting process:
sudo ip link set can2 down</msg>
<msg level="INFO" timestamp="20190122 07:54:36.624">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:36.693">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:36.696">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:54:36.589" endtime="20190122 07:54:36.697"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:36.701" endtime="20190122 07:54:36.709"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} type can bitrate ${bitrate}</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:36.719">Starting process:
sudo ip link set can2 type can bitrate 250000</msg>
<msg level="INFO" timestamp="20190122 07:54:36.747">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:36.797">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:36.800">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:54:36.712" endtime="20190122 07:54:36.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:36.805" endtime="20190122 07:54:36.813"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>sudo ip link set ${CAN} up</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:36.822">Starting process:
sudo ip link set can2 up</msg>
<msg level="INFO" timestamp="20190122 07:54:36.856">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:36.980">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:36.983">${res} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:54:36.816" endtime="20190122 07:54:36.984"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res.stderr}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:36.999" endtime="20190122 07:54:37.072"></status>
</kw>
<timeout value="15 seconds"></timeout>
<status status="PASS" starttime="20190122 07:54:36.569" endtime="20190122 07:54:37.075"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>candump -t a ${CAN_2},${CAN_MSG_ID_RX}:${MASK},${CAN_MSG_ID_TX}:${MASK}</arg>
<arg>shell=True</arg>
<arg>alias=CANDUMP</arg>
</arguments>
<assign>
<var>${candump_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:37.112">Starting process:
candump -t a can2,767:7FF,768:7FF</msg>
<msg level="INFO" timestamp="20190122 07:54:37.190">${candump_ID} = 206</msg>
<status status="PASS" starttime="20190122 07:54:37.078" endtime="20190122 07:54:37.191"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>cangen ${${CAN_2}} -g ${CYCLE_TIME} -I ${CAN_MSG_ID_TX} -L ${DLC} -D ${CAN_MESSAGE} -n ${MSG_NUMBER}</arg>
<arg>shell=True</arg>
<arg>alias=CANGEN</arg>
</arguments>
<assign>
<var>${cangen_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:37.214">Starting process:
cangen can2 -g 500 -I 768 -L 8 -D AABBCCDD11223344 -n 3</msg>
<msg level="INFO" timestamp="20190122 07:54:37.244">${cangen_ID} = 207</msg>
<status status="PASS" starttime="20190122 07:54:37.195" endtime="20190122 07:54:37.248"></status>
</kw>
<kw name="EXECUTE_ROUTINE">
<arguments>
<arg>${CAN_SENDDATA_CAN3}</arg>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${status}</var>
<var>${data}</var>
</assign>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>setbuffer</arg>
<arg>${PARAM}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:37.353">${res_dict} = {'status': False, 'result': '1efd54', 'data': '', 'request': '53420008aabbccdd11223344'}</msg>
<status status="PASS" starttime="20190122 07:54:37.266" endtime="20190122 07:54:37.354"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:37.357" endtime="20190122 07:54:37.362"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:37.391">${value} = False</msg>
<status status="PASS" starttime="20190122 07:54:37.365" endtime="20190122 07:54:37.391"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status setbuffer: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:37.394" endtime="20190122 07:54:37.400"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>exec</arg>
<arg>${FUNC}</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:37.465">${res_dict} = {'status': True, 'result': '520353', 'data': '', 'request': '5203'}</msg>
<status status="PASS" starttime="20190122 07:54:37.403" endtime="20190122 07:54:37.466"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:37.469" endtime="20190122 07:54:37.474"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:37.504">${value} = True</msg>
<status status="PASS" starttime="20190122 07:54:37.478" endtime="20190122 07:54:37.505"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status exec: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:37.507" endtime="20190122 07:54:37.513"></status>
</kw>
<kw name="Call Trstate" library="robot_framework_tnt.Client">
<arguments>
<arg>getbuffer</arg>
<arg>some</arg>
</arguments>
<assign>
<var>${res_dict}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:37.622">${res_dict} = {'status': True, 'result': '474253', 'data': 'aabbccdd11223344', 'request': '4742'}</msg>
<status status="PASS" starttime="20190122 07:54:37.516" endtime="20190122 07:54:37.623"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${res_dict}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:37.631" endtime="20190122 07:54:37.645"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("status")</arg>
</arguments>
<assign>
<var>${status}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:37.704">${status} = True</msg>
<status status="PASS" starttime="20190122 07:54:37.648" endtime="20190122 07:54:37.705"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status getbuffer: ${value}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:37.708" endtime="20190122 07:54:37.714"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$res_dict.get("data")</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:37.741">${data} = aabbccdd11223344</msg>
<status status="PASS" starttime="20190122 07:54:37.716" endtime="20190122 07:54:37.742"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:37.747">${status} = True</msg>
<msg level="INFO" timestamp="20190122 07:54:37.748">${data} = aabbccdd11223344</msg>
<status status="PASS" starttime="20190122 07:54:37.251" endtime="20190122 07:54:37.748"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:37.751" endtime="20190122 07:54:37.756"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${data}</arg>
<arg>${CAN_MESSAGE}</arg>
<arg>ignore_case=True</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:37.758" endtime="20190122 07:54:37.766"></status>
</kw>
<kw name="Check_test_result">
<arguments>
<arg>${CAN_MESSAGE}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<arguments>
<arg>CANDUMP</arg>
<arg>timeout=0.5 secs</arg>
<arg>on_timeout=terminate</arg>
</arguments>
<assign>
<var>${candump}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:37.780">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:38.285">Process did not complete in 500 milliseconds.</msg>
<msg level="INFO" timestamp="20190122 07:54:38.286">Gracefully terminating process.</msg>
<msg level="INFO" timestamp="20190122 07:54:38.292">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:38.294">${candump} = &lt;result object with rc -15&gt;</msg>
<status status="PASS" starttime="20190122 07:54:37.776" endtime="20190122 07:54:38.295"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${candump.stdout}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.303">4 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:54:38.305">${temp} = [' (1548143677.256354)  can2  768   [8]  AA BB CC DD 11 22 33 44', ' (1548143677.434595)  can2  767   [8]  AA BB CC DD 11 22 33 44', ' (1548143677.760894)  can2  768   [8]  AA BB CC DD 11 22 33 44', '...</msg>
<status status="PASS" starttime="20190122 07:54:38.298" endtime="20190122 07:54:38.306"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>withoutfilter</arg>
</arguments>
<assign>
<var>${FILTER}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.313">${FILTER} = ['withoutfilter']</msg>
<status status="PASS" starttime="20190122 07:54:38.309" endtime="20190122 07:54:38.314"></status>
</kw>
<kw name="Set Canid Status And Filter" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>Set  pass and stop ID filter for</doc>
<arguments>
<arg>status</arg>
<arg>${FILTER}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:38.317" endtime="20190122 07:54:38.321"></status>
</kw>
<kw name="Convert Candump Liste" library="lairdcvs.cariflibrary.CarIfLibrary">
<doc>convert_candump_liste</doc>
<arguments>
<arg>${temp}</arg>
</arguments>
<assign>
<var>${ret_list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.329">(1548143677.256354)  can2  768   [8]  AA BB CC DD 11 22 33 44
 (1548143677.434595)  can2  767   [8]  AA BB CC DD 11 22 33 44
 (1548143677.760894)  can2  768   [8]  AA BB CC DD 11 22 33 44
 (1548143678.261016)  can2  768   [8]  AA BB CC DD 11 22 33 44</msg>
<msg level="INFO" timestamp="20190122 07:54:38.331">${ret_list} = [{'payload': 'AABBCCDD11223344', 'channel': 'can2', 'timestamp': '1548143677.256354', 'id': '768'}, {'payload': 'AABBCCDD11223344', 'channel': 'can2', 'timestamp': '1548143677.434595', 'id': '767'}, {...</msg>
<status status="PASS" starttime="20190122 07:54:38.324" endtime="20190122 07:54:38.332"></status>
</kw>
<kw name="CHECK_EXISTENS_OF_CAN_MESSAGES_WITH_CANID">
<doc>This keyword Check CAN_Messages if payload with canID exist and return TRUE if exist</doc>
<arguments>
<arg>${ret_list}</arg>
<arg>${CAN_MSG_ID_RX}</arg>
<arg>${can_msg}</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.348">${RESULT} = False</msg>
<status status="PASS" starttime="20190122 07:54:38.343" endtime="20190122 07:54:38.349"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${responses_list}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.355">Length is 4</msg>
<msg level="INFO" timestamp="20190122 07:54:38.361">${count} = 4</msg>
<status status="PASS" starttime="20190122 07:54:38.351" endtime="20190122 07:54:38.362"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${count} &gt; 0</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:38.365" endtime="20190122 07:54:38.370"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${0}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.378">${msgcount} = 0</msg>
<status status="PASS" starttime="20190122 07:54:38.373" endtime="20190122 07:54:38.379"></status>
</kw>
<kw type="for" name="${item_dict} IN [ @{responses_list} ]">
<kw type="foritem" name="${item_dict} = {'payload': 'AABBCCDD11223344', 'channel': 'can2', 'timestamp': '1548143677.256354', 'id': '768'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.392">${payload} = AABBCCDD11223344</msg>
<status status="PASS" starttime="20190122 07:54:38.387" endtime="20190122 07:54:38.393"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.400">${can_id} = 768</msg>
<status status="PASS" starttime="20190122 07:54:38.395" endtime="20190122 07:54:38.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.411">${count_msg} = 1</msg>
<status status="PASS" starttime="20190122 07:54:38.404" endtime="20190122 07:54:38.412"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.422">${count_id} = 0</msg>
<status status="PASS" starttime="20190122 07:54:38.415" endtime="20190122 07:54:38.423"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.432">${msgcount} = 1</msg>
<status status="PASS" starttime="20190122 07:54:38.426" endtime="20190122 07:54:38.433"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.443">${RESULT} = False</msg>
<status status="PASS" starttime="20190122 07:54:38.436" endtime="20190122 07:54:38.444"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:38.447" endtime="20190122 07:54:38.453"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:38.384" endtime="20190122 07:54:38.454"></status>
</kw>
<kw type="foritem" name="${item_dict} = {'payload': 'AABBCCDD11223344', 'channel': 'can2', 'timestamp': '1548143677.434595', 'id': '767'}">
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>payload</arg>
</arguments>
<assign>
<var>${payload}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.463">${payload} = AABBCCDD11223344</msg>
<status status="PASS" starttime="20190122 07:54:38.458" endtime="20190122 07:54:38.464"></status>
</kw>
<kw name="Get From Dictionary" library="Collections">
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<arguments>
<arg>${item_dict}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>${can_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.472">${can_id} = 767</msg>
<status status="PASS" starttime="20190122 07:54:38.467" endtime="20190122 07:54:38.473"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${payload}' == '${expected_canmsg}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_msg}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.483">${count_msg} = 1</msg>
<status status="PASS" starttime="20190122 07:54:38.476" endtime="20190122 07:54:38.484"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${can_id}' == '${expected_canid}'</arg>
<arg>${1}</arg>
<arg>${0}</arg>
</arguments>
<assign>
<var>${count_id}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.495">${count_id} = 1</msg>
<status status="PASS" starttime="20190122 07:54:38.487" endtime="20190122 07:54:38.495"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${count_msg} + ${count_id}</arg>
</arguments>
<assign>
<var>${msgcount}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.504">${msgcount} = 2</msg>
<status status="PASS" starttime="20190122 07:54:38.498" endtime="20190122 07:54:38.505"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:38.515">${RESULT} = True</msg>
<status status="PASS" starttime="20190122 07:54:38.508" endtime="20190122 07:54:38.516"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${msgcount} == ${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:38.525">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190122 07:54:38.519" endtime="20190122 07:54:38.526"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:38.455" endtime="20190122 07:54:38.527"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:38.380" endtime="20190122 07:54:38.528"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:38.532">${res} = True</msg>
<status status="PASS" starttime="20190122 07:54:38.334" endtime="20190122 07:54:38.532"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste: ${ret_list}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:38.535" endtime="20190122 07:54:38.541"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:38.545">${res} = True</msg>
<status status="PASS" starttime="20190122 07:54:37.768" endtime="20190122 07:54:38.545"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${res}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:38.548" endtime="20190122 07:54:38.552"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:34.521" endtime="20190122 07:54:38.554"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:38.564" endtime="20190122 07:54:38.611"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:38.615" endtime="20190122 07:54:38.660"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:38.663" endtime="20190122 07:54:38.709"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:39.717">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:38.712" endtime="20190122 07:54:39.719"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:39.723" endtime="20190122 07:54:39.767"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill candump</arg>
<arg>shell=True</arg>
</arguments>
<assign>
<var>${rm_res}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:39.776">Starting process:
pkill candump</msg>
<msg level="INFO" timestamp="20190122 07:54:39.803">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:54:39.836">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:54:39.839">${rm_res} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 07:54:39.771" endtime="20190122 07:54:39.840"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:38.558" endtime="20190122 07:54:39.842"></status>
</kw>
<doc>Implements Test Task SKTB-56094 Vehicle buses testroutine</doc>
<tags>
<tag>Vehicle buses testroutine</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:54:18.852" endtime="20190122 07:54:39.844"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:54:41.373">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:54:41.410">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:54:39.889" endtime="20190122 07:54:41.447"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:39.861" endtime="20190122 07:54:41.448"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:39.855" endtime="20190122 07:54:41.450"></status>
</kw>
<doc>Vehicle buses testroutine</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:54:16.093" endtime="20190122 07:54:41.451"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-55194.robot" name="SKTB-55194" id="s1-s19">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:42.204">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:54:42.192" endtime="20190122 07:54:42.218"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:42.227">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:54:42.243">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:54:44.539">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:54:42.221" endtime="20190122 07:54:44.541"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:42.186" endtime="20190122 07:54:44.563"></status>
</kw>
<test name="SKTB-55194" id="s1-s19-t1">
<kw type="setup" name="Test_precondition">
<doc>switch kl15 and kl 30 and prodmod off</doc>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:44.618" endtime="20190122 07:54:44.699"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:44.702" endtime="20190122 07:54:44.786"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:44.790" endtime="20190122 07:54:44.885"></status>
</kw>
<kw name="Bidir Wake Up" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:44.889" endtime="20190122 07:54:45.494"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:47.510">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:54:45.498" endtime="20190122 07:54:47.513"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:47.515" endtime="20190122 07:54:47.548"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${921600}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:47.559" endtime="20190122 07:54:47.609"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${100}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:47.612" endtime="20190122 07:54:47.657"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:47.661" endtime="20190122 07:54:47.706"></status>
</kw>
<kw name="Fbus Set State" library="robot_framework_tnt.Client">
<arguments>
<arg>timeout</arg>
<arg>${1000}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:47.709" endtime="20190122 07:54:47.759"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${1}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:48.766">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:47.762" endtime="20190122 07:54:48.769"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:44.598" endtime="20190122 07:54:48.771"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Implements Test Task SKTB-55194 Powermanagement</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:48.775" endtime="20190122 07:54:48.779"></status>
</kw>
<kw name="STEP_1">
<doc>Start device without KL15 and wait til device goes to standby, then wakeup with kl15 on</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Start device without KL15 and wait til device goes to standby, then wakeup with kl15 on</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:48.788" endtime="20190122 07:54:48.792"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:48.795" endtime="20190122 07:54:48.841"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:48.844" endtime="20190122 07:54:48.890"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:50.898">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:54:48.893" endtime="20190122 07:54:50.900"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:50.903" endtime="20190122 07:54:50.949"></status>
</kw>
<kw name="WAIT_FOR_POWER_STATE">
<doc>Wait for powerstate within a given time</doc>
<arguments>
<arg>10</arg>
<arg>${POWER_APP_POWER_STATE_CARIF_ONLY}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TIMEOUT}</arg>
</arguments>
<assign>
<var>${LOOPS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:50.967">${LOOPS} = 10</msg>
<status status="PASS" starttime="20190122 07:54:50.961" endtime="20190122 07:54:50.967"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:50.975">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:54:50.970" endtime="20190122 07:54:50.976"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ ${LOOPS} ]">
<kw type="foritem" name="${i} = 0">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.041">${KLEMME30} = [[100775, 30], [57125, 32]]</msg>
<status status="PASS" starttime="20190122 07:54:50.991" endtime="20190122 07:54:51.042"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.077">${CURR_VCARBAT} = 30</msg>
<status status="PASS" starttime="20190122 07:54:51.045" endtime="20190122 07:54:51.078"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.115">${CURR_KL30} = 32</msg>
<status status="PASS" starttime="20190122 07:54:51.081" endtime="20190122 07:54:51.116"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.123">${TIMENOW} = 1548143691</msg>
<status status="PASS" starttime="20190122 07:54:51.119" endtime="20190122 07:54:51.124"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:51.129">${TIMENOW} = 1548143691</msg>
<msg level="INFO" timestamp="20190122 07:54:51.130">${CURR_VCARBAT} = 30</msg>
<msg level="INFO" timestamp="20190122 07:54:51.131">${CURR_KL30} = 32</msg>
<status status="PASS" starttime="20190122 07:54:50.983" endtime="20190122 07:54:51.132"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:51.141" endtime="20190122 07:54:51.378"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:51.380">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190122 07:54:51.135" endtime="20190122 07:54:51.382"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:51.385" endtime="20190122 07:54:51.393"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.404">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:54:51.407">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:54:51.398" endtime="20190122 07:54:51.408"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.467">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190122 07:54:51.437" endtime="20190122 07:54:51.468"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.477">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:54:51.471" endtime="20190122 07:54:51.478"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:51.421" endtime="20190122 07:54:51.481"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:51.483">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:54:51.412" endtime="20190122 07:54:51.484"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.495">${STATUS} = True</msg>
<status status="PASS" starttime="20190122 07:54:51.488" endtime="20190122 07:54:51.496"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:51.505">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20190122 07:54:51.498" endtime="20190122 07:54:51.506"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:50.980" endtime="20190122 07:54:51.507"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:50.977" endtime="20190122 07:54:51.508"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:51.511" endtime="20190122 07:54:51.518"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:51.521" endtime="20190122 07:54:51.527"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:51.531">${STATUS} = True</msg>
<status status="PASS" starttime="20190122 07:54:50.951" endtime="20190122 07:54:51.531"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:51.534" endtime="20190122 07:54:51.539"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait until power state power down is reached</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:51.549" endtime="20190122 07:54:51.558"></status>
</kw>
<kw name="WAIT_FOR_POWER_STATE">
<doc>Wait for powerstate within a given time</doc>
<arguments>
<arg>70</arg>
<arg>${POWER_APP_POWER_STATE_POWER_DOWN}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${TIMEOUT}</arg>
</arguments>
<assign>
<var>${LOOPS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.588">${LOOPS} = 70</msg>
<status status="PASS" starttime="20190122 07:54:51.582" endtime="20190122 07:54:51.589"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.596">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:54:51.591" endtime="20190122 07:54:51.597"></status>
</kw>
<kw type="for" name="${i} IN RANGE [ ${LOOPS} ]">
<kw type="foritem" name="${i} = 0">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.662">${KLEMME30} = [[12250, 52], [12325, 54]]</msg>
<status status="PASS" starttime="20190122 07:54:51.610" endtime="20190122 07:54:51.663"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.699">${CURR_VCARBAT} = 52</msg>
<status status="PASS" starttime="20190122 07:54:51.666" endtime="20190122 07:54:51.700"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.751">${CURR_KL30} = 54</msg>
<status status="PASS" starttime="20190122 07:54:51.703" endtime="20190122 07:54:51.751"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:51.773">${TIMENOW} = 1548143691</msg>
<status status="PASS" starttime="20190122 07:54:51.760" endtime="20190122 07:54:51.774"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:51.784">${TIMENOW} = 1548143691</msg>
<msg level="INFO" timestamp="20190122 07:54:51.789">${CURR_VCARBAT} = 52</msg>
<msg level="INFO" timestamp="20190122 07:54:51.791">${CURR_KL30} = 54</msg>
<status status="PASS" starttime="20190122 07:54:51.603" endtime="20190122 07:54:51.791"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:51.811" endtime="20190122 07:54:52.045"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:52.047">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190122 07:54:51.799" endtime="20190122 07:54:52.048"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:52.051" endtime="20190122 07:54:52.057"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:52.064">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:54:52.066">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:54:52.060" endtime="20190122 07:54:52.067"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:52.090">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190122 07:54:52.085" endtime="20190122 07:54:52.091"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:52.099">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:54:52.094" endtime="20190122 07:54:52.100"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:52.076" endtime="20190122 07:54:52.103"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:52.105">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:54:52.070" endtime="20190122 07:54:52.106"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:52.116">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:54:52.109" endtime="20190122 07:54:52.117"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:52.120" endtime="20190122 07:54:52.126"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:53.133">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:52.129" endtime="20190122 07:54:53.135"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:51.601" endtime="20190122 07:54:53.136"></status>
</kw>
<kw type="foritem" name="${i} = 1">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:53.206">${KLEMME30} = [[12250, 72], [0, 0]]</msg>
<status status="PASS" starttime="20190122 07:54:53.146" endtime="20190122 07:54:53.207"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:53.642">${CURR_VCARBAT} = 72</msg>
<status status="PASS" starttime="20190122 07:54:53.210" endtime="20190122 07:54:53.643"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:53.736">${CURR_KL30} = 0</msg>
<status status="PASS" starttime="20190122 07:54:53.646" endtime="20190122 07:54:53.737"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:53.757">${TIMENOW} = 1548143693</msg>
<status status="PASS" starttime="20190122 07:54:53.741" endtime="20190122 07:54:53.758"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:53.763">${TIMENOW} = 1548143693</msg>
<msg level="INFO" timestamp="20190122 07:54:53.764">${CURR_VCARBAT} = 72</msg>
<msg level="INFO" timestamp="20190122 07:54:53.792">${CURR_KL30} = 0</msg>
<status status="PASS" starttime="20190122 07:54:53.139" endtime="20190122 07:54:53.793"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:53.818" endtime="20190122 07:54:54.081"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:54.083">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190122 07:54:53.796" endtime="20190122 07:54:54.084"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:54.087" endtime="20190122 07:54:54.122"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:54.142">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:54:54.145">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:54:54.126" endtime="20190122 07:54:54.145"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:54.198">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190122 07:54:54.193" endtime="20190122 07:54:54.199"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:54.220">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:54:54.214" endtime="20190122 07:54:54.221"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:54.160" endtime="20190122 07:54:54.224"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:54.238">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:54:54.149" endtime="20190122 07:54:54.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:54.249">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:54:54.242" endtime="20190122 07:54:54.259"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:54.262" endtime="20190122 07:54:54.301"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:55.340">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:54.304" endtime="20190122 07:54:55.342"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:53.137" endtime="20190122 07:54:55.343"></status>
</kw>
<kw type="foritem" name="${i} = 2">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:55.402">${KLEMME30} = [[12225, 123], [12300, 131]]</msg>
<status status="PASS" starttime="20190122 07:54:55.353" endtime="20190122 07:54:55.403"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:55.440">${CURR_VCARBAT} = 123</msg>
<status status="PASS" starttime="20190122 07:54:55.407" endtime="20190122 07:54:55.441"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:55.477">${CURR_KL30} = 131</msg>
<status status="PASS" starttime="20190122 07:54:55.444" endtime="20190122 07:54:55.478"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:55.485">${TIMENOW} = 1548143695</msg>
<status status="PASS" starttime="20190122 07:54:55.481" endtime="20190122 07:54:55.486"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:55.491">${TIMENOW} = 1548143695</msg>
<msg level="INFO" timestamp="20190122 07:54:55.492">${CURR_VCARBAT} = 123</msg>
<msg level="INFO" timestamp="20190122 07:54:55.493">${CURR_KL30} = 131</msg>
<status status="PASS" starttime="20190122 07:54:55.346" endtime="20190122 07:54:55.494"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:55.503" endtime="20190122 07:54:55.745"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:55.747">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190122 07:54:55.497" endtime="20190122 07:54:55.748"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:55.750" endtime="20190122 07:54:55.756"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:55.764">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:54:55.766">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:54:55.760" endtime="20190122 07:54:55.767"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:55.803">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190122 07:54:55.788" endtime="20190122 07:54:55.804"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:55.822">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:54:55.816" endtime="20190122 07:54:55.823"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:55.777" endtime="20190122 07:54:55.830"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:55.832">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:54:55.770" endtime="20190122 07:54:55.835"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:55.846">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:54:55.838" endtime="20190122 07:54:55.846"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:55.849" endtime="20190122 07:54:55.856"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:56.863">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:55.858" endtime="20190122 07:54:56.865"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:55.344" endtime="20190122 07:54:56.865"></status>
</kw>
<kw type="foritem" name="${i} = 3">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:56.942">${KLEMME30} = [[12250, 90], [12300, 96]]</msg>
<status status="PASS" starttime="20190122 07:54:56.875" endtime="20190122 07:54:56.943"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:56.993">${CURR_VCARBAT} = 90</msg>
<status status="PASS" starttime="20190122 07:54:56.958" endtime="20190122 07:54:56.993"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:57.030">${CURR_KL30} = 96</msg>
<status status="PASS" starttime="20190122 07:54:56.996" endtime="20190122 07:54:57.031"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:57.038">${TIMENOW} = 1548143697</msg>
<status status="PASS" starttime="20190122 07:54:57.034" endtime="20190122 07:54:57.039"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:57.044">${TIMENOW} = 1548143697</msg>
<msg level="INFO" timestamp="20190122 07:54:57.045">${CURR_VCARBAT} = 90</msg>
<msg level="INFO" timestamp="20190122 07:54:57.046">${CURR_KL30} = 96</msg>
<status status="PASS" starttime="20190122 07:54:56.869" endtime="20190122 07:54:57.046"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:57.055" endtime="20190122 07:54:57.279"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:57.284">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190122 07:54:57.050" endtime="20190122 07:54:57.285"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:57.287" endtime="20190122 07:54:57.293"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:57.300">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:54:57.302">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:54:57.296" endtime="20190122 07:54:57.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:57.355">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190122 07:54:57.341" endtime="20190122 07:54:57.356"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:57.370">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:54:57.359" endtime="20190122 07:54:57.371"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:57.332" endtime="20190122 07:54:57.375"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:57.376">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:54:57.306" endtime="20190122 07:54:57.386"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:57.397">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:54:57.390" endtime="20190122 07:54:57.403"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:57.406" endtime="20190122 07:54:57.413"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:58.420">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:57.415" endtime="20190122 07:54:58.422"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:56.867" endtime="20190122 07:54:58.422"></status>
</kw>
<kw type="foritem" name="${i} = 4">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:58.484">${KLEMME30} = [[12250, 77], [12325, 82]]</msg>
<status status="PASS" starttime="20190122 07:54:58.433" endtime="20190122 07:54:58.485"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:58.521">${CURR_VCARBAT} = 77</msg>
<status status="PASS" starttime="20190122 07:54:58.488" endtime="20190122 07:54:58.522"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:58.558">${CURR_KL30} = 82</msg>
<status status="PASS" starttime="20190122 07:54:58.525" endtime="20190122 07:54:58.559"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:58.566">${TIMENOW} = 1548143698</msg>
<status status="PASS" starttime="20190122 07:54:58.562" endtime="20190122 07:54:58.567"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:58.572">${TIMENOW} = 1548143698</msg>
<msg level="INFO" timestamp="20190122 07:54:58.573">${CURR_VCARBAT} = 77</msg>
<msg level="INFO" timestamp="20190122 07:54:58.574">${CURR_KL30} = 82</msg>
<status status="PASS" starttime="20190122 07:54:58.426" endtime="20190122 07:54:58.575"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:58.583" endtime="20190122 07:54:58.855"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:58.857">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190122 07:54:58.578" endtime="20190122 07:54:58.858"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:58.861" endtime="20190122 07:54:58.883"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:58.890">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:54:58.897">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:54:58.886" endtime="20190122 07:54:58.898"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:58.925">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190122 07:54:58.920" endtime="20190122 07:54:58.926"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:58.934">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:54:58.928" endtime="20190122 07:54:58.934"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:58.907" endtime="20190122 07:54:58.938"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:54:58.939">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:54:58.901" endtime="20190122 07:54:58.940"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:54:58.950">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:54:58.943" endtime="20190122 07:54:58.950"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:54:58.953" endtime="20190122 07:54:58.960"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:54:59.966">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:54:58.962" endtime="20190122 07:54:59.969"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:58.424" endtime="20190122 07:54:59.969"></status>
</kw>
<kw type="foritem" name="${i} = 5">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:00.030">${KLEMME30} = [[12250, 77], [12325, 81]]</msg>
<status status="PASS" starttime="20190122 07:54:59.979" endtime="20190122 07:55:00.031"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:00.067">${CURR_VCARBAT} = 77</msg>
<status status="PASS" starttime="20190122 07:55:00.034" endtime="20190122 07:55:00.068"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:00.105">${CURR_KL30} = 81</msg>
<status status="PASS" starttime="20190122 07:55:00.071" endtime="20190122 07:55:00.106"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:00.113">${TIMENOW} = 1548143700</msg>
<status status="PASS" starttime="20190122 07:55:00.109" endtime="20190122 07:55:00.114"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:00.119">${TIMENOW} = 1548143700</msg>
<msg level="INFO" timestamp="20190122 07:55:00.120">${CURR_VCARBAT} = 77</msg>
<msg level="INFO" timestamp="20190122 07:55:00.121">${CURR_KL30} = 81</msg>
<status status="PASS" starttime="20190122 07:54:59.973" endtime="20190122 07:55:00.122"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:00.131" endtime="20190122 07:55:00.353"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:00.356">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190122 07:55:00.125" endtime="20190122 07:55:00.357"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:00.360" endtime="20190122 07:55:00.365"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:00.372">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:00.374">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:00.368" endtime="20190122 07:55:00.375"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:00.398">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:00.393" endtime="20190122 07:55:00.399"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:00.407">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:00.402" endtime="20190122 07:55:00.408"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:00.385" endtime="20190122 07:55:00.411"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:00.413">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:00.378" endtime="20190122 07:55:00.414"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:00.424">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:00.416" endtime="20190122 07:55:00.425"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:00.427" endtime="20190122 07:55:00.433"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:01.440">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:00.436" endtime="20190122 07:55:01.442"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:59.971" endtime="20190122 07:55:01.443"></status>
</kw>
<kw type="foritem" name="${i} = 6">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:01.535">${KLEMME30} = [[12225, 137], [12275, 142]]</msg>
<status status="PASS" starttime="20190122 07:55:01.459" endtime="20190122 07:55:01.536"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:01.593">${CURR_VCARBAT} = 137</msg>
<status status="PASS" starttime="20190122 07:55:01.539" endtime="20190122 07:55:01.593"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:01.634">${CURR_KL30} = 142</msg>
<status status="PASS" starttime="20190122 07:55:01.599" endtime="20190122 07:55:01.635"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:01.642">${TIMENOW} = 1548143701</msg>
<status status="PASS" starttime="20190122 07:55:01.638" endtime="20190122 07:55:01.643"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:01.648">${TIMENOW} = 1548143701</msg>
<msg level="INFO" timestamp="20190122 07:55:01.649">${CURR_VCARBAT} = 137</msg>
<msg level="INFO" timestamp="20190122 07:55:01.650">${CURR_KL30} = 142</msg>
<status status="PASS" starttime="20190122 07:55:01.446" endtime="20190122 07:55:01.651"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:01.659" endtime="20190122 07:55:01.859"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:01.861">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190122 07:55:01.654" endtime="20190122 07:55:01.862"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:01.865" endtime="20190122 07:55:01.871"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:01.879">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:01.881">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:01.874" endtime="20190122 07:55:01.881"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:01.908">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:01.903" endtime="20190122 07:55:01.909"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:01.917">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:01.912" endtime="20190122 07:55:01.918"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:01.891" endtime="20190122 07:55:01.921"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:01.923">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:01.884" endtime="20190122 07:55:01.923"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:01.933">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:01.926" endtime="20190122 07:55:01.934"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:01.937" endtime="20190122 07:55:01.943"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:02.950">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:01.946" endtime="20190122 07:55:02.952"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:01.444" endtime="20190122 07:55:02.953"></status>
</kw>
<kw type="foritem" name="${i} = 7">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:03.011">${KLEMME30} = [[12200, 168], [12275, 178]]</msg>
<status status="PASS" starttime="20190122 07:55:02.963" endtime="20190122 07:55:03.013"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:03.049">${CURR_VCARBAT} = 168</msg>
<status status="PASS" starttime="20190122 07:55:03.016" endtime="20190122 07:55:03.050"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:03.086">${CURR_KL30} = 178</msg>
<status status="PASS" starttime="20190122 07:55:03.052" endtime="20190122 07:55:03.086"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:03.094">${TIMENOW} = 1548143703</msg>
<status status="PASS" starttime="20190122 07:55:03.089" endtime="20190122 07:55:03.095"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:03.099">${TIMENOW} = 1548143703</msg>
<msg level="INFO" timestamp="20190122 07:55:03.101">${CURR_VCARBAT} = 168</msg>
<msg level="INFO" timestamp="20190122 07:55:03.102">${CURR_KL30} = 178</msg>
<status status="PASS" starttime="20190122 07:55:02.956" endtime="20190122 07:55:03.103"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:03.111" endtime="20190122 07:55:03.337"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:03.339">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190122 07:55:03.106" endtime="20190122 07:55:03.339"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:03.342" endtime="20190122 07:55:03.348"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:03.355">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:03.357">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:03.351" endtime="20190122 07:55:03.358"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:03.381">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:03.376" endtime="20190122 07:55:03.382"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:03.390">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:03.385" endtime="20190122 07:55:03.391"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:03.368" endtime="20190122 07:55:03.394"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:03.397">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:03.361" endtime="20190122 07:55:03.398"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:03.407">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:03.400" endtime="20190122 07:55:03.408"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:03.411" endtime="20190122 07:55:03.417"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:04.424">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:03.420" endtime="20190122 07:55:04.426"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:02.954" endtime="20190122 07:55:04.427"></status>
</kw>
<kw type="foritem" name="${i} = 8">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:04.487">${KLEMME30} = [[12225, 133], [12300, 141]]</msg>
<status status="PASS" starttime="20190122 07:55:04.437" endtime="20190122 07:55:04.488"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:04.525">${CURR_VCARBAT} = 133</msg>
<status status="PASS" starttime="20190122 07:55:04.491" endtime="20190122 07:55:04.526"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:04.561">${CURR_KL30} = 141</msg>
<status status="PASS" starttime="20190122 07:55:04.528" endtime="20190122 07:55:04.562"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:04.569">${TIMENOW} = 1548143704</msg>
<status status="PASS" starttime="20190122 07:55:04.565" endtime="20190122 07:55:04.570"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:04.575">${TIMENOW} = 1548143704</msg>
<msg level="INFO" timestamp="20190122 07:55:04.576">${CURR_VCARBAT} = 133</msg>
<msg level="INFO" timestamp="20190122 07:55:04.577">${CURR_KL30} = 141</msg>
<status status="PASS" starttime="20190122 07:55:04.430" endtime="20190122 07:55:04.578"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:04.586" endtime="20190122 07:55:04.811"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:04.814">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190122 07:55:04.581" endtime="20190122 07:55:04.815"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:04.818" endtime="20190122 07:55:04.823"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:04.830">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:04.832">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:04.826" endtime="20190122 07:55:04.833"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:04.860">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:04.855" endtime="20190122 07:55:04.861"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:04.869">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:04.864" endtime="20190122 07:55:04.870"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:04.843" endtime="20190122 07:55:04.873"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:04.874">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:04.836" endtime="20190122 07:55:04.875"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:04.885">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:04.878" endtime="20190122 07:55:04.886"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:04.888" endtime="20190122 07:55:04.895"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:05.902">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:04.898" endtime="20190122 07:55:05.904"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:04.428" endtime="20190122 07:55:05.905"></status>
</kw>
<kw type="foritem" name="${i} = 9">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:05.963">${KLEMME30} = [[12225, 134], [12300, 141]]</msg>
<status status="PASS" starttime="20190122 07:55:05.915" endtime="20190122 07:55:05.965"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:06.002">${CURR_VCARBAT} = 134</msg>
<status status="PASS" starttime="20190122 07:55:05.968" endtime="20190122 07:55:06.003"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:06.039">${CURR_KL30} = 141</msg>
<status status="PASS" starttime="20190122 07:55:06.006" endtime="20190122 07:55:06.040"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:06.048">${TIMENOW} = 1548143706</msg>
<status status="PASS" starttime="20190122 07:55:06.043" endtime="20190122 07:55:06.049"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:06.054">${TIMENOW} = 1548143706</msg>
<msg level="INFO" timestamp="20190122 07:55:06.055">${CURR_VCARBAT} = 134</msg>
<msg level="INFO" timestamp="20190122 07:55:06.056">${CURR_KL30} = 141</msg>
<status status="PASS" starttime="20190122 07:55:05.908" endtime="20190122 07:55:06.057"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:06.066" endtime="20190122 07:55:06.287"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:06.290">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190122 07:55:06.060" endtime="20190122 07:55:06.291"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:06.294" endtime="20190122 07:55:06.299"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:06.306">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:06.308">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:06.302" endtime="20190122 07:55:06.309"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:06.332">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:06.327" endtime="20190122 07:55:06.333"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:06.341">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:06.336" endtime="20190122 07:55:06.342"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:06.319" endtime="20190122 07:55:06.345"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:06.347">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:06.312" endtime="20190122 07:55:06.347"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:06.357">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:06.350" endtime="20190122 07:55:06.358"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:06.361" endtime="20190122 07:55:06.367"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:07.374">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:06.370" endtime="20190122 07:55:07.376"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:05.906" endtime="20190122 07:55:07.377"></status>
</kw>
<kw type="foritem" name="${i} = 10">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:07.436">${KLEMME30} = [[12200, 191], [12275, 203]]</msg>
<status status="PASS" starttime="20190122 07:55:07.386" endtime="20190122 07:55:07.437"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:07.473">${CURR_VCARBAT} = 191</msg>
<status status="PASS" starttime="20190122 07:55:07.440" endtime="20190122 07:55:07.474"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:07.512">${CURR_KL30} = 203</msg>
<status status="PASS" starttime="20190122 07:55:07.476" endtime="20190122 07:55:07.513"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:07.521">${TIMENOW} = 1548143707</msg>
<status status="PASS" starttime="20190122 07:55:07.516" endtime="20190122 07:55:07.522"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:07.527">${TIMENOW} = 1548143707</msg>
<msg level="INFO" timestamp="20190122 07:55:07.528">${CURR_VCARBAT} = 191</msg>
<msg level="INFO" timestamp="20190122 07:55:07.529">${CURR_KL30} = 203</msg>
<status status="PASS" starttime="20190122 07:55:07.380" endtime="20190122 07:55:07.529"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:07.539" endtime="20190122 07:55:07.759"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:07.761">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190122 07:55:07.532" endtime="20190122 07:55:07.763"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:07.766" endtime="20190122 07:55:07.772"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:07.779">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:07.781">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:07.775" endtime="20190122 07:55:07.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:07.810">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:07.804" endtime="20190122 07:55:07.811"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:07.826">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:07.817" endtime="20190122 07:55:07.826"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:07.792" endtime="20190122 07:55:07.830"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:07.831">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:07.785" endtime="20190122 07:55:07.832"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:07.842">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:07.835" endtime="20190122 07:55:07.843"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:07.846" endtime="20190122 07:55:07.852"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:08.859">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:07.855" endtime="20190122 07:55:08.861"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:07.378" endtime="20190122 07:55:08.862"></status>
</kw>
<kw type="foritem" name="${i} = 11">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:08.921">${KLEMME30} = [[12200, 192], [12275, 204]]</msg>
<status status="PASS" starttime="20190122 07:55:08.872" endtime="20190122 07:55:08.922"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:08.959">${CURR_VCARBAT} = 192</msg>
<status status="PASS" starttime="20190122 07:55:08.926" endtime="20190122 07:55:08.959"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:08.995">${CURR_KL30} = 204</msg>
<status status="PASS" starttime="20190122 07:55:08.962" endtime="20190122 07:55:08.996"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:09.004">${TIMENOW} = 1548143709</msg>
<status status="PASS" starttime="20190122 07:55:08.999" endtime="20190122 07:55:09.005"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:09.010">${TIMENOW} = 1548143709</msg>
<msg level="INFO" timestamp="20190122 07:55:09.011">${CURR_VCARBAT} = 192</msg>
<msg level="INFO" timestamp="20190122 07:55:09.012">${CURR_KL30} = 204</msg>
<status status="PASS" starttime="20190122 07:55:08.865" endtime="20190122 07:55:09.013"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:09.021" endtime="20190122 07:55:09.241"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:09.243">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190122 07:55:09.016" endtime="20190122 07:55:09.249"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:09.252" endtime="20190122 07:55:09.258"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:09.265">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:09.267">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:09.261" endtime="20190122 07:55:09.268"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:09.313">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:09.293" endtime="20190122 07:55:09.314"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:09.333">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:09.317" endtime="20190122 07:55:09.334"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:09.277" endtime="20190122 07:55:09.337"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:09.350">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:09.271" endtime="20190122 07:55:09.351"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:09.361">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:09.354" endtime="20190122 07:55:09.365"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:09.368" endtime="20190122 07:55:09.374"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:10.381">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:09.377" endtime="20190122 07:55:10.383"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:08.863" endtime="20190122 07:55:10.384"></status>
</kw>
<kw type="foritem" name="${i} = 12">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:10.443">${KLEMME30} = [[12200, 192], [12275, 203]]</msg>
<status status="PASS" starttime="20190122 07:55:10.394" endtime="20190122 07:55:10.444"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:10.480">${CURR_VCARBAT} = 192</msg>
<status status="PASS" starttime="20190122 07:55:10.448" endtime="20190122 07:55:10.481"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:10.517">${CURR_KL30} = 203</msg>
<status status="PASS" starttime="20190122 07:55:10.484" endtime="20190122 07:55:10.518"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:10.525">${TIMENOW} = 1548143710</msg>
<status status="PASS" starttime="20190122 07:55:10.521" endtime="20190122 07:55:10.526"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:10.531">${TIMENOW} = 1548143710</msg>
<msg level="INFO" timestamp="20190122 07:55:10.532">${CURR_VCARBAT} = 192</msg>
<msg level="INFO" timestamp="20190122 07:55:10.533">${CURR_KL30} = 203</msg>
<status status="PASS" starttime="20190122 07:55:10.387" endtime="20190122 07:55:10.534"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:10.542" endtime="20190122 07:55:10.767"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:10.769">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190122 07:55:10.537" endtime="20190122 07:55:10.770"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:10.773" endtime="20190122 07:55:10.779"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:10.786">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:10.788">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:10.782" endtime="20190122 07:55:10.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:10.817">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:10.811" endtime="20190122 07:55:10.818"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:10.826">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:10.821" endtime="20190122 07:55:10.827"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:10.798" endtime="20190122 07:55:10.831"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:10.833">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:10.792" endtime="20190122 07:55:10.834"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:10.844">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:10.837" endtime="20190122 07:55:10.845"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:10.847" endtime="20190122 07:55:10.854"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:11.861">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:10.857" endtime="20190122 07:55:11.863"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:10.385" endtime="20190122 07:55:11.863"></status>
</kw>
<kw type="foritem" name="${i} = 13">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:11.922">${KLEMME30} = [[12200, 164], [12275, 176]]</msg>
<status status="PASS" starttime="20190122 07:55:11.873" endtime="20190122 07:55:11.922"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:11.960">${CURR_VCARBAT} = 164</msg>
<status status="PASS" starttime="20190122 07:55:11.927" endtime="20190122 07:55:11.961"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:11.996">${CURR_KL30} = 176</msg>
<status status="PASS" starttime="20190122 07:55:11.964" endtime="20190122 07:55:11.997"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:12.005">${TIMENOW} = 1548143712</msg>
<status status="PASS" starttime="20190122 07:55:12.000" endtime="20190122 07:55:12.006"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:12.011">${TIMENOW} = 1548143712</msg>
<msg level="INFO" timestamp="20190122 07:55:12.012">${CURR_VCARBAT} = 164</msg>
<msg level="INFO" timestamp="20190122 07:55:12.013">${CURR_KL30} = 176</msg>
<status status="PASS" starttime="20190122 07:55:11.867" endtime="20190122 07:55:12.014"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:12.022" endtime="20190122 07:55:12.245"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:12.247">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190122 07:55:12.017" endtime="20190122 07:55:12.248"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:12.251" endtime="20190122 07:55:12.256"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:12.263">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:12.265">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:12.259" endtime="20190122 07:55:12.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:12.290">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:12.285" endtime="20190122 07:55:12.290"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:12.298">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:12.293" endtime="20190122 07:55:12.299"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:12.276" endtime="20190122 07:55:12.302"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:12.304">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:12.269" endtime="20190122 07:55:12.305"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:12.314">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:12.307" endtime="20190122 07:55:12.315"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:12.318" endtime="20190122 07:55:12.324"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:13.331">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:12.327" endtime="20190122 07:55:13.333"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:11.865" endtime="20190122 07:55:13.334"></status>
</kw>
<kw type="foritem" name="${i} = 14">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:13.393">${KLEMME30} = [[12200, 158], [12375, 171]]</msg>
<status status="PASS" starttime="20190122 07:55:13.344" endtime="20190122 07:55:13.394"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:13.429">${CURR_VCARBAT} = 158</msg>
<status status="PASS" starttime="20190122 07:55:13.397" endtime="20190122 07:55:13.430"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:13.466">${CURR_KL30} = 171</msg>
<status status="PASS" starttime="20190122 07:55:13.433" endtime="20190122 07:55:13.467"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:13.474">${TIMENOW} = 1548143713</msg>
<status status="PASS" starttime="20190122 07:55:13.470" endtime="20190122 07:55:13.475"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:13.480">${TIMENOW} = 1548143713</msg>
<msg level="INFO" timestamp="20190122 07:55:13.481">${CURR_VCARBAT} = 158</msg>
<msg level="INFO" timestamp="20190122 07:55:13.482">${CURR_KL30} = 171</msg>
<status status="PASS" starttime="20190122 07:55:13.338" endtime="20190122 07:55:13.483"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:13.498" endtime="20190122 07:55:13.729"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:13.732">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190122 07:55:13.488" endtime="20190122 07:55:13.733"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:13.736" endtime="20190122 07:55:13.742"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:13.749">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:13.751">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:13.745" endtime="20190122 07:55:13.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:13.779">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:13.774" endtime="20190122 07:55:13.780"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:13.788">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:13.783" endtime="20190122 07:55:13.789"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:13.762" endtime="20190122 07:55:13.792"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:13.793">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:13.755" endtime="20190122 07:55:13.794"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:13.804">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:13.797" endtime="20190122 07:55:13.805"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:13.807" endtime="20190122 07:55:13.814"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:14.820">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:13.817" endtime="20190122 07:55:14.822"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:13.335" endtime="20190122 07:55:14.823"></status>
</kw>
<kw type="foritem" name="${i} = 15">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:14.893">${KLEMME30} = [[12175, 150], [0, 0]]</msg>
<status status="PASS" starttime="20190122 07:55:14.833" endtime="20190122 07:55:14.894"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:14.931">${CURR_VCARBAT} = 150</msg>
<status status="PASS" starttime="20190122 07:55:14.898" endtime="20190122 07:55:14.931"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:14.970">${CURR_KL30} = 0</msg>
<status status="PASS" starttime="20190122 07:55:14.934" endtime="20190122 07:55:14.970"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:14.978">${TIMENOW} = 1548143714</msg>
<status status="PASS" starttime="20190122 07:55:14.973" endtime="20190122 07:55:14.979"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:14.983">${TIMENOW} = 1548143714</msg>
<msg level="INFO" timestamp="20190122 07:55:14.985">${CURR_VCARBAT} = 150</msg>
<msg level="INFO" timestamp="20190122 07:55:14.986">${CURR_KL30} = 0</msg>
<status status="PASS" starttime="20190122 07:55:14.827" endtime="20190122 07:55:14.987"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:14.996" endtime="20190122 07:55:15.226"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:15.229">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190122 07:55:14.990" endtime="20190122 07:55:15.230"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:15.233" endtime="20190122 07:55:15.238"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:15.245">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:15.247">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:15.241" endtime="20190122 07:55:15.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:15.271">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:15.266" endtime="20190122 07:55:15.272"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:15.281">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:15.275" endtime="20190122 07:55:15.282"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:15.258" endtime="20190122 07:55:15.285"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:15.287">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:15.251" endtime="20190122 07:55:15.288"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:15.297">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:15.290" endtime="20190122 07:55:15.298"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:15.301" endtime="20190122 07:55:15.307"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:16.314">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:15.310" endtime="20190122 07:55:16.316"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:14.825" endtime="20190122 07:55:16.317"></status>
</kw>
<kw type="foritem" name="${i} = 16">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:16.376">${KLEMME30} = [[12200, 193], [12275, 204]]</msg>
<status status="PASS" starttime="20190122 07:55:16.327" endtime="20190122 07:55:16.378"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:16.414">${CURR_VCARBAT} = 193</msg>
<status status="PASS" starttime="20190122 07:55:16.381" endtime="20190122 07:55:16.415"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:16.451">${CURR_KL30} = 204</msg>
<status status="PASS" starttime="20190122 07:55:16.417" endtime="20190122 07:55:16.453"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:16.460">${TIMENOW} = 1548143716</msg>
<status status="PASS" starttime="20190122 07:55:16.456" endtime="20190122 07:55:16.461"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:16.466">${TIMENOW} = 1548143716</msg>
<msg level="INFO" timestamp="20190122 07:55:16.467">${CURR_VCARBAT} = 193</msg>
<msg level="INFO" timestamp="20190122 07:55:16.468">${CURR_KL30} = 204</msg>
<status status="PASS" starttime="20190122 07:55:16.320" endtime="20190122 07:55:16.469"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:16.478" endtime="20190122 07:55:16.699"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:16.701">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190122 07:55:16.472" endtime="20190122 07:55:16.702"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:16.705" endtime="20190122 07:55:16.711"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:16.718">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:16.720">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:16.714" endtime="20190122 07:55:16.721"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:16.750">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:16.744" endtime="20190122 07:55:16.751"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:16.760">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:16.754" endtime="20190122 07:55:16.761"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:16.731" endtime="20190122 07:55:16.764"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:16.765">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:16.724" endtime="20190122 07:55:16.766"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:16.776">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:16.769" endtime="20190122 07:55:16.777"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:16.779" endtime="20190122 07:55:16.786"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:17.792">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:16.788" endtime="20190122 07:55:17.794"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:16.318" endtime="20190122 07:55:17.795"></status>
</kw>
<kw type="foritem" name="${i} = 17">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:17.853">${KLEMME30} = [[12200, 200], [12250, 212]]</msg>
<status status="PASS" starttime="20190122 07:55:17.805" endtime="20190122 07:55:17.855"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:17.891">${CURR_VCARBAT} = 200</msg>
<status status="PASS" starttime="20190122 07:55:17.859" endtime="20190122 07:55:17.892"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:17.928">${CURR_KL30} = 212</msg>
<status status="PASS" starttime="20190122 07:55:17.895" endtime="20190122 07:55:17.929"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:17.936">${TIMENOW} = 1548143717</msg>
<status status="PASS" starttime="20190122 07:55:17.932" endtime="20190122 07:55:17.937"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:17.942">${TIMENOW} = 1548143717</msg>
<msg level="INFO" timestamp="20190122 07:55:17.943">${CURR_VCARBAT} = 200</msg>
<msg level="INFO" timestamp="20190122 07:55:17.944">${CURR_KL30} = 212</msg>
<status status="PASS" starttime="20190122 07:55:17.798" endtime="20190122 07:55:17.945"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:17.954" endtime="20190122 07:55:18.182"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:18.184">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190122 07:55:17.948" endtime="20190122 07:55:18.187"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:18.190" endtime="20190122 07:55:18.195"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:18.203">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:18.205">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:18.199" endtime="20190122 07:55:18.206"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:18.229">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:18.224" endtime="20190122 07:55:18.230"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:18.238">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:18.232" endtime="20190122 07:55:18.238"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:18.215" endtime="20190122 07:55:18.242"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:18.243">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:18.209" endtime="20190122 07:55:18.244"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:18.254">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:18.247" endtime="20190122 07:55:18.255"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:18.257" endtime="20190122 07:55:18.264"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:19.273">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:18.267" endtime="20190122 07:55:19.275"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:17.796" endtime="20190122 07:55:19.276"></status>
</kw>
<kw type="foritem" name="${i} = 18">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:19.339">${KLEMME30} = [[12175, 220], [12250, 235]]</msg>
<status status="PASS" starttime="20190122 07:55:19.286" endtime="20190122 07:55:19.343"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:19.433">${CURR_VCARBAT} = 220</msg>
<status status="PASS" starttime="20190122 07:55:19.346" endtime="20190122 07:55:19.434"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:19.470">${CURR_KL30} = 235</msg>
<status status="PASS" starttime="20190122 07:55:19.437" endtime="20190122 07:55:19.471"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:19.480">${TIMENOW} = 1548143719</msg>
<status status="PASS" starttime="20190122 07:55:19.474" endtime="20190122 07:55:19.481"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:19.488">${TIMENOW} = 1548143719</msg>
<msg level="INFO" timestamp="20190122 07:55:19.489">${CURR_VCARBAT} = 220</msg>
<msg level="INFO" timestamp="20190122 07:55:19.490">${CURR_KL30} = 235</msg>
<status status="PASS" starttime="20190122 07:55:19.279" endtime="20190122 07:55:19.491"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:19.499" endtime="20190122 07:55:19.732"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:19.734">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190122 07:55:19.494" endtime="20190122 07:55:19.735"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:19.750" endtime="20190122 07:55:19.757"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:19.765">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:19.766">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:19.760" endtime="20190122 07:55:19.767"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:19.795">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:19.790" endtime="20190122 07:55:19.796"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:19.804">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:19.799" endtime="20190122 07:55:19.805"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:19.778" endtime="20190122 07:55:19.808"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:19.810">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:19.771" endtime="20190122 07:55:19.810"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:19.821">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:19.814" endtime="20190122 07:55:19.821"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:19.824" endtime="20190122 07:55:19.831"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:20.838">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:19.834" endtime="20190122 07:55:20.840"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:19.277" endtime="20190122 07:55:20.841"></status>
</kw>
<kw type="foritem" name="${i} = 19">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:20.918">${KLEMME30} = [[12200, 164], [12275, 179]]</msg>
<status status="PASS" starttime="20190122 07:55:20.851" endtime="20190122 07:55:20.918"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:20.974">${CURR_VCARBAT} = 164</msg>
<status status="PASS" starttime="20190122 07:55:20.921" endtime="20190122 07:55:20.975"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:21.012">${CURR_KL30} = 179</msg>
<status status="PASS" starttime="20190122 07:55:20.978" endtime="20190122 07:55:21.013"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:21.020">${TIMENOW} = 1548143721</msg>
<status status="PASS" starttime="20190122 07:55:21.016" endtime="20190122 07:55:21.021"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:21.026">${TIMENOW} = 1548143721</msg>
<msg level="INFO" timestamp="20190122 07:55:21.027">${CURR_VCARBAT} = 164</msg>
<msg level="INFO" timestamp="20190122 07:55:21.028">${CURR_KL30} = 179</msg>
<status status="PASS" starttime="20190122 07:55:20.845" endtime="20190122 07:55:21.029"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:21.038" endtime="20190122 07:55:21.261"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:21.262">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190122 07:55:21.032" endtime="20190122 07:55:21.263"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:21.270" endtime="20190122 07:55:21.276"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:21.283">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:21.285">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:21.279" endtime="20190122 07:55:21.286"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:21.309">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:21.305" endtime="20190122 07:55:21.310"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:21.321">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:21.314" endtime="20190122 07:55:21.321"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:21.296" endtime="20190122 07:55:21.326"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:21.327">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:21.289" endtime="20190122 07:55:21.328"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:21.339">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:21.331" endtime="20190122 07:55:21.340"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:21.342" endtime="20190122 07:55:21.349"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:22.355">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:21.351" endtime="20190122 07:55:22.357"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:20.842" endtime="20190122 07:55:22.359"></status>
</kw>
<kw type="foritem" name="${i} = 20">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:22.421">${KLEMME30} = [[12225, 123], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:55:22.369" endtime="20190122 07:55:22.422"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:22.459">${CURR_VCARBAT} = 123</msg>
<status status="PASS" starttime="20190122 07:55:22.425" endtime="20190122 07:55:22.460"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:22.495">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:22.462" endtime="20190122 07:55:22.496"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:22.504">${TIMENOW} = 1548143722</msg>
<status status="PASS" starttime="20190122 07:55:22.499" endtime="20190122 07:55:22.505"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:22.510">${TIMENOW} = 1548143722</msg>
<msg level="INFO" timestamp="20190122 07:55:22.511">${CURR_VCARBAT} = 123</msg>
<msg level="INFO" timestamp="20190122 07:55:22.512">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:22.362" endtime="20190122 07:55:22.513"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:22.522" endtime="20190122 07:55:22.749"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:22.751">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190122 07:55:22.516" endtime="20190122 07:55:22.752"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:22.757" endtime="20190122 07:55:22.762"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:22.770">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:22.772">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:22.766" endtime="20190122 07:55:22.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:22.800">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:22.795" endtime="20190122 07:55:22.801"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:22.810">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:22.804" endtime="20190122 07:55:22.810"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:22.783" endtime="20190122 07:55:22.814"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:22.816">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:22.776" endtime="20190122 07:55:22.817"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:22.827">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:22.820" endtime="20190122 07:55:22.828"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:22.831" endtime="20190122 07:55:22.837"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:23.844">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:22.840" endtime="20190122 07:55:23.846"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:22.360" endtime="20190122 07:55:23.847"></status>
</kw>
<kw type="foritem" name="${i} = 21">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:23.912">${KLEMME30} = [[12225, 122], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:55:23.857" endtime="20190122 07:55:23.913"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:23.977">${CURR_VCARBAT} = 122</msg>
<status status="PASS" starttime="20190122 07:55:23.916" endtime="20190122 07:55:23.977"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:24.058">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:23.996" endtime="20190122 07:55:24.059"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:24.068">${TIMENOW} = 1548143724</msg>
<status status="PASS" starttime="20190122 07:55:24.063" endtime="20190122 07:55:24.069"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:24.074">${TIMENOW} = 1548143724</msg>
<msg level="INFO" timestamp="20190122 07:55:24.075">${CURR_VCARBAT} = 122</msg>
<msg level="INFO" timestamp="20190122 07:55:24.076">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:23.850" endtime="20190122 07:55:24.077"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:24.085" endtime="20190122 07:55:24.303"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:24.305">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190122 07:55:24.080" endtime="20190122 07:55:24.306"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:24.309" endtime="20190122 07:55:24.315"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:24.322">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:24.324">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:24.318" endtime="20190122 07:55:24.325"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:24.349">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:24.344" endtime="20190122 07:55:24.350"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:24.359">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:24.353" endtime="20190122 07:55:24.359"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:24.336" endtime="20190122 07:55:24.363"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:24.364">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:24.328" endtime="20190122 07:55:24.365"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:24.375">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:24.368" endtime="20190122 07:55:24.376"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:24.379" endtime="20190122 07:55:24.385"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:25.392">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:24.388" endtime="20190122 07:55:25.394"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:23.848" endtime="20190122 07:55:25.395"></status>
</kw>
<kw type="foritem" name="${i} = 22">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:25.482">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:25.406" endtime="20190122 07:55:25.483"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:25.519">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:55:25.486" endtime="20190122 07:55:25.520"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:25.556">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:25.523" endtime="20190122 07:55:25.557"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:25.564">${TIMENOW} = 1548143725</msg>
<status status="PASS" starttime="20190122 07:55:25.560" endtime="20190122 07:55:25.565"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:25.570">${TIMENOW} = 1548143725</msg>
<msg level="INFO" timestamp="20190122 07:55:25.571">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:55:25.573">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:25.398" endtime="20190122 07:55:25.573"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:25.583" endtime="20190122 07:55:25.856"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:25.858">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190122 07:55:25.576" endtime="20190122 07:55:25.859"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:25.872" endtime="20190122 07:55:25.887"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:25.895">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:25.911">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:25.891" endtime="20190122 07:55:25.912"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:25.974">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:25.944" endtime="20190122 07:55:25.975"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:26.004">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:25.978" endtime="20190122 07:55:26.005"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:25.935" endtime="20190122 07:55:26.008"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:26.018">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:25.915" endtime="20190122 07:55:26.019"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:26.049">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:26.022" endtime="20190122 07:55:26.050"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:26.078" endtime="20190122 07:55:26.085"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:27.108">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:26.103" endtime="20190122 07:55:27.110"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:25.396" endtime="20190122 07:55:27.111"></status>
</kw>
<kw type="foritem" name="${i} = 23">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:27.175">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:27.120" endtime="20190122 07:55:27.176"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:27.212">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:27.179" endtime="20190122 07:55:27.213"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:27.248">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:27.215" endtime="20190122 07:55:27.249"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:27.256">${TIMENOW} = 1548143727</msg>
<status status="PASS" starttime="20190122 07:55:27.252" endtime="20190122 07:55:27.257"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:27.262">${TIMENOW} = 1548143727</msg>
<msg level="INFO" timestamp="20190122 07:55:27.263">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:27.264">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:27.114" endtime="20190122 07:55:27.265"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:27.273" endtime="20190122 07:55:27.496"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:27.498">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190122 07:55:27.268" endtime="20190122 07:55:27.499"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:27.502" endtime="20190122 07:55:27.507"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:27.515">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:27.517">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:27.510" endtime="20190122 07:55:27.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:27.540">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:27.536" endtime="20190122 07:55:27.542"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:27.551">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:27.545" endtime="20190122 07:55:27.552"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:27.527" endtime="20190122 07:55:27.555"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:27.556">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:27.520" endtime="20190122 07:55:27.557"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:27.567">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:27.560" endtime="20190122 07:55:27.568"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:27.571" endtime="20190122 07:55:27.577"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:28.584">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:27.580" endtime="20190122 07:55:28.586"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:27.112" endtime="20190122 07:55:28.587"></status>
</kw>
<kw type="foritem" name="${i} = 24">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:28.646">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:28.597" endtime="20190122 07:55:28.647"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:28.683">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:28.650" endtime="20190122 07:55:28.684"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:28.721">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:28.687" endtime="20190122 07:55:28.722"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:28.729">${TIMENOW} = 1548143728</msg>
<status status="PASS" starttime="20190122 07:55:28.725" endtime="20190122 07:55:28.730"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:28.735">${TIMENOW} = 1548143728</msg>
<msg level="INFO" timestamp="20190122 07:55:28.736">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:28.737">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:28.591" endtime="20190122 07:55:28.738"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:28.747" endtime="20190122 07:55:28.969"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:28.971">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190122 07:55:28.741" endtime="20190122 07:55:28.972"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:28.978" endtime="20190122 07:55:28.983"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:28.990">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:28.993">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:28.986" endtime="20190122 07:55:28.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:29.023">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:29.018" endtime="20190122 07:55:29.023"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:29.032">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:29.026" endtime="20190122 07:55:29.033"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:29.009" endtime="20190122 07:55:29.037"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:29.039">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:28.997" endtime="20190122 07:55:29.039"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:29.050">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:29.042" endtime="20190122 07:55:29.051"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:29.054" endtime="20190122 07:55:29.061"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:30.068">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:29.064" endtime="20190122 07:55:30.070"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:28.588" endtime="20190122 07:55:30.071"></status>
</kw>
<kw type="foritem" name="${i} = 25">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:30.131">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:30.081" endtime="20190122 07:55:30.132"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:30.168">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:30.135" endtime="20190122 07:55:30.169"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:30.205">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:30.172" endtime="20190122 07:55:30.206"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:30.213">${TIMENOW} = 1548143730</msg>
<status status="PASS" starttime="20190122 07:55:30.209" endtime="20190122 07:55:30.214"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:30.219">${TIMENOW} = 1548143730</msg>
<msg level="INFO" timestamp="20190122 07:55:30.220">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:30.221">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:30.075" endtime="20190122 07:55:30.222"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:30.230" endtime="20190122 07:55:30.450"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:30.453">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190122 07:55:30.225" endtime="20190122 07:55:30.454"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:30.457" endtime="20190122 07:55:30.462"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:30.469">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:30.471">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:30.465" endtime="20190122 07:55:30.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:30.495">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:30.490" endtime="20190122 07:55:30.496"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:30.504">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:30.499" endtime="20190122 07:55:30.505"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:30.482" endtime="20190122 07:55:30.508"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:30.510">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:30.475" endtime="20190122 07:55:30.510"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:30.520">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:30.513" endtime="20190122 07:55:30.521"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:30.524" endtime="20190122 07:55:30.530"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:31.537">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:30.533" endtime="20190122 07:55:31.539"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:30.073" endtime="20190122 07:55:31.539"></status>
</kw>
<kw type="foritem" name="${i} = 26">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:31.599">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:31.549" endtime="20190122 07:55:31.600"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:31.636">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:55:31.603" endtime="20190122 07:55:31.637"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:31.672">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:31.639" endtime="20190122 07:55:31.673"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:31.680">${TIMENOW} = 1548143731</msg>
<status status="PASS" starttime="20190122 07:55:31.676" endtime="20190122 07:55:31.681"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:31.686">${TIMENOW} = 1548143731</msg>
<msg level="INFO" timestamp="20190122 07:55:31.687">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:55:31.688">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:31.543" endtime="20190122 07:55:31.689"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:31.699" endtime="20190122 07:55:31.922"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:31.924">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190122 07:55:31.693" endtime="20190122 07:55:31.925"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:31.928" endtime="20190122 07:55:31.934"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:31.941">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:31.943">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:31.937" endtime="20190122 07:55:31.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:31.971">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:31.966" endtime="20190122 07:55:31.972"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:31.981">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:31.975" endtime="20190122 07:55:31.982"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:31.957" endtime="20190122 07:55:31.985"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:31.987">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:31.947" endtime="20190122 07:55:31.987"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:31.997">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:31.990" endtime="20190122 07:55:31.998"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:32.001" endtime="20190122 07:55:32.008"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:33.014">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:32.010" endtime="20190122 07:55:33.016"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:31.541" endtime="20190122 07:55:33.017"></status>
</kw>
<kw type="foritem" name="${i} = 27">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:33.156">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:55:33.035" endtime="20190122 07:55:33.157"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:33.192">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:33.160" endtime="20190122 07:55:33.193"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:33.229">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:33.196" endtime="20190122 07:55:33.230"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:33.238">${TIMENOW} = 1548143733</msg>
<status status="PASS" starttime="20190122 07:55:33.233" endtime="20190122 07:55:33.238"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:33.243">${TIMENOW} = 1548143733</msg>
<msg level="INFO" timestamp="20190122 07:55:33.244">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:33.245">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:33.025" endtime="20190122 07:55:33.246"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:33.254" endtime="20190122 07:55:33.531"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:33.533">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190122 07:55:33.249" endtime="20190122 07:55:33.534"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:33.558" endtime="20190122 07:55:33.593"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:33.633">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:33.635">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:33.624" endtime="20190122 07:55:33.635"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:33.785">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:33.757" endtime="20190122 07:55:33.786"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:33.829">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:33.789" endtime="20190122 07:55:33.847"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:33.714" endtime="20190122 07:55:33.855"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:33.873">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:33.679" endtime="20190122 07:55:33.874"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:33.895">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:33.877" endtime="20190122 07:55:33.896"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:33.898" endtime="20190122 07:55:33.910"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:34.940">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:33.913" endtime="20190122 07:55:34.942"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:33.019" endtime="20190122 07:55:34.943"></status>
</kw>
<kw type="foritem" name="${i} = 28">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:35.038">${KLEMME30} = [[12225, 122], [12300, 130]]</msg>
<status status="PASS" starttime="20190122 07:55:34.965" endtime="20190122 07:55:35.039"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:35.112">${CURR_VCARBAT} = 122</msg>
<status status="PASS" starttime="20190122 07:55:35.046" endtime="20190122 07:55:35.117"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:35.154">${CURR_KL30} = 130</msg>
<status status="PASS" starttime="20190122 07:55:35.120" endtime="20190122 07:55:35.155"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:35.162">${TIMENOW} = 1548143735</msg>
<status status="PASS" starttime="20190122 07:55:35.158" endtime="20190122 07:55:35.163"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:35.168">${TIMENOW} = 1548143735</msg>
<msg level="INFO" timestamp="20190122 07:55:35.169">${CURR_VCARBAT} = 122</msg>
<msg level="INFO" timestamp="20190122 07:55:35.170">${CURR_KL30} = 130</msg>
<status status="PASS" starttime="20190122 07:55:34.950" endtime="20190122 07:55:35.171"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:35.179" endtime="20190122 07:55:35.418"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:35.419">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190122 07:55:35.174" endtime="20190122 07:55:35.424"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:35.427" endtime="20190122 07:55:35.441"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:35.456">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:35.458">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:35.444" endtime="20190122 07:55:35.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:35.518">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:35.505" endtime="20190122 07:55:35.519"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:35.531">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:35.522" endtime="20190122 07:55:35.536"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:35.481" endtime="20190122 07:55:35.539"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:35.557">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:35.466" endtime="20190122 07:55:35.558"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:35.582">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:35.569" endtime="20190122 07:55:35.582"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:35.593" endtime="20190122 07:55:35.604"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:36.621">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:35.617" endtime="20190122 07:55:36.628"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:34.948" endtime="20190122 07:55:36.629"></status>
</kw>
<kw type="foritem" name="${i} = 29">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:36.716">${KLEMME30} = [[12225, 127], [12300, 133]]</msg>
<status status="PASS" starttime="20190122 07:55:36.647" endtime="20190122 07:55:36.718"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:36.776">${CURR_VCARBAT} = 127</msg>
<status status="PASS" starttime="20190122 07:55:36.724" endtime="20190122 07:55:36.777"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:36.826">${CURR_KL30} = 133</msg>
<status status="PASS" starttime="20190122 07:55:36.779" endtime="20190122 07:55:36.827"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:36.834">${TIMENOW} = 1548143736</msg>
<status status="PASS" starttime="20190122 07:55:36.830" endtime="20190122 07:55:36.835"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:36.840">${TIMENOW} = 1548143736</msg>
<msg level="INFO" timestamp="20190122 07:55:36.841">${CURR_VCARBAT} = 127</msg>
<msg level="INFO" timestamp="20190122 07:55:36.842">${CURR_KL30} = 133</msg>
<status status="PASS" starttime="20190122 07:55:36.637" endtime="20190122 07:55:36.843"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:36.852" endtime="20190122 07:55:37.068"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:37.070">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190122 07:55:36.846" endtime="20190122 07:55:37.071"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:37.078" endtime="20190122 07:55:37.089"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:37.104">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:37.110">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:37.091" endtime="20190122 07:55:37.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:37.158">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:37.149" endtime="20190122 07:55:37.159"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:37.175">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:37.166" endtime="20190122 07:55:37.180"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:37.128" endtime="20190122 07:55:37.189"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:37.190">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:37.118" endtime="20190122 07:55:37.191"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:37.213">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:37.194" endtime="20190122 07:55:37.214"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:37.221" endtime="20190122 07:55:37.231"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:38.246">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:37.242" endtime="20190122 07:55:38.248"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:36.631" endtime="20190122 07:55:38.249"></status>
</kw>
<kw type="foritem" name="${i} = 30">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:38.309">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:38.259" endtime="20190122 07:55:38.310"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:38.349">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:55:38.314" endtime="20190122 07:55:38.350"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:38.399">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:38.353" endtime="20190122 07:55:38.400"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:38.407">${TIMENOW} = 1548143738</msg>
<status status="PASS" starttime="20190122 07:55:38.402" endtime="20190122 07:55:38.408"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:38.433">${TIMENOW} = 1548143738</msg>
<msg level="INFO" timestamp="20190122 07:55:38.434">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:55:38.437">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:38.252" endtime="20190122 07:55:38.438"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:38.447" endtime="20190122 07:55:38.727"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:38.729">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190122 07:55:38.441" endtime="20190122 07:55:38.730"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:38.733" endtime="20190122 07:55:38.758"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:38.766">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:38.767">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:38.761" endtime="20190122 07:55:38.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:38.872">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:38.866" endtime="20190122 07:55:38.873"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:38.904">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:38.898" endtime="20190122 07:55:38.905"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:38.831" endtime="20190122 07:55:38.917"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:38.919">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:38.810" endtime="20190122 07:55:38.919"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:38.943">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:38.922" endtime="20190122 07:55:38.943"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:38.955" endtime="20190122 07:55:38.961"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:39.989">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:38.984" endtime="20190122 07:55:39.991"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:38.250" endtime="20190122 07:55:39.992"></status>
</kw>
<kw type="foritem" name="${i} = 31">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:40.050">${KLEMME30} = [[12225, 121], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:55:40.001" endtime="20190122 07:55:40.051"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:40.088">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:55:40.055" endtime="20190122 07:55:40.088"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:40.124">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:40.091" endtime="20190122 07:55:40.125"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:40.133">${TIMENOW} = 1548143740</msg>
<status status="PASS" starttime="20190122 07:55:40.128" endtime="20190122 07:55:40.133"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:40.138">${TIMENOW} = 1548143740</msg>
<msg level="INFO" timestamp="20190122 07:55:40.139">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:55:40.140">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:39.995" endtime="20190122 07:55:40.141"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:40.150" endtime="20190122 07:55:40.360"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:40.362">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190122 07:55:40.144" endtime="20190122 07:55:40.363"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:40.366" endtime="20190122 07:55:40.371"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:40.378">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:40.380">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:40.374" endtime="20190122 07:55:40.381"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:40.405">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:40.400" endtime="20190122 07:55:40.406"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:40.414">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:40.409" endtime="20190122 07:55:40.415"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:40.392" endtime="20190122 07:55:40.418"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:40.420">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:40.384" endtime="20190122 07:55:40.421"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:40.430">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:40.423" endtime="20190122 07:55:40.431"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:40.434" endtime="20190122 07:55:40.441"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:41.447">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:40.443" endtime="20190122 07:55:41.449"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:39.993" endtime="20190122 07:55:41.450"></status>
</kw>
<kw type="foritem" name="${i} = 32">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:41.509">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:55:41.460" endtime="20190122 07:55:41.510"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:41.570">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:41.513" endtime="20190122 07:55:41.571"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:41.669">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:41.574" endtime="20190122 07:55:41.680"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:41.688">${TIMENOW} = 1548143741</msg>
<status status="PASS" starttime="20190122 07:55:41.683" endtime="20190122 07:55:41.689"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:41.720">${TIMENOW} = 1548143741</msg>
<msg level="INFO" timestamp="20190122 07:55:41.730">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:41.731">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:41.454" endtime="20190122 07:55:41.732"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:41.754" endtime="20190122 07:55:42.030"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:42.033">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190122 07:55:41.735" endtime="20190122 07:55:42.034"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:42.052" endtime="20190122 07:55:42.076"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:42.089">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:42.125">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:42.079" endtime="20190122 07:55:42.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:42.223">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:42.193" endtime="20190122 07:55:42.224"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:42.243">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:42.227" endtime="20190122 07:55:42.244"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:42.159" endtime="20190122 07:55:42.258"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:42.259">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:42.130" endtime="20190122 07:55:42.260"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:42.290">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:42.263" endtime="20190122 07:55:42.291"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:42.306" endtime="20190122 07:55:42.314"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:43.339">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:42.329" endtime="20190122 07:55:43.341"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:41.451" endtime="20190122 07:55:43.342"></status>
</kw>
<kw type="foritem" name="${i} = 33">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:43.452">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:43.365" endtime="20190122 07:55:43.453"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:43.557">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:43.456" endtime="20190122 07:55:43.557"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:43.704">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:43.585" endtime="20190122 07:55:43.705"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:43.728">${TIMENOW} = 1548143743</msg>
<status status="PASS" starttime="20190122 07:55:43.708" endtime="20190122 07:55:43.729"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:43.750">${TIMENOW} = 1548143743</msg>
<msg level="INFO" timestamp="20190122 07:55:43.751">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:43.752">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:43.346" endtime="20190122 07:55:43.753"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:43.770" endtime="20190122 07:55:44.043"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:44.047">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190122 07:55:43.764" endtime="20190122 07:55:44.048"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:44.075" endtime="20190122 07:55:44.090"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:44.098">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:44.121">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:44.094" endtime="20190122 07:55:44.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:44.174">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:44.169" endtime="20190122 07:55:44.174"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:44.195">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:44.190" endtime="20190122 07:55:44.196"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:44.148" endtime="20190122 07:55:44.199"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:44.201">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:44.125" endtime="20190122 07:55:44.209"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:44.233">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:44.211" endtime="20190122 07:55:44.234"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:44.237" endtime="20190122 07:55:44.253"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:45.260">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:44.256" endtime="20190122 07:55:45.262"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:43.343" endtime="20190122 07:55:45.263"></status>
</kw>
<kw type="foritem" name="${i} = 34">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:45.321">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:45.273" endtime="20190122 07:55:45.322"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:45.358">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:45.326" endtime="20190122 07:55:45.359"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:45.395">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:45.362" endtime="20190122 07:55:45.396"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:45.403">${TIMENOW} = 1548143745</msg>
<status status="PASS" starttime="20190122 07:55:45.399" endtime="20190122 07:55:45.404"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:45.410">${TIMENOW} = 1548143745</msg>
<msg level="INFO" timestamp="20190122 07:55:45.411">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:45.412">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:45.266" endtime="20190122 07:55:45.413"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:45.421" endtime="20190122 07:55:45.617"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:45.618">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190122 07:55:45.416" endtime="20190122 07:55:45.619"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:45.623" endtime="20190122 07:55:45.628"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:45.635">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:45.638">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:45.631" endtime="20190122 07:55:45.638"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:45.668">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:45.663" endtime="20190122 07:55:45.668"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:45.677">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:45.671" endtime="20190122 07:55:45.677"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:45.650" endtime="20190122 07:55:45.680"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:45.684">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:45.641" endtime="20190122 07:55:45.685"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:45.695">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:45.688" endtime="20190122 07:55:45.696"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:45.698" endtime="20190122 07:55:45.705"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:46.711">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:45.707" endtime="20190122 07:55:46.714"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:45.264" endtime="20190122 07:55:46.714"></status>
</kw>
<kw type="foritem" name="${i} = 35">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:46.794">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:46.724" endtime="20190122 07:55:46.795"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:46.870">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:46.798" endtime="20190122 07:55:46.871"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:46.943">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:46.874" endtime="20190122 07:55:46.944"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:46.961">${TIMENOW} = 1548143746</msg>
<status status="PASS" starttime="20190122 07:55:46.956" endtime="20190122 07:55:46.961"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:46.976">${TIMENOW} = 1548143746</msg>
<msg level="INFO" timestamp="20190122 07:55:46.978">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:46.979">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:46.718" endtime="20190122 07:55:46.980"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:47.001" endtime="20190122 07:55:47.241"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:47.243">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190122 07:55:46.983" endtime="20190122 07:55:47.244"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:47.247" endtime="20190122 07:55:47.253"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:47.260">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:47.262">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:47.256" endtime="20190122 07:55:47.263"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:47.288">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:47.283" endtime="20190122 07:55:47.289"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:47.310">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:47.301" endtime="20190122 07:55:47.311"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:47.274" endtime="20190122 07:55:47.319"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:47.324">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:47.266" endtime="20190122 07:55:47.325"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:47.340">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:47.331" endtime="20190122 07:55:47.341"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:47.343" endtime="20190122 07:55:47.350"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:48.357">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:47.353" endtime="20190122 07:55:48.359"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:46.716" endtime="20190122 07:55:48.359"></status>
</kw>
<kw type="foritem" name="${i} = 36">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:48.421">${KLEMME30} = [[12200, 129], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:48.369" endtime="20190122 07:55:48.422"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:48.458">${CURR_VCARBAT} = 129</msg>
<status status="PASS" starttime="20190122 07:55:48.425" endtime="20190122 07:55:48.459"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:48.494">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:48.461" endtime="20190122 07:55:48.495"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:48.502">${TIMENOW} = 1548143748</msg>
<status status="PASS" starttime="20190122 07:55:48.498" endtime="20190122 07:55:48.503"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:48.508">${TIMENOW} = 1548143748</msg>
<msg level="INFO" timestamp="20190122 07:55:48.509">${CURR_VCARBAT} = 129</msg>
<msg level="INFO" timestamp="20190122 07:55:48.510">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:48.363" endtime="20190122 07:55:48.511"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:48.520" endtime="20190122 07:55:48.741"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:48.743">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190122 07:55:48.515" endtime="20190122 07:55:48.743"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:48.753" endtime="20190122 07:55:48.770"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:48.778">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:48.780">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:48.774" endtime="20190122 07:55:48.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:48.835">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:48.830" endtime="20190122 07:55:48.836"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:48.856">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:48.850" endtime="20190122 07:55:48.857"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:48.803" endtime="20190122 07:55:48.880"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:48.882">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:48.784" endtime="20190122 07:55:48.883"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:48.907">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:48.886" endtime="20190122 07:55:48.908"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:48.910" endtime="20190122 07:55:48.927"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:49.944">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:48.930" endtime="20190122 07:55:49.946"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:48.361" endtime="20190122 07:55:49.947"></status>
</kw>
<kw type="foritem" name="${i} = 37">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:50.008">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:55:49.957" endtime="20190122 07:55:50.009"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:50.046">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:50.012" endtime="20190122 07:55:50.047"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:50.085">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:50.049" endtime="20190122 07:55:50.086"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:50.093">${TIMENOW} = 1548143750</msg>
<status status="PASS" starttime="20190122 07:55:50.089" endtime="20190122 07:55:50.094"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:50.099">${TIMENOW} = 1548143750</msg>
<msg level="INFO" timestamp="20190122 07:55:50.100">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:50.101">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:49.950" endtime="20190122 07:55:50.102"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:50.110" endtime="20190122 07:55:50.334"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:50.335">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190122 07:55:50.105" endtime="20190122 07:55:50.337"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:50.340" endtime="20190122 07:55:50.345"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:50.353">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:50.355">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:50.348" endtime="20190122 07:55:50.355"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:50.378">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:50.374" endtime="20190122 07:55:50.379"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:50.387">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:50.382" endtime="20190122 07:55:50.388"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:50.365" endtime="20190122 07:55:50.391"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:50.393">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:50.359" endtime="20190122 07:55:50.394"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:50.403">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:50.396" endtime="20190122 07:55:50.404"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:50.407" endtime="20190122 07:55:50.413"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:51.420">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:50.416" endtime="20190122 07:55:51.422"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:49.948" endtime="20190122 07:55:51.423"></status>
</kw>
<kw type="foritem" name="${i} = 38">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:51.481">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:55:51.432" endtime="20190122 07:55:51.482"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:51.518">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:51.485" endtime="20190122 07:55:51.519"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:51.559">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:51.521" endtime="20190122 07:55:51.560"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:51.578">${TIMENOW} = 1548143751</msg>
<status status="PASS" starttime="20190122 07:55:51.572" endtime="20190122 07:55:51.579"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:51.596">${TIMENOW} = 1548143751</msg>
<msg level="INFO" timestamp="20190122 07:55:51.597">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:51.598">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:55:51.426" endtime="20190122 07:55:51.599"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:51.616" endtime="20190122 07:55:51.851"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:51.854">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190122 07:55:51.602" endtime="20190122 07:55:51.854"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:51.857" endtime="20190122 07:55:51.863"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:51.870">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:51.872">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:51.866" endtime="20190122 07:55:51.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:51.903">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:51.898" endtime="20190122 07:55:51.904"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:51.912">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:51.907" endtime="20190122 07:55:51.913"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:51.883" endtime="20190122 07:55:51.916"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:51.917">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:51.876" endtime="20190122 07:55:51.918"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:51.928">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:51.921" endtime="20190122 07:55:51.930"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:51.933" endtime="20190122 07:55:51.951"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:52.958">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:51.954" endtime="20190122 07:55:52.960"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:51.424" endtime="20190122 07:55:52.961"></status>
</kw>
<kw type="foritem" name="${i} = 39">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:53.021">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:52.970" endtime="20190122 07:55:53.022"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:53.101">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:55:53.025" endtime="20190122 07:55:53.102"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:53.176">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:53.112" endtime="20190122 07:55:53.177"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:53.189">${TIMENOW} = 1548143753</msg>
<status status="PASS" starttime="20190122 07:55:53.185" endtime="20190122 07:55:53.190"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:53.195">${TIMENOW} = 1548143753</msg>
<msg level="INFO" timestamp="20190122 07:55:53.196">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:55:53.197">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:52.964" endtime="20190122 07:55:53.198"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:53.206" endtime="20190122 07:55:53.423"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:53.426">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190122 07:55:53.201" endtime="20190122 07:55:53.427"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:53.430" endtime="20190122 07:55:53.435"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:53.442">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:53.444">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:53.438" endtime="20190122 07:55:53.445"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:53.470">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:53.465" endtime="20190122 07:55:53.471"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:53.479">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:53.473" endtime="20190122 07:55:53.479"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:53.456" endtime="20190122 07:55:53.483"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:53.484">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:53.449" endtime="20190122 07:55:53.485"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:53.502">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:53.490" endtime="20190122 07:55:53.503"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:53.506" endtime="20190122 07:55:53.514"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:54.523">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:53.519" endtime="20190122 07:55:54.525"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:52.962" endtime="20190122 07:55:54.526"></status>
</kw>
<kw type="foritem" name="${i} = 40">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:54.585">${KLEMME30} = [[12225, 121], [12300, 130]]</msg>
<status status="PASS" starttime="20190122 07:55:54.536" endtime="20190122 07:55:54.586"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:54.622">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:55:54.589" endtime="20190122 07:55:54.623"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:54.658">${CURR_KL30} = 130</msg>
<status status="PASS" starttime="20190122 07:55:54.625" endtime="20190122 07:55:54.659"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:54.667">${TIMENOW} = 1548143754</msg>
<status status="PASS" starttime="20190122 07:55:54.662" endtime="20190122 07:55:54.667"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:54.672">${TIMENOW} = 1548143754</msg>
<msg level="INFO" timestamp="20190122 07:55:54.673">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:55:54.674">${CURR_KL30} = 130</msg>
<status status="PASS" starttime="20190122 07:55:54.529" endtime="20190122 07:55:54.675"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:54.686" endtime="20190122 07:55:54.907"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:54.909">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190122 07:55:54.678" endtime="20190122 07:55:54.910"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:54.913" endtime="20190122 07:55:54.919"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:54.926">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:54.929">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:54.922" endtime="20190122 07:55:54.930"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:54.958">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:54.953" endtime="20190122 07:55:54.958"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:54.967">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:54.961" endtime="20190122 07:55:54.968"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:54.939" endtime="20190122 07:55:54.971"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:54.973">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:54.933" endtime="20190122 07:55:54.973"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:54.984">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:54.976" endtime="20190122 07:55:54.985"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:54.989" endtime="20190122 07:55:54.995"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:56.004">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:54.999" endtime="20190122 07:55:56.006"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:54.527" endtime="20190122 07:55:56.007"></status>
</kw>
<kw type="foritem" name="${i} = 41">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:56.065">${KLEMME30} = [[12225, 120], [12300, 127]]</msg>
<status status="PASS" starttime="20190122 07:55:56.016" endtime="20190122 07:55:56.066"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:56.102">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:56.070" endtime="20190122 07:55:56.103"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:56.139">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190122 07:55:56.106" endtime="20190122 07:55:56.140"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:56.147">${TIMENOW} = 1548143756</msg>
<status status="PASS" starttime="20190122 07:55:56.143" endtime="20190122 07:55:56.148"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:56.153">${TIMENOW} = 1548143756</msg>
<msg level="INFO" timestamp="20190122 07:55:56.154">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:56.155">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190122 07:55:56.010" endtime="20190122 07:55:56.156"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:56.165" endtime="20190122 07:55:56.361"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:56.363">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190122 07:55:56.159" endtime="20190122 07:55:56.364"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:56.366" endtime="20190122 07:55:56.372"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:56.379">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:56.381">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:56.375" endtime="20190122 07:55:56.382"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:56.405">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:56.400" endtime="20190122 07:55:56.406"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:56.414">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:56.409" endtime="20190122 07:55:56.415"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:56.391" endtime="20190122 07:55:56.418"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:56.419">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:56.385" endtime="20190122 07:55:56.420"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:56.432">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:56.425" endtime="20190122 07:55:56.433"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:56.435" endtime="20190122 07:55:56.442"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:57.449">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:56.445" endtime="20190122 07:55:57.451"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:56.008" endtime="20190122 07:55:57.451"></status>
</kw>
<kw type="foritem" name="${i} = 42">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:57.510">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:55:57.461" endtime="20190122 07:55:57.511"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:57.547">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:55:57.515" endtime="20190122 07:55:57.548"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:57.584">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:57.551" endtime="20190122 07:55:57.585"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:57.594">${TIMENOW} = 1548143757</msg>
<status status="PASS" starttime="20190122 07:55:57.589" endtime="20190122 07:55:57.594"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:57.599">${TIMENOW} = 1548143757</msg>
<msg level="INFO" timestamp="20190122 07:55:57.600">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:55:57.601">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:55:57.455" endtime="20190122 07:55:57.602"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:57.611" endtime="20190122 07:55:57.833"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:57.835">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190122 07:55:57.605" endtime="20190122 07:55:57.836"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:57.839" endtime="20190122 07:55:57.845"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:57.852">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:57.854">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:57.848" endtime="20190122 07:55:57.855"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:57.884">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:57.877" endtime="20190122 07:55:57.884"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:57.893">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:57.887" endtime="20190122 07:55:57.894"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:57.865" endtime="20190122 07:55:57.898"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:57.899">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:57.858" endtime="20190122 07:55:57.900"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:57.910">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:57.903" endtime="20190122 07:55:57.911"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:57.914" endtime="20190122 07:55:57.920"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:55:58.927">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:57.923" endtime="20190122 07:55:58.929"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:57.453" endtime="20190122 07:55:58.930"></status>
</kw>
<kw type="foritem" name="${i} = 43">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:58.989">${KLEMME30} = [[12225, 121], [12300, 136]]</msg>
<status status="PASS" starttime="20190122 07:55:58.939" endtime="20190122 07:55:58.990"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:59.028">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:55:58.994" endtime="20190122 07:55:59.029"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:59.066">${CURR_KL30} = 136</msg>
<status status="PASS" starttime="20190122 07:55:59.032" endtime="20190122 07:55:59.067"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:59.075">${TIMENOW} = 1548143759</msg>
<status status="PASS" starttime="20190122 07:55:59.070" endtime="20190122 07:55:59.075"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:59.080">${TIMENOW} = 1548143759</msg>
<msg level="INFO" timestamp="20190122 07:55:59.081">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:55:59.084">${CURR_KL30} = 136</msg>
<status status="PASS" starttime="20190122 07:55:58.933" endtime="20190122 07:55:59.085"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:59.094" endtime="20190122 07:55:59.317"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:59.319">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190122 07:55:59.088" endtime="20190122 07:55:59.319"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:59.327" endtime="20190122 07:55:59.335"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:59.342">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:55:59.345">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:55:59.338" endtime="20190122 07:55:59.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:59.369">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190122 07:55:59.365" endtime="20190122 07:55:59.370"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:59.378">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:55:59.373" endtime="20190122 07:55:59.379"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:59.356" endtime="20190122 07:55:59.382"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:55:59.384">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:55:59.349" endtime="20190122 07:55:59.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:55:59.395">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:55:59.388" endtime="20190122 07:55:59.396"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:55:59.398" endtime="20190122 07:55:59.405"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:00.413">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:55:59.407" endtime="20190122 07:56:00.415"></status>
</kw>
<status status="PASS" starttime="20190122 07:55:58.931" endtime="20190122 07:56:00.416"></status>
</kw>
<kw type="foritem" name="${i} = 44">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:00.498">${KLEMME30} = [[12225, 120], [102300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:00.434" endtime="20190122 07:56:00.499"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:00.535">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:56:00.502" endtime="20190122 07:56:00.536"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:00.572">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:00.539" endtime="20190122 07:56:00.573"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:00.580">${TIMENOW} = 1548143760</msg>
<status status="PASS" starttime="20190122 07:56:00.576" endtime="20190122 07:56:00.581"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:00.586">${TIMENOW} = 1548143760</msg>
<msg level="INFO" timestamp="20190122 07:56:00.587">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:56:00.588">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:00.419" endtime="20190122 07:56:00.589"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:00.597" endtime="20190122 07:56:00.825"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:00.827">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190122 07:56:00.591" endtime="20190122 07:56:00.828"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:00.832" endtime="20190122 07:56:00.838"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:00.845">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:00.847">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:00.841" endtime="20190122 07:56:00.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:00.876">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:00.871" endtime="20190122 07:56:00.877"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:00.885">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:00.880" endtime="20190122 07:56:00.886"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:00.858" endtime="20190122 07:56:00.889"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:00.890">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:00.851" endtime="20190122 07:56:00.891"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:00.902">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:00.894" endtime="20190122 07:56:00.903"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:00.905" endtime="20190122 07:56:00.912"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:01.918">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:00.914" endtime="20190122 07:56:01.920"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:00.417" endtime="20190122 07:56:01.921"></status>
</kw>
<kw type="foritem" name="${i} = 45">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:01.980">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:01.931" endtime="20190122 07:56:01.981"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:02.017">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:01.984" endtime="20190122 07:56:02.018"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:02.054">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:02.021" endtime="20190122 07:56:02.055"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:02.063">${TIMENOW} = 1548143762</msg>
<status status="PASS" starttime="20190122 07:56:02.058" endtime="20190122 07:56:02.063"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:02.069">${TIMENOW} = 1548143762</msg>
<msg level="INFO" timestamp="20190122 07:56:02.070">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:02.071">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:01.925" endtime="20190122 07:56:02.071"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:02.080" endtime="20190122 07:56:02.301"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:02.303">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190122 07:56:02.074" endtime="20190122 07:56:02.304"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:02.307" endtime="20190122 07:56:02.313"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:02.320">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:02.322">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:02.316" endtime="20190122 07:56:02.323"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:02.346">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:02.341" endtime="20190122 07:56:02.346"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:02.355">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:02.349" endtime="20190122 07:56:02.355"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:02.332" endtime="20190122 07:56:02.358"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:02.360">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:02.326" endtime="20190122 07:56:02.361"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:02.372">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:02.363" endtime="20190122 07:56:02.373"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:02.376" endtime="20190122 07:56:02.382"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:03.389">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:02.385" endtime="20190122 07:56:03.391"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:01.922" endtime="20190122 07:56:03.392"></status>
</kw>
<kw type="foritem" name="${i} = 46">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:03.477">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:03.401" endtime="20190122 07:56:03.478"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:03.578">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:56:03.481" endtime="20190122 07:56:03.579"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:03.660">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:03.606" endtime="20190122 07:56:03.661"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:03.669">${TIMENOW} = 1548143763</msg>
<status status="PASS" starttime="20190122 07:56:03.664" endtime="20190122 07:56:03.670"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:03.675">${TIMENOW} = 1548143763</msg>
<msg level="INFO" timestamp="20190122 07:56:03.676">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:56:03.677">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:03.395" endtime="20190122 07:56:03.678"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:03.686" endtime="20190122 07:56:03.930"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:03.933">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190122 07:56:03.681" endtime="20190122 07:56:03.934"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:03.937" endtime="20190122 07:56:03.943"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:03.951">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:03.953">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:03.947" endtime="20190122 07:56:03.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:03.981">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:03.976" endtime="20190122 07:56:03.982"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:03.990">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:03.985" endtime="20190122 07:56:03.991"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:03.963" endtime="20190122 07:56:03.994"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:03.995">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:03.957" endtime="20190122 07:56:03.996"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:04.007">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:03.999" endtime="20190122 07:56:04.008"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:04.011" endtime="20190122 07:56:04.017"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:05.024">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:04.020" endtime="20190122 07:56:05.027"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:03.393" endtime="20190122 07:56:05.027"></status>
</kw>
<kw type="foritem" name="${i} = 47">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:05.091">${KLEMME30} = [[12225, 121], [12375, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:05.039" endtime="20190122 07:56:05.091"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:05.127">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:05.095" endtime="20190122 07:56:05.128"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:05.165">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:05.131" endtime="20190122 07:56:05.165"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:05.173">${TIMENOW} = 1548143765</msg>
<status status="PASS" starttime="20190122 07:56:05.168" endtime="20190122 07:56:05.174"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:05.179">${TIMENOW} = 1548143765</msg>
<msg level="INFO" timestamp="20190122 07:56:05.180">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:05.181">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:05.032" endtime="20190122 07:56:05.182"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:05.190" endtime="20190122 07:56:05.409"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:05.411">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190122 07:56:05.185" endtime="20190122 07:56:05.412"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:05.415" endtime="20190122 07:56:05.421"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:05.429">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:05.431">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:05.425" endtime="20190122 07:56:05.432"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:05.455">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:05.450" endtime="20190122 07:56:05.455"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:05.464">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:05.458" endtime="20190122 07:56:05.464"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:05.441" endtime="20190122 07:56:05.467"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:05.469">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:05.435" endtime="20190122 07:56:05.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:05.480">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:05.473" endtime="20190122 07:56:05.481"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:05.483" endtime="20190122 07:56:05.490"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:06.496">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:05.493" endtime="20190122 07:56:06.498"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:05.029" endtime="20190122 07:56:06.499"></status>
</kw>
<kw type="foritem" name="${i} = 48">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:06.558">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:06.509" endtime="20190122 07:56:06.559"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:06.596">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:06.562" endtime="20190122 07:56:06.597"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:06.632">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:06.599" endtime="20190122 07:56:06.633"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:06.640">${TIMENOW} = 1548143766</msg>
<status status="PASS" starttime="20190122 07:56:06.636" endtime="20190122 07:56:06.641"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:06.646">${TIMENOW} = 1548143766</msg>
<msg level="INFO" timestamp="20190122 07:56:06.647">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:06.648">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:06.503" endtime="20190122 07:56:06.649"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:06.657" endtime="20190122 07:56:06.861"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:06.862">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190122 07:56:06.652" endtime="20190122 07:56:06.863"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:06.866" endtime="20190122 07:56:06.872"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:06.879">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:06.881">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:06.875" endtime="20190122 07:56:06.882"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:06.911">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:06.906" endtime="20190122 07:56:06.911"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:06.919">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:06.914" endtime="20190122 07:56:06.920"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:06.892" endtime="20190122 07:56:06.923"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:06.925">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:06.885" endtime="20190122 07:56:06.926"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:06.937">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:06.930" endtime="20190122 07:56:06.937"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:06.940" endtime="20190122 07:56:06.946"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:07.953">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:06.949" endtime="20190122 07:56:07.955"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:06.501" endtime="20190122 07:56:07.956"></status>
</kw>
<kw type="foritem" name="${i} = 49">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:08.015">${KLEMME30} = [[12225, 121], [12300, 140]]</msg>
<status status="PASS" starttime="20190122 07:56:07.966" endtime="20190122 07:56:08.016"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:08.052">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:08.019" endtime="20190122 07:56:08.053"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:08.089">${CURR_KL30} = 140</msg>
<status status="PASS" starttime="20190122 07:56:08.056" endtime="20190122 07:56:08.090"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:08.098">${TIMENOW} = 1548143768</msg>
<status status="PASS" starttime="20190122 07:56:08.093" endtime="20190122 07:56:08.099"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:08.103">${TIMENOW} = 1548143768</msg>
<msg level="INFO" timestamp="20190122 07:56:08.105">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:08.106">${CURR_KL30} = 140</msg>
<status status="PASS" starttime="20190122 07:56:07.959" endtime="20190122 07:56:08.106"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:08.115" endtime="20190122 07:56:08.337"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:08.339">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190122 07:56:08.109" endtime="20190122 07:56:08.340"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:08.344" endtime="20190122 07:56:08.349"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:08.356">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:08.358">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:08.352" endtime="20190122 07:56:08.359"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:08.382">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:08.377" endtime="20190122 07:56:08.383"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:08.391">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:08.386" endtime="20190122 07:56:08.392"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:08.368" endtime="20190122 07:56:08.395"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:08.397">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:08.362" endtime="20190122 07:56:08.397"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:08.407">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:08.400" endtime="20190122 07:56:08.408"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:08.410" endtime="20190122 07:56:08.417"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:09.429">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:08.419" endtime="20190122 07:56:09.431"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:07.957" endtime="20190122 07:56:09.431"></status>
</kw>
<kw type="foritem" name="${i} = 50">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:09.535">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:56:09.449" endtime="20190122 07:56:09.536"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:09.642">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:56:09.539" endtime="20190122 07:56:09.642"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:09.699">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:09.656" endtime="20190122 07:56:09.699"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:09.707">${TIMENOW} = 1548143769</msg>
<status status="PASS" starttime="20190122 07:56:09.702" endtime="20190122 07:56:09.708"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:09.712">${TIMENOW} = 1548143769</msg>
<msg level="INFO" timestamp="20190122 07:56:09.713">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:56:09.714">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:09.435" endtime="20190122 07:56:09.715"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:09.724" endtime="20190122 07:56:09.936"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:09.938">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190122 07:56:09.718" endtime="20190122 07:56:09.939"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:09.942" endtime="20190122 07:56:09.947"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:09.954">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:09.956">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:09.950" endtime="20190122 07:56:09.957"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:09.985">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:09.979" endtime="20190122 07:56:09.986"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:09.994">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:09.989" endtime="20190122 07:56:09.995"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:09.967" endtime="20190122 07:56:09.998"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:09.999">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:09.960" endtime="20190122 07:56:10.000"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:10.010">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:10.003" endtime="20190122 07:56:10.011"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:10.014" endtime="20190122 07:56:10.020"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:11.027">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:10.023" endtime="20190122 07:56:11.029"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:09.433" endtime="20190122 07:56:11.029"></status>
</kw>
<kw type="foritem" name="${i} = 51">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:11.088">${KLEMME30} = [[12225, 120], [12300, 127]]</msg>
<status status="PASS" starttime="20190122 07:56:11.039" endtime="20190122 07:56:11.089"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:11.125">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:56:11.092" endtime="20190122 07:56:11.126"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:11.162">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190122 07:56:11.129" endtime="20190122 07:56:11.162"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:11.170">${TIMENOW} = 1548143771</msg>
<status status="PASS" starttime="20190122 07:56:11.165" endtime="20190122 07:56:11.171"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:11.176">${TIMENOW} = 1548143771</msg>
<msg level="INFO" timestamp="20190122 07:56:11.177">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:56:11.178">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190122 07:56:11.033" endtime="20190122 07:56:11.179"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:11.187" endtime="20190122 07:56:11.411"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:11.413">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190122 07:56:11.182" endtime="20190122 07:56:11.414"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:11.417" endtime="20190122 07:56:11.424"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:11.431">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:11.433">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:11.427" endtime="20190122 07:56:11.433"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:11.457">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:11.452" endtime="20190122 07:56:11.457"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:11.465">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:11.460" endtime="20190122 07:56:11.466"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:11.443" endtime="20190122 07:56:11.469"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:11.471">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:11.437" endtime="20190122 07:56:11.472"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:11.482">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:11.475" endtime="20190122 07:56:11.482"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:11.485" endtime="20190122 07:56:11.492"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:12.498">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:11.494" endtime="20190122 07:56:12.501"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:11.031" endtime="20190122 07:56:12.501"></status>
</kw>
<kw type="foritem" name="${i} = 52">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:12.559">${KLEMME30} = [[12225, 120], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:56:12.511" endtime="20190122 07:56:12.561"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:12.597">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:56:12.564" endtime="20190122 07:56:12.598"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:12.634">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:12.601" endtime="20190122 07:56:12.635"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:12.642">${TIMENOW} = 1548143772</msg>
<status status="PASS" starttime="20190122 07:56:12.638" endtime="20190122 07:56:12.643"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:12.648">${TIMENOW} = 1548143772</msg>
<msg level="INFO" timestamp="20190122 07:56:12.649">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:56:12.650">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:12.505" endtime="20190122 07:56:12.651"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:12.659" endtime="20190122 07:56:12.898"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:12.900">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190122 07:56:12.654" endtime="20190122 07:56:12.901"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:12.904" endtime="20190122 07:56:12.926"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:12.934">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:12.952">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:12.929" endtime="20190122 07:56:12.953"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:12.996">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:12.991" endtime="20190122 07:56:13.020"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:13.037">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:13.025" endtime="20190122 07:56:13.038"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:12.972" endtime="20190122 07:56:13.041"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:13.070">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:12.956" endtime="20190122 07:56:13.071"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:13.092">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:13.077" endtime="20190122 07:56:13.093"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:13.095" endtime="20190122 07:56:13.111"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:14.137">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:13.133" endtime="20190122 07:56:14.140"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:12.503" endtime="20190122 07:56:14.141"></status>
</kw>
<kw type="foritem" name="${i} = 53">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:14.201">${KLEMME30} = [[12225, 120], [12300, 127]]</msg>
<status status="PASS" starttime="20190122 07:56:14.153" endtime="20190122 07:56:14.202"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:14.240">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:56:14.206" endtime="20190122 07:56:14.241"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:14.277">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190122 07:56:14.243" endtime="20190122 07:56:14.277"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:14.285">${TIMENOW} = 1548143774</msg>
<status status="PASS" starttime="20190122 07:56:14.280" endtime="20190122 07:56:14.286"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:14.290">${TIMENOW} = 1548143774</msg>
<msg level="INFO" timestamp="20190122 07:56:14.292">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:56:14.293">${CURR_KL30} = 127</msg>
<status status="PASS" starttime="20190122 07:56:14.146" endtime="20190122 07:56:14.294"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:14.302" endtime="20190122 07:56:14.531"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:14.533">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190122 07:56:14.297" endtime="20190122 07:56:14.534"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:14.537" endtime="20190122 07:56:14.543"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:14.550">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:14.552">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:14.546" endtime="20190122 07:56:14.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:14.577">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:14.572" endtime="20190122 07:56:14.578"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:14.586">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:14.581" endtime="20190122 07:56:14.587"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:14.563" endtime="20190122 07:56:14.590"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:14.592">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:14.556" endtime="20190122 07:56:14.592"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:14.602">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:14.595" endtime="20190122 07:56:14.603"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:14.606" endtime="20190122 07:56:14.613"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:15.619">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:14.615" endtime="20190122 07:56:15.621"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:14.142" endtime="20190122 07:56:15.622"></status>
</kw>
<kw type="foritem" name="${i} = 54">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:15.685">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:15.632" endtime="20190122 07:56:15.686"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:15.723">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:15.688" endtime="20190122 07:56:15.723"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:15.761">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:15.726" endtime="20190122 07:56:15.762"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:15.770">${TIMENOW} = 1548143775</msg>
<status status="PASS" starttime="20190122 07:56:15.765" endtime="20190122 07:56:15.771"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:15.775">${TIMENOW} = 1548143775</msg>
<msg level="INFO" timestamp="20190122 07:56:15.777">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:15.778">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:15.626" endtime="20190122 07:56:15.778"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:15.787" endtime="20190122 07:56:16.014"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:16.016">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190122 07:56:15.782" endtime="20190122 07:56:16.018"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:16.021" endtime="20190122 07:56:16.027"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:16.034">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:16.036">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:16.030" endtime="20190122 07:56:16.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:16.066">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:16.061" endtime="20190122 07:56:16.067"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:16.075">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:16.070" endtime="20190122 07:56:16.076"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:16.048" endtime="20190122 07:56:16.079"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:16.080">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:16.041" endtime="20190122 07:56:16.081"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:16.091">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:16.084" endtime="20190122 07:56:16.092"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:16.095" endtime="20190122 07:56:16.101"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:17.108">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:16.104" endtime="20190122 07:56:17.110"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:15.624" endtime="20190122 07:56:17.111"></status>
</kw>
<kw type="foritem" name="${i} = 55">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:17.169">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:17.121" endtime="20190122 07:56:17.170"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:17.206">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:56:17.173" endtime="20190122 07:56:17.207"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:17.244">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:17.210" endtime="20190122 07:56:17.245"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:17.252">${TIMENOW} = 1548143777</msg>
<status status="PASS" starttime="20190122 07:56:17.247" endtime="20190122 07:56:17.253"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:17.258">${TIMENOW} = 1548143777</msg>
<msg level="INFO" timestamp="20190122 07:56:17.259">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:56:17.260">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:17.114" endtime="20190122 07:56:17.260"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:17.269" endtime="20190122 07:56:17.494"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:17.495">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190122 07:56:17.263" endtime="20190122 07:56:17.500"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:17.503" endtime="20190122 07:56:17.509"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:17.516">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:17.518">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:17.511" endtime="20190122 07:56:17.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:17.541">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:17.537" endtime="20190122 07:56:17.542"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:17.550">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:17.545" endtime="20190122 07:56:17.551"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:17.528" endtime="20190122 07:56:17.554"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:17.556">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:17.521" endtime="20190122 07:56:17.557"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:17.567">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:17.560" endtime="20190122 07:56:17.567"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:17.570" endtime="20190122 07:56:17.576"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:18.583">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:17.579" endtime="20190122 07:56:18.586"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:17.112" endtime="20190122 07:56:18.587"></status>
</kw>
<kw type="foritem" name="${i} = 56">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:18.645">${KLEMME30} = [[12225, 122], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:56:18.597" endtime="20190122 07:56:18.646"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:18.681">${CURR_VCARBAT} = 122</msg>
<status status="PASS" starttime="20190122 07:56:18.649" endtime="20190122 07:56:18.682"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:18.718">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:18.685" endtime="20190122 07:56:18.719"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:18.726">${TIMENOW} = 1548143778</msg>
<status status="PASS" starttime="20190122 07:56:18.722" endtime="20190122 07:56:18.727"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:18.732">${TIMENOW} = 1548143778</msg>
<msg level="INFO" timestamp="20190122 07:56:18.733">${CURR_VCARBAT} = 122</msg>
<msg level="INFO" timestamp="20190122 07:56:18.734">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:18.590" endtime="20190122 07:56:18.735"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:18.743" endtime="20190122 07:56:18.966"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:18.968">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190122 07:56:18.738" endtime="20190122 07:56:18.969"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:18.972" endtime="20190122 07:56:18.978"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:18.985">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:18.987">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:18.981" endtime="20190122 07:56:18.988"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:19.015">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:19.010" endtime="20190122 07:56:19.016"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:19.025">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:19.019" endtime="20190122 07:56:19.026"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:18.997" endtime="20190122 07:56:19.029"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:19.031">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:18.991" endtime="20190122 07:56:19.031"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:19.041">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:19.034" endtime="20190122 07:56:19.042"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:19.045" endtime="20190122 07:56:19.051"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:20.057">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:19.054" endtime="20190122 07:56:20.059"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:18.588" endtime="20190122 07:56:20.060"></status>
</kw>
<kw type="foritem" name="${i} = 57">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:20.119">${KLEMME30} = [[12225, 123], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:20.070" endtime="20190122 07:56:20.120"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:20.156">${CURR_VCARBAT} = 123</msg>
<status status="PASS" starttime="20190122 07:56:20.123" endtime="20190122 07:56:20.157"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:20.193">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:20.160" endtime="20190122 07:56:20.194"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:20.202">${TIMENOW} = 1548143780</msg>
<status status="PASS" starttime="20190122 07:56:20.197" endtime="20190122 07:56:20.202"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:20.207">${TIMENOW} = 1548143780</msg>
<msg level="INFO" timestamp="20190122 07:56:20.209">${CURR_VCARBAT} = 123</msg>
<msg level="INFO" timestamp="20190122 07:56:20.210">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:20.064" endtime="20190122 07:56:20.211"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:20.219" endtime="20190122 07:56:20.442"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:20.447">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190122 07:56:20.214" endtime="20190122 07:56:20.448"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:20.450" endtime="20190122 07:56:20.456"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:20.463">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:20.465">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:20.459" endtime="20190122 07:56:20.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:20.489">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:20.484" endtime="20190122 07:56:20.490"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:20.498">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:20.492" endtime="20190122 07:56:20.498"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:20.475" endtime="20190122 07:56:20.502"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:20.503">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:20.469" endtime="20190122 07:56:20.504"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:20.514">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:20.507" endtime="20190122 07:56:20.515"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:20.518" endtime="20190122 07:56:20.526"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:21.534">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:20.530" endtime="20190122 07:56:21.536"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:20.062" endtime="20190122 07:56:21.537"></status>
</kw>
<kw type="foritem" name="${i} = 58">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:21.595">${KLEMME30} = [[12225, 123], [12300, 130]]</msg>
<status status="PASS" starttime="20190122 07:56:21.547" endtime="20190122 07:56:21.596"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:21.633">${CURR_VCARBAT} = 123</msg>
<status status="PASS" starttime="20190122 07:56:21.600" endtime="20190122 07:56:21.634"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:21.673">${CURR_KL30} = 130</msg>
<status status="PASS" starttime="20190122 07:56:21.637" endtime="20190122 07:56:21.674"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:21.681">${TIMENOW} = 1548143781</msg>
<status status="PASS" starttime="20190122 07:56:21.677" endtime="20190122 07:56:21.682"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:21.687">${TIMENOW} = 1548143781</msg>
<msg level="INFO" timestamp="20190122 07:56:21.688">${CURR_VCARBAT} = 123</msg>
<msg level="INFO" timestamp="20190122 07:56:21.689">${CURR_KL30} = 130</msg>
<status status="PASS" starttime="20190122 07:56:21.541" endtime="20190122 07:56:21.690"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:21.698" endtime="20190122 07:56:21.919"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:21.922">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190122 07:56:21.693" endtime="20190122 07:56:21.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:21.925" endtime="20190122 07:56:21.931"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:21.938">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:21.940">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:21.934" endtime="20190122 07:56:21.941"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:21.967">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:21.963" endtime="20190122 07:56:21.968"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:21.977">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:21.971" endtime="20190122 07:56:21.977"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:21.950" endtime="20190122 07:56:21.981"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:21.982">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:21.944" endtime="20190122 07:56:21.983"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:21.993">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:21.986" endtime="20190122 07:56:21.993"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:21.996" endtime="20190122 07:56:22.003"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:23.009">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:22.006" endtime="20190122 07:56:23.012"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:21.538" endtime="20190122 07:56:23.012"></status>
</kw>
<kw type="foritem" name="${i} = 59">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:23.091">${KLEMME30} = [[12225, 121], [12300, 135]]</msg>
<status status="PASS" starttime="20190122 07:56:23.022" endtime="20190122 07:56:23.092"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:23.129">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:23.095" endtime="20190122 07:56:23.130"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:23.165">${CURR_KL30} = 135</msg>
<status status="PASS" starttime="20190122 07:56:23.132" endtime="20190122 07:56:23.166"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:23.173">${TIMENOW} = 1548143783</msg>
<status status="PASS" starttime="20190122 07:56:23.169" endtime="20190122 07:56:23.174"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:23.179">${TIMENOW} = 1548143783</msg>
<msg level="INFO" timestamp="20190122 07:56:23.180">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:23.181">${CURR_KL30} = 135</msg>
<status status="PASS" starttime="20190122 07:56:23.016" endtime="20190122 07:56:23.182"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:23.190" endtime="20190122 07:56:23.386"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:23.390">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190122 07:56:23.185" endtime="20190122 07:56:23.391"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:23.394" endtime="20190122 07:56:23.399"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:23.407">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:23.414">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:23.402" endtime="20190122 07:56:23.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:23.460">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:23.455" endtime="20190122 07:56:23.461"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:23.512">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:23.494" endtime="20190122 07:56:23.530"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:23.434" endtime="20190122 07:56:23.535"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:23.537">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:23.427" endtime="20190122 07:56:23.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:23.598">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:23.573" endtime="20190122 07:56:23.599"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:23.602" endtime="20190122 07:56:23.615"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:24.622">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:23.618" endtime="20190122 07:56:24.624"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:23.014" endtime="20190122 07:56:24.625"></status>
</kw>
<kw type="foritem" name="${i} = 60">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:24.688">${KLEMME30} = [[12225, 122], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:56:24.635" endtime="20190122 07:56:24.689"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:24.737">${CURR_VCARBAT} = 122</msg>
<status status="PASS" starttime="20190122 07:56:24.691" endtime="20190122 07:56:24.738"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:24.774">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:24.741" endtime="20190122 07:56:24.775"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:24.782">${TIMENOW} = 1548143784</msg>
<status status="PASS" starttime="20190122 07:56:24.778" endtime="20190122 07:56:24.783"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:24.789">${TIMENOW} = 1548143784</msg>
<msg level="INFO" timestamp="20190122 07:56:24.790">${CURR_VCARBAT} = 122</msg>
<msg level="INFO" timestamp="20190122 07:56:24.791">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:24.628" endtime="20190122 07:56:24.792"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:24.801" endtime="20190122 07:56:25.027"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:25.030">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190122 07:56:24.795" endtime="20190122 07:56:25.031"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:25.034" endtime="20190122 07:56:25.041"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:25.048">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:25.050">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:25.044" endtime="20190122 07:56:25.051"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:25.078">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:25.073" endtime="20190122 07:56:25.079"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:25.089">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:25.082" endtime="20190122 07:56:25.090"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:25.060" endtime="20190122 07:56:25.093"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:25.095">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:25.054" endtime="20190122 07:56:25.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:25.105">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:25.098" endtime="20190122 07:56:25.106"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:25.109" endtime="20190122 07:56:25.115"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:26.122">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:25.118" endtime="20190122 07:56:26.124"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:24.626" endtime="20190122 07:56:26.125"></status>
</kw>
<kw type="foritem" name="${i} = 61">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:26.184">${KLEMME30} = [[12225, 121], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:56:26.135" endtime="20190122 07:56:26.185"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:26.222">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:26.188" endtime="20190122 07:56:26.222"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:26.261">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:26.225" endtime="20190122 07:56:26.261"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:26.269">${TIMENOW} = 1548143786</msg>
<status status="PASS" starttime="20190122 07:56:26.264" endtime="20190122 07:56:26.270"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:26.274">${TIMENOW} = 1548143786</msg>
<msg level="INFO" timestamp="20190122 07:56:26.276">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:26.277">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:26.128" endtime="20190122 07:56:26.278"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:26.287" endtime="20190122 07:56:26.513"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:26.515">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190122 07:56:26.281" endtime="20190122 07:56:26.515"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:26.519" endtime="20190122 07:56:26.525"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:26.532">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:26.534">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:26.528" endtime="20190122 07:56:26.535"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:26.559">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:26.554" endtime="20190122 07:56:26.560"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:26.569">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:26.563" endtime="20190122 07:56:26.570"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:26.545" endtime="20190122 07:56:26.573"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:26.575">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:26.538" endtime="20190122 07:56:26.575"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:26.586">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:26.578" endtime="20190122 07:56:26.586"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:26.589" endtime="20190122 07:56:26.595"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:27.602">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:26.598" endtime="20190122 07:56:27.604"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:26.126" endtime="20190122 07:56:27.605"></status>
</kw>
<kw type="foritem" name="${i} = 62">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:27.665">${KLEMME30} = [[12225, 123], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:27.615" endtime="20190122 07:56:27.666"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:27.702">${CURR_VCARBAT} = 123</msg>
<status status="PASS" starttime="20190122 07:56:27.669" endtime="20190122 07:56:27.703"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:27.739">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:27.706" endtime="20190122 07:56:27.740"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:27.747">${TIMENOW} = 1548143787</msg>
<status status="PASS" starttime="20190122 07:56:27.743" endtime="20190122 07:56:27.748"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:27.753">${TIMENOW} = 1548143787</msg>
<msg level="INFO" timestamp="20190122 07:56:27.754">${CURR_VCARBAT} = 123</msg>
<msg level="INFO" timestamp="20190122 07:56:27.755">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:27.609" endtime="20190122 07:56:27.756"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:27.764" endtime="20190122 07:56:27.985"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:27.987">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 42 2A CF')</msg>
<status status="PASS" starttime="20190122 07:56:27.759" endtime="20190122 07:56:27.988"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:27.991" endtime="20190122 07:56:27.997"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:28.004">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:28.006">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:28.000" endtime="20190122 07:56:28.007"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:28.034">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '42', '2A', "CF')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:28.029" endtime="20190122 07:56:28.035"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:28.043">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:28.038" endtime="20190122 07:56:28.044"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:28.017" endtime="20190122 07:56:28.047"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:28.048">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:28.010" endtime="20190122 07:56:28.049"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:28.059">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:28.052" endtime="20190122 07:56:28.060"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:28.063" endtime="20190122 07:56:28.069"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:29.076">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:28.072" endtime="20190122 07:56:29.078"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:27.606" endtime="20190122 07:56:29.078"></status>
</kw>
<kw type="foritem" name="${i} = 63">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:29.138">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:29.089" endtime="20190122 07:56:29.139"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:29.175">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:29.142" endtime="20190122 07:56:29.175"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:29.212">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:29.179" endtime="20190122 07:56:29.213"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:29.220">${TIMENOW} = 1548143789</msg>
<status status="PASS" starttime="20190122 07:56:29.215" endtime="20190122 07:56:29.221"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:29.226">${TIMENOW} = 1548143789</msg>
<msg level="INFO" timestamp="20190122 07:56:29.227">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:29.228">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:29.082" endtime="20190122 07:56:29.228"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:29.238" endtime="20190122 07:56:29.465"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:29.467">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 43 2A CE')</msg>
<status status="PASS" starttime="20190122 07:56:29.232" endtime="20190122 07:56:29.468"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:29.472" endtime="20190122 07:56:29.478"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:29.485">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:29.487">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:29.481" endtime="20190122 07:56:29.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:29.511">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '43', '2A', "CE')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:29.506" endtime="20190122 07:56:29.512"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:29.520">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:29.515" endtime="20190122 07:56:29.521"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:29.497" endtime="20190122 07:56:29.524"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:29.526">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:29.491" endtime="20190122 07:56:29.526"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:29.536">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:29.529" endtime="20190122 07:56:29.537"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:29.540" endtime="20190122 07:56:29.546"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:30.553">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:29.549" endtime="20190122 07:56:30.555"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:29.080" endtime="20190122 07:56:30.556"></status>
</kw>
<kw type="foritem" name="${i} = 64">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:30.616">${KLEMME30} = [[12225, 121], [12300, 129]]</msg>
<status status="PASS" starttime="20190122 07:56:30.566" endtime="20190122 07:56:30.617"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:30.653">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:30.620" endtime="20190122 07:56:30.654"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:30.689">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:30.657" endtime="20190122 07:56:30.690"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:30.697">${TIMENOW} = 1548143790</msg>
<status status="PASS" starttime="20190122 07:56:30.693" endtime="20190122 07:56:30.698"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:30.703">${TIMENOW} = 1548143790</msg>
<msg level="INFO" timestamp="20190122 07:56:30.705">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:30.706">${CURR_KL30} = 129</msg>
<status status="PASS" starttime="20190122 07:56:30.559" endtime="20190122 07:56:30.706"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:30.715" endtime="20190122 07:56:30.937"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:30.939">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 44 2A C9')</msg>
<status status="PASS" starttime="20190122 07:56:30.709" endtime="20190122 07:56:30.939"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:30.942" endtime="20190122 07:56:30.948"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:30.955">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:30.958">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:30.951" endtime="20190122 07:56:30.958"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:30.986">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '44', '2A', "C9')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:30.980" endtime="20190122 07:56:30.986"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:30.996">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:30.990" endtime="20190122 07:56:30.996"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:30.968" endtime="20190122 07:56:30.999"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:31.001">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:30.962" endtime="20190122 07:56:31.002"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:31.012">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:31.005" endtime="20190122 07:56:31.013"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:31.016" endtime="20190122 07:56:31.022"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:32.028">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:31.025" endtime="20190122 07:56:32.031"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:30.557" endtime="20190122 07:56:32.031"></status>
</kw>
<kw type="foritem" name="${i} = 65">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:32.090">${KLEMME30} = [[12225, 121], [12300, 140]]</msg>
<status status="PASS" starttime="20190122 07:56:32.041" endtime="20190122 07:56:32.091"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:32.127">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:32.094" endtime="20190122 07:56:32.128"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:32.164">${CURR_KL30} = 140</msg>
<status status="PASS" starttime="20190122 07:56:32.130" endtime="20190122 07:56:32.165"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:32.172">${TIMENOW} = 1548143792</msg>
<status status="PASS" starttime="20190122 07:56:32.167" endtime="20190122 07:56:32.173"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:32.178">${TIMENOW} = 1548143792</msg>
<msg level="INFO" timestamp="20190122 07:56:32.179">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:32.180">${CURR_KL30} = 140</msg>
<status status="PASS" starttime="20190122 07:56:32.035" endtime="20190122 07:56:32.181"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:32.189" endtime="20190122 07:56:32.412"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:32.414">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 45 2A C8')</msg>
<status status="PASS" starttime="20190122 07:56:32.184" endtime="20190122 07:56:32.415"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:32.418" endtime="20190122 07:56:32.424"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:32.431">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:32.433">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:32.427" endtime="20190122 07:56:32.434"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:32.457">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '45', '2A', "C8')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:32.452" endtime="20190122 07:56:32.458"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:32.466">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:32.461" endtime="20190122 07:56:32.467"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:32.444" endtime="20190122 07:56:32.470"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:32.471">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:32.437" endtime="20190122 07:56:32.472"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:32.482">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:32.475" endtime="20190122 07:56:32.483"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:32.485" endtime="20190122 07:56:32.492"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:33.498">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:32.494" endtime="20190122 07:56:33.501"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:32.033" endtime="20190122 07:56:33.501"></status>
</kw>
<kw type="foritem" name="${i} = 66">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:33.561">${KLEMME30} = [[12225, 122], [12300, 130]]</msg>
<status status="PASS" starttime="20190122 07:56:33.511" endtime="20190122 07:56:33.562"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:33.598">${CURR_VCARBAT} = 122</msg>
<status status="PASS" starttime="20190122 07:56:33.565" endtime="20190122 07:56:33.599"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:33.658">${CURR_KL30} = 130</msg>
<status status="PASS" starttime="20190122 07:56:33.602" endtime="20190122 07:56:33.658"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:33.682">${TIMENOW} = 1548143793</msg>
<status status="PASS" starttime="20190122 07:56:33.677" endtime="20190122 07:56:33.682"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:33.698">${TIMENOW} = 1548143793</msg>
<msg level="INFO" timestamp="20190122 07:56:33.700">${CURR_VCARBAT} = 122</msg>
<msg level="INFO" timestamp="20190122 07:56:33.701">${CURR_KL30} = 130</msg>
<status status="PASS" starttime="20190122 07:56:33.505" endtime="20190122 07:56:33.702"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:33.735" endtime="20190122 07:56:33.999"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:34.002">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 46 2A CB')</msg>
<status status="PASS" starttime="20190122 07:56:33.728" endtime="20190122 07:56:34.003"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:34.006" endtime="20190122 07:56:34.011"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:34.018">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:34.020">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:34.014" endtime="20190122 07:56:34.021"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:34.066">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '46', '2A', "CB')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:34.057" endtime="20190122 07:56:34.067"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:34.084">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:34.078" endtime="20190122 07:56:34.089"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:34.030" endtime="20190122 07:56:34.095"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:34.096">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:34.024" endtime="20190122 07:56:34.097"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:34.107">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:34.100" endtime="20190122 07:56:34.108"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:34.111" endtime="20190122 07:56:34.117"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:35.124">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:34.119" endtime="20190122 07:56:35.126"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:33.503" endtime="20190122 07:56:35.126"></status>
</kw>
<kw type="foritem" name="${i} = 67">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:35.186">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:35.137" endtime="20190122 07:56:35.187"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:35.223">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:56:35.190" endtime="20190122 07:56:35.224"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:35.262">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:35.227" endtime="20190122 07:56:35.263"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:35.270">${TIMENOW} = 1548143795</msg>
<status status="PASS" starttime="20190122 07:56:35.266" endtime="20190122 07:56:35.271"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:35.276">${TIMENOW} = 1548143795</msg>
<msg level="INFO" timestamp="20190122 07:56:35.277">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:56:35.278">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:35.130" endtime="20190122 07:56:35.279"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:35.289" endtime="20190122 07:56:35.544"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:35.546">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 47 2A CA')</msg>
<status status="PASS" starttime="20190122 07:56:35.282" endtime="20190122 07:56:35.547"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:35.562" endtime="20190122 07:56:35.571"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:35.578">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:35.590">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:35.574" endtime="20190122 07:56:35.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:35.619">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '47', '2A', "CA')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:35.614" endtime="20190122 07:56:35.620"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:35.628">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:35.623" endtime="20190122 07:56:35.629"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:35.601" endtime="20190122 07:56:35.632"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:35.634">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:35.594" endtime="20190122 07:56:35.635"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:35.645">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:35.637" endtime="20190122 07:56:35.646"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:35.648" endtime="20190122 07:56:35.655"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:36.661">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:35.657" endtime="20190122 07:56:36.663"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:35.128" endtime="20190122 07:56:36.664"></status>
</kw>
<kw type="foritem" name="${i} = 68">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:36.723">${KLEMME30} = [[12225, 121], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:36.674" endtime="20190122 07:56:36.724"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:36.760">${CURR_VCARBAT} = 121</msg>
<status status="PASS" starttime="20190122 07:56:36.727" endtime="20190122 07:56:36.761"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:36.797">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:36.764" endtime="20190122 07:56:36.798"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:36.805">${TIMENOW} = 1548143796</msg>
<status status="PASS" starttime="20190122 07:56:36.801" endtime="20190122 07:56:36.806"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:36.811">${TIMENOW} = 1548143796</msg>
<msg level="INFO" timestamp="20190122 07:56:36.812">${CURR_VCARBAT} = 121</msg>
<msg level="INFO" timestamp="20190122 07:56:36.813">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:36.668" endtime="20190122 07:56:36.813"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:36.822" endtime="20190122 07:56:37.043"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:37.046">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 40 2A CD')</msg>
<status status="PASS" starttime="20190122 07:56:36.817" endtime="20190122 07:56:37.046"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:37.049" endtime="20190122 07:56:37.055"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:37.062">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:37.064">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:37.058" endtime="20190122 07:56:37.065"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:37.093">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '40', '2A', "CD')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:37.087" endtime="20190122 07:56:37.095"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:37.103">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:37.098" endtime="20190122 07:56:37.104"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:37.074" endtime="20190122 07:56:37.107"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:37.108">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:37.068" endtime="20190122 07:56:37.109"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:37.119">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:37.112" endtime="20190122 07:56:37.120"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:37.122" endtime="20190122 07:56:37.129"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:38.141">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:37.132" endtime="20190122 07:56:38.143"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:36.666" endtime="20190122 07:56:38.143"></status>
</kw>
<kw type="foritem" name="${i} = 69">
<kw name="Measure_Current_kl30">
<assign>
<var>${TIMENOW}</var>
<var>${CURR_VCARBAT}</var>
<var>${CURR_KL30}</var>
</assign>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:38.244">${KLEMME30} = [[12225, 120], [12300, 128]]</msg>
<status status="PASS" starttime="20190122 07:56:38.166" endtime="20190122 07:56:38.245"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:38.310">${CURR_VCARBAT} = 120</msg>
<status status="PASS" starttime="20190122 07:56:38.248" endtime="20190122 07:56:38.311"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:38.390">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:38.325" endtime="20190122 07:56:38.391"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:38.398">${TIMENOW} = 1548143798</msg>
<status status="PASS" starttime="20190122 07:56:38.393" endtime="20190122 07:56:38.399"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:38.413">${TIMENOW} = 1548143798</msg>
<msg level="INFO" timestamp="20190122 07:56:38.414">${CURR_VCARBAT} = 120</msg>
<msg level="INFO" timestamp="20190122 07:56:38.415">${CURR_KL30} = 128</msg>
<status status="PASS" starttime="20190122 07:56:38.147" endtime="20190122 07:56:38.416"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>fbus_send_message</arg>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<assign>
<var>${fbus_resp}</var>
</assign>
<kw name="Fbus Send Message" library="robot_framework_tnt.Client">
<arguments>
<arg>${GET_POWER_STATE_REQ}</arg>
<arg>${ACK_FLAG}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:38.437" endtime="20190122 07:56:38.678"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:38.679">${fbus_resp} = ('PASS', '1E 14 54 8D 00 08 40 0C 22 10 03 00 01 41 2A CC')</msg>
<status status="PASS" starttime="20190122 07:56:38.419" endtime="20190122 07:56:38.680"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:38.683" endtime="20190122 07:56:38.699"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
</arguments>
<assign>
<var>${msg_len}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:38.706">Length is 62</msg>
<msg level="INFO" timestamp="20190122 07:56:38.708">${msg_len} = 62</msg>
<status status="PASS" starttime="20190122 07:56:38.702" endtime="20190122 07:56:38.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${msg_len} &gt; 30</arg>
<arg>GET_VALUE_FROM_POS</arg>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<kw name="GET_VALUE_FROM_POS">
<doc>Request message to set PWM for given digital IO</doc>
<arguments>
<arg>${fbus_resp}[1]</arg>
<arg>${11}</arg>
</arguments>
<kw name="Split String" library="String">
<doc>Splits the ``string`` using ``separator`` as a delimiter string.</doc>
<arguments>
<arg>${RESP}</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:38.732">${list} = ["('PASS',", "'1E", '14', '54', '8D', '00', '08', '40', '0C', '22', '10', '03', '00', '01', '41', '2A', "CC')[1]"]</msg>
<status status="PASS" starttime="20190122 07:56:38.727" endtime="20190122 07:56:38.733"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${list}</arg>
<arg>${POS}</arg>
</arguments>
<assign>
<var>${RES}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:38.741">${RES} = 03</msg>
<status status="PASS" starttime="20190122 07:56:38.736" endtime="20190122 07:56:38.742"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:38.718" endtime="20190122 07:56:38.745"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:38.747">${resp} = 03</msg>
<status status="PASS" starttime="20190122 07:56:38.712" endtime="20190122 07:56:38.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:56:38.758">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:56:38.751" endtime="20190122 07:56:38.758"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>'${resp}' == '${STATE}'</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:38.761" endtime="20190122 07:56:38.767"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>1s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:39.774">Slept 1 second</msg>
<status status="PASS" starttime="20190122 07:56:38.770" endtime="20190122 07:56:39.777"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:38.145" endtime="20190122 07:56:39.777"></status>
</kw>
<status status="PASS" starttime="20190122 07:54:51.598" endtime="20190122 07:56:39.779"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:39.782" endtime="20190122 07:56:39.789"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Status: ${fbus_resp}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:39.791" endtime="20190122 07:56:39.797"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:56:39.801">${STATUS} = False</msg>
<status status="PASS" starttime="20190122 07:54:51.565" endtime="20190122 07:56:39.801"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${STATUS}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 07:56:39.810">'False' should be true.</msg>
<status status="FAIL" starttime="20190122 07:56:39.804" endtime="20190122 07:56:39.811"></status>
</kw>
<status status="FAIL" starttime="20190122 07:54:48.782" endtime="20190122 07:56:39.814"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:39.824" endtime="20190122 07:56:39.871"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:39.875" endtime="20190122 07:56:39.921"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:39.923" endtime="20190122 07:56:39.979"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:40.014" endtime="20190122 07:56:40.079"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:39.818" endtime="20190122 07:56:40.097"></status>
</kw>
<doc>Implements Test Task SKTB-55194 Powermanagement</doc>
<tags>
<tag>Powermanagement test</tag>
</tags>
<status status="FAIL" critical="yes" starttime="20190122 07:54:44.567" endtime="20190122 07:56:40.099">'False' should be true.</status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:56:41.754">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:56:41.804">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:56:40.320" endtime="20190122 07:56:41.849"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:40.221" endtime="20190122 07:56:41.851"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:40.205" endtime="20190122 07:56:41.857"></status>
</kw>
<doc>Chorus Power wake up down test</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="FAIL" starttime="20190122 07:54:41.640" endtime="20190122 07:56:41.858"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-FLASHDOWN.robot" name="SKTB-FLASHDOWN" id="s1-s20">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:42.522">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:56:42.493" endtime="20190122 07:56:42.534"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:42.543">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:56:42.568">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:56:44.908">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:56:42.537" endtime="20190122 07:56:44.910"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:42.487" endtime="20190122 07:56:44.912"></status>
</kw>
<test name="SKTB-FLSHDOWN Chorus SW Flashing" id="s1-s20-t1">
<kw type="setup" name="Test_precondition">
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:44.975" endtime="20190122 07:56:45.100"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:45.104" endtime="20190122 07:56:45.217"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:45.220" endtime="20190122 07:56:45.361"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:47.384">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:56:45.364" endtime="20190122 07:56:47.386"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:47.389" endtime="20190122 07:56:47.433"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${250000}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:47.435" endtime="20190122 07:56:47.481"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>open</arg>
</arguments>
<status status="PASS" starttime="20190122 07:56:47.485" endtime="20190122 07:56:47.531"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:44.969" endtime="20190122 07:56:47.534"></status>
</kw>
<kw name="update_prev">
<doc>Flashing previous version</doc>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${2}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:56:49.547">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:56:47.542" endtime="20190122 07:56:49.549"></status>
</kw>
<kw name="Chorus Flash Release" library="robot_framework_tnt.Client">
<arguments>
<arg>${FD_PATH_PREV}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:58:17.618">${RESULT} = Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:56:49.552" endtime="20190122 07:58:17.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${RESULT}</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:58:17.627">Flashing sucessfully finished.</msg>
<status status="PASS" starttime="20190122 07:58:17.623" endtime="20190122 07:58:17.630"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:58:19.637">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:58:17.632" endtime="20190122 07:58:19.639"></status>
</kw>
<status status="PASS" starttime="20190122 07:56:47.536" endtime="20190122 07:58:19.641"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>baudrate</arg>
<arg>${115200}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:19.652" endtime="20190122 07:58:19.698"></status>
</kw>
<kw name="Set Serial State" library="robot_framework_tnt.Client">
<arguments>
<arg>close</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:19.702" endtime="20190122 07:58:19.747"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:19.750" endtime="20190122 07:58:19.797"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:19.800" endtime="20190122 07:58:19.846"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:19.850" endtime="20190122 07:58:19.896"></status>
</kw>
<status status="PASS" starttime="20190122 07:58:19.645" endtime="20190122 07:58:19.899"></status>
</kw>
<doc>Implements Test Task SKTB-FLASHDOWN</doc>
<tags>
<tag>Flashing</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:56:44.914" endtime="20190122 07:58:19.900"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 07:58:21.454">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 07:58:21.538">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 07:58:19.938" endtime="20190122 07:58:21.539"></status>
</kw>
<status status="PASS" starttime="20190122 07:58:19.915" endtime="20190122 07:58:21.541"></status>
</kw>
<status status="PASS" starttime="20190122 07:58:19.910" endtime="20190122 07:58:21.561"></status>
</kw>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:56:42.081" endtime="20190122 07:58:21.562"></status>
</suite>
<suite source="/usr/share/robot-framework-scripts/robot-framework-chorus/SKTB-50571.robot" name="SKTB-50571" id="s1-s21">
<kw type="setup" name="Setup Actions" library="chorus_resource">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Connecting to tnt-server ${TARGET}...</arg>
<arg>console=yes</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:58:22.299">Connecting to tnt-server localhost...</msg>
<status status="PASS" starttime="20190122 07:58:22.294" endtime="20190122 07:58:22.325"></status>
</kw>
<kw name="Connect To Server" library="robot_framework_tnt.Client">
<arguments>
<arg>${TARGET}</arg>
<arg>session_id=${SESSION}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:58:22.347">Using robot-framework-tnt-client v1.3.1</msg>
<msg level="INFO" timestamp="20190122 07:58:22.349">Connecting to server localhost:5554</msg>
<msg level="INFO" timestamp="20190122 07:58:24.660">Reloaded library robot_framework_tnt.Client with 38 keywords.</msg>
<status status="PASS" starttime="20190122 07:58:22.328" endtime="20190122 07:58:24.662"></status>
</kw>
<status status="PASS" starttime="20190122 07:58:22.268" endtime="20190122 07:58:24.664"></status>
</kw>
<test name="SKTB-50571 OTA update" id="s1-s21-t1">
<kw type="setup" name="Test_precondition">
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Test_precondition"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:58:24.750">"Test_precondition"</msg>
<status status="PASS" starttime="20190122 07:58:24.746" endtime="20190122 07:58:24.759"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:24.761" endtime="20190122 07:58:24.858"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:24.865" endtime="20190122 07:58:24.977"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:24.980" endtime="20190122 07:58:25.130"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>2s</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:58:27.141">Slept 2 seconds</msg>
<status status="PASS" starttime="20190122 07:58:25.133" endtime="20190122 07:58:27.143"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:27.146" endtime="20190122 07:58:27.220"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:27.223" endtime="20190122 07:58:27.296"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait til the device is powered on it takes: ${BOOT_TIME}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:58:27.299" endtime="20190122 07:58:27.318"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${BOOT_TIME}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:59:27.329">Slept 1 minute</msg>
<status status="PASS" starttime="20190122 07:58:27.321" endtime="20190122 07:59:27.331"></status>
</kw>
<kw name="Start Process" library="Process">
<doc>Starts a new process on background.</doc>
<arguments>
<arg>ping ${HOST_IP}</arg>
<arg>shell=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:59:27.372">Starting process:
ping 192.168.1.101</msg>
<status status="PASS" starttime="20190122 07:59:27.334" endtime="20190122 07:59:27.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:59:27.460">"Setup ssh"</msg>
<status status="PASS" starttime="20190122 07:59:27.455" endtime="20190122 07:59:27.471"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw name="Open Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:59:27.489">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status status="PASS" starttime="20190122 07:59:27.482" endtime="20190122 07:59:28.349"></status>
</kw>
<status status="PASS" starttime="20190122 07:59:27.474" endtime="20190122 07:59:28.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh done!"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:59:28.357">"Setup ssh done!"</msg>
<status status="PASS" starttime="20190122 07:59:28.353" endtime="20190122 07:59:28.360"></status>
</kw>
<status status="PASS" starttime="20190122 07:58:24.713" endtime="20190122 07:59:28.362"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Implements Test Task SKTB-50571 OTA chorus update</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:28.366" endtime="20190122 07:59:28.375"></status>
</kw>
<kw name="PREPARE_FILE">
<doc>remove old and copy the new loader, pbl and appl debian package to the dut</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Remove old carif files</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:28.384" endtime="20190122 07:59:28.389"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>rm ${OLU-CARIF}*</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:28.397">Sending command to DUT rm olu-carif*</msg>
<msg level="INFO" timestamp="20190122 07:59:28.458">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:59:28.461">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:59:28.392" endtime="20190122 07:59:28.462"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:28.465" endtime="20190122 07:59:28.475"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>rm -f ${RESULT_APPL_FILE} ${RESULT_PBL_FILE}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:59:28.492">Sending command to DUT rm -f /root/appl50571.txt /root/pbl50571.txt</msg>
<msg level="INFO" timestamp="20190122 07:59:28.587">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:59:28.479" endtime="20190122 07:59:28.589"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Liste all .deb files</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:28.592" endtime="20190122 07:59:28.602"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ls -al | grep ${OLU-CARIF}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:28.612">Sending command to DUT ls -al | grep olu-carif</msg>
<msg level="INFO" timestamp="20190122 07:59:28.695">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:59:28.697">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:59:28.606" endtime="20190122 07:59:28.698"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:28.701" endtime="20190122 07:59:28.711"></status>
</kw>
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${LD_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_LD}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:28.732">Starting process:
find /home/debian/chorus_deb/olu-carif-ld_*.deb</msg>
<msg level="INFO" timestamp="20190122 07:59:28.767">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:59:28.782">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:59:28.786">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:59:28.727" endtime="20190122 07:59:28.787"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:28.797">${stdout_path} = /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<status status="PASS" starttime="20190122 07:59:28.791" endtime="20190122 07:59:28.798"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:28.805">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:59:28.807">${temp} = ['/home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb']</msg>
<status status="PASS" starttime="20190122 07:59:28.801" endtime="20190122 07:59:28.808"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:28.816">${path} = /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<status status="PASS" starttime="20190122 07:59:28.811" endtime="20190122 07:59:28.817"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:28.820" endtime="20190122 07:59:28.826"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" html="yes" timestamp="20190122 07:59:28.833">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190122 07:59:28.828" endtime="20190122 07:59:28.835"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:59:28.839">${matched_path_LD} = /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<status status="PASS" starttime="20190122 07:59:28.713" endtime="20190122 07:59:28.840"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum LD Original:</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:28.843" endtime="20190122 07:59:28.847"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_LD}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:28.864">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb</msg>
<msg level="INFO" timestamp="20190122 07:59:28.892">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:59:28.906">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:59:28.909">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:59:28.858" endtime="20190122 07:59:28.910"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:28.919">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:59:28.914" endtime="20190122 07:59:28.920"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:28.923" endtime="20190122 07:59:28.930"></status>
</kw>
<status status="PASS" starttime="20190122 07:59:28.850" endtime="20190122 07:59:28.933"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy LD to DUT</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:28.936" endtime="20190122 07:59:28.942"></status>
</kw>
<kw name="Upload File To Dut" library="lairdcvs.testlibrary.TestLibrary">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_LD}</arg>
<arg>/root</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:59:28.951">Uploading file /home/debian/chorus_deb/olu-carif-ld_9.9.3_i386.deb to /root</msg>
<status status="PASS" starttime="20190122 07:59:28.945" endtime="20190122 07:59:29.043"></status>
</kw>
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${PBL_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_PBL}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.068">Starting process:
find /home/debian/chorus_deb/olu-carif-pbl_*.deb</msg>
<msg level="INFO" timestamp="20190122 07:59:29.098">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:59:29.112">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:59:29.115">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:59:29.062" endtime="20190122 07:59:29.116"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.126">${stdout_path} = /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<status status="PASS" starttime="20190122 07:59:29.120" endtime="20190122 07:59:29.127"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.134">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:59:29.136">${temp} = ['/home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb']</msg>
<status status="PASS" starttime="20190122 07:59:29.130" endtime="20190122 07:59:29.137"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.145">${path} = /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<status status="PASS" starttime="20190122 07:59:29.140" endtime="20190122 07:59:29.146"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:29.149" endtime="20190122 07:59:29.156"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" html="yes" timestamp="20190122 07:59:29.164">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190122 07:59:29.159" endtime="20190122 07:59:29.166"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:59:29.170">${matched_path_PBL} = /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<status status="PASS" starttime="20190122 07:59:29.047" endtime="20190122 07:59:29.171"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum PBL Original:</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:29.174" endtime="20190122 07:59:29.179"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_PBL}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.201">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb</msg>
<msg level="INFO" timestamp="20190122 07:59:29.229">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:59:29.241">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:59:29.244">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:59:29.195" endtime="20190122 07:59:29.245"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.254">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:59:29.249" endtime="20190122 07:59:29.255"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:29.258" endtime="20190122 07:59:29.277"></status>
</kw>
<status status="PASS" starttime="20190122 07:59:29.181" endtime="20190122 07:59:29.279"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy PBL to DUT</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:29.282" endtime="20190122 07:59:29.303"></status>
</kw>
<kw name="Upload File To Dut" library="lairdcvs.testlibrary.TestLibrary">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_PBL}</arg>
<arg>/root</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:59:29.319">Uploading file /home/debian/chorus_deb/olu-carif-pbl_9.9.3_i386.deb to /root</msg>
<status status="PASS" starttime="20190122 07:59:29.306" endtime="20190122 07:59:29.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Copy APPL to DUT</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:29.410" endtime="20190122 07:59:29.420"></status>
</kw>
<kw name="find_file" library="chorus_resource">
<doc>Find file the path can be given as an exact path or as a glob pattern</doc>
<arguments>
<arg>${APPL_PATH}</arg>
</arguments>
<assign>
<var>${matched_path_APPL}</var>
</assign>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>find ${FILEPATH}</arg>
<arg>shell=True</arg>
<arg>alias=FINDFILE</arg>
</arguments>
<assign>
<var>${PROCCESS_ID}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.443">Starting process:
find /home/debian/chorus_deb/olu-carif-appl_*.deb</msg>
<msg level="INFO" timestamp="20190122 07:59:29.473">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:59:29.488">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:59:29.491">${PROCCESS_ID} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:59:29.437" endtime="20190122 07:59:29.492"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>FINDFILE</arg>
<arg>stdout=true</arg>
</arguments>
<assign>
<var>${stdout_path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.501">${stdout_path} = /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<status status="PASS" starttime="20190122 07:59:29.496" endtime="20190122 07:59:29.502"></status>
</kw>
<kw name="Split To Lines" library="String">
<doc>Splits the given string to lines.</doc>
<arguments>
<arg>${stdout_path}</arg>
</arguments>
<assign>
<var>${temp}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.511">1 lines returned</msg>
<msg level="INFO" timestamp="20190122 07:59:29.515">${temp} = ['/home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb']</msg>
<status status="PASS" starttime="20190122 07:59:29.506" endtime="20190122 07:59:29.516"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${temp}</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${path}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.535">${path} = /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<status status="PASS" starttime="20190122 07:59:29.519" endtime="20190122 07:59:29.536"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:29.550" endtime="20190122 07:59:29.564"></status>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<arguments>
<arg>${path}</arg>
</arguments>
<msg level="INFO" html="yes" timestamp="20190122 07:59:29.582">File '&lt;a href="file:///home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb"&gt;/home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20190122 07:59:29.567" endtime="20190122 07:59:29.584"></status>
</kw>
<msg level="INFO" timestamp="20190122 07:59:29.588">${matched_path_APPL} = /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<status status="PASS" starttime="20190122 07:59:29.423" endtime="20190122 07:59:29.589"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>MD5sum APPL Original:</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:29.600" endtime="20190122 07:59:29.613"></status>
</kw>
<kw name="get_md5sum">
<doc>Get md5sum</doc>
<arguments>
<arg>${matched_path_APPL}</arg>
</arguments>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>md5sum ${path}</arg>
<arg>shell=True</arg>
<arg>alias=CHECKSUM</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.650">Starting process:
md5sum /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb</msg>
<msg level="INFO" timestamp="20190122 07:59:29.712">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 07:59:29.743">Process completed.</msg>
<msg level="INFO" timestamp="20190122 07:59:29.746">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:59:29.635" endtime="20190122 07:59:29.747"></status>
</kw>
<kw name="Get Process Result" library="Process">
<doc>Returns the specified `result object` or some of its attributes.</doc>
<arguments>
<arg>CHECKSUM</arg>
</arguments>
<assign>
<var>${md5checksum}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.758">${md5checksum} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 07:59:29.751" endtime="20190122 07:59:29.759"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${md5checksum.stdout}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:29.762" endtime="20190122 07:59:29.769"></status>
</kw>
<status status="PASS" starttime="20190122 07:59:29.615" endtime="20190122 07:59:29.771"></status>
</kw>
<kw name="Upload File To Dut" library="lairdcvs.testlibrary.TestLibrary">
<doc>Copy a local file (localpath) to the SFTP server as remotepath.</doc>
<arguments>
<arg>${matched_path_APPL}</arg>
<arg>/root</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:59:29.780">Uploading file /home/debian/chorus_deb/olu-carif-appl_9.9.3_i386.deb to /root</msg>
<status status="PASS" starttime="20190122 07:59:29.775" endtime="20190122 07:59:29.908"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Starte sync</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:29.911" endtime="20190122 07:59:29.922"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>sync</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:29.929">Sending command to DUT sync</msg>
<msg level="INFO" timestamp="20190122 07:59:30.527">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 07:59:30.530">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 07:59:29.925" endtime="20190122 07:59:30.531"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:30.534" endtime="20190122 07:59:30.546"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nMD5SUM for OLU-CARIF deb packages</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:30.549" endtime="20190122 07:59:30.554"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>md5sum ${LD_NAME}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:30.564">Sending command to DUT md5sum olu-carif-ld_*.deb</msg>
<msg level="INFO" timestamp="20190122 07:59:30.634">Returning data (78d5b2b8e3db02fa0b883e7c72486760  olu-carif-ld_9.9.3_i386.deb, )</msg>
<msg level="INFO" timestamp="20190122 07:59:30.636">${ret} = ('78d5b2b8e3db02fa0b883e7c72486760  olu-carif-ld_9.9.3_i386.deb', '')</msg>
<status status="PASS" starttime="20190122 07:59:30.557" endtime="20190122 07:59:30.637"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:30.640" endtime="20190122 07:59:30.652"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Show all files</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:30.655" endtime="20190122 07:59:30.660"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>ls -al | grep ${OLU-CARIF}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 07:59:30.667">Sending command to DUT ls -al | grep olu-carif</msg>
<msg level="INFO" timestamp="20190122 07:59:30.749">Returning data (-rw-r--r--    1 root     root        187636 Jan 22 07:56 olu-carif-appl_9.9.3_i386.deb -rw-r--r--    1 root     root         47808 Jan 22 07:56 olu-carif-ld_9.9.3_i386.deb -rw-r--r--    1 root     root         47982 Jan 22 07:56 olu-carif-pbl_9.9.3_i386.deb, )</msg>
<msg level="INFO" timestamp="20190122 07:59:30.752">${ret} = ('-rw-r--r--    1 root     root        187636 Jan 22 07:56 olu-carif-appl_9.9.3_i386.deb -rw-r--r--    1 root     root         47808 Jan 22 07:56 olu-carif-ld_9.9.3_i386.deb -rw-r--r--    1 root     r...</msg>
<status status="PASS" starttime="20190122 07:59:30.663" endtime="20190122 07:59:30.753"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:30.756" endtime="20190122 07:59:30.768"></status>
</kw>
<status status="PASS" starttime="20190122 07:59:28.377" endtime="20190122 07:59:30.770"></status>
</kw>
<kw name="UPDATE_CHORUS">
<doc>Update chorus</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Update chorus"</arg>
</arguments>
<status status="PASS" starttime="20190122 07:59:30.779" endtime="20190122 07:59:30.785"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>run ssh command</arg>
<arg>${ENV_PATHVAR} nohup ${DPKG_INSTALL} ${LD_NAME} ${PBL_NAME} ${APPL_NAME} &gt; ${RESULT_APPL_FILE}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>${ENV_PATHVAR} nohup ${DPKG_INSTALL} ${LD_NAME} ${PBL_NAME} ${APPL_NAME} &gt; ${RESULT_APPL_FILE}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 07:59:30.803">Sending command to DUT PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin nohup dpkg -i olu-carif-ld_*.deb olu-carif-pbl_*.deb olu-carif-appl_*.deb &gt; /root/appl50571.txt</msg>
<msg level="INFO" timestamp="20190122 08:00:18.311">Returning data (, )</msg>
<status status="PASS" starttime="20190122 07:59:30.794" endtime="20190122 08:00:18.313"></status>
</kw>
<msg level="INFO" timestamp="20190122 08:00:18.315">${ret} = ('PASS', ('', ''))</msg>
<status status="PASS" starttime="20190122 07:59:30.789" endtime="20190122 08:00:18.315"></status>
</kw>
<kw name="Close Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Disconnect the ssh connection</doc>
<msg level="INFO" timestamp="20190122 08:00:18.328">Closing SSH connection to 192.168.1.101</msg>
<status status="PASS" starttime="20190122 08:00:18.319" endtime="20190122 08:00:18.331"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n"Wait until the update success, it takes: ${UPDATE_TIME}"</arg>
</arguments>
<status status="PASS" starttime="20190122 08:00:18.334" endtime="20190122 08:00:18.340"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${UPDATE_TIME}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 08:01:08.348">Slept 50 seconds</msg>
<status status="PASS" starttime="20190122 08:00:18.343" endtime="20190122 08:01:08.350"></status>
</kw>
<kw name="check_stdoutfile">
<doc>Check stdout file</doc>
<arguments>
<arg>${RESULT_APPL_FILE}</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Check stdout file: ${result_file}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:08.361" endtime="20190122 08:01:08.366"></status>
</kw>
<kw name="Close Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Disconnect the ssh connection</doc>
<msg level="INFO" timestamp="20190122 08:01:08.376">No SSH connection currently established.</msg>
<status status="PASS" starttime="20190122 08:01:08.369" endtime="20190122 08:01:08.378"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:08.381" endtime="20190122 08:01:08.427"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:08.436" endtime="20190122 08:01:08.487"></status>
</kw>
<kw name="Measure_Current_kl30">
<kw name="Kl 30" library="robot_framework_tnt.Client">
<assign>
<var>${KLEMME30}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:08.635">${KLEMME30} = [[0, 0], [0, 0]]</msg>
<status status="PASS" starttime="20190122 08:01:08.559" endtime="20190122 08:01:08.636"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[0][1])</arg>
</arguments>
<assign>
<var>${CURR_VCARBAT}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:08.827">${CURR_VCARBAT} = 0</msg>
<status status="PASS" starttime="20190122 08:01:08.647" endtime="20190122 08:01:08.841"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>int($KLEMME30[1][1])</arg>
</arguments>
<assign>
<var>${CURR_KL30}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:08.883">${CURR_KL30} = 0</msg>
<status status="PASS" starttime="20190122 08:01:08.844" endtime="20190122 08:01:08.884"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${TIMENOW}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:08.892">${TIMENOW} = 1548144068</msg>
<status status="PASS" starttime="20190122 08:01:08.887" endtime="20190122 08:01:08.893"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nTime: ${TIMENOW}, Vcarbat current: ${CURR_VCARBAT} ma, Kl30 current: ${CURR_KL30} ma.</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:08.895" endtime="20190122 08:01:08.902"></status>
</kw>
<status status="PASS" starttime="20190122 08:01:08.493" endtime="20190122 08:01:08.907"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait 5 seconds</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:08.910" endtime="20190122 08:01:08.914"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5 seconds</arg>
</arguments>
<msg level="INFO" timestamp="20190122 08:01:13.921">Slept 5 seconds</msg>
<status status="PASS" starttime="20190122 08:01:08.917" endtime="20190122 08:01:13.923"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:13.926" endtime="20190122 08:01:13.988"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${1}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:13.991" endtime="20190122 08:01:14.085"></status>
</kw>
<kw name="WAIT_UNTIL_DEVICE_IS_READY">
<doc>Waiting for device to be ready, up to 90 seconds</doc>
<assign>
<var>${status}</var>
</assign>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${secs}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:14.098">${secs} = 1548144074</msg>
<status status="PASS" starttime="20190122 08:01:14.094" endtime="20190122 08:01:14.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Waiting for device to be ready, up to 90 seconds. Timestamp: ${secs}\n</arg>
<arg>console=true</arg>
</arguments>
<msg level="INFO" timestamp="20190122 08:01:14.107">Waiting for device to be ready, up to 90 seconds. Timestamp: 1548144074
</msg>
<status status="PASS" starttime="20190122 08:01:14.102" endtime="20190122 08:01:14.109"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Wait until keyword succeeds</arg>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<assign>
<var>${STATUS}</var>
</assign>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>90</arg>
<arg>120x</arg>
<arg>check_dut_ip_ready</arg>
</arguments>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:14.139">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:14.167">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:14.188">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:14.191">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:14.133" endtime="20190122 08:01:14.193"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:14.206">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:14.196" endtime="20190122 08:01:14.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:14.229">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:14.210" endtime="20190122 08:01:14.239"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:14.125" endtime="20190122 08:01:14.242"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:14.384">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:14.414">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:14.434">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:14.438">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:14.373" endtime="20190122 08:01:14.439"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:14.453">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:14.443" endtime="20190122 08:01:14.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:14.469">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:14.458" endtime="20190122 08:01:14.471"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:14.365" endtime="20190122 08:01:14.474"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:14.612">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:14.641">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:14.686">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:14.689">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:14.605" endtime="20190122 08:01:14.690"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:14.710">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:14.693" endtime="20190122 08:01:14.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:14.722">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:14.714" endtime="20190122 08:01:14.723"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:14.597" endtime="20190122 08:01:14.727"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:14.865">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:14.895">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:14.915">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:14.918">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:14.858" endtime="20190122 08:01:14.920"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:14.935">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:14.926" endtime="20190122 08:01:14.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:14.947">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:14.939" endtime="20190122 08:01:14.949"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:14.850" endtime="20190122 08:01:14.952"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:15.090">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:15.118">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:15.139">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:15.143">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:15.083" endtime="20190122 08:01:15.144"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:15.156">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:15.147" endtime="20190122 08:01:15.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:15.169">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:15.161" endtime="20190122 08:01:15.170"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:15.075" endtime="20190122 08:01:15.173"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:15.341">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:15.410">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:15.443">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:15.446">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:15.330" endtime="20190122 08:01:15.448"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:15.473">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:15.452" endtime="20190122 08:01:15.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:15.497">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:15.489" endtime="20190122 08:01:15.499"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:15.306" endtime="20190122 08:01:15.507"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:15.646">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:15.674">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:15.694">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:15.697">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:15.639" endtime="20190122 08:01:15.698"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:15.711">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:15.702" endtime="20190122 08:01:15.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:15.726">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:15.715" endtime="20190122 08:01:15.727"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:15.631" endtime="20190122 08:01:15.730"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:15.894">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:15.944">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:15.977">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:15.979">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:15.877" endtime="20190122 08:01:15.980"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:15.993">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:15.984" endtime="20190122 08:01:15.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:16.005">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:15.997" endtime="20190122 08:01:16.007"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:15.855" endtime="20190122 08:01:16.010"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:16.148">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:16.176">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:16.197">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:16.199">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:16.141" endtime="20190122 08:01:16.201"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:16.214">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:16.204" endtime="20190122 08:01:16.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:16.225">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:16.217" endtime="20190122 08:01:16.227"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:16.133" endtime="20190122 08:01:16.230"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:16.398">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:16.452">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:16.490">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:16.493">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:16.382" endtime="20190122 08:01:16.494"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:16.534">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:16.514" endtime="20190122 08:01:16.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:16.559">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:16.538" endtime="20190122 08:01:16.560"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:16.358" endtime="20190122 08:01:16.563"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:16.701">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:16.729">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:16.750">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:16.753">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:16.695" endtime="20190122 08:01:16.754"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:16.768">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:16.759" endtime="20190122 08:01:16.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:16.779">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:16.772" endtime="20190122 08:01:16.781"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:16.687" endtime="20190122 08:01:16.784"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:16.939">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:17.026">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:17.054">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:17.057">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:16.921" endtime="20190122 08:01:17.058"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:17.093">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:17.073" endtime="20190122 08:01:17.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:17.113">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:17.097" endtime="20190122 08:01:17.114"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:16.912" endtime="20190122 08:01:17.117"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:17.255">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:17.283">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:17.304">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:17.307">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:17.248" endtime="20190122 08:01:17.308"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:17.322">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:17.312" endtime="20190122 08:01:17.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:17.334">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:17.325" endtime="20190122 08:01:17.335"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:17.240" endtime="20190122 08:01:17.338"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:17.483">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:17.511">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:17.531">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:17.534">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:17.474" endtime="20190122 08:01:17.535"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:17.549">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:17.540" endtime="20190122 08:01:17.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:17.561">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:17.553" endtime="20190122 08:01:17.562"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:17.461" endtime="20190122 08:01:17.566"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:17.703">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:17.732">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:17.752">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:17.755">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:17.697" endtime="20190122 08:01:17.756"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:17.769">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:17.760" endtime="20190122 08:01:17.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:17.781">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:17.773" endtime="20190122 08:01:17.782"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:17.689" endtime="20190122 08:01:17.785"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:17.924">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:17.953">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:17.973">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:17.976">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:17.917" endtime="20190122 08:01:17.977"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:17.991">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:17.981" endtime="20190122 08:01:17.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:18.003">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:17.995" endtime="20190122 08:01:18.005"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:17.908" endtime="20190122 08:01:18.008"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:18.146">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:18.174">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:18.194">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:18.198">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:18.139" endtime="20190122 08:01:18.199"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:18.212">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:18.202" endtime="20190122 08:01:18.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:18.223">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:18.215" endtime="20190122 08:01:18.225"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:18.131" endtime="20190122 08:01:18.228"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:18.385">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:18.418">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:18.440">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:18.443">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:18.359" endtime="20190122 08:01:18.444"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:18.457">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:18.448" endtime="20190122 08:01:18.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:18.469">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:18.461" endtime="20190122 08:01:18.470"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:18.351" endtime="20190122 08:01:18.473"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:18.612">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:18.641">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:18.662">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:18.665">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:18.605" endtime="20190122 08:01:18.666"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:18.679">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:18.670" endtime="20190122 08:01:18.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:18.690">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:18.682" endtime="20190122 08:01:18.692"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:18.597" endtime="20190122 08:01:18.695"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:18.833">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:18.860">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:18.881">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:18.884">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:18.826" endtime="20190122 08:01:18.885"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:18.898">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:18.889" endtime="20190122 08:01:18.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:18.910">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:18.902" endtime="20190122 08:01:18.912"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:18.818" endtime="20190122 08:01:18.915"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:19.053">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:19.081">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:19.101">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:19.105">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:19.046" endtime="20190122 08:01:19.106"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:19.119">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:19.109" endtime="20190122 08:01:19.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:19.139">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:19.130" endtime="20190122 08:01:19.140"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:19.038" endtime="20190122 08:01:19.143"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:19.281">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:19.315">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:19.336">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:19.339">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:19.274" endtime="20190122 08:01:19.340"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:19.353">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:19.344" endtime="20190122 08:01:19.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:19.365">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:19.357" endtime="20190122 08:01:19.366"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:19.266" endtime="20190122 08:01:19.369"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:19.507">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:19.535">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:19.556">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:19.559">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:19.500" endtime="20190122 08:01:19.560"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:19.573">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:19.564" endtime="20190122 08:01:19.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:19.585">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:19.577" endtime="20190122 08:01:19.587"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:19.492" endtime="20190122 08:01:19.590"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:19.728">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:19.756">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:19.777">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:19.780">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:19.721" endtime="20190122 08:01:19.781"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:19.794">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:19.785" endtime="20190122 08:01:19.795"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:19.806">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:19.798" endtime="20190122 08:01:19.807"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:19.713" endtime="20190122 08:01:19.810"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:19.948">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:19.976">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:19.996">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:19.999">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:19.942" endtime="20190122 08:01:20.001"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:20.014">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:20.005" endtime="20190122 08:01:20.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:20.026">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:20.018" endtime="20190122 08:01:20.028"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:19.934" endtime="20190122 08:01:20.031"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:20.168">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:20.196">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:20.216">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:20.219">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:20.162" endtime="20190122 08:01:20.220"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:20.238">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:20.224" endtime="20190122 08:01:20.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:20.250">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:20.241" endtime="20190122 08:01:20.252"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:20.154" endtime="20190122 08:01:20.255"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:20.393">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:20.420">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:20.441">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:20.444">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:20.386" endtime="20190122 08:01:20.445"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:20.458">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:20.449" endtime="20190122 08:01:20.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:20.470">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:20.462" endtime="20190122 08:01:20.471"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:20.378" endtime="20190122 08:01:20.474"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:20.613">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:20.640">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:20.661">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:20.664">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:20.606" endtime="20190122 08:01:20.665"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:20.678">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:20.669" endtime="20190122 08:01:20.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:20.691">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:20.682" endtime="20190122 08:01:20.693"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:20.597" endtime="20190122 08:01:20.696"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:20.834">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:20.862">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:20.882">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:20.885">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:20.827" endtime="20190122 08:01:20.886"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:20.899">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:20.890" endtime="20190122 08:01:20.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:20.911">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:20.903" endtime="20190122 08:01:20.912"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:20.819" endtime="20190122 08:01:20.915"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:21.055">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:21.083">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:21.103">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:21.106">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:21.048" endtime="20190122 08:01:21.107"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:21.125">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:21.111" endtime="20190122 08:01:21.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:21.136">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:21.128" endtime="20190122 08:01:21.138"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:21.039" endtime="20190122 08:01:21.141"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:21.278">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:21.306">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:21.329">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:21.332">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:21.272" endtime="20190122 08:01:21.333"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:21.346">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:21.337" endtime="20190122 08:01:21.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:21.359">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:21.350" endtime="20190122 08:01:21.361"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:21.264" endtime="20190122 08:01:21.364"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:21.502">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:21.529">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:21.550">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:21.553">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:21.495" endtime="20190122 08:01:21.554"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:21.567">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:21.558" endtime="20190122 08:01:21.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:21.579">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:21.571" endtime="20190122 08:01:21.580"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:21.487" endtime="20190122 08:01:21.584"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:21.721">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:21.749">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:21.770">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:21.773">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:21.715" endtime="20190122 08:01:21.774"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:21.788">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:21.778" endtime="20190122 08:01:21.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:21.799">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:21.791" endtime="20190122 08:01:21.801"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:21.707" endtime="20190122 08:01:21.804"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:21.942">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:21.970">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:22.015">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:22.023">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:21.935" endtime="20190122 08:01:22.024"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:22.060">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:22.038" endtime="20190122 08:01:22.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:22.076">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:22.063" endtime="20190122 08:01:22.077"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:21.927" endtime="20190122 08:01:22.081"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:22.218">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:22.246">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:22.267">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:22.270">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:22.212" endtime="20190122 08:01:22.271"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:22.285">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:22.275" endtime="20190122 08:01:22.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:22.296">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:22.288" endtime="20190122 08:01:22.298"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:22.204" endtime="20190122 08:01:22.301"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:22.439">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:22.467">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:22.487">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:22.490">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:22.432" endtime="20190122 08:01:22.491"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:22.505">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:22.495" endtime="20190122 08:01:22.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:22.516">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:22.508" endtime="20190122 08:01:22.518"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:22.424" endtime="20190122 08:01:22.522"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:22.660">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:22.688">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:22.708">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:22.711">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:22.653" endtime="20190122 08:01:22.712"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:22.725">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:22.716" endtime="20190122 08:01:22.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:22.737">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:22.729" endtime="20190122 08:01:22.738"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:22.645" endtime="20190122 08:01:22.742"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:22.886">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:22.914">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:22.934">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:22.938">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:22.873" endtime="20190122 08:01:22.939"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:22.952">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:22.943" endtime="20190122 08:01:22.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:22.964">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:22.955" endtime="20190122 08:01:22.965"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:22.865" endtime="20190122 08:01:22.969"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:23.126">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:23.154">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:23.174">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:23.177">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:23.104" endtime="20190122 08:01:23.178"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:23.191">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:23.182" endtime="20190122 08:01:23.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:23.203">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:23.195" endtime="20190122 08:01:23.204"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:23.095" endtime="20190122 08:01:23.207"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:23.345">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:23.373">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:23.393">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:23.397">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:23.338" endtime="20190122 08:01:23.398"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:23.410">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:23.401" endtime="20190122 08:01:23.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:23.422">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:23.414" endtime="20190122 08:01:23.423"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:23.330" endtime="20190122 08:01:23.427"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:23.598">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:23.682">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:23.699">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:23.702">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:23.572" endtime="20190122 08:01:23.703"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:23.724">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:23.707" endtime="20190122 08:01:23.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:23.752">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:23.744" endtime="20190122 08:01:23.761"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:23.553" endtime="20190122 08:01:23.764"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:23.941">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:23.998">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:24.036">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:24.039">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:23.907" endtime="20190122 08:01:24.040"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:24.054">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:24.044" endtime="20190122 08:01:24.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:24.066">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:24.058" endtime="20190122 08:01:24.067"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:23.899" endtime="20190122 08:01:24.071"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:24.211">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:24.241">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:24.263">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:24.266">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:24.203" endtime="20190122 08:01:24.267"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:24.280">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:24.271" endtime="20190122 08:01:24.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:24.292">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:24.284" endtime="20190122 08:01:24.293"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:24.194" endtime="20190122 08:01:24.296"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:24.435">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:24.462">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:24.483">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:24.486">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:24.428" endtime="20190122 08:01:24.486"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:24.500">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:24.490" endtime="20190122 08:01:24.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:24.512">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:24.504" endtime="20190122 08:01:24.513"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:24.420" endtime="20190122 08:01:24.516"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:24.654">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:24.682">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:24.703">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:24.706">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:24.648" endtime="20190122 08:01:24.707"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:24.721">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:24.711" endtime="20190122 08:01:24.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:24.733">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:24.725" endtime="20190122 08:01:24.734"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:24.639" endtime="20190122 08:01:24.737"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:24.880">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:24.908">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:24.928">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:24.931">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:24.869" endtime="20190122 08:01:24.932"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:24.945">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:24.936" endtime="20190122 08:01:24.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:24.958">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:24.949" endtime="20190122 08:01:24.961"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:24.861" endtime="20190122 08:01:24.964"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:25.105">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:25.132">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:25.153">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:25.156">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:25.096" endtime="20190122 08:01:25.157"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:25.171">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:25.162" endtime="20190122 08:01:25.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:25.182">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:25.175" endtime="20190122 08:01:25.184"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:25.087" endtime="20190122 08:01:25.187"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:25.325">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:25.353">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:25.373">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:25.377">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:25.318" endtime="20190122 08:01:25.378"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:25.391">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:25.382" endtime="20190122 08:01:25.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:25.403">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:25.395" endtime="20190122 08:01:25.405"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:25.310" endtime="20190122 08:01:25.408"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:25.546">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:25.602">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:25.633">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:25.637">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:25.539" endtime="20190122 08:01:25.638"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:25.663">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:25.653" endtime="20190122 08:01:25.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:25.680">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:25.672" endtime="20190122 08:01:25.681"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:25.531" endtime="20190122 08:01:25.684"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:25.826">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:25.854">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:25.875">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:25.878">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:25.815" endtime="20190122 08:01:25.878"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:25.892">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:25.883" endtime="20190122 08:01:25.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:25.903">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:25.895" endtime="20190122 08:01:25.905"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:25.807" endtime="20190122 08:01:25.908"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:26.047">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:26.076">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:26.096">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:26.099">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:26.039" endtime="20190122 08:01:26.100"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:26.113">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:26.104" endtime="20190122 08:01:26.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:26.125">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:26.117" endtime="20190122 08:01:26.126"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:26.031" endtime="20190122 08:01:26.129"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:26.267">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:26.298">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:26.318">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:26.321">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:26.260" endtime="20190122 08:01:26.322"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:26.335">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:26.326" endtime="20190122 08:01:26.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:26.347">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:26.339" endtime="20190122 08:01:26.349"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:26.252" endtime="20190122 08:01:26.352"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:26.490">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:26.518">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:26.538">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:26.542">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:26.483" endtime="20190122 08:01:26.543"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:26.556">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:26.546" endtime="20190122 08:01:26.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:26.568">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:26.560" endtime="20190122 08:01:26.570"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:26.475" endtime="20190122 08:01:26.573"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:26.726">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:26.777">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:26.806">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:26.809">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:26.705" endtime="20190122 08:01:26.810"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:26.823">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:26.814" endtime="20190122 08:01:26.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:26.836">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:26.827" endtime="20190122 08:01:26.838"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:26.696" endtime="20190122 08:01:26.841"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:26.979">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:27.006">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:27.028">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:27.031">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:26.972" endtime="20190122 08:01:27.032"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:27.045">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:27.036" endtime="20190122 08:01:27.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:27.057">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:27.049" endtime="20190122 08:01:27.058"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:26.964" endtime="20190122 08:01:27.061"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:27.199">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:27.227">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:27.248">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:27.251">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:27.193" endtime="20190122 08:01:27.252"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:27.265">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:27.256" endtime="20190122 08:01:27.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:27.277">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:27.269" endtime="20190122 08:01:27.278"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:27.185" endtime="20190122 08:01:27.281"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:27.419">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:27.447">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:27.469">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:27.472">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:27.413" endtime="20190122 08:01:27.473"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:27.486">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:27.477" endtime="20190122 08:01:27.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:27.497">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:27.489" endtime="20190122 08:01:27.499"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:27.404" endtime="20190122 08:01:27.502"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:27.643">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:27.671">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:27.692">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:27.695">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:27.633" endtime="20190122 08:01:27.696"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:27.709">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:27.700" endtime="20190122 08:01:27.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:27.721">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:27.712" endtime="20190122 08:01:27.722"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:27.625" endtime="20190122 08:01:27.726"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:27.864">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:27.892">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:27.912">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:27.915">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:27.857" endtime="20190122 08:01:27.916"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:27.929">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:27.920" endtime="20190122 08:01:27.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:27.941">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:27.933" endtime="20190122 08:01:27.942"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:27.849" endtime="20190122 08:01:27.945"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:28.084">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:28.112">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:28.133">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:28.136">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:28.077" endtime="20190122 08:01:28.137"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:28.150">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:28.141" endtime="20190122 08:01:28.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:28.162">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:28.154" endtime="20190122 08:01:28.163"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:28.069" endtime="20190122 08:01:28.167"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:28.318">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:28.379">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:28.407">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:28.410">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:28.298" endtime="20190122 08:01:28.411"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:28.428">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:28.415" endtime="20190122 08:01:28.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:28.440">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:28.432" endtime="20190122 08:01:28.441"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:28.290" endtime="20190122 08:01:28.444"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:28.586">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:28.614">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:28.634">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:28.637">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:28.575" endtime="20190122 08:01:28.639"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:28.652">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:28.643" endtime="20190122 08:01:28.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:28.664">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:28.656" endtime="20190122 08:01:28.665"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:28.567" endtime="20190122 08:01:28.669"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:28.807">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:28.835">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:28.856">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:28.859">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:28.800" endtime="20190122 08:01:28.860"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:28.873">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:28.864" endtime="20190122 08:01:28.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:28.885">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:28.877" endtime="20190122 08:01:28.887"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:28.792" endtime="20190122 08:01:28.890"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:29.029">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:29.056">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:29.077">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:29.080">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:29.022" endtime="20190122 08:01:29.081"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:29.094">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:29.085" endtime="20190122 08:01:29.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:29.106">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:29.098" endtime="20190122 08:01:29.107"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:29.013" endtime="20190122 08:01:29.110"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:29.249">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:29.276">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:29.298">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:29.301">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:29.242" endtime="20190122 08:01:29.302"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:29.315">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:29.306" endtime="20190122 08:01:29.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:29.327">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:29.319" endtime="20190122 08:01:29.329"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:29.234" endtime="20190122 08:01:29.332"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:29.484">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:29.512">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:29.533">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:29.535">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:29.463" endtime="20190122 08:01:29.537"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:29.550">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:29.541" endtime="20190122 08:01:29.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:29.562">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:29.554" endtime="20190122 08:01:29.563"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:29.455" endtime="20190122 08:01:29.566"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:29.704">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:29.732">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:29.753">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:29.756">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:29.698" endtime="20190122 08:01:29.757"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:29.771">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:29.761" endtime="20190122 08:01:29.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:29.784">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:29.775" endtime="20190122 08:01:29.785"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:29.690" endtime="20190122 08:01:29.788"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:29.926">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:29.954">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:29.974">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:29.977">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:29.919" endtime="20190122 08:01:29.978"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:29.991">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:29.982" endtime="20190122 08:01:29.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:30.004">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:29.995" endtime="20190122 08:01:30.005"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:29.911" endtime="20190122 08:01:30.008"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:30.147">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:30.175">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:30.196">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:30.199">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:30.140" endtime="20190122 08:01:30.199"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:30.213">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:30.204" endtime="20190122 08:01:30.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:30.225">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:30.217" endtime="20190122 08:01:30.226"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:30.131" endtime="20190122 08:01:30.229"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:30.367">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:30.395">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:30.416">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:30.419">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:30.360" endtime="20190122 08:01:30.420"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:30.438">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:30.424" endtime="20190122 08:01:30.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:30.449">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:30.441" endtime="20190122 08:01:30.450"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:30.352" endtime="20190122 08:01:30.453"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:30.591">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:30.618">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:30.639">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:30.642">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:30.585" endtime="20190122 08:01:30.643"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:30.656">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:30.647" endtime="20190122 08:01:30.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:30.668">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:30.660" endtime="20190122 08:01:30.669"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:30.577" endtime="20190122 08:01:30.673"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:30.811">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:30.839">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:30.859">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:30.862">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:30.804" endtime="20190122 08:01:30.863"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:30.878">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:30.867" endtime="20190122 08:01:30.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:30.890">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:30.882" endtime="20190122 08:01:30.891"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:30.796" endtime="20190122 08:01:30.894"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:31.033">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:31.060">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:31.080">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:31.083">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:31.026" endtime="20190122 08:01:31.084"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:31.097">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:31.088" endtime="20190122 08:01:31.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:31.109">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:31.101" endtime="20190122 08:01:31.110"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:31.017" endtime="20190122 08:01:31.114"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:31.252">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:31.279">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:31.300">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:31.303">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:31.245" endtime="20190122 08:01:31.304"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:31.317">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:31.308" endtime="20190122 08:01:31.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:31.333">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:31.321" endtime="20190122 08:01:31.334"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:31.237" endtime="20190122 08:01:31.337"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:31.475">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:31.502">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:31.522">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:31.526">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:31.468" endtime="20190122 08:01:31.527"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:31.540">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:31.531" endtime="20190122 08:01:31.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:31.552">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:31.544" endtime="20190122 08:01:31.553"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:31.460" endtime="20190122 08:01:31.556"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:31.694">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:31.721">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:31.767">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:31.770">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:31.687" endtime="20190122 08:01:31.771"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:31.796">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:31.775" endtime="20190122 08:01:31.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:31.821">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:31.800" endtime="20190122 08:01:31.822"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:31.679" endtime="20190122 08:01:31.831"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:31.969">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:31.997">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:32.017">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:32.021">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:31.963" endtime="20190122 08:01:32.022"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:32.034">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:32.026" endtime="20190122 08:01:32.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:32.047">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:32.039" endtime="20190122 08:01:32.049"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:31.955" endtime="20190122 08:01:32.052"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:32.190">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:32.218">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:32.238">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:32.241">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:32.183" endtime="20190122 08:01:32.242"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:32.255">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:32.246" endtime="20190122 08:01:32.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:32.271">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:32.259" endtime="20190122 08:01:32.273"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:32.175" endtime="20190122 08:01:32.276"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:32.414">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:32.441">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:32.461">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:32.464">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:32.407" endtime="20190122 08:01:32.465"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:32.479">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:32.469" endtime="20190122 08:01:32.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:32.490">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:32.482" endtime="20190122 08:01:32.492"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:32.399" endtime="20190122 08:01:32.495"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:32.633">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:32.660">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:32.681">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:32.684">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:32.626" endtime="20190122 08:01:32.685"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:32.698">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:32.689" endtime="20190122 08:01:32.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:32.709">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:32.701" endtime="20190122 08:01:32.711"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:32.618" endtime="20190122 08:01:32.714"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:32.852">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:32.880">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:32.902">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:32.905">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:32.845" endtime="20190122 08:01:32.906"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:32.919">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:32.910" endtime="20190122 08:01:32.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:32.930">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:32.922" endtime="20190122 08:01:32.932"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:32.837" endtime="20190122 08:01:32.935"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:33.084">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:33.126">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:33.147">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:33.150">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:33.072" endtime="20190122 08:01:33.150"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:33.163">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:33.154" endtime="20190122 08:01:33.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:33.176">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:33.167" endtime="20190122 08:01:33.178"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:33.064" endtime="20190122 08:01:33.181"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:33.323">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:33.351">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:33.371">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:33.374">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:33.317" endtime="20190122 08:01:33.375"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:33.388">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:33.379" endtime="20190122 08:01:33.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:33.402">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:33.392" endtime="20190122 08:01:33.403"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:33.304" endtime="20190122 08:01:33.412"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:33.588">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:33.641">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:33.671">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:33.674">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:33.570" endtime="20190122 08:01:33.675"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:33.696">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:33.679" endtime="20190122 08:01:33.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:33.745">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:33.724" endtime="20190122 08:01:33.748"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:33.540" endtime="20190122 08:01:33.757"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:33.896">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:33.924">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:33.944">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:33.947">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:33.889" endtime="20190122 08:01:33.948"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:33.961">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:33.952" endtime="20190122 08:01:33.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:33.974">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:33.965" endtime="20190122 08:01:33.976"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:33.881" endtime="20190122 08:01:33.979"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:34.117">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:34.184">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:34.205">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:34.208">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:34.111" endtime="20190122 08:01:34.209"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:34.223">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:34.213" endtime="20190122 08:01:34.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:34.235">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:34.226" endtime="20190122 08:01:34.236"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:34.102" endtime="20190122 08:01:34.239"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:34.381">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:34.411">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:34.431">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:34.434">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:34.374" endtime="20190122 08:01:34.435"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:34.448">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:34.439" endtime="20190122 08:01:34.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:34.459">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:34.452" endtime="20190122 08:01:34.462"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:34.362" endtime="20190122 08:01:34.465"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:34.642">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:34.698">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:34.728">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:34.731">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:34.596" endtime="20190122 08:01:34.732"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:34.753">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:34.736" endtime="20190122 08:01:34.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:34.782">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:34.768" endtime="20190122 08:01:34.783"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:34.588" endtime="20190122 08:01:34.795"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:34.934">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:34.963">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:34.984">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:34.987">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:34.927" endtime="20190122 08:01:34.988"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:35.002">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:34.992" endtime="20190122 08:01:35.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:35.014">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:35.006" endtime="20190122 08:01:35.015"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:34.918" endtime="20190122 08:01:35.018"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:35.156">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:35.184">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:35.204">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:35.207">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:35.150" endtime="20190122 08:01:35.208"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:35.221">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:35.212" endtime="20190122 08:01:35.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:35.233">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:35.225" endtime="20190122 08:01:35.234"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:35.141" endtime="20190122 08:01:35.238"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:35.380">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:35.408">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:35.429">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:35.432">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:35.369" endtime="20190122 08:01:35.433"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:35.446">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:35.437" endtime="20190122 08:01:35.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:35.458">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:35.450" endtime="20190122 08:01:35.459"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:35.361" endtime="20190122 08:01:35.462"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:35.600">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:35.628">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:35.649">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:35.652">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:35.593" endtime="20190122 08:01:35.653"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:35.666">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:35.657" endtime="20190122 08:01:35.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:35.677">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:35.669" endtime="20190122 08:01:35.679"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:35.585" endtime="20190122 08:01:35.682"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:35.821">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:35.849">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:35.869">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:35.872">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:35.814" endtime="20190122 08:01:35.873"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:35.886">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:35.877" endtime="20190122 08:01:35.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:35.898">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:35.890" endtime="20190122 08:01:35.899"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:35.806" endtime="20190122 08:01:35.903"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:36.041">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:36.069">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:36.089">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:36.093">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:36.035" endtime="20190122 08:01:36.094"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:36.107">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:36.097" endtime="20190122 08:01:36.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:36.119">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:36.111" endtime="20190122 08:01:36.120"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:36.026" endtime="20190122 08:01:36.123"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:36.261">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:36.295">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:36.316">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:36.319">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:36.254" endtime="20190122 08:01:36.320"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:36.333">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:36.324" endtime="20190122 08:01:36.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:36.345">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:36.337" endtime="20190122 08:01:36.346"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:36.246" endtime="20190122 08:01:36.349"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:36.487">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:36.515">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:36.535">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:36.538">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:36.480" endtime="20190122 08:01:36.539"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:36.552">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:36.543" endtime="20190122 08:01:36.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:36.564">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:36.556" endtime="20190122 08:01:36.565"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:36.473" endtime="20190122 08:01:36.569"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:36.706">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:36.734">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:36.770">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:36.773">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:36.700" endtime="20190122 08:01:36.774"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:36.802">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:36.782" endtime="20190122 08:01:36.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:36.821">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:36.810" endtime="20190122 08:01:36.822"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:36.692" endtime="20190122 08:01:36.827"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:36.983">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:37.054">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:37.083">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:37.086">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:36.964" endtime="20190122 08:01:37.087"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:37.113">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:37.091" endtime="20190122 08:01:37.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:37.138">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:37.129" endtime="20190122 08:01:37.139"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:36.955" endtime="20190122 08:01:37.151"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:37.293">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:37.322">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:37.342">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:37.345">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:37.282" endtime="20190122 08:01:37.346"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:37.360">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:37.350" endtime="20190122 08:01:37.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:37.373">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:37.365" endtime="20190122 08:01:37.374"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:37.274" endtime="20190122 08:01:37.377"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:37.515">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:37.543">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:37.564">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:37.567">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:37.509" endtime="20190122 08:01:37.568"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:37.581">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:37.572" endtime="20190122 08:01:37.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:37.594">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:37.585" endtime="20190122 08:01:37.596"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:37.500" endtime="20190122 08:01:37.599"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:37.737">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:37.764">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:37.784">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:37.788">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:37.730" endtime="20190122 08:01:37.789"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:37.802">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:37.793" endtime="20190122 08:01:37.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:37.813">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:37.805" endtime="20190122 08:01:37.815"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:37.722" endtime="20190122 08:01:37.818"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:37.956">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:37.984">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:38.005">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:38.008">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:37.949" endtime="20190122 08:01:38.009"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:38.022">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:38.013" endtime="20190122 08:01:38.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:38.034">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:38.026" endtime="20190122 08:01:38.035"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:37.941" endtime="20190122 08:01:38.038"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:38.182">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:38.210">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:38.231">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:38.234">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:38.171" endtime="20190122 08:01:38.235"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:38.248">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:38.239" endtime="20190122 08:01:38.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:38.259">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:38.252" endtime="20190122 08:01:38.261"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:38.162" endtime="20190122 08:01:38.264"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:38.406">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:38.433">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:38.454">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:38.457">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:38.396" endtime="20190122 08:01:38.458"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:38.471">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:38.462" endtime="20190122 08:01:38.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:38.483">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:38.475" endtime="20190122 08:01:38.484"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:38.387" endtime="20190122 08:01:38.488"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:38.626">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:38.653">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:38.688">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:38.691">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:38.619" endtime="20190122 08:01:38.693"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:38.718">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:38.698" endtime="20190122 08:01:38.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:38.744">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:38.722" endtime="20190122 08:01:38.746"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:38.611" endtime="20190122 08:01:38.749"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:38.926">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:38.986">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:39.031">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:39.035">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:38.910" endtime="20190122 08:01:39.036"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:39.070">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:39.051" endtime="20190122 08:01:39.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:39.107">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:39.074" endtime="20190122 08:01:39.118"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:38.886" endtime="20190122 08:01:39.121"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:39.291">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:39.351">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:39.370">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:39.374">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:39.264" endtime="20190122 08:01:39.374"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:39.388">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:39.378" endtime="20190122 08:01:39.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:39.399">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:39.391" endtime="20190122 08:01:39.401"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:39.247" endtime="20190122 08:01:39.404"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:39.543">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:39.572">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:39.592">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:39.595">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:39.536" endtime="20190122 08:01:39.597"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:39.609">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:39.600" endtime="20190122 08:01:39.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:39.621">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:39.613" endtime="20190122 08:01:39.623"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:39.527" endtime="20190122 08:01:39.626"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:39.765">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:39.793">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:39.817">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:39.820">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:39.757" endtime="20190122 08:01:39.821"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:39.834">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:39.825" endtime="20190122 08:01:39.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:39.846">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:39.838" endtime="20190122 08:01:39.847"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:39.749" endtime="20190122 08:01:39.850"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:39.988">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:40.017">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:40.038">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:40.041">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:39.981" endtime="20190122 08:01:40.042"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:40.055">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:40.046" endtime="20190122 08:01:40.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:40.068">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:40.059" endtime="20190122 08:01:40.069"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:39.973" endtime="20190122 08:01:40.072"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:40.214">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:40.242">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:40.262">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:40.265">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:40.203" endtime="20190122 08:01:40.266"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:40.279">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:40.270" endtime="20190122 08:01:40.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:40.291">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:40.283" endtime="20190122 08:01:40.292"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:40.195" endtime="20190122 08:01:40.295"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:40.434">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:40.461">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:40.482">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:40.485">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:40.427" endtime="20190122 08:01:40.486"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:40.499">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:40.490" endtime="20190122 08:01:40.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:40.511">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:40.503" endtime="20190122 08:01:40.512"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:40.419" endtime="20190122 08:01:40.515"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:40.682">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:40.754">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:40.787">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:40.791">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:40.658" endtime="20190122 08:01:40.792"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:40.833">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:40.796" endtime="20190122 08:01:40.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:40.852">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:40.838" endtime="20190122 08:01:40.853"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:40.639" endtime="20190122 08:01:40.856"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:40.994">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:41.022">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:41.043">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:41.046">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:40.988" endtime="20190122 08:01:41.047"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:41.061">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:41.051" endtime="20190122 08:01:41.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:41.073">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:41.065" endtime="20190122 08:01:41.075"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:40.979" endtime="20190122 08:01:41.078"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:41.229">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:41.257">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:41.277">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:41.280">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:41.209" endtime="20190122 08:01:41.282"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:41.295">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:41.285" endtime="20190122 08:01:41.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:41.308">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:41.300" endtime="20190122 08:01:41.309"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:41.201" endtime="20190122 08:01:41.312"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:41.450">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:41.478">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:41.499">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:41.502">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:41.444" endtime="20190122 08:01:41.503"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:41.516">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:41.507" endtime="20190122 08:01:41.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:41.528">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:41.520" endtime="20190122 08:01:41.529"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:41.435" endtime="20190122 08:01:41.532"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:41.670">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:41.702">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:41.722">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:41.726">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:41.664" endtime="20190122 08:01:41.727"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:41.740">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:41.730" endtime="20190122 08:01:41.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:41.752">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:41.744" endtime="20190122 08:01:41.753"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:41.656" endtime="20190122 08:01:41.756"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:41.895">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:41.922">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:41.943">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:41.946">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:41.888" endtime="20190122 08:01:41.946"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:41.961">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:41.952" endtime="20190122 08:01:41.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:41.973">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:41.964" endtime="20190122 08:01:41.974"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:41.879" endtime="20190122 08:01:41.978"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:42.117">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:42.145">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:42.165">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:42.168">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:42.110" endtime="20190122 08:01:42.170"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:42.188">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:42.174" endtime="20190122 08:01:42.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:42.200">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:42.192" endtime="20190122 08:01:42.202"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:42.101" endtime="20190122 08:01:42.205"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:42.343">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:42.370">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:42.391">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:42.395">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:42.335" endtime="20190122 08:01:42.396"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:42.409">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:42.400" endtime="20190122 08:01:42.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:42.421">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:42.413" endtime="20190122 08:01:42.422"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:42.328" endtime="20190122 08:01:42.426"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:42.565">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:42.594">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:42.614">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:42.617">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:42.558" endtime="20190122 08:01:42.618"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:42.632">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:42.622" endtime="20190122 08:01:42.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:42.644">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:42.636" endtime="20190122 08:01:42.645"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:42.549" endtime="20190122 08:01:42.648"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:42.788">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:42.816">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:42.836">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:42.839">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:42.781" endtime="20190122 08:01:42.841"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:42.854">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:42.844" endtime="20190122 08:01:42.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:42.866">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:42.858" endtime="20190122 08:01:42.867"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:42.772" endtime="20190122 08:01:42.870"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:43.009">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:43.036">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:43.056">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:43.059">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:43.002" endtime="20190122 08:01:43.060"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:43.075">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:43.064" endtime="20190122 08:01:43.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:43.091">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:43.079" endtime="20190122 08:01:43.092"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:42.993" endtime="20190122 08:01:43.095"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:43.233">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:43.262">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:43.283">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:43.286">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:43.227" endtime="20190122 08:01:43.287"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:43.300">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:43.291" endtime="20190122 08:01:43.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:43.312">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:43.304" endtime="20190122 08:01:43.313"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:43.219" endtime="20190122 08:01:43.316"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:43.458">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:43.493">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:43.517">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:43.520">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:43.448" endtime="20190122 08:01:43.521"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:43.534">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:43.525" endtime="20190122 08:01:43.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:43.546">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:43.538" endtime="20190122 08:01:43.547"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:43.439" endtime="20190122 08:01:43.550"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:43.689">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:43.717">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:43.737">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:43.740">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:43.682" endtime="20190122 08:01:43.741"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:43.754">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:43.745" endtime="20190122 08:01:43.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:43.766">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:43.758" endtime="20190122 08:01:43.767"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:43.674" endtime="20190122 08:01:43.770"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:43.908">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:43.936">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:43.963">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:43.966">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:43.901" endtime="20190122 08:01:43.967"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:43.979">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:43.971" endtime="20190122 08:01:43.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:43.995">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:43.983" endtime="20190122 08:01:43.997"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:43.893" endtime="20190122 08:01:44.000"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:44.138">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:44.166">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:44.186">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:44.189">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:44.132" endtime="20190122 08:01:44.190"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:44.203">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:44.194" endtime="20190122 08:01:44.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:44.219">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:44.210" endtime="20190122 08:01:44.220"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:44.124" endtime="20190122 08:01:44.224"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:44.362">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:44.391">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:44.412">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:44.415">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:44.355" endtime="20190122 08:01:44.416"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:44.429">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:44.420" endtime="20190122 08:01:44.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:44.441">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:44.433" endtime="20190122 08:01:44.443"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:44.347" endtime="20190122 08:01:44.446"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:44.584">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:44.612">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:44.632">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:44.635">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:44.577" endtime="20190122 08:01:44.637"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:44.650">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:44.640" endtime="20190122 08:01:44.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:44.661">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:44.653" endtime="20190122 08:01:44.663"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:44.569" endtime="20190122 08:01:44.666"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:44.805">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:44.835">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:44.856">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:44.859">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:44.797" endtime="20190122 08:01:44.860"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:44.873">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:44.864" endtime="20190122 08:01:44.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:44.884">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:44.876" endtime="20190122 08:01:44.886"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:44.789" endtime="20190122 08:01:44.889"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:45.032">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:45.061">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:45.083">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:45.086">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:45.026" endtime="20190122 08:01:45.087"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:45.100">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:45.091" endtime="20190122 08:01:45.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:45.112">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:45.104" endtime="20190122 08:01:45.113"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:45.013" endtime="20190122 08:01:45.117"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:45.284">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:45.333">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:45.375">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:45.378">${ret} = &lt;result object with rc 1&gt;</msg>
<status status="PASS" starttime="20190122 08:01:45.269" endtime="20190122 08:01:45.379"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:45.409">${resp} = </msg>
<status status="PASS" starttime="20190122 08:01:45.387" endtime="20190122 08:01:45.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<msg level="FAIL" timestamp="20190122 08:01:45.436">'' does not contain 'usb_max'</msg>
<status status="FAIL" starttime="20190122 08:01:45.417" endtime="20190122 08:01:45.441"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" starttime="20190122 08:01:45.241" endtime="20190122 08:01:45.449"></status>
</kw>
<kw name="check_dut_ip_ready">
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>ip a | grep ${DEVICE_NAME}</arg>
<arg>shell=TRUE</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:45.609">Starting process:
ip a | grep usb_max</msg>
<msg level="INFO" timestamp="20190122 08:01:45.657">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:01:45.800">Process completed.</msg>
<msg level="INFO" timestamp="20190122 08:01:45.803">${ret} = &lt;result object with rc 0&gt;</msg>
<status status="PASS" starttime="20190122 08:01:45.594" endtime="20190122 08:01:45.822"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${ret.stdout}</arg>
</arguments>
<assign>
<var>${resp}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:45.894">${resp} = 305: usb_max: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast state DOWN group default qlen 1000
    inet 192.168.1.100/24 brd 192.168.1.255 scope global usb_max</msg>
<status status="PASS" starttime="20190122 08:01:45.840" endtime="20190122 08:01:45.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${resp}</arg>
<arg>${DEVICE_NAME}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:45.898" endtime="20190122 08:01:45.907"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="PASS" starttime="20190122 08:01:45.573" endtime="20190122 08:01:45.909"></status>
</kw>
<status status="PASS" starttime="20190122 08:01:14.119" endtime="20190122 08:01:45.911"></status>
</kw>
<msg level="INFO" timestamp="20190122 08:01:45.913">${STATUS} = True</msg>
<status status="PASS" starttime="20190122 08:01:14.113" endtime="20190122 08:01:45.914"></status>
</kw>
<kw name="Get Time" library="BuiltIn">
<doc>Returns the given time in the requested format.</doc>
<arguments>
<arg>epoch</arg>
</arguments>
<assign>
<var>${secs}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:45.921">${secs} = 1548144105</msg>
<status status="PASS" starttime="20190122 08:01:45.917" endtime="20190122 08:01:45.922"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>DUT ready status: ${STATUS}, Timestamp: ${secs}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:45.925" endtime="20190122 08:01:45.931"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3 seconds</arg>
</arguments>
<msg level="INFO" timestamp="20190122 08:01:48.940">Slept 3 seconds</msg>
<status status="PASS" starttime="20190122 08:01:45.934" endtime="20190122 08:01:48.942"></status>
</kw>
<msg level="INFO" timestamp="20190122 08:01:48.946">${status} = True</msg>
<status status="PASS" starttime="20190122 08:01:14.087" endtime="20190122 08:01:48.947"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${status}</arg>
<arg>Device does not exist</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:48.950" endtime="20190122 08:01:48.955"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2 min</arg>
<arg>2x</arg>
<arg>open_ssh_connection</arg>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<kw name="Open Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Connect to DUT</doc>
<arguments>
<arg>${DUT}</arg>
<arg>&amp;{SSH}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 08:01:48.972">Creating None ssh connection to root:toor@192.168.1.101:22</msg>
<status status="PASS" starttime="20190122 08:01:48.966" endtime="20190122 08:01:49.876"></status>
</kw>
<status status="PASS" starttime="20190122 08:01:48.958" endtime="20190122 08:01:49.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>"Setup ssh success!"</arg>
<arg>console=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 08:01:49.885">"Setup ssh success!"</msg>
<status status="PASS" starttime="20190122 08:01:49.881" endtime="20190122 08:01:49.899"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>grep ${CarIfUpdater} ${result_file}</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:49.908">Sending command to DUT grep CarIfUpdater /root/appl50571.txt</msg>
<msg level="INFO" timestamp="20190122 08:01:49.963">Returning data (CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_LD_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_PBL_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_PBL_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_Appl_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_Appl_OLU_0045_C2_0009.9.3.bin, )</msg>
<msg level="INFO" timestamp="20190122 08:01:49.966">${ret} = ('CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_LD_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/fir...</msg>
<status status="PASS" starttime="20190122 08:01:49.902" endtime="20190122 08:01:49.966"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${ret}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:49.969" endtime="20190122 08:01:49.982"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$ret[0]</arg>
</arguments>
<assign>
<var>${str_val}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:50.012">${str_val} = CarIfUpdater exit value : 0Remove files: /lib/firmware/carif/CarIF_LD_OLU_0045_C1_0009.9.3.bin /lib/firmware/carif/CarIF_LD_OLU_0045_C2_0009.9.3.bin CarIfUpdater exit value : 0Remove files: /lib/firmw...</msg>
<status status="PASS" starttime="20190122 08:01:49.985" endtime="20190122 08:01:50.013"></status>
</kw>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``item1`` does not contain ``item2`` ``count`` times.</doc>
<arguments>
<arg>${str_val}</arg>
<arg>${SUCCESS_STR}</arg>
<arg>3</arg>
<arg>ignore_case=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 08:01:50.024">Item found from the first item 3 times</msg>
<status status="PASS" starttime="20190122 08:01:50.016" endtime="20190122 08:01:50.026"></status>
</kw>
<status status="PASS" starttime="20190122 08:01:08.353" endtime="20190122 08:01:50.039"></status>
</kw>
<status status="PASS" starttime="20190122 07:59:30.773" endtime="20190122 08:01:50.041"></status>
</kw>
<kw type="teardown" name="Test_Teardown_Action">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"Test_Teardown_Action"</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:50.058" endtime="20190122 08:01:50.075"></status>
</kw>
<kw name="Run Ssh Command" library="lairdcvs.testlibrary.TestLibrary">
<doc>Execute command on DUT</doc>
<arguments>
<arg>systemctl poweroff</arg>
</arguments>
<assign>
<var>${ret}</var>
</assign>
<msg level="INFO" timestamp="20190122 08:01:50.087">Sending command to DUT systemctl poweroff</msg>
<msg level="INFO" timestamp="20190122 08:01:50.208">Returning data (, )</msg>
<msg level="INFO" timestamp="20190122 08:01:50.210">${ret} = ('', '')</msg>
<status status="PASS" starttime="20190122 08:01:50.078" endtime="20190122 08:01:50.211"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Wait until the device power down, it takes: ${SHUTDOWN_TIME}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:01:50.214" endtime="20190122 08:01:50.228"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHUTDOWN_TIME}</arg>
</arguments>
<msg level="INFO" timestamp="20190122 08:02:05.236">Slept 15 seconds</msg>
<status status="PASS" starttime="20190122 08:01:50.230" endtime="20190122 08:02:05.238"></status>
</kw>
<kw name="Close Ssh Connection" library="lairdcvs.testlibrary.TestLibrary">
<doc>Disconnect the ssh connection</doc>
<msg level="INFO" timestamp="20190122 08:02:05.244">Closing SSH connection to 192.168.1.101</msg>
<status status="PASS" starttime="20190122 08:02:05.241" endtime="20190122 08:02:05.246"></status>
</kw>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>pkill ping</arg>
<arg>shell=True</arg>
</arguments>
<msg level="INFO" timestamp="20190122 08:02:05.253">Starting process:
pkill ping</msg>
<msg level="INFO" timestamp="20190122 08:02:05.282">Waiting for process to complete.</msg>
<msg level="INFO" timestamp="20190122 08:02:05.318">Process completed.</msg>
<status status="PASS" starttime="20190122 08:02:05.249" endtime="20190122 08:02:05.320"></status>
</kw>
<kw name="Production Mode" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:02:05.324" endtime="20190122 08:02:05.374"></status>
</kw>
<kw name="Kl 15" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:02:05.378" endtime="20190122 08:02:05.425"></status>
</kw>
<kw name="Kl 30" library="robot_framework_tnt.Client">
<arguments>
<arg>${0}</arg>
</arguments>
<status status="PASS" starttime="20190122 08:02:05.428" endtime="20190122 08:02:05.476"></status>
</kw>
<status status="PASS" starttime="20190122 08:01:50.045" endtime="20190122 08:02:05.479"></status>
</kw>
<doc>Implements Test Task SKTB-50571 OTA chorus update</doc>
<tags>
<tag>OTA flashing</tag>
</tags>
<status status="PASS" critical="yes" starttime="20190122 07:58:24.697" endtime="20190122 08:02:05.481"></status>
</test>
<kw type="teardown" name="Teardown Actions" library="chorus_resource">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>$SESSION != ${None}</arg>
<arg>close connection</arg>
<arg>keep_session=${True}</arg>
<arg>ELSE</arg>
<arg>close connection</arg>
</arguments>
<kw name="Close Connection" library="robot_framework_tnt.Client">
<msg level="INFO" timestamp="20190122 08:02:06.971">Disconnecting from server, keeping session: False</msg>
<msg level="INFO" timestamp="20190122 08:02:07.035">Reloaded library robot_framework_tnt.Client with 2 keywords.</msg>
<status status="PASS" starttime="20190122 08:02:05.526" endtime="20190122 08:02:07.037"></status>
</kw>
<status status="PASS" starttime="20190122 08:02:05.497" endtime="20190122 08:02:07.038"></status>
</kw>
<status status="PASS" starttime="20190122 08:02:05.491" endtime="20190122 08:02:07.052"></status>
</kw>
<doc>OTA flashing</doc>
<metadata>
<item name="Version">'1.0'</item>
</metadata>
<status status="PASS" starttime="20190122 07:58:21.763" endtime="20190122 08:02:07.053"></status>
</suite>
<status status="FAIL" starttime="20190122 07:34:30.484" endtime="20190122 08:02:07.424"></status>
</suite>
<statistics>
<total>
<stat pass="15" fail="6">Critical Tests</stat>
<stat pass="15" fail="6">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">CAN 1 diagnose test</stat>
<stat pass="1" fail="0">CAN 3 test</stat>
<stat pass="1" fail="0">CAN 3 test TX</stat>
<stat pass="1" fail="0">EEPROM</stat>
<stat pass="0" fail="1">Eeprom OTP Value</stat>
<stat pass="4" fail="0">FBUS</stat>
<stat pass="3" fail="0">Flashing</stat>
<stat pass="0" fail="2">GpioAdc testroutine</stat>
<stat pass="2" fail="1">GPIO Test</stat>
<stat pass="1" fail="0">OTA flashing</stat>
<stat pass="0" fail="1">Powermanagement test</stat>
<stat pass="0" fail="1">Power testroutine</stat>
<stat pass="1" fail="0">Vehicle buses testroutine</stat>
</tag>
<suite>
<stat pass="15" fail="6" name="Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571" id="s1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571</stat>
<stat pass="1" fail="0" name="Update-Nad" id="s1-s1">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.Update-Nad</stat>
<stat pass="1" fail="0" name="CI update chorus" id="s1-s2">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.CI update chorus</stat>
<stat pass="1" fail="0" name="SKTB-31396" id="s1-s3">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-31396</stat>
<stat pass="0" fail="1" name="SKTB-31405" id="s1-s4">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-31405</stat>
<stat pass="0" fail="1" name="SKTB-33244" id="s1-s5">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-33244</stat>
<stat pass="1" fail="0" name="SKTB-13351" id="s1-s6">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-13351</stat>
<stat pass="1" fail="0" name="SKTB-34994" id="s1-s7">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-34994</stat>
<stat pass="0" fail="1" name="SKTB-40097" id="s1-s8">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-40097</stat>
<stat pass="1" fail="0" name="SKTB-41635" id="s1-s9">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-41635</stat>
<stat pass="1" fail="0" name="SKTB-46886" id="s1-s10">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-46886</stat>
<stat pass="1" fail="0" name="SKTB-47669" id="s1-s11">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-47669</stat>
<stat pass="1" fail="0" name="SKTB-48413" id="s1-s12">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-48413</stat>
<stat pass="0" fail="1" name="SKTB-49038" id="s1-s13">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-49038</stat>
<stat pass="1" fail="0" name="SKTB-49357" id="s1-s14">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-49357</stat>
<stat pass="1" fail="0" name="SKTB-41553" id="s1-s15">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-41553</stat>
<stat pass="1" fail="0" name="SKTB-56663" id="s1-s16">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56663</stat>
<stat pass="0" fail="1" name="SKTB-56067" id="s1-s17">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56067</stat>
<stat pass="1" fail="0" name="SKTB-56094" id="s1-s18">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-56094</stat>
<stat pass="0" fail="1" name="SKTB-55194" id="s1-s19">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-55194</stat>
<stat pass="1" fail="0" name="SKTB-FLASHDOWN" id="s1-s20">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-FLASHDOWN</stat>
<stat pass="1" fail="0" name="SKTB-50571" id="s1-s21">Update-Nad &amp; CI update chorus &amp; SKTB-31396 &amp; SKTB-31405 &amp; SKTB-33244 &amp; SKTB-13351 &amp; SKTB-34994 &amp; SKTB-40097 &amp; SKTB-41635 &amp; SKTB-46886 &amp; SKTB-47669 &amp; SKTB-48413 &amp; SKTB-49038 &amp; SKTB-49357 &amp; SKTB-41553 &amp; SKTB-56663 &amp; SKTB-56067 &amp; SKTB-56094 &amp; SKTB-55194 &amp; SKTB-FLASHDOWN &amp; SKTB-50571.SKTB-50571</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
